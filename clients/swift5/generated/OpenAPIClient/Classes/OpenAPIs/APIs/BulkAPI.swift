//
// BulkAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class BulkAPI {

    /**
     Get advertiser entities in bulk
     
     - parameter adAccountId: (path) Unique identifier of an ad account. 
     - parameter bulkDownloadRequest: (body) Parameters to get ad entities in bulk 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func bulkDownloadCreate(adAccountId: String, bulkDownloadRequest: BulkDownloadRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: BulkDownloadResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return bulkDownloadCreateWithRequestBuilder(adAccountId: adAccountId, bulkDownloadRequest: bulkDownloadRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get advertiser entities in bulk
     - POST /ad_accounts/{ad_account_id}/bulk/download
     - Create an asynchronous report that may include information on campaigns, ad groups, product groups, ads, and/or keywords; can filter by campaigns. Though the entities may be active, archived, or paused, only active entities will return data.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter adAccountId: (path) Unique identifier of an ad account. 
     - parameter bulkDownloadRequest: (body) Parameters to get ad entities in bulk 
     - returns: RequestBuilder<BulkDownloadResponse> 
     */
    open class func bulkDownloadCreateWithRequestBuilder(adAccountId: String, bulkDownloadRequest: BulkDownloadRequest) -> RequestBuilder<BulkDownloadResponse> {
        var localVariablePath = "/ad_accounts/{ad_account_id}/bulk/download"
        let adAccountIdPreEscape = "\(APIHelper.mapValueToPathItem(adAccountId))"
        let adAccountIdPostEscape = adAccountIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{ad_account_id}", with: adAccountIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: bulkDownloadRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<BulkDownloadResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Download advertiser entities in bulk
     
     - parameter adAccountId: (path) Unique identifier of an ad account. 
     - parameter bulkRequestId: (path) Unique identifier of a bulk upsert request. 
     - parameter includeDetails: (query) if set to True then attach the errors/details to all the requests (optional, default to false)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func bulkRequestGet(adAccountId: String, bulkRequestId: String, includeDetails: Bool? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: BulkUpsertStatusResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return bulkRequestGetWithRequestBuilder(adAccountId: adAccountId, bulkRequestId: bulkRequestId, includeDetails: includeDetails).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Download advertiser entities in bulk
     - GET /ad_accounts/{ad_account_id}/bulk/{bulk_request_id}
     - Get the status of a bulk request by <code>request_id</code>, along with a download URL that will allow you to download the new or updated entity data (campaigns, ad groups, product groups, ads, or keywords).
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter adAccountId: (path) Unique identifier of an ad account. 
     - parameter bulkRequestId: (path) Unique identifier of a bulk upsert request. 
     - parameter includeDetails: (query) if set to True then attach the errors/details to all the requests (optional, default to false)
     - returns: RequestBuilder<BulkUpsertStatusResponse> 
     */
    open class func bulkRequestGetWithRequestBuilder(adAccountId: String, bulkRequestId: String, includeDetails: Bool? = nil) -> RequestBuilder<BulkUpsertStatusResponse> {
        var localVariablePath = "/ad_accounts/{ad_account_id}/bulk/{bulk_request_id}"
        let adAccountIdPreEscape = "\(APIHelper.mapValueToPathItem(adAccountId))"
        let adAccountIdPostEscape = adAccountIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{ad_account_id}", with: adAccountIdPostEscape, options: .literal, range: nil)
        let bulkRequestIdPreEscape = "\(APIHelper.mapValueToPathItem(bulkRequestId))"
        let bulkRequestIdPostEscape = bulkRequestIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{bulk_request_id}", with: bulkRequestIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "include_details": (wrappedValue: includeDetails?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<BulkUpsertStatusResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Create/update ad entities in bulk
     
     - parameter adAccountId: (path) Unique identifier of an ad account. 
     - parameter bulkUpsertRequest: (body) Parameters to get create/update ad entities in bulk 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func bulkUpsertCreate(adAccountId: String, bulkUpsertRequest: BulkUpsertRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: BulkUpsertResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return bulkUpsertCreateWithRequestBuilder(adAccountId: adAccountId, bulkUpsertRequest: bulkUpsertRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Create/update ad entities in bulk
     - POST /ad_accounts/{ad_account_id}/bulk/upsert
     - Either create or update any combination of campaigns, ad groups, product groups, ads, or keywords. Note that this request will be processed asynchronously; the response will include a <code>request_id</code> that can be used to obtain the status of the request.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter adAccountId: (path) Unique identifier of an ad account. 
     - parameter bulkUpsertRequest: (body) Parameters to get create/update ad entities in bulk 
     - returns: RequestBuilder<BulkUpsertResponse> 
     */
    open class func bulkUpsertCreateWithRequestBuilder(adAccountId: String, bulkUpsertRequest: BulkUpsertRequest) -> RequestBuilder<BulkUpsertResponse> {
        var localVariablePath = "/ad_accounts/{ad_account_id}/bulk/upsert"
        let adAccountIdPreEscape = "\(APIHelper.mapValueToPathItem(adAccountId))"
        let adAccountIdPostEscape = adAccountIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{ad_account_id}", with: adAccountIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: bulkUpsertRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<BulkUpsertResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
