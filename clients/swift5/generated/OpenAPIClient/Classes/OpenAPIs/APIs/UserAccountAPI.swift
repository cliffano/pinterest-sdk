//
// UserAccountAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class UserAccountAPI {

    /**
     * enum for parameter fromClaimedContent
     */
    public enum FromClaimedContent_userAccountAnalytics: String, CaseIterable {
        case other = "OTHER"
        case claimed = "CLAIMED"
        case both = "BOTH"
    }

    /**
     * enum for parameter pinFormat
     */
    public enum PinFormat_userAccountAnalytics: String, CaseIterable {
        case all = "ALL"
        case product = "PRODUCT"
        case regular = "REGULAR"
        case video = "VIDEO"
    }

    /**
     * enum for parameter appTypes
     */
    public enum AppTypes_userAccountAnalytics: String, CaseIterable {
        case all = "ALL"
        case mobile = "MOBILE"
        case tablet = "TABLET"
        case web = "WEB"
    }

    /**
     * enum for parameter metricTypes
     */
    public enum MetricTypes_userAccountAnalytics: String, CaseIterable {
        case engagement = "ENGAGEMENT"
        case engagementRate = "ENGAGEMENT_RATE"
        case impression = "IMPRESSION"
        case outboundClick = "OUTBOUND_CLICK"
        case outboundClickRate = "OUTBOUND_CLICK_RATE"
        case pinClick = "PIN_CLICK"
        case pinClickRate = "PIN_CLICK_RATE"
        case save = "SAVE"
        case saveRate = "SAVE_RATE"
    }

    /**
     * enum for parameter splitField
     */
    public enum SplitField_userAccountAnalytics: String, CaseIterable {
        case noSplit = "NO_SPLIT"
        case appType = "APP_TYPE"
        case ownedContent = "OWNED_CONTENT"
        case pinFormat = "PIN_FORMAT"
    }

    /**
     Get user account analytics
     
     - parameter startDate: (query) Metric report start date (UTC). Format: YYYY-MM-DD 
     - parameter endDate: (query) Metric report end date (UTC). Format: YYYY-MM-DD 
     - parameter fromClaimedContent: (query) Filter on Pins that match your claimed domain. (optional, default to .both)
     - parameter pinFormat: (query) Pin formats to get data for, default is all. (optional, default to .all)
     - parameter appTypes: (query) Apps or devices to get data for, default is all. (optional, default to .all)
     - parameter metricTypes: (query) Metric types to get data for, default is all.  (optional)
     - parameter splitField: (query) How to split the data into groups. Not including this param means data won&#39;t be split. (optional, default to .noSplit)
     - parameter adAccountId: (query) Unique identifier of an ad account. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func userAccountAnalytics(startDate: Date, endDate: Date, fromClaimedContent: FromClaimedContent_userAccountAnalytics? = nil, pinFormat: PinFormat_userAccountAnalytics? = nil, appTypes: AppTypes_userAccountAnalytics? = nil, metricTypes: [MetricTypes_userAccountAnalytics]? = nil, splitField: SplitField_userAccountAnalytics? = nil, adAccountId: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: [String: AnalyticsMetricsResponse]?, _ error: Error?) -> Void)) -> RequestTask {
        return userAccountAnalyticsWithRequestBuilder(startDate: startDate, endDate: endDate, fromClaimedContent: fromClaimedContent, pinFormat: pinFormat, appTypes: appTypes, metricTypes: metricTypes, splitField: splitField, adAccountId: adAccountId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get user account analytics
     - GET /user_account/analytics
     - Get analytics for the \"operation user_account\" - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \"operation user_account\".
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter startDate: (query) Metric report start date (UTC). Format: YYYY-MM-DD 
     - parameter endDate: (query) Metric report end date (UTC). Format: YYYY-MM-DD 
     - parameter fromClaimedContent: (query) Filter on Pins that match your claimed domain. (optional, default to .both)
     - parameter pinFormat: (query) Pin formats to get data for, default is all. (optional, default to .all)
     - parameter appTypes: (query) Apps or devices to get data for, default is all. (optional, default to .all)
     - parameter metricTypes: (query) Metric types to get data for, default is all.  (optional)
     - parameter splitField: (query) How to split the data into groups. Not including this param means data won&#39;t be split. (optional, default to .noSplit)
     - parameter adAccountId: (query) Unique identifier of an ad account. (optional)
     - returns: RequestBuilder<[String: AnalyticsMetricsResponse]> 
     */
    open class func userAccountAnalyticsWithRequestBuilder(startDate: Date, endDate: Date, fromClaimedContent: FromClaimedContent_userAccountAnalytics? = nil, pinFormat: PinFormat_userAccountAnalytics? = nil, appTypes: AppTypes_userAccountAnalytics? = nil, metricTypes: [MetricTypes_userAccountAnalytics]? = nil, splitField: SplitField_userAccountAnalytics? = nil, adAccountId: String? = nil) -> RequestBuilder<[String: AnalyticsMetricsResponse]> {
        let localVariablePath = "/user_account/analytics"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "start_date": startDate.encodeToJSON(),
            "end_date": endDate.encodeToJSON(),
            "from_claimed_content": fromClaimedContent?.encodeToJSON(),
            "pin_format": pinFormat?.encodeToJSON(),
            "app_types": appTypes?.encodeToJSON(),
            "metric_types": metricTypes?.encodeToJSON(),
            "split_field": splitField?.encodeToJSON(),
            "ad_account_id": adAccountId?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[String: AnalyticsMetricsResponse]>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Get user account
     
     - parameter adAccountId: (query) Unique identifier of an ad account. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func userAccountGet(adAccountId: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: Account?, _ error: Error?) -> Void)) -> RequestTask {
        return userAccountGetWithRequestBuilder(adAccountId: adAccountId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get user account
     - GET /user_account
     - Get account information for the \"operation user_account\" - By default, the \"operation user_account\" is the token user_account.  If using Business Access: Specify an ad_account_id to use the owner of that ad_account as the \"operation user_account\". See <a href='/docs/api/v5/#tag/Understanding-business-access'>Understanding Business Access</a> for more information.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter adAccountId: (query) Unique identifier of an ad account. (optional)
     - returns: RequestBuilder<Account> 
     */
    open class func userAccountGetWithRequestBuilder(adAccountId: String? = nil) -> RequestBuilder<Account> {
        let localVariablePath = "/user_account"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "ad_account_id": adAccountId?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Account>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
