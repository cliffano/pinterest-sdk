//
// PinsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class PinsAPI {

    /**
     * enum for parameter metricTypes
     */
    public enum MetricTypes_pinsAnalytics: String, CaseIterable {
        case impression = "IMPRESSION"
        case save = "SAVE"
        case pinClick = "PIN_CLICK"
        case outboundClick = "OUTBOUND_CLICK"
        case videoMrcView = "VIDEO_MRC_VIEW"
        case videoAvgWatchTime = "VIDEO_AVG_WATCH_TIME"
        case videoV50WatchTime = "VIDEO_V50_WATCH_TIME"
        case quartile95PercentView = "QUARTILE_95_PERCENT_VIEW"
    }

    /**
     * enum for parameter appTypes
     */
    public enum AppTypes_pinsAnalytics: String, CaseIterable {
        case all = "ALL"
        case mobile = "MOBILE"
        case tablet = "TABLET"
        case web = "WEB"
    }

    /**
     * enum for parameter splitField
     */
    public enum SplitField_pinsAnalytics: String, CaseIterable {
        case noSplit = "NO_SPLIT"
        case appType = "APP_TYPE"
    }

    /**
     Get Pin analytics
     
     - parameter pinId: (path) Unique identifier of a Pin. 
     - parameter startDate: (query) Metric report start date (UTC). Format: YYYY-MM-DD 
     - parameter endDate: (query) Metric report end date (UTC). Format: YYYY-MM-DD 
     - parameter metricTypes: (query) Pin metric types to get data for, default is all. 
     - parameter appTypes: (query) Apps or devices to get data for, default is all. (optional, default to .all)
     - parameter splitField: (query) How to split the data into groups. Not including this param means data won&#39;t be split. (optional, default to .noSplit)
     - parameter adAccountId: (query) Unique identifier of an ad account. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func pinsAnalytics(pinId: String, startDate: Date, endDate: Date, metricTypes: [MetricTypes_pinsAnalytics], appTypes: AppTypes_pinsAnalytics? = nil, splitField: SplitField_pinsAnalytics? = nil, adAccountId: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: [String: AnalyticsMetricsResponse]?, _ error: Error?) -> Void)) -> RequestTask {
        return pinsAnalyticsWithRequestBuilder(pinId: pinId, startDate: startDate, endDate: endDate, metricTypes: metricTypes, appTypes: appTypes, splitField: splitField, adAccountId: adAccountId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Pin analytics
     - GET /pins/{pin_id}/analytics
     - Get analytics for a Pin owned by the \"operation user_account\" - or on a group board that has been shared with this account. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\"https://developers.pinterest.com/docs/api/v5/#operation/ad_accounts/list\">List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account:  - For Pins on public or protected boards: Admin, Analyst. - For Pins on secret boards: Admin.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter pinId: (path) Unique identifier of a Pin. 
     - parameter startDate: (query) Metric report start date (UTC). Format: YYYY-MM-DD 
     - parameter endDate: (query) Metric report end date (UTC). Format: YYYY-MM-DD 
     - parameter metricTypes: (query) Pin metric types to get data for, default is all. 
     - parameter appTypes: (query) Apps or devices to get data for, default is all. (optional, default to .all)
     - parameter splitField: (query) How to split the data into groups. Not including this param means data won&#39;t be split. (optional, default to .noSplit)
     - parameter adAccountId: (query) Unique identifier of an ad account. (optional)
     - returns: RequestBuilder<[String: AnalyticsMetricsResponse]> 
     */
    open class func pinsAnalyticsWithRequestBuilder(pinId: String, startDate: Date, endDate: Date, metricTypes: [MetricTypes_pinsAnalytics], appTypes: AppTypes_pinsAnalytics? = nil, splitField: SplitField_pinsAnalytics? = nil, adAccountId: String? = nil) -> RequestBuilder<[String: AnalyticsMetricsResponse]> {
        var localVariablePath = "/pins/{pin_id}/analytics"
        let pinIdPreEscape = "\(APIHelper.mapValueToPathItem(pinId))"
        let pinIdPostEscape = pinIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{pin_id}", with: pinIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "start_date": startDate.encodeToJSON(),
            "end_date": endDate.encodeToJSON(),
            "app_types": appTypes?.encodeToJSON(),
            "metric_types": metricTypes.encodeToJSON(),
            "split_field": splitField?.encodeToJSON(),
            "ad_account_id": adAccountId?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[String: AnalyticsMetricsResponse]>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Create Pin
     
     - parameter pin: (body) Create a new Pin. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func pinsCreate(pin: Pin, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: Pin?, _ error: Error?) -> Void)) -> RequestTask {
        return pinsCreateWithRequestBuilder(pin: pin).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Create Pin
     - POST /pins
     - Create a Pin on a board or board section owned by the \"operation user_account\".  Note: If the current \"operation user_account\" (defined by the access token) has access to another user's Ad Accounts via Pinterest Business Access, you can modify your request to make use of the current operation_user_account's permissions to those Ad Accounts by including the ad_account_id in the path parameters for the request (e.g. .../?ad_account_id=12345&...).  - This function is intended solely for publishing new content created by the user. If you are interested in saving content created by others to your Pinterest boards, sometimes called 'curated content', please use our <a href='/docs/add-ons/save-button'>Save button</a> instead. For more tips on creating fresh content for Pinterest, review our <a href='/docs/solutions/content-apps'>Content App Solutions Guide</a>.  <strong><a href='/docs/solutions/content-apps/#creatingvideopins'>Learn more</a></strong> about video Pin creation.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter pin: (body) Create a new Pin. 
     - returns: RequestBuilder<Pin> 
     */
    open class func pinsCreateWithRequestBuilder(pin: Pin) -> RequestBuilder<Pin> {
        let localVariablePath = "/pins"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: pin)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Pin>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Delete Pin
     
     - parameter pinId: (path) Unique identifier of a Pin. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func pinsDelete(pinId: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: Void?, _ error: Error?) -> Void)) -> RequestTask {
        return pinsDeleteWithRequestBuilder(pinId: pinId).execute(apiResponseQueue) { result in
            switch result {
            case .success:
                completion((), nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Delete Pin
     - DELETE /pins/{pin_id}
     - Delete a Pins owned by the \"operation user_account\" - or on a group board that has been shared with this account. - By default, the \"operation user_account\" is the token user_account.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter pinId: (path) Unique identifier of a Pin. 
     - returns: RequestBuilder<Void> 
     */
    open class func pinsDeleteWithRequestBuilder(pinId: String) -> RequestBuilder<Void> {
        var localVariablePath = "/pins/{pin_id}"
        let pinIdPreEscape = "\(APIHelper.mapValueToPathItem(pinId))"
        let pinIdPostEscape = pinIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{pin_id}", with: pinIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = OpenAPIClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Get Pin
     
     - parameter pinId: (path) Unique identifier of a Pin. 
     - parameter adAccountId: (query) Unique identifier of an ad account. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func pinsGet(pinId: String, adAccountId: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: Pin?, _ error: Error?) -> Void)) -> RequestTask {
        return pinsGetWithRequestBuilder(pinId: pinId, adAccountId: adAccountId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Pin
     - GET /pins/{pin_id}
     - Get a Pin owned by the \"operation user_account\" - or on a group board that has been shared with this account. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account:  - For Pins on public or protected boards: Owner, Admin, Analyst, Campaign Manager. - For Pins on secret boards: Owner, Admin.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter pinId: (path) Unique identifier of a Pin. 
     - parameter adAccountId: (query) Unique identifier of an ad account. (optional)
     - returns: RequestBuilder<Pin> 
     */
    open class func pinsGetWithRequestBuilder(pinId: String, adAccountId: String? = nil) -> RequestBuilder<Pin> {
        var localVariablePath = "/pins/{pin_id}"
        let pinIdPreEscape = "\(APIHelper.mapValueToPathItem(pinId))"
        let pinIdPostEscape = pinIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{pin_id}", with: pinIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "ad_account_id": adAccountId?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Pin>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
