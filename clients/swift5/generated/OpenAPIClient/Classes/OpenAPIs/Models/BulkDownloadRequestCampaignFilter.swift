//
// BulkDownloadRequestCampaignFilter.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct BulkDownloadRequestCampaignFilter: Codable, JSONEncodable, Hashable {

    static let startTimeRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^\\d+$/")
    static let endTimeRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^\\d+$/")
    /** Unix UTC timestamp. */
    public var startTime: String?
    /** Unix UTC timestamp. */
    public var endTime: String?
    /** Campaign name */
    public var name: String?
    public var campaignStatus: [CampaignSummaryStatus]?
    public var objectiveType: [ObjectiveType]?

    public init(startTime: String? = nil, endTime: String? = nil, name: String? = nil, campaignStatus: [CampaignSummaryStatus]? = nil, objectiveType: [ObjectiveType]? = nil) {
        self.startTime = startTime
        self.endTime = endTime
        self.name = name
        self.campaignStatus = campaignStatus
        self.objectiveType = objectiveType
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case startTime = "start_time"
        case endTime = "end_time"
        case name
        case campaignStatus = "campaign_status"
        case objectiveType = "objective_type"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(startTime, forKey: .startTime)
        try container.encodeIfPresent(endTime, forKey: .endTime)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(campaignStatus, forKey: .campaignStatus)
        try container.encodeIfPresent(objectiveType, forKey: .objectiveType)
    }
}

