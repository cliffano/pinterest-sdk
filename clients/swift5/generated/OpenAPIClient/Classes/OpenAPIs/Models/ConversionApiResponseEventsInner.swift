//
// ConversionApiResponseEventsInner.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ConversionApiResponseEventsInner: Codable, JSONEncodable, Hashable {

    public enum Status: String, Codable, CaseIterable {
        case failed = "failed"
        case processed = "processed"
    }
    /** Whether the event was processed successfully. */
    public var status: Status
    /** Error message containing more information about why the event failed to be processed. */
    public var errorMessage: String?
    /** Warning messages about any fields in the event which are not standard. These are not critical to event processing. */
    public var warningMessage: String?

    public init(status: Status, errorMessage: String? = nil, warningMessage: String? = nil) {
        self.status = status
        self.errorMessage = errorMessage
        self.warningMessage = warningMessage
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case status
        case errorMessage = "error_message"
        case warningMessage = "warning_message"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(status, forKey: .status)
        try container.encodeIfPresent(errorMessage, forKey: .errorMessage)
        try container.encodeIfPresent(warningMessage, forKey: .warningMessage)
    }
}

