//
// IntegrationLogsInvalidLogResponseRejectedLogsInner.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct IntegrationLogsInvalidLogResponseRejectedLogsInner: Codable, JSONEncodable, Hashable {

    /** Index of the log in the batch. */
    public var logIndex: Int?
    /** The field name containing an invalid value. */
    public var field: String
    /** The value that is invalid. */
    public var value: String
    /** The reason the value is invalid. */
    public var reason: String

    public init(logIndex: Int? = nil, field: String, value: String, reason: String) {
        self.logIndex = logIndex
        self.field = field
        self.value = value
        self.reason = reason
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case logIndex = "log_index"
        case field
        case value
        case reason
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(logIndex, forKey: .logIndex)
        try container.encode(field, forKey: .field)
        try container.encode(value, forKey: .value)
        try container.encode(reason, forKey: .reason)
    }
}

