//
// PinMediaSourceVideoID.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Video ID-based media source */
public struct PinMediaSourceVideoID: Codable, JSONEncodable, Hashable {

    public enum SourceType: String, Codable, CaseIterable {
        case videoId = "video_id"
    }
    public var sourceType: SourceType
    public var coverImageUrl: String
    public var mediaId: String

    public init(sourceType: SourceType, coverImageUrl: String, mediaId: String) {
        self.sourceType = sourceType
        self.coverImageUrl = coverImageUrl
        self.mediaId = mediaId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case sourceType = "source_type"
        case coverImageUrl = "cover_image_url"
        case mediaId = "media_id"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(sourceType, forKey: .sourceType)
        try container.encode(coverImageUrl, forKey: .coverImageUrl)
        try container.encode(mediaId, forKey: .mediaId)
    }
}

