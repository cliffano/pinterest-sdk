//
// Pin.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Pin */
public struct Pin: Codable, JSONEncodable, Hashable {

    public var id: String?
    public var createdAt: Date?
    public var link: String?
    public var title: String?
    public var description: String?
    public var altText: String?
    /** The board to which this Pin belongs. */
    public var boardId: String?
    /** The board section to which this Pin belongs. */
    public var boardSectionId: String?
    public var boardOwner: BoardOwner?
    public var media: PinMedia?
    public var mediaSource: PinMediaSource?

    public init(id: String? = nil, createdAt: Date? = nil, link: String? = nil, title: String? = nil, description: String? = nil, altText: String? = nil, boardId: String? = nil, boardSectionId: String? = nil, boardOwner: BoardOwner? = nil, media: PinMedia? = nil, mediaSource: PinMediaSource? = nil) {
        self.id = id
        self.createdAt = createdAt
        self.link = link
        self.title = title
        self.description = description
        self.altText = altText
        self.boardId = boardId
        self.boardSectionId = boardSectionId
        self.boardOwner = boardOwner
        self.media = media
        self.mediaSource = mediaSource
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case createdAt = "created_at"
        case link
        case title
        case description
        case altText = "alt_text"
        case boardId = "board_id"
        case boardSectionId = "board_section_id"
        case boardOwner = "board_owner"
        case media
        case mediaSource = "media_source"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(createdAt, forKey: .createdAt)
        try container.encodeIfPresent(link, forKey: .link)
        try container.encodeIfPresent(title, forKey: .title)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(altText, forKey: .altText)
        try container.encodeIfPresent(boardId, forKey: .boardId)
        try container.encodeIfPresent(boardSectionId, forKey: .boardSectionId)
        try container.encodeIfPresent(boardOwner, forKey: .boardOwner)
        try container.encodeIfPresent(media, forKey: .media)
        try container.encodeIfPresent(mediaSource, forKey: .mediaSource)
    }
}

