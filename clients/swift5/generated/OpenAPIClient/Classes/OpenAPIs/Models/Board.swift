//
// Board.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Board */
public struct Board: Codable, JSONEncodable, Hashable {

    public enum Privacy: String, Codable, CaseIterable {
        case _public = "PUBLIC"
        case protected = "PROTECTED"
        case secret = "SECRET"
    }
    public var id: String?
    public var name: String
    public var description: String?
    public var owner: BoardOwner?
    /** Privacy setting for a board. Learn more about <a href=\"https://help.pinterest.com/en/article/secret-boards\">secret boards</a> and <a href=\"https://help.pinterest.com/en/business/article/protected-boards\">protected boards</a> */
    public var privacy: Privacy? = ._public

    public init(id: String? = nil, name: String, description: String? = nil, owner: BoardOwner? = nil, privacy: Privacy? = ._public) {
        self.id = id
        self.name = name
        self.description = description
        self.owner = owner
        self.privacy = privacy
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case description
        case owner
        case privacy
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encode(name, forKey: .name)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(owner, forKey: .owner)
        try container.encodeIfPresent(privacy, forKey: .privacy)
    }
}

