//
// AdResponseAllOf.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Creation fields */
public struct AdResponseAllOf: Codable, JSONEncodable, Hashable {

    public enum CreativeType: String, Codable, CaseIterable {
        case regular = "REGULAR"
        case video = "VIDEO"
        case shopping = "SHOPPING"
        case carousel = "CAROUSEL"
        case maxVideo = "MAX_VIDEO"
        case shopThePin = "SHOP_THE_PIN"
        case story = "STORY"
    }
    /** ID of the ad group that contains the ad. */
    public var adGroupId: String?
    /** Deep link URL for Android devices. Not currently available. Using this field will generate an error. */
    public var androidDeepLink: String?
    /** Comma-separated deep links for the carousel pin on Android. */
    public var carouselAndroidDeepLinks: [String]?
    /** Comma-separated destination URLs for the carousel pin to promote. */
    public var carouselDestinationUrls: [String]?
    /** Comma-separated deep links for the carousel pin on iOS. */
    public var carouselIosDeepLinks: [String]?
    /** Tracking url for the ad clicks. */
    public var clickTrackingUrl: String?
    /** Ad creative type enum */
    public var creativeType: CreativeType?
    /** Destination URL. */
    public var destinationUrl: String?
    /** Deep link URL for iOS devices. Not currently available. Using this field will generate an error. */
    public var iosDeepLink: String?
    /** Is original pin deleted? */
    public var isPinDeleted: Bool?
    /** Is pin repinnable? */
    public var isRemovable: Bool?
    /** Name of the ad - 255 chars max. */
    public var name: String?
    /** Pin ID. */
    public var pinId: String?
    public var status: EntityStatus?
    public var trackingUrls: TrackingUrls?
    /** Tracking URL for ad impressions. */
    public var viewTrackingUrl: String?

    public init(adGroupId: String? = nil, androidDeepLink: String? = nil, carouselAndroidDeepLinks: [String]? = nil, carouselDestinationUrls: [String]? = nil, carouselIosDeepLinks: [String]? = nil, clickTrackingUrl: String? = nil, creativeType: CreativeType? = nil, destinationUrl: String? = nil, iosDeepLink: String? = nil, isPinDeleted: Bool? = nil, isRemovable: Bool? = nil, name: String? = nil, pinId: String? = nil, status: EntityStatus? = nil, trackingUrls: TrackingUrls? = nil, viewTrackingUrl: String? = nil) {
        self.adGroupId = adGroupId
        self.androidDeepLink = androidDeepLink
        self.carouselAndroidDeepLinks = carouselAndroidDeepLinks
        self.carouselDestinationUrls = carouselDestinationUrls
        self.carouselIosDeepLinks = carouselIosDeepLinks
        self.clickTrackingUrl = clickTrackingUrl
        self.creativeType = creativeType
        self.destinationUrl = destinationUrl
        self.iosDeepLink = iosDeepLink
        self.isPinDeleted = isPinDeleted
        self.isRemovable = isRemovable
        self.name = name
        self.pinId = pinId
        self.status = status
        self.trackingUrls = trackingUrls
        self.viewTrackingUrl = viewTrackingUrl
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case adGroupId = "ad_group_id"
        case androidDeepLink = "android_deep_link"
        case carouselAndroidDeepLinks = "carousel_android_deep_links"
        case carouselDestinationUrls = "carousel_destination_urls"
        case carouselIosDeepLinks = "carousel_ios_deep_links"
        case clickTrackingUrl = "click_tracking_url"
        case creativeType = "creative_type"
        case destinationUrl = "destination_url"
        case iosDeepLink = "ios_deep_link"
        case isPinDeleted = "is_pin_deleted"
        case isRemovable = "is_removable"
        case name
        case pinId = "pin_id"
        case status
        case trackingUrls = "tracking_urls"
        case viewTrackingUrl = "view_tracking_url"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(adGroupId, forKey: .adGroupId)
        try container.encodeIfPresent(androidDeepLink, forKey: .androidDeepLink)
        try container.encodeIfPresent(carouselAndroidDeepLinks, forKey: .carouselAndroidDeepLinks)
        try container.encodeIfPresent(carouselDestinationUrls, forKey: .carouselDestinationUrls)
        try container.encodeIfPresent(carouselIosDeepLinks, forKey: .carouselIosDeepLinks)
        try container.encodeIfPresent(clickTrackingUrl, forKey: .clickTrackingUrl)
        try container.encodeIfPresent(creativeType, forKey: .creativeType)
        try container.encodeIfPresent(destinationUrl, forKey: .destinationUrl)
        try container.encodeIfPresent(iosDeepLink, forKey: .iosDeepLink)
        try container.encodeIfPresent(isPinDeleted, forKey: .isPinDeleted)
        try container.encodeIfPresent(isRemovable, forKey: .isRemovable)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(pinId, forKey: .pinId)
        try container.encodeIfPresent(status, forKey: .status)
        try container.encodeIfPresent(trackingUrls, forKey: .trackingUrls)
        try container.encodeIfPresent(viewTrackingUrl, forKey: .viewTrackingUrl)
    }
}

