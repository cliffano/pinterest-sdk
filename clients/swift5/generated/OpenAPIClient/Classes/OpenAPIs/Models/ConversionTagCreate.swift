//
// ConversionTagCreate.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ConversionTagCreate: Codable, JSONEncodable, Hashable {

    /** Conversion tag name. */
    public var name: String
    /** Whether Automatic Enhanced Match email is enabled. See <a href=\"https://help.pinterest.com/en/business/article/enhanced-match\" target=\"_blank\">Enhanced match</a> for more information. */
    public var aemEnabled: Bool? = false
    /** Metadata ingestion frequency. */
    public var mdFrequency: Double? = 1
    /** Whether Automatic Enhanced Match name is enabled. See <a href=\"https://help.pinterest.com/en/business/article/enhanced-match\" target=\"_blank\">Enhanced match</a> for more information. */
    public var aemFnlnEnabled: Bool? = false
    /** Whether Automatic Enhanced Match phone is enabled. See <a href=\"https://help.pinterest.com/en/business/article/enhanced-match\" target=\"_blank\">Enhanced match</a> for more information. */
    public var aemPhEnabled: Bool? = false
    /** Whether Automatic Enhanced Match gender is enabled. See <a href=\"https://help.pinterest.com/en/business/article/enhanced-match\" target=\"_blank\">Enhanced match</a> for more information. */
    public var aemGeEnabled: Bool? = false
    /** Whether Automatic Enhanced Match birthdate is enabled. See <a href=\"https://help.pinterest.com/en/business/article/enhanced-match\" target=\"_blank\">Enhanced match</a> for more information. */
    public var aemDbEnabled: Bool? = false
    /** Whether Automatic Enhanced Match location is enabled. See <a href=\"https://help.pinterest.com/en/business/article/enhanced-match\" target=\"_blank\">Enhanced match</a> for more information. */
    public var aemLocEnabled: Bool? = false

    public init(name: String, aemEnabled: Bool? = false, mdFrequency: Double? = 1, aemFnlnEnabled: Bool? = false, aemPhEnabled: Bool? = false, aemGeEnabled: Bool? = false, aemDbEnabled: Bool? = false, aemLocEnabled: Bool? = false) {
        self.name = name
        self.aemEnabled = aemEnabled
        self.mdFrequency = mdFrequency
        self.aemFnlnEnabled = aemFnlnEnabled
        self.aemPhEnabled = aemPhEnabled
        self.aemGeEnabled = aemGeEnabled
        self.aemDbEnabled = aemDbEnabled
        self.aemLocEnabled = aemLocEnabled
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case aemEnabled = "aem_enabled"
        case mdFrequency = "md_frequency"
        case aemFnlnEnabled = "aem_fnln_enabled"
        case aemPhEnabled = "aem_ph_enabled"
        case aemGeEnabled = "aem_ge_enabled"
        case aemDbEnabled = "aem_db_enabled"
        case aemLocEnabled = "aem_loc_enabled"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(name, forKey: .name)
        try container.encodeIfPresent(aemEnabled, forKey: .aemEnabled)
        try container.encodeIfPresent(mdFrequency, forKey: .mdFrequency)
        try container.encodeIfPresent(aemFnlnEnabled, forKey: .aemFnlnEnabled)
        try container.encodeIfPresent(aemPhEnabled, forKey: .aemPhEnabled)
        try container.encodeIfPresent(aemGeEnabled, forKey: .aemGeEnabled)
        try container.encodeIfPresent(aemDbEnabled, forKey: .aemDbEnabled)
        try container.encodeIfPresent(aemLocEnabled, forKey: .aemLocEnabled)
    }
}

