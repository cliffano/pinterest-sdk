//
// MediaUploadAllOf.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct MediaUploadAllOf: Codable, JSONEncodable, Hashable {

    /** Unique identifier for this media upload. Used to track status and for attaching during Pin creation. */
    public var mediaId: String?
    public var mediaType: MediaUploadType?
    /** The URL where you will POST your media file. */
    public var uploadUrl: String?
    public var uploadParameters: MediaUploadAllOfUploadParameters?

    public init(mediaId: String? = nil, mediaType: MediaUploadType? = nil, uploadUrl: String? = nil, uploadParameters: MediaUploadAllOfUploadParameters? = nil) {
        self.mediaId = mediaId
        self.mediaType = mediaType
        self.uploadUrl = uploadUrl
        self.uploadParameters = uploadParameters
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case mediaId = "media_id"
        case mediaType = "media_type"
        case uploadUrl = "upload_url"
        case uploadParameters = "upload_parameters"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(mediaId, forKey: .mediaId)
        try container.encodeIfPresent(mediaType, forKey: .mediaType)
        try container.encodeIfPresent(uploadUrl, forKey: .uploadUrl)
        try container.encodeIfPresent(uploadParameters, forKey: .uploadParameters)
    }
}

