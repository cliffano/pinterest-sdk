//
// CatalogsFeedIngestionErrors.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CatalogsFeedIngestionErrors: Codable, JSONEncodable, Hashable {

    public enum LARGEPRODUCTCOUNTDECREASE: Int, Codable, CaseIterable {
        case _1 = 1
    }
    /** We experienced a technical difficulty and were unable to ingest this some items. The next ingestion will happen in 24 hours. */
    public var LINE_LEVEL_INTERNAL_ERROR: Int?
    /** The product count has decreased by more than 99% compared to the last successful ingestion. */
    public var LARGE_PRODUCT_COUNT_DECREASE: LARGEPRODUCTCOUNTDECREASE?
    /** We detected an issue with your account and are not currently ingesting your items. Please review our policies at policy.pinterest.com/community-guidelines#section-spam or contact us at help.pinterest.com/contact for more information. */
    public var ACCOUNT_FLAGGED: Int?
    /** We experienced a technical difficulty and were unable to download some images. The next download attempt will happen in 24 hours. */
    public var IMAGE_LEVEL_INTERNAL_ERROR: Int?
    /** Image files are unreadable. Please upload new files to continue. */
    public var IMAGE_FILE_NOT_ACCESSIBLE: Int?
    /** Image files are unreadable. Please check your link and upload new files to continue. */
    public var IMAGE_MALFORMED_URL: Int?
    /** Image files are unreadable. Please upload new files to continue. */
    public var IMAGE_FILE_NOT_FOUND: Int?
    /** Image files are unreadable. Please upload new files to continue. */
    public var IMAGE_INVALID_FILE: Int?

    public init(LINE_LEVEL_INTERNAL_ERROR: Int? = nil, LARGE_PRODUCT_COUNT_DECREASE: LARGEPRODUCTCOUNTDECREASE? = nil, ACCOUNT_FLAGGED: Int? = nil, IMAGE_LEVEL_INTERNAL_ERROR: Int? = nil, IMAGE_FILE_NOT_ACCESSIBLE: Int? = nil, IMAGE_MALFORMED_URL: Int? = nil, IMAGE_FILE_NOT_FOUND: Int? = nil, IMAGE_INVALID_FILE: Int? = nil) {
        self.LINE_LEVEL_INTERNAL_ERROR = LINE_LEVEL_INTERNAL_ERROR
        self.LARGE_PRODUCT_COUNT_DECREASE = LARGE_PRODUCT_COUNT_DECREASE
        self.ACCOUNT_FLAGGED = ACCOUNT_FLAGGED
        self.IMAGE_LEVEL_INTERNAL_ERROR = IMAGE_LEVEL_INTERNAL_ERROR
        self.IMAGE_FILE_NOT_ACCESSIBLE = IMAGE_FILE_NOT_ACCESSIBLE
        self.IMAGE_MALFORMED_URL = IMAGE_MALFORMED_URL
        self.IMAGE_FILE_NOT_FOUND = IMAGE_FILE_NOT_FOUND
        self.IMAGE_INVALID_FILE = IMAGE_INVALID_FILE
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case LINE_LEVEL_INTERNAL_ERROR
        case LARGE_PRODUCT_COUNT_DECREASE
        case ACCOUNT_FLAGGED
        case IMAGE_LEVEL_INTERNAL_ERROR
        case IMAGE_FILE_NOT_ACCESSIBLE
        case IMAGE_MALFORMED_URL
        case IMAGE_FILE_NOT_FOUND
        case IMAGE_INVALID_FILE
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(LINE_LEVEL_INTERNAL_ERROR, forKey: .LINE_LEVEL_INTERNAL_ERROR)
        try container.encodeIfPresent(LARGE_PRODUCT_COUNT_DECREASE, forKey: .LARGE_PRODUCT_COUNT_DECREASE)
        try container.encodeIfPresent(ACCOUNT_FLAGGED, forKey: .ACCOUNT_FLAGGED)
        try container.encodeIfPresent(IMAGE_LEVEL_INTERNAL_ERROR, forKey: .IMAGE_LEVEL_INTERNAL_ERROR)
        try container.encodeIfPresent(IMAGE_FILE_NOT_ACCESSIBLE, forKey: .IMAGE_FILE_NOT_ACCESSIBLE)
        try container.encodeIfPresent(IMAGE_MALFORMED_URL, forKey: .IMAGE_MALFORMED_URL)
        try container.encodeIfPresent(IMAGE_FILE_NOT_FOUND, forKey: .IMAGE_FILE_NOT_FOUND)
        try container.encodeIfPresent(IMAGE_INVALID_FILE, forKey: .IMAGE_INVALID_FILE)
    }
}

