//
// AdAccountCreateSubscriptionResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct AdAccountCreateSubscriptionResponse: Codable, JSONEncodable, Hashable {

    static let idRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^\\d+$/")
    /** Subscription ID. */
    public var id: String?
    /** Base64 encoded key for client to decrypt lead data. */
    public var cryptographicKey: String?
    /** Lead data encryption algorithm. */
    public var cryptographicAlgorithm: String?
    /** Subscription creation time. Unix timestamp in milliseconds. */
    public var createdTime: Int?

    public init(id: String? = nil, cryptographicKey: String? = nil, cryptographicAlgorithm: String? = nil, createdTime: Int? = nil) {
        self.id = id
        self.cryptographicKey = cryptographicKey
        self.cryptographicAlgorithm = cryptographicAlgorithm
        self.createdTime = createdTime
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case cryptographicKey = "cryptographic_key"
        case cryptographicAlgorithm = "cryptographic_algorithm"
        case createdTime = "created_time"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(cryptographicKey, forKey: .cryptographicKey)
        try container.encodeIfPresent(cryptographicAlgorithm, forKey: .cryptographicAlgorithm)
        try container.encodeIfPresent(createdTime, forKey: .createdTime)
    }
}

