//
// ItemProcessingRecord.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Object describing an item processing record */
public struct ItemProcessingRecord: Codable, JSONEncodable, Hashable {

    /** The catalog item id in the merchant namespace */
    public var itemId: String?
    /** Array with the validation errors for the item processing record. A non empty errors list causes the item processing to fail. */
    public var errors: [ItemValidationEvent]?
    /** Array with the validation warnings for the item processing record */
    public var warnings: [ItemValidationEvent]?
    public var status: ItemProcessingStatus?

    public init(itemId: String? = nil, errors: [ItemValidationEvent]? = nil, warnings: [ItemValidationEvent]? = nil, status: ItemProcessingStatus? = nil) {
        self.itemId = itemId
        self.errors = errors
        self.warnings = warnings
        self.status = status
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case itemId = "item_id"
        case errors
        case warnings
        case status
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(itemId, forKey: .itemId)
        try container.encodeIfPresent(errors, forKey: .errors)
        try container.encodeIfPresent(warnings, forKey: .warnings)
        try container.encodeIfPresent(status, forKey: .status)
    }
}

