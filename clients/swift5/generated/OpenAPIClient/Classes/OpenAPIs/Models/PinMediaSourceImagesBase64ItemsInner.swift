//
// PinMediaSourceImagesBase64ItemsInner.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct PinMediaSourceImagesBase64ItemsInner: Codable, JSONEncodable, Hashable {

    public enum ContentType: String, Codable, CaseIterable {
        case jpeg = "image/jpeg"
        case png = "image/png"
    }
    static let dataRule = StringRule(minLength: nil, maxLength: nil, pattern: "/[a-zA-Z0-9+\/=]+/")
    public var title: String?
    public var description: String?
    /** Destination link for the image. */
    public var link: String?
    public var contentType: ContentType
    /** Image to upload as base64 string. */
    public var data: String

    public init(title: String? = nil, description: String? = nil, link: String? = nil, contentType: ContentType, data: String) {
        self.title = title
        self.description = description
        self.link = link
        self.contentType = contentType
        self.data = data
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case title
        case description
        case link
        case contentType = "content_type"
        case data
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(title, forKey: .title)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(link, forKey: .link)
        try container.encode(contentType, forKey: .contentType)
        try container.encode(data, forKey: .data)
    }
}

