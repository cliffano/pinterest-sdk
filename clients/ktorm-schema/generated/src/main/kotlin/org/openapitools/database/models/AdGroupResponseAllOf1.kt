/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.3.0
* Contact: blah@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param campaignId Campaign ID of the ad group.
 * @param billableEvent 
 * @param id Ad group ID.
 * @param type Always \"adgroup\".
 * @param adAccountId Advertiser ID.
 * @param createdTime Ad group creation time. Unix timestamp in seconds.
 * @param updatedTime Ad group last update time. Unix timestamp in seconds.
 */
object AdGroupResponseAllOf1s : BaseTable<AdGroupResponseAllOf1>("AdGroupResponse_allOf_1") {
    val campaignId = text("campaign_id") /* null */ /* Campaign ID of the ad group. */
    val billableEvent = long("billable_event") /* null */
    val id = text("id") /* null */ /* Ad group ID. */
    val type = text("type") /* null */ /* Always \"adgroup\". */
    val adAccountId = text("ad_account_id") /* null */ /* Advertiser ID. */
    val createdTime = int("created_time") /* null */ /* Ad group creation time. Unix timestamp in seconds. */
    val updatedTime = int("updated_time") /* null */ /* Ad group last update time. Unix timestamp in seconds. */

    /**
     * Create an entity of type AdGroupResponseAllOf1 from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = AdGroupResponseAllOf1(
        campaignId = row[campaignId]  /* kotlin.String? */ /* Campaign ID of the ad group. */,
        billableEvent = ActionTypes.createEntity(row, withReferences) /* ActionType? */,
        id = row[id]  /* kotlin.String? */ /* Ad group ID. */,
        type = row[type]  /* kotlin.String? */ /* Always \"adgroup\". */,
        adAccountId = row[adAccountId]  /* kotlin.String? */ /* Advertiser ID. */,
        createdTime = row[createdTime]  /* kotlin.Int? */ /* Ad group creation time. Unix timestamp in seconds. */,
        updatedTime = row[updatedTime]  /* kotlin.Int? */ /* Ad group last update time. Unix timestamp in seconds. */
    )

    /**
    * Assign all the columns from the entity of type AdGroupResponseAllOf1 to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = AdGroupResponseAllOf1()
    * database.update(AdGroupResponseAllOf1s, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: AdGroupResponseAllOf1) {
        this.apply {
            set(AdGroupResponseAllOf1s.campaignId, entity.campaignId)
            set(AdGroupResponseAllOf1s.billableEvent, entity.billableEvent)
            set(AdGroupResponseAllOf1s.id, entity.id)
            set(AdGroupResponseAllOf1s.type, entity.type)
            set(AdGroupResponseAllOf1s.adAccountId, entity.adAccountId)
            set(AdGroupResponseAllOf1s.createdTime, entity.createdTime)
            set(AdGroupResponseAllOf1s.updatedTime, entity.updatedTime)
        }
    }

}


