/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.3.0
* Contact: pinterest-api@pinterest.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param inStock 
 * @param outOfStock 
 * @param preorder 
 */
object CatalogsFeedIngestionInfos : BaseTable<CatalogsFeedIngestionInfo>("CatalogsFeedIngestionInfo") {
    val inStock = int("in_stock") /* null */
    val outOfStock = int("out_of_stock") /* null */
    val preorder = int("preorder") /* null */

    /**
     * Create an entity of type CatalogsFeedIngestionInfo from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CatalogsFeedIngestionInfo(
        inStock = row[inStock]  /* kotlin.Int? */,
        outOfStock = row[outOfStock]  /* kotlin.Int? */,
        preorder = row[preorder]  /* kotlin.Int? */
    )

    /**
    * Assign all the columns from the entity of type CatalogsFeedIngestionInfo to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CatalogsFeedIngestionInfo()
    * database.update(CatalogsFeedIngestionInfos, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CatalogsFeedIngestionInfo) {
        this.apply {
            set(CatalogsFeedIngestionInfos.inStock, entity.inStock)
            set(CatalogsFeedIngestionInfos.outOfStock, entity.outOfStock)
            set(CatalogsFeedIngestionInfos.preorder, entity.preorder)
        }
    }

}


