/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.3.0
* Contact: pinterest-api@pinterest.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param ingestionDetails 
 * @param status 
 * @param productCounts 
 * @param validationDetails 
 */
object CatalogsFeedProcessingResultFieldss : BaseTable<CatalogsFeedProcessingResultFields>("catalogs_feed_processing_result_fields") {
    val ingestionDetails = long("ingestion_details")
    val status = long("status")
    val productCounts = long("product_counts")
    val validationDetails = long("validation_details")

    /**
     * Create an entity of type CatalogsFeedProcessingResultFields from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CatalogsFeedProcessingResultFields(
        ingestionDetails = CatalogsFeedIngestionDetailss.createEntity(row, withReferences) /* CatalogsFeedIngestionDetails */,
        status = CatalogsFeedProcessingStatuss.createEntity(row, withReferences) /* CatalogsFeedProcessingStatus */,
        productCounts = CatalogsFeedProductCountss.createEntity(row, withReferences) /* CatalogsFeedProductCounts */,
        validationDetails = CatalogsFeedValidationDetailss.createEntity(row, withReferences) /* CatalogsFeedValidationDetails */
    )

    /**
    * Assign all the columns from the entity of type CatalogsFeedProcessingResultFields to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CatalogsFeedProcessingResultFields()
    * database.update(CatalogsFeedProcessingResultFieldss, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CatalogsFeedProcessingResultFields) {
        this.apply {
            set(CatalogsFeedProcessingResultFieldss.ingestionDetails, entity.ingestionDetails)
            set(CatalogsFeedProcessingResultFieldss.status, entity.status)
            set(CatalogsFeedProcessingResultFieldss.productCounts, entity.productCounts)
            set(CatalogsFeedProcessingResultFieldss.validationDetails, entity.validationDetails)
        }
    }

}


