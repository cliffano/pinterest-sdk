/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICatalogProductGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICatalogProductGroup::OAICatalogProductGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICatalogProductGroup::OAICatalogProductGroup() {
    this->initializeModel();
}

OAICatalogProductGroup::~OAICatalogProductGroup() {}

void OAICatalogProductGroup::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_merchant_id_isSet = false;
    m_merchant_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_filters_isSet = false;
    m_filters_isValid = false;

    m_filter_v2_isSet = false;
    m_filter_v2_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_feed_profile_id_isSet = false;
    m_feed_profile_id_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_last_update_isSet = false;
    m_last_update_isValid = false;

    m_product_count_isSet = false;
    m_product_count_isValid = false;

    m_featured_position_isSet = false;
    m_featured_position_isValid = false;
}

void OAICatalogProductGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICatalogProductGroup::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_merchant_id_isValid = ::OpenAPI::fromJsonValue(m_merchant_id, json[QString("merchant_id")]);
    m_merchant_id_isSet = !json[QString("merchant_id")].isNull() && m_merchant_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_filters_isValid = ::OpenAPI::fromJsonValue(m_filters, json[QString("filters")]);
    m_filters_isSet = !json[QString("filters")].isNull() && m_filters_isValid;

    m_filter_v2_isValid = ::OpenAPI::fromJsonValue(m_filter_v2, json[QString("filter_v2")]);
    m_filter_v2_isSet = !json[QString("filter_v2")].isNull() && m_filter_v2_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_feed_profile_id_isValid = ::OpenAPI::fromJsonValue(m_feed_profile_id, json[QString("feed_profile_id")]);
    m_feed_profile_id_isSet = !json[QString("feed_profile_id")].isNull() && m_feed_profile_id_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_last_update_isValid = ::OpenAPI::fromJsonValue(m_last_update, json[QString("last_update")]);
    m_last_update_isSet = !json[QString("last_update")].isNull() && m_last_update_isValid;

    m_product_count_isValid = ::OpenAPI::fromJsonValue(m_product_count, json[QString("product_count")]);
    m_product_count_isSet = !json[QString("product_count")].isNull() && m_product_count_isValid;

    m_featured_position_isValid = ::OpenAPI::fromJsonValue(m_featured_position, json[QString("featured_position")]);
    m_featured_position_isSet = !json[QString("featured_position")].isNull() && m_featured_position_isValid;
}

QString OAICatalogProductGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICatalogProductGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_merchant_id_isSet) {
        obj.insert(QString("merchant_id"), ::OpenAPI::toJsonValue(m_merchant_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_filters_isSet) {
        obj.insert(QString("filters"), ::OpenAPI::toJsonValue(m_filters));
    }
    if (m_filter_v2_isSet) {
        obj.insert(QString("filter_v2"), ::OpenAPI::toJsonValue(m_filter_v2));
    }
    if (m_type.isSet()) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_feed_profile_id_isSet) {
        obj.insert(QString("feed_profile_id"), ::OpenAPI::toJsonValue(m_feed_profile_id));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_last_update_isSet) {
        obj.insert(QString("last_update"), ::OpenAPI::toJsonValue(m_last_update));
    }
    if (m_product_count_isSet) {
        obj.insert(QString("product_count"), ::OpenAPI::toJsonValue(m_product_count));
    }
    if (m_featured_position_isSet) {
        obj.insert(QString("featured_position"), ::OpenAPI::toJsonValue(m_featured_position));
    }
    return obj;
}

QString OAICatalogProductGroup::getId() const {
    return m_id;
}
void OAICatalogProductGroup::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICatalogProductGroup::is_id_Set() const{
    return m_id_isSet;
}

bool OAICatalogProductGroup::is_id_Valid() const{
    return m_id_isValid;
}

QString OAICatalogProductGroup::getMerchantId() const {
    return m_merchant_id;
}
void OAICatalogProductGroup::setMerchantId(const QString &merchant_id) {
    m_merchant_id = merchant_id;
    m_merchant_id_isSet = true;
}

bool OAICatalogProductGroup::is_merchant_id_Set() const{
    return m_merchant_id_isSet;
}

bool OAICatalogProductGroup::is_merchant_id_Valid() const{
    return m_merchant_id_isValid;
}

QString OAICatalogProductGroup::getName() const {
    return m_name;
}
void OAICatalogProductGroup::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICatalogProductGroup::is_name_Set() const{
    return m_name_isSet;
}

bool OAICatalogProductGroup::is_name_Valid() const{
    return m_name_isValid;
}

OAIObject OAICatalogProductGroup::getFilters() const {
    return m_filters;
}
void OAICatalogProductGroup::setFilters(const OAIObject &filters) {
    m_filters = filters;
    m_filters_isSet = true;
}

bool OAICatalogProductGroup::is_filters_Set() const{
    return m_filters_isSet;
}

bool OAICatalogProductGroup::is_filters_Valid() const{
    return m_filters_isValid;
}

OAIObject OAICatalogProductGroup::getFilterV2() const {
    return m_filter_v2;
}
void OAICatalogProductGroup::setFilterV2(const OAIObject &filter_v2) {
    m_filter_v2 = filter_v2;
    m_filter_v2_isSet = true;
}

bool OAICatalogProductGroup::is_filter_v2_Set() const{
    return m_filter_v2_isSet;
}

bool OAICatalogProductGroup::is_filter_v2_Valid() const{
    return m_filter_v2_isValid;
}

OAIBoard OAICatalogProductGroup::getType() const {
    return m_type;
}
void OAICatalogProductGroup::setType(const OAIBoard &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAICatalogProductGroup::is_type_Set() const{
    return m_type_isSet;
}

bool OAICatalogProductGroup::is_type_Valid() const{
    return m_type_isValid;
}

OAIEntityStatus OAICatalogProductGroup::getStatus() const {
    return m_status;
}
void OAICatalogProductGroup::setStatus(const OAIEntityStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICatalogProductGroup::is_status_Set() const{
    return m_status_isSet;
}

bool OAICatalogProductGroup::is_status_Valid() const{
    return m_status_isValid;
}

QString OAICatalogProductGroup::getFeedProfileId() const {
    return m_feed_profile_id;
}
void OAICatalogProductGroup::setFeedProfileId(const QString &feed_profile_id) {
    m_feed_profile_id = feed_profile_id;
    m_feed_profile_id_isSet = true;
}

bool OAICatalogProductGroup::is_feed_profile_id_Set() const{
    return m_feed_profile_id_isSet;
}

bool OAICatalogProductGroup::is_feed_profile_id_Valid() const{
    return m_feed_profile_id_isValid;
}

qint32 OAICatalogProductGroup::getCreatedAt() const {
    return m_created_at;
}
void OAICatalogProductGroup::setCreatedAt(const qint32 &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAICatalogProductGroup::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAICatalogProductGroup::is_created_at_Valid() const{
    return m_created_at_isValid;
}

qint32 OAICatalogProductGroup::getLastUpdate() const {
    return m_last_update;
}
void OAICatalogProductGroup::setLastUpdate(const qint32 &last_update) {
    m_last_update = last_update;
    m_last_update_isSet = true;
}

bool OAICatalogProductGroup::is_last_update_Set() const{
    return m_last_update_isSet;
}

bool OAICatalogProductGroup::is_last_update_Valid() const{
    return m_last_update_isValid;
}

qint32 OAICatalogProductGroup::getProductCount() const {
    return m_product_count;
}
void OAICatalogProductGroup::setProductCount(const qint32 &product_count) {
    m_product_count = product_count;
    m_product_count_isSet = true;
}

bool OAICatalogProductGroup::is_product_count_Set() const{
    return m_product_count_isSet;
}

bool OAICatalogProductGroup::is_product_count_Valid() const{
    return m_product_count_isValid;
}

qint32 OAICatalogProductGroup::getFeaturedPosition() const {
    return m_featured_position;
}
void OAICatalogProductGroup::setFeaturedPosition(const qint32 &featured_position) {
    m_featured_position = featured_position;
    m_featured_position_isSet = true;
}

bool OAICatalogProductGroup::is_featured_position_Set() const{
    return m_featured_position_isSet;
}

bool OAICatalogProductGroup::is_featured_position_Valid() const{
    return m_featured_position_isValid;
}

bool OAICatalogProductGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchant_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_filters_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_filter_v2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_feed_profile_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_update_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_featured_position_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICatalogProductGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
