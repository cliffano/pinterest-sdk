/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.4.1
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProductGroupPromotion.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProductGroupPromotion::OAIProductGroupPromotion(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProductGroupPromotion::OAIProductGroupPromotion() {
    this->initializeModel();
}

OAIProductGroupPromotion::~OAIProductGroupPromotion() {}

void OAIProductGroupPromotion::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_ad_group_id_isSet = false;
    m_ad_group_id_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_bid_in_micro_currency_isSet = false;
    m_bid_in_micro_currency_isValid = false;

    m_included_isSet = false;
    m_included_isValid = false;

    m_definition_isSet = false;
    m_definition_isValid = false;

    m_relative_definition_isSet = false;
    m_relative_definition_isValid = false;

    m_parent_id_isSet = false;
    m_parent_id_isValid = false;

    m_slideshow_collections_title_isSet = false;
    m_slideshow_collections_title_isValid = false;

    m_slideshow_collections_description_isSet = false;
    m_slideshow_collections_description_isValid = false;
}

void OAIProductGroupPromotion::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProductGroupPromotion::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_ad_group_id_isValid = ::OpenAPI::fromJsonValue(ad_group_id, json[QString("ad_group_id")]);
    m_ad_group_id_isSet = !json[QString("ad_group_id")].isNull() && m_ad_group_id_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_bid_in_micro_currency_isValid = ::OpenAPI::fromJsonValue(bid_in_micro_currency, json[QString("bid_in_micro_currency")]);
    m_bid_in_micro_currency_isSet = !json[QString("bid_in_micro_currency")].isNull() && m_bid_in_micro_currency_isValid;

    m_included_isValid = ::OpenAPI::fromJsonValue(included, json[QString("included")]);
    m_included_isSet = !json[QString("included")].isNull() && m_included_isValid;

    m_definition_isValid = ::OpenAPI::fromJsonValue(definition, json[QString("definition")]);
    m_definition_isSet = !json[QString("definition")].isNull() && m_definition_isValid;

    m_relative_definition_isValid = ::OpenAPI::fromJsonValue(relative_definition, json[QString("relative_definition")]);
    m_relative_definition_isSet = !json[QString("relative_definition")].isNull() && m_relative_definition_isValid;

    m_parent_id_isValid = ::OpenAPI::fromJsonValue(parent_id, json[QString("parent_id")]);
    m_parent_id_isSet = !json[QString("parent_id")].isNull() && m_parent_id_isValid;

    m_slideshow_collections_title_isValid = ::OpenAPI::fromJsonValue(slideshow_collections_title, json[QString("slideshow_collections_title")]);
    m_slideshow_collections_title_isSet = !json[QString("slideshow_collections_title")].isNull() && m_slideshow_collections_title_isValid;

    m_slideshow_collections_description_isValid = ::OpenAPI::fromJsonValue(slideshow_collections_description, json[QString("slideshow_collections_description")]);
    m_slideshow_collections_description_isSet = !json[QString("slideshow_collections_description")].isNull() && m_slideshow_collections_description_isValid;
}

QString OAIProductGroupPromotion::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProductGroupPromotion::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(id));
    }
    if (m_ad_group_id_isSet) {
        obj.insert(QString("ad_group_id"), ::OpenAPI::toJsonValue(ad_group_id));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(type));
    }
    if (m_bid_in_micro_currency_isSet) {
        obj.insert(QString("bid_in_micro_currency"), ::OpenAPI::toJsonValue(bid_in_micro_currency));
    }
    if (m_included_isSet) {
        obj.insert(QString("included"), ::OpenAPI::toJsonValue(included));
    }
    if (m_definition_isSet) {
        obj.insert(QString("definition"), ::OpenAPI::toJsonValue(definition));
    }
    if (m_relative_definition_isSet) {
        obj.insert(QString("relative_definition"), ::OpenAPI::toJsonValue(relative_definition));
    }
    if (m_parent_id_isSet) {
        obj.insert(QString("parent_id"), ::OpenAPI::toJsonValue(parent_id));
    }
    if (m_slideshow_collections_title_isSet) {
        obj.insert(QString("slideshow_collections_title"), ::OpenAPI::toJsonValue(slideshow_collections_title));
    }
    if (m_slideshow_collections_description_isSet) {
        obj.insert(QString("slideshow_collections_description"), ::OpenAPI::toJsonValue(slideshow_collections_description));
    }
    return obj;
}

QString OAIProductGroupPromotion::getId() const {
    return id;
}
void OAIProductGroupPromotion::setId(const QString &id) {
    this->id = id;
    this->m_id_isSet = true;
}

bool OAIProductGroupPromotion::is_id_Set() const{
    return m_id_isSet;
}

bool OAIProductGroupPromotion::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIProductGroupPromotion::getAdGroupId() const {
    return ad_group_id;
}
void OAIProductGroupPromotion::setAdGroupId(const QString &ad_group_id) {
    this->ad_group_id = ad_group_id;
    this->m_ad_group_id_isSet = true;
}

bool OAIProductGroupPromotion::is_ad_group_id_Set() const{
    return m_ad_group_id_isSet;
}

bool OAIProductGroupPromotion::is_ad_group_id_Valid() const{
    return m_ad_group_id_isValid;
}

QString OAIProductGroupPromotion::getType() const {
    return type;
}
void OAIProductGroupPromotion::setType(const QString &type) {
    this->type = type;
    this->m_type_isSet = true;
}

bool OAIProductGroupPromotion::is_type_Set() const{
    return m_type_isSet;
}

bool OAIProductGroupPromotion::is_type_Valid() const{
    return m_type_isValid;
}

qint32 OAIProductGroupPromotion::getBidInMicroCurrency() const {
    return bid_in_micro_currency;
}
void OAIProductGroupPromotion::setBidInMicroCurrency(const qint32 &bid_in_micro_currency) {
    this->bid_in_micro_currency = bid_in_micro_currency;
    this->m_bid_in_micro_currency_isSet = true;
}

bool OAIProductGroupPromotion::is_bid_in_micro_currency_Set() const{
    return m_bid_in_micro_currency_isSet;
}

bool OAIProductGroupPromotion::is_bid_in_micro_currency_Valid() const{
    return m_bid_in_micro_currency_isValid;
}

bool OAIProductGroupPromotion::isIncluded() const {
    return included;
}
void OAIProductGroupPromotion::setIncluded(const bool &included) {
    this->included = included;
    this->m_included_isSet = true;
}

bool OAIProductGroupPromotion::is_included_Set() const{
    return m_included_isSet;
}

bool OAIProductGroupPromotion::is_included_Valid() const{
    return m_included_isValid;
}

QString OAIProductGroupPromotion::getDefinition() const {
    return definition;
}
void OAIProductGroupPromotion::setDefinition(const QString &definition) {
    this->definition = definition;
    this->m_definition_isSet = true;
}

bool OAIProductGroupPromotion::is_definition_Set() const{
    return m_definition_isSet;
}

bool OAIProductGroupPromotion::is_definition_Valid() const{
    return m_definition_isValid;
}

QString OAIProductGroupPromotion::getRelativeDefinition() const {
    return relative_definition;
}
void OAIProductGroupPromotion::setRelativeDefinition(const QString &relative_definition) {
    this->relative_definition = relative_definition;
    this->m_relative_definition_isSet = true;
}

bool OAIProductGroupPromotion::is_relative_definition_Set() const{
    return m_relative_definition_isSet;
}

bool OAIProductGroupPromotion::is_relative_definition_Valid() const{
    return m_relative_definition_isValid;
}

QString OAIProductGroupPromotion::getParentId() const {
    return parent_id;
}
void OAIProductGroupPromotion::setParentId(const QString &parent_id) {
    this->parent_id = parent_id;
    this->m_parent_id_isSet = true;
}

bool OAIProductGroupPromotion::is_parent_id_Set() const{
    return m_parent_id_isSet;
}

bool OAIProductGroupPromotion::is_parent_id_Valid() const{
    return m_parent_id_isValid;
}

QString OAIProductGroupPromotion::getSlideshowCollectionsTitle() const {
    return slideshow_collections_title;
}
void OAIProductGroupPromotion::setSlideshowCollectionsTitle(const QString &slideshow_collections_title) {
    this->slideshow_collections_title = slideshow_collections_title;
    this->m_slideshow_collections_title_isSet = true;
}

bool OAIProductGroupPromotion::is_slideshow_collections_title_Set() const{
    return m_slideshow_collections_title_isSet;
}

bool OAIProductGroupPromotion::is_slideshow_collections_title_Valid() const{
    return m_slideshow_collections_title_isValid;
}

QString OAIProductGroupPromotion::getSlideshowCollectionsDescription() const {
    return slideshow_collections_description;
}
void OAIProductGroupPromotion::setSlideshowCollectionsDescription(const QString &slideshow_collections_description) {
    this->slideshow_collections_description = slideshow_collections_description;
    this->m_slideshow_collections_description_isSet = true;
}

bool OAIProductGroupPromotion::is_slideshow_collections_description_Set() const{
    return m_slideshow_collections_description_isSet;
}

bool OAIProductGroupPromotion::is_slideshow_collections_description_Valid() const{
    return m_slideshow_collections_description_isValid;
}

bool OAIProductGroupPromotion::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ad_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bid_in_micro_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_included_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_definition_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_relative_definition_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_slideshow_collections_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_slideshow_collections_description_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProductGroupPromotion::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
