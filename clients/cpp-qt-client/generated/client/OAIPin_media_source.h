/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.4.1
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPin_media_source.h
 *
 * 
 */

#ifndef OAIPin_media_source_H
#define OAIPin_media_source_H

#include <QJsonObject>

#include "OAIPinMediaSource.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPin_media_source : public OAIObject {
public:
    OAIPin_media_source();
    OAIPin_media_source(QString json);
    ~OAIPin_media_source() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSourceType() const;
    void setSourceType(const QString &source_type);
    bool is_source_type_Set() const;
    bool is_source_type_Valid() const;

    QString getContentType() const;
    void setContentType(const QString &content_type);
    bool is_content_type_Set() const;
    bool is_content_type_Valid() const;

    QString getData() const;
    void setData(const QString &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QString getCoverImageUrl() const;
    void setCoverImageUrl(const QString &cover_image_url);
    bool is_cover_image_url_Set() const;
    bool is_cover_image_url_Valid() const;

    QString getMediaId() const;
    void setMediaId(const QString &media_id);
    bool is_media_id_Set() const;
    bool is_media_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString source_type;
    bool m_source_type_isSet;
    bool m_source_type_isValid;

    QString content_type;
    bool m_content_type_isSet;
    bool m_content_type_isValid;

    QString data;
    bool m_data_isSet;
    bool m_data_isValid;

    QString url;
    bool m_url_isSet;
    bool m_url_isValid;

    QString cover_image_url;
    bool m_cover_image_url_isSet;
    bool m_cover_image_url_isValid;

    QString media_id;
    bool m_media_id_isSet;
    bool m_media_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPin_media_source)

#endif // OAIPin_media_source_H
