/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: pinterest-api@pinterest.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAdsAnalyticsCreateAsyncRequest_allOf_1.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAdsAnalyticsCreateAsyncRequest_allOf_1::OAIAdsAnalyticsCreateAsyncRequest_allOf_1(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAdsAnalyticsCreateAsyncRequest_allOf_1::OAIAdsAnalyticsCreateAsyncRequest_allOf_1() {
    this->initializeModel();
}

OAIAdsAnalyticsCreateAsyncRequest_allOf_1::~OAIAdsAnalyticsCreateAsyncRequest_allOf_1() {}

void OAIAdsAnalyticsCreateAsyncRequest_allOf_1::initializeModel() {

    m_columns_isSet = false;
    m_columns_isValid = false;

    m_level_isSet = false;
    m_level_isValid = false;

    m_report_format_isSet = false;
    m_report_format_isValid = false;
}

void OAIAdsAnalyticsCreateAsyncRequest_allOf_1::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAdsAnalyticsCreateAsyncRequest_allOf_1::fromJsonObject(QJsonObject json) {

    m_columns_isValid = ::OpenAPI::fromJsonValue(columns, json[QString("columns")]);
    m_columns_isSet = !json[QString("columns")].isNull() && m_columns_isValid;

    m_level_isValid = ::OpenAPI::fromJsonValue(level, json[QString("level")]);
    m_level_isSet = !json[QString("level")].isNull() && m_level_isValid;

    m_report_format_isValid = ::OpenAPI::fromJsonValue(report_format, json[QString("report_format")]);
    m_report_format_isSet = !json[QString("report_format")].isNull() && m_report_format_isValid;
}

QString OAIAdsAnalyticsCreateAsyncRequest_allOf_1::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAdsAnalyticsCreateAsyncRequest_allOf_1::asJsonObject() const {
    QJsonObject obj;
    if (columns.size() > 0) {
        obj.insert(QString("columns"), ::OpenAPI::toJsonValue(columns));
    }
    if (level.isSet()) {
        obj.insert(QString("level"), ::OpenAPI::toJsonValue(level));
    }
    if (report_format.isSet()) {
        obj.insert(QString("report_format"), ::OpenAPI::toJsonValue(report_format));
    }
    return obj;
}

QList<OAIReportingColumnAsync> OAIAdsAnalyticsCreateAsyncRequest_allOf_1::getColumns() const {
    return columns;
}
void OAIAdsAnalyticsCreateAsyncRequest_allOf_1::setColumns(const QList<OAIReportingColumnAsync> &columns) {
    this->columns = columns;
    this->m_columns_isSet = true;
}

bool OAIAdsAnalyticsCreateAsyncRequest_allOf_1::is_columns_Set() const{
    return m_columns_isSet;
}

bool OAIAdsAnalyticsCreateAsyncRequest_allOf_1::is_columns_Valid() const{
    return m_columns_isValid;
}

OAIMetricsReportingLevel OAIAdsAnalyticsCreateAsyncRequest_allOf_1::getLevel() const {
    return level;
}
void OAIAdsAnalyticsCreateAsyncRequest_allOf_1::setLevel(const OAIMetricsReportingLevel &level) {
    this->level = level;
    this->m_level_isSet = true;
}

bool OAIAdsAnalyticsCreateAsyncRequest_allOf_1::is_level_Set() const{
    return m_level_isSet;
}

bool OAIAdsAnalyticsCreateAsyncRequest_allOf_1::is_level_Valid() const{
    return m_level_isValid;
}

OAIDataOutputFormat OAIAdsAnalyticsCreateAsyncRequest_allOf_1::getReportFormat() const {
    return report_format;
}
void OAIAdsAnalyticsCreateAsyncRequest_allOf_1::setReportFormat(const OAIDataOutputFormat &report_format) {
    this->report_format = report_format;
    this->m_report_format_isSet = true;
}

bool OAIAdsAnalyticsCreateAsyncRequest_allOf_1::is_report_format_Set() const{
    return m_report_format_isSet;
}

bool OAIAdsAnalyticsCreateAsyncRequest_allOf_1::is_report_format_Valid() const{
    return m_report_format_isValid;
}

bool OAIAdsAnalyticsCreateAsyncRequest_allOf_1::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (columns.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (level.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (report_format.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAdsAnalyticsCreateAsyncRequest_allOf_1::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_columns_isValid && m_level_isValid && true;
}

} // namespace OpenAPI
