/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * OpenAPI spec version: 5.3.0
 * Contact: pinterest-api@pinterest.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPICatalogsApi.h"

#include "OpenAPICatalogsFeed.h"
#include "OpenAPICatalogsFeedsCreateRequest.h"
#include "OpenAPICatalogsFeedsUpdateRequest.h"
#include "OpenAPICatalogsItems.h"
#include "OpenAPICatalogsItemsBatch.h"
#include "OpenAPICatalogsItemsBatchRequest.h"
#include "OpenAPICatalogsProductGroup.h"
#include "OpenAPICatalogsProductGroupCreateRequest.h"
#include "OpenAPICatalogsProductGroupUpdateRequest.h"
#include "OpenAPIError.h"
#include "OpenAPIPaginated.h"

namespace OpenAPI
{

/* Create product group
 *
 * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Create product group to use in Catalogs.
*/
class OPENAPI_API OpenAPICatalogsApi::CatalogsProductGroupsCreateRequest : public Request
{
public:
    virtual ~CatalogsProductGroupsCreateRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Request object used to created a catalogs product group. */
	OpenAPICatalogsProductGroupCreateRequest OpenAPICatalogsProductGroupCreateRequest;
};

class OPENAPI_API OpenAPICatalogsApi::CatalogsProductGroupsCreateResponse : public Response
{
public:
    virtual ~CatalogsProductGroupsCreateResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    TSharedPtr<FJsonObject> Content;
};

/* Delete product group
 *
 * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Delete a product group from being in use in Catalogs.
*/
class OPENAPI_API OpenAPICatalogsApi::CatalogsProductGroupsDeleteRequest : public Request
{
public:
    virtual ~CatalogsProductGroupsDeleteRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of a product group */
	FString ProductGroupId;
};

class OPENAPI_API OpenAPICatalogsApi::CatalogsProductGroupsDeleteResponse : public Response
{
public:
    virtual ~CatalogsProductGroupsDeleteResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    
};

/* Get product groups list
 *
 * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Get a list of product groups for a given Catalogs Feed Id.
*/
class OPENAPI_API OpenAPICatalogsApi::CatalogsProductGroupsListRequest : public Request
{
public:
    virtual ~CatalogsProductGroupsListRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of a feed */
	FString FeedId;
	/* Cursor used to fetch the next page of items */
	TOptional<FString> Bookmark;
	/* Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/api/v5/#tag/Pagination'>Pagination</a> for more information. */
	TOptional<int32> PageSize;
};

class OPENAPI_API OpenAPICatalogsApi::CatalogsProductGroupsListResponse : public Response
{
public:
    virtual ~CatalogsProductGroupsListResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIPaginated Content;
};

/* Update product group
 *
 * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Update product group to use in Catalogs.
*/
class OPENAPI_API OpenAPICatalogsApi::CatalogsProductGroupsUpdateRequest : public Request
{
public:
    virtual ~CatalogsProductGroupsUpdateRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of a product group */
	FString ProductGroupId;
	/* Request object used to Update a catalogs product group. */
	OpenAPICatalogsProductGroupUpdateRequest OpenAPICatalogsProductGroupUpdateRequest;
};

class OPENAPI_API OpenAPICatalogsApi::CatalogsProductGroupsUpdateResponse : public Response
{
public:
    virtual ~CatalogsProductGroupsUpdateResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPICatalogsProductGroup Content;
};

/* List processing results for a given feed
 *
 * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Fetch a feed processing results owned by the owner user account.
*/
class OPENAPI_API OpenAPICatalogsApi::FeedProcessingResultsListRequest : public Request
{
public:
    virtual ~FeedProcessingResultsListRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of a feed */
	FString FeedId;
	/* Cursor used to fetch the next page of items */
	TOptional<FString> Bookmark;
	/* Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/api/v5/#tag/Pagination'>Pagination</a> for more information. */
	TOptional<int32> PageSize;
};

class OPENAPI_API OpenAPICatalogsApi::FeedProcessingResultsListResponse : public Response
{
public:
    virtual ~FeedProcessingResultsListResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIPaginated Content;
};

/* Create feed
 *
 * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Create a new feed owned by the \&quot;operating user_account\&quot;.
*/
class OPENAPI_API OpenAPICatalogsApi::FeedsCreateRequest : public Request
{
public:
    virtual ~FeedsCreateRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Request object used to created a feed. */
	OpenAPICatalogsFeedsCreateRequest OpenAPICatalogsFeedsCreateRequest;
};

class OPENAPI_API OpenAPICatalogsApi::FeedsCreateResponse : public Response
{
public:
    virtual ~FeedsCreateResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPICatalogsFeed Content;
};

/* Delete feed
 *
 * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Delete a feed owned by the \&quot;operating user_account\&quot;.
*/
class OPENAPI_API OpenAPICatalogsApi::FeedsDeleteRequest : public Request
{
public:
    virtual ~FeedsDeleteRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of a feed */
	FString FeedId;
};

class OPENAPI_API OpenAPICatalogsApi::FeedsDeleteResponse : public Response
{
public:
    virtual ~FeedsDeleteResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    
};

/* Get feed
 *
 * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Get a single feed owned by the \&quot;operating user_account\&quot;.
*/
class OPENAPI_API OpenAPICatalogsApi::FeedsGetRequest : public Request
{
public:
    virtual ~FeedsGetRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of a feed */
	FString FeedId;
};

class OPENAPI_API OpenAPICatalogsApi::FeedsGetResponse : public Response
{
public:
    virtual ~FeedsGetResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPICatalogsFeed Content;
};

/* List feeds
 *
 * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Fetch feeds owned by the \&quot;operating user_account\&quot;.
*/
class OPENAPI_API OpenAPICatalogsApi::FeedsListRequest : public Request
{
public:
    virtual ~FeedsListRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Cursor used to fetch the next page of items */
	TOptional<FString> Bookmark;
	/* Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/api/v5/#tag/Pagination'>Pagination</a> for more information. */
	TOptional<int32> PageSize;
};

class OPENAPI_API OpenAPICatalogsApi::FeedsListResponse : public Response
{
public:
    virtual ~FeedsListResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIPaginated Content;
};

/* Update feed
 *
 * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Update a feed owned by the \&quot;operating user_account\&quot;.
*/
class OPENAPI_API OpenAPICatalogsApi::FeedsUpdateRequest : public Request
{
public:
    virtual ~FeedsUpdateRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of a feed */
	FString FeedId;
	/* Request object used to update a feed. */
	OpenAPICatalogsFeedsUpdateRequest OpenAPICatalogsFeedsUpdateRequest;
};

class OPENAPI_API OpenAPICatalogsApi::FeedsUpdateResponse : public Response
{
public:
    virtual ~FeedsUpdateResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPICatalogsFeed Content;
};

/* Get catalogs items batch
 *
 * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Get a single catalogs items batch created by the \&quot;operating user_account\&quot;.
*/
class OPENAPI_API OpenAPICatalogsApi::ItemsBatchGetRequest : public Request
{
public:
    virtual ~ItemsBatchGetRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Id of a catalogs items batch to fetch */
	FString BatchId;
};

class OPENAPI_API OpenAPICatalogsApi::ItemsBatchGetResponse : public Response
{
public:
    virtual ~ItemsBatchGetResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPICatalogsItemsBatch Content;
};

/* Perform an operation on an item batch
 *
 * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  This endpoint supports multiple operations on a set of one or more catalog items.
*/
class OPENAPI_API OpenAPICatalogsApi::ItemsBatchPostRequest : public Request
{
public:
    virtual ~ItemsBatchPostRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Request object used to create catalogs items in a batch */
	OpenAPICatalogsItemsBatchRequest OpenAPICatalogsItemsBatchRequest;
};

class OPENAPI_API OpenAPICatalogsApi::ItemsBatchPostResponse : public Response
{
public:
    virtual ~ItemsBatchPostResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPICatalogsItemsBatch Content;
};

/* Get catalogs items
 *
 * Get the items of the catalog created by the \&quot;operating user_account\&quot;
*/
class OPENAPI_API OpenAPICatalogsApi::ItemsGetRequest : public Request
{
public:
    virtual ~ItemsGetRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Country for the Catalogs Items */
	FString Country;
	/* Catalos Item ids */
	TArray<FString> ItemIds;
	/* Language for the Catalogs Items */
	FString Language;
};

class OPENAPI_API OpenAPICatalogsApi::ItemsGetResponse : public Response
{
public:
    virtual ~ItemsGetResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPICatalogsItems Content;
};

}
