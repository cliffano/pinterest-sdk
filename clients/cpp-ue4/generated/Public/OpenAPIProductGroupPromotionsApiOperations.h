/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * OpenAPI spec version: 5.6.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPIProductGroupPromotionsApi.h"

#include "OpenAPIError.h"
#include "OpenAPIGranularity.h"
#include "OpenAPIProductGroupAnalyticsResponseInner.h"
#include "OpenAPIProductGroupPromotion.h"
#include "OpenAPIProductGroupPromotionArrayElement.h"
#include "OpenAPIProductGroupPromotionCreateRequest.h"
#include "OpenAPIProductGroupPromotionUpdateRequest.h"
#include "OpenAPIProductGroupPromotionUpdateResponseItem.h"

namespace OpenAPI
{

/* Get a product group promotion by id
 *
 * Get a product group promotion by id
*/
class OPENAPI_API OpenAPIProductGroupPromotionsApi::ProductGroupPromotionGetRequest : public Request
{
public:
    virtual ~ProductGroupPromotionGetRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of an ad account. */
	FString AdAccountId;
	/* Unique identifier of a product group promotion */
	FString ProductGroupPromotionId;
};

class OPENAPI_API OpenAPIProductGroupPromotionsApi::ProductGroupPromotionGetResponse : public Response
{
public:
    virtual ~ProductGroupPromotionGetResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIProductGroupPromotion Content;
};

/* Create product group promotions
 *
 * Add one or more product groups from your catalog to an existing ad group. (Product groups added to an ad group are a &#39;product group promotion.&#39;)
*/
class OPENAPI_API OpenAPIProductGroupPromotionsApi::ProductGroupPromotionsCreateRequest : public Request
{
public:
    virtual ~ProductGroupPromotionsCreateRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of an ad account. */
	FString AdAccountId;
	/* List of Product Group Promotions to create, size limit [1, 30]. */
	OpenAPIProductGroupPromotionCreateRequest OpenAPIProductGroupPromotionCreateRequest;
};

class OPENAPI_API OpenAPIProductGroupPromotionsApi::ProductGroupPromotionsCreateResponse : public Response
{
public:
    virtual ~ProductGroupPromotionsCreateResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    TArray<OpenAPIProductGroupPromotionArrayElement> Content;
};

/* Update product group promotions
 *
 * Update multiple existing Product Group Promotions (by product_group_id)
*/
class OPENAPI_API OpenAPIProductGroupPromotionsApi::ProductGroupPromotionsUpdateRequest : public Request
{
public:
    virtual ~ProductGroupPromotionsUpdateRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of an ad account. */
	FString AdAccountId;
	/* Parameters to update Product group promotions */
	OpenAPIProductGroupPromotionUpdateRequest OpenAPIProductGroupPromotionUpdateRequest;
};

class OPENAPI_API OpenAPIProductGroupPromotionsApi::ProductGroupPromotionsUpdateResponse : public Response
{
public:
    virtual ~ProductGroupPromotionsUpdateResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    TArray<OpenAPIProductGroupPromotionUpdateResponseItem> Content;
};

/* Get product group analytics
 *
 * Get analytics for the specified product groups in the specified &lt;code&gt;ad_account_id&lt;/code&gt;, filtered by the specified options. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager.
*/
class OPENAPI_API OpenAPIProductGroupPromotionsApi::ProductGroupsAnalyticsRequest : public Request
{
public:
    virtual ~ProductGroupsAnalyticsRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of an ad account. */
	FString AdAccountId;
	/* Metric report start date (UTC). Format: YYYY-MM-DD */
	FDateTime StartDate;
	/* Metric report end date (UTC). Format: YYYY-MM-DD */
	FDateTime EndDate;
	/* List of Product group Ids to use to filter the results. */
	TArray<FString> ProductGroupIds;
	enum class ColumnsEnum
	{
		AdvertiserId,
		PinPromotionId,
		AdAccountId,
		AdGroupEntityStatus,
		AdGroupId,
		AdId,
		CampaignDailySpendCap,
		CampaignEntityStatus,
		CampaignId,
		CampaignLifetimeSpendCap,
		CampaignName,
		CheckoutRoas,
		CLICKTHROUGH1,
		CLICKTHROUGH1GROSS,
		CLICKTHROUGH2,
		CpcInMicroDollar,
		CpmInDollar,
		CpmInMicroDollar,
		Ctr,
		CTR2,
		EcpcvInDollar,
		ECPCVP95INDOLLAR,
		EcpcInDollar,
		EcpcInMicroDollar,
		EcpeInDollar,
		EcpmInMicroDollar,
		EcpvInDollar,
		Ectr,
		EengagementRate,
		ENGAGEMENT1,
		ENGAGEMENT2,
		EngagementRate,
		IDEAPINPRODUCTTAGVISIT1,
		IDEAPINPRODUCTTAGVISIT2,
		IMPRESSION1,
		IMPRESSION1GROSS,
		IMPRESSION2,
		InappCheckoutCostPerAction,
		OUTBOUNDCLICK1,
		OUTBOUNDCLICK2,
		PageVisitCostPerAction,
		PageVisitRoas,
		PaidImpression,
		PinId,
		REPIN1,
		REPIN2,
		RepinRate,
		SpendInDollar,
		SpendInMicroDollar,
		TotalCheckout,
		TotalCheckoutValueInMicroDollar,
		TotalClickthrough,
		TotalClickAddToCart,
		TotalClickCheckout,
		TotalClickCheckoutValueInMicroDollar,
		TotalClickLead,
		TotalClickSignup,
		TotalClickSignupValueInMicroDollar,
		TotalConversions,
		TotalCustom,
		TotalEngagement,
		TotalEngagementCheckout,
		TotalEngagementCheckoutValueInMicroDollar,
		TotalEngagementLead,
		TotalEngagementSignup,
		TotalEngagementSignupValueInMicroDollar,
		TotalIdeaPinProductTagVisit,
		TotalImpressionFrequency,
		TotalImpressionUser,
		TotalLead,
		TotalOfflineCheckout,
		TotalPageVisit,
		TotalRepinRate,
		TotalSignup,
		TotalSignupValueInMicroDollar,
		TOTALVIDEO3SECVIEWS,
		TotalVideoAvgWatchtimeInSecond,
		TotalVideoMrcViews,
		TOTALVIDEOP0COMBINED,
		TOTALVIDEOP100COMPLETE,
		TOTALVIDEOP25COMBINED,
		TOTALVIDEOP50COMBINED,
		TOTALVIDEOP75COMBINED,
		TOTALVIDEOP95COMBINED,
		TotalViewAddToCart,
		TotalViewCheckout,
		TotalViewCheckoutValueInMicroDollar,
		TotalViewLead,
		TotalViewSignup,
		TotalViewSignupValueInMicroDollar,
		TotalWebCheckout,
		TotalWebCheckoutValueInMicroDollar,
		TotalWebClickCheckout,
		TotalWebClickCheckoutValueInMicroDollar,
		TotalWebEngagementCheckout,
		TotalWebEngagementCheckoutValueInMicroDollar,
		TotalWebSessions,
		TotalWebViewCheckout,
		TotalWebViewCheckoutValueInMicroDollar,
		VIDEO3SECVIEWS2,
		VideoLength,
		VIDEOMRCVIEWS2,
		VIDEOP0COMBINED2,
		VIDEOP100COMPLETE2,
		VIDEOP25COMBINED2,
		VIDEOP50COMBINED2,
		VIDEOP75COMBINED2,
		VIDEOP95COMBINED2,
		WebCheckoutCostPerAction,
		WebCheckoutRoas,
		WEBSESSIONS1,
		WEBSESSIONS2,
  	};

	static FString EnumToString(const ColumnsEnum& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, ColumnsEnum& EnumValue);
	/* Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile's currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it's microdollars. Otherwise, it's in microunits of the advertiser's currency.<br/>For example, if the advertiser's currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).<br/>If a column has no value, it may not be returned */
	TArray<ColumnsEnum> Columns;
	/* TOTAL - metrics are aggregated over the specified date range.<br> DAY - metrics are broken down daily.<br> HOUR - metrics are broken down hourly.<br>WEEKLY - metrics are broken down weekly.<br>MONTHLY - metrics are broken down monthly */
	OpenAPIGranularity Granularity;
	enum class ClickWindowDaysEnum
	{
		_1,
		_7,
		_30,
		_60,
  	};

	static FString EnumToString(const ClickWindowDaysEnum& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, ClickWindowDaysEnum& EnumValue);
	/* Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days. */
	TOptional<ClickWindowDaysEnum> ClickWindowDays;
	enum class EngagementWindowDaysEnum
	{
		_1,
		_7,
		_30,
		_60,
  	};

	static FString EnumToString(const EngagementWindowDaysEnum& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, EngagementWindowDaysEnum& EnumValue);
	/* Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days. */
	TOptional<EngagementWindowDaysEnum> EngagementWindowDays;
	enum class ViewWindowDaysEnum
	{
		_1,
		_7,
		_30,
		_60,
  	};

	static FString EnumToString(const ViewWindowDaysEnum& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, ViewWindowDaysEnum& EnumValue);
	/* Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `1` day. */
	TOptional<ViewWindowDaysEnum> ViewWindowDays;
	enum class ConversionReportTimeEnum
	{
		AdAction,
		Conversion,
  	};

	static FString EnumToString(const ConversionReportTimeEnum& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, ConversionReportTimeEnum& EnumValue);
	/* The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event. */
	TOptional<ConversionReportTimeEnum> ConversionReportTime;
};

class OPENAPI_API OpenAPIProductGroupPromotionsApi::ProductGroupsAnalyticsResponse : public Response
{
public:
    virtual ~ProductGroupsAnalyticsResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    TArray<OpenAPIProductGroupAnalyticsResponseInner> Content;
};

}
