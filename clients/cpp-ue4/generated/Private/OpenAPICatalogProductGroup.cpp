/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * OpenAPI spec version: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPICatalogProductGroup.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

void OpenAPICatalogProductGroup::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (Id.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("id")); WriteJsonValue(Writer, Id.GetValue());
	}
	if (MerchantId.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("merchant_id")); WriteJsonValue(Writer, MerchantId.GetValue());
	}
	if (Name.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("name")); WriteJsonValue(Writer, Name.GetValue());
	}
	if (Filters.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("filters")); WriteJsonValue(Writer, Filters.GetValue());
	}
	if (FilterV2.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("filter_v2")); WriteJsonValue(Writer, FilterV2.GetValue());
	}
	if (Type.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("type")); WriteJsonValue(Writer, Type.GetValue());
	}
	if (Status.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("status")); WriteJsonValue(Writer, Status.GetValue());
	}
	if (FeedProfileId.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("feed_profile_id")); WriteJsonValue(Writer, FeedProfileId.GetValue());
	}
	if (CreatedAt.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("created_at")); WriteJsonValue(Writer, CreatedAt.GetValue());
	}
	if (LastUpdate.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("last_update")); WriteJsonValue(Writer, LastUpdate.GetValue());
	}
	if (ProductCount.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("product_count")); WriteJsonValue(Writer, ProductCount.GetValue());
	}
	if (FeaturedPosition.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("featured_position")); WriteJsonValue(Writer, FeaturedPosition.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool OpenAPICatalogProductGroup::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("id"), Id);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("merchant_id"), MerchantId);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("name"), Name);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("filters"), Filters);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("filter_v2"), FilterV2);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("type"), Type);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("status"), Status);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("feed_profile_id"), FeedProfileId);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("created_at"), CreatedAt);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("last_update"), LastUpdate);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("product_count"), ProductCount);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("featured_position"), FeaturedPosition);

	return ParseSuccess;
}

}
