/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * OpenAPI spec version: 5.3.0
 * Contact: pinterest-api@pinterest.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIAdAccountsApiOperations.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Dom/JsonObject.h"
#include "Templates/SharedPointer.h"
#include "HttpModule.h"
#include "PlatformHttp.h"

namespace OpenAPI
{

inline FString ToString(const OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum& Value)
{
	switch (Value)
	{
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::AdAccountId:
		return TEXT("AD_ACCOUNT_ID");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::AdGroupEntityStatus:
		return TEXT("AD_GROUP_ENTITY_STATUS");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::AdGroupId:
		return TEXT("AD_GROUP_ID");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::AdId:
		return TEXT("AD_ID");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::CampaignDailySpendCap:
		return TEXT("CAMPAIGN_DAILY_SPEND_CAP");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::CampaignEntityStatus:
		return TEXT("CAMPAIGN_ENTITY_STATUS");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::CampaignId:
		return TEXT("CAMPAIGN_ID");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::CampaignLifetimeSpendCap:
		return TEXT("CAMPAIGN_LIFETIME_SPEND_CAP");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::CampaignName:
		return TEXT("CAMPAIGN_NAME");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::CheckoutRoas:
		return TEXT("CHECKOUT_ROAS");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::CLICKTHROUGH1:
		return TEXT("CLICKTHROUGH_1");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::CLICKTHROUGH1GROSS:
		return TEXT("CLICKTHROUGH_1_GROSS");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::CLICKTHROUGH2:
		return TEXT("CLICKTHROUGH_2");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::CpcInMicroDollar:
		return TEXT("CPC_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::CpmInDollar:
		return TEXT("CPM_IN_DOLLAR");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::CpmInMicroDollar:
		return TEXT("CPM_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::Ctr:
		return TEXT("CTR");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::CTR2:
		return TEXT("CTR_2");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::EcpcvInDollar:
		return TEXT("ECPCV_IN_DOLLAR");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::ECPCVP95INDOLLAR:
		return TEXT("ECPCV_P95_IN_DOLLAR");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::EcpcInDollar:
		return TEXT("ECPC_IN_DOLLAR");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::EcpcInMicroDollar:
		return TEXT("ECPC_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::EcpeInDollar:
		return TEXT("ECPE_IN_DOLLAR");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::EcpmInMicroDollar:
		return TEXT("ECPM_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::EcpvInDollar:
		return TEXT("ECPV_IN_DOLLAR");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::Ectr:
		return TEXT("ECTR");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::EengagementRate:
		return TEXT("EENGAGEMENT_RATE");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::ENGAGEMENT1:
		return TEXT("ENGAGEMENT_1");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::ENGAGEMENT2:
		return TEXT("ENGAGEMENT_2");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::EngagementRate:
		return TEXT("ENGAGEMENT_RATE");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::IDEAPINPRODUCTTAGVISIT1:
		return TEXT("IDEA_PIN_PRODUCT_TAG_VISIT_1");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::IDEAPINPRODUCTTAGVISIT2:
		return TEXT("IDEA_PIN_PRODUCT_TAG_VISIT_2");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::IMPRESSION1:
		return TEXT("IMPRESSION_1");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::IMPRESSION1GROSS:
		return TEXT("IMPRESSION_1_GROSS");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::IMPRESSION2:
		return TEXT("IMPRESSION_2");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::InappCheckoutCostPerAction:
		return TEXT("INAPP_CHECKOUT_COST_PER_ACTION");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::OUTBOUNDCLICK1:
		return TEXT("OUTBOUND_CLICK_1");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::OUTBOUNDCLICK2:
		return TEXT("OUTBOUND_CLICK_2");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::PageVisitCostPerAction:
		return TEXT("PAGE_VISIT_COST_PER_ACTION");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::PageVisitRoas:
		return TEXT("PAGE_VISIT_ROAS");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::PaidImpression:
		return TEXT("PAID_IMPRESSION");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::PinId:
		return TEXT("PIN_ID");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::REPIN1:
		return TEXT("REPIN_1");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::REPIN2:
		return TEXT("REPIN_2");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::RepinRate:
		return TEXT("REPIN_RATE");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::SpendInDollar:
		return TEXT("SPEND_IN_DOLLAR");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::SpendInMicroDollar:
		return TEXT("SPEND_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalCheckout:
		return TEXT("TOTAL_CHECKOUT");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalCheckoutValueInMicroDollar:
		return TEXT("TOTAL_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalClickthrough:
		return TEXT("TOTAL_CLICKTHROUGH");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalClickCheckout:
		return TEXT("TOTAL_CLICK_CHECKOUT");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalClickCheckoutValueInMicroDollar:
		return TEXT("TOTAL_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalClickLead:
		return TEXT("TOTAL_CLICK_LEAD");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalClickSignup:
		return TEXT("TOTAL_CLICK_SIGNUP");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalClickSignupValueInMicroDollar:
		return TEXT("TOTAL_CLICK_SIGNUP_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalConversions:
		return TEXT("TOTAL_CONVERSIONS");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalCustom:
		return TEXT("TOTAL_CUSTOM");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalEngagement:
		return TEXT("TOTAL_ENGAGEMENT");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalEngagementCheckout:
		return TEXT("TOTAL_ENGAGEMENT_CHECKOUT");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalEngagementCheckoutValueInMicroDollar:
		return TEXT("TOTAL_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalEngagementLead:
		return TEXT("TOTAL_ENGAGEMENT_LEAD");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalEngagementSignup:
		return TEXT("TOTAL_ENGAGEMENT_SIGNUP");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalEngagementSignupValueInMicroDollar:
		return TEXT("TOTAL_ENGAGEMENT_SIGNUP_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalIdeaPinProductTagVisit:
		return TEXT("TOTAL_IDEA_PIN_PRODUCT_TAG_VISIT");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalImpressionFrequency:
		return TEXT("TOTAL_IMPRESSION_FREQUENCY");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalImpressionUser:
		return TEXT("TOTAL_IMPRESSION_USER");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalLead:
		return TEXT("TOTAL_LEAD");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalPageVisit:
		return TEXT("TOTAL_PAGE_VISIT");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalRepinRate:
		return TEXT("TOTAL_REPIN_RATE");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalSignup:
		return TEXT("TOTAL_SIGNUP");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalSignupValueInMicroDollar:
		return TEXT("TOTAL_SIGNUP_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TOTALVIDEO3SECVIEWS:
		return TEXT("TOTAL_VIDEO_3SEC_VIEWS");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalVideoAvgWatchtimeInSecond:
		return TEXT("TOTAL_VIDEO_AVG_WATCHTIME_IN_SECOND");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalVideoMrcViews:
		return TEXT("TOTAL_VIDEO_MRC_VIEWS");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TOTALVIDEOP0COMBINED:
		return TEXT("TOTAL_VIDEO_P0_COMBINED");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TOTALVIDEOP100COMPLETE:
		return TEXT("TOTAL_VIDEO_P100_COMPLETE");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TOTALVIDEOP25COMBINED:
		return TEXT("TOTAL_VIDEO_P25_COMBINED");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TOTALVIDEOP50COMBINED:
		return TEXT("TOTAL_VIDEO_P50_COMBINED");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TOTALVIDEOP75COMBINED:
		return TEXT("TOTAL_VIDEO_P75_COMBINED");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TOTALVIDEOP95COMBINED:
		return TEXT("TOTAL_VIDEO_P95_COMBINED");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalViewCheckout:
		return TEXT("TOTAL_VIEW_CHECKOUT");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalViewCheckoutValueInMicroDollar:
		return TEXT("TOTAL_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalViewLead:
		return TEXT("TOTAL_VIEW_LEAD");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalViewSignup:
		return TEXT("TOTAL_VIEW_SIGNUP");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalViewSignupValueInMicroDollar:
		return TEXT("TOTAL_VIEW_SIGNUP_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalWebCheckout:
		return TEXT("TOTAL_WEB_CHECKOUT");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalWebCheckoutValueInMicroDollar:
		return TEXT("TOTAL_WEB_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalWebClickCheckout:
		return TEXT("TOTAL_WEB_CLICK_CHECKOUT");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalWebClickCheckoutValueInMicroDollar:
		return TEXT("TOTAL_WEB_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalWebEngagementCheckout:
		return TEXT("TOTAL_WEB_ENGAGEMENT_CHECKOUT");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalWebEngagementCheckoutValueInMicroDollar:
		return TEXT("TOTAL_WEB_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalWebViewCheckout:
		return TEXT("TOTAL_WEB_VIEW_CHECKOUT");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalWebViewCheckoutValueInMicroDollar:
		return TEXT("TOTAL_WEB_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::VIDEO3SECVIEWS2:
		return TEXT("VIDEO_3SEC_VIEWS_2");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::VideoLength:
		return TEXT("VIDEO_LENGTH");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::VIDEOMRCVIEWS2:
		return TEXT("VIDEO_MRC_VIEWS_2");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::VIDEOP0COMBINED2:
		return TEXT("VIDEO_P0_COMBINED_2");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::VIDEOP100COMPLETE2:
		return TEXT("VIDEO_P100_COMPLETE_2");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::VIDEOP25COMBINED2:
		return TEXT("VIDEO_P25_COMBINED_2");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::VIDEOP50COMBINED2:
		return TEXT("VIDEO_P50_COMBINED_2");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::VIDEOP75COMBINED2:
		return TEXT("VIDEO_P75_COMBINED_2");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::VIDEOP95COMBINED2:
		return TEXT("VIDEO_P95_COMBINED_2");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::WebCheckoutCostPerAction:
		return TEXT("WEB_CHECKOUT_COST_PER_ACTION");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::WebCheckoutRoas:
		return TEXT("WEB_CHECKOUT_ROAS");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::EnumToString(const OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum& Value)
{
	static TMap<FString, OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum> StringToEnum = { 
		{ TEXT("AD_ACCOUNT_ID"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::AdAccountId },
		{ TEXT("AD_GROUP_ENTITY_STATUS"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::AdGroupEntityStatus },
		{ TEXT("AD_GROUP_ID"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::AdGroupId },
		{ TEXT("AD_ID"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::AdId },
		{ TEXT("CAMPAIGN_DAILY_SPEND_CAP"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::CampaignDailySpendCap },
		{ TEXT("CAMPAIGN_ENTITY_STATUS"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::CampaignEntityStatus },
		{ TEXT("CAMPAIGN_ID"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::CampaignId },
		{ TEXT("CAMPAIGN_LIFETIME_SPEND_CAP"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::CampaignLifetimeSpendCap },
		{ TEXT("CAMPAIGN_NAME"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::CampaignName },
		{ TEXT("CHECKOUT_ROAS"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::CheckoutRoas },
		{ TEXT("CLICKTHROUGH_1"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::CLICKTHROUGH1 },
		{ TEXT("CLICKTHROUGH_1_GROSS"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::CLICKTHROUGH1GROSS },
		{ TEXT("CLICKTHROUGH_2"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::CLICKTHROUGH2 },
		{ TEXT("CPC_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::CpcInMicroDollar },
		{ TEXT("CPM_IN_DOLLAR"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::CpmInDollar },
		{ TEXT("CPM_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::CpmInMicroDollar },
		{ TEXT("CTR"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::Ctr },
		{ TEXT("CTR_2"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::CTR2 },
		{ TEXT("ECPCV_IN_DOLLAR"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::EcpcvInDollar },
		{ TEXT("ECPCV_P95_IN_DOLLAR"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::ECPCVP95INDOLLAR },
		{ TEXT("ECPC_IN_DOLLAR"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::EcpcInDollar },
		{ TEXT("ECPC_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::EcpcInMicroDollar },
		{ TEXT("ECPE_IN_DOLLAR"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::EcpeInDollar },
		{ TEXT("ECPM_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::EcpmInMicroDollar },
		{ TEXT("ECPV_IN_DOLLAR"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::EcpvInDollar },
		{ TEXT("ECTR"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::Ectr },
		{ TEXT("EENGAGEMENT_RATE"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::EengagementRate },
		{ TEXT("ENGAGEMENT_1"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::ENGAGEMENT1 },
		{ TEXT("ENGAGEMENT_2"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::ENGAGEMENT2 },
		{ TEXT("ENGAGEMENT_RATE"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::EngagementRate },
		{ TEXT("IDEA_PIN_PRODUCT_TAG_VISIT_1"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::IDEAPINPRODUCTTAGVISIT1 },
		{ TEXT("IDEA_PIN_PRODUCT_TAG_VISIT_2"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::IDEAPINPRODUCTTAGVISIT2 },
		{ TEXT("IMPRESSION_1"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::IMPRESSION1 },
		{ TEXT("IMPRESSION_1_GROSS"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::IMPRESSION1GROSS },
		{ TEXT("IMPRESSION_2"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::IMPRESSION2 },
		{ TEXT("INAPP_CHECKOUT_COST_PER_ACTION"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::InappCheckoutCostPerAction },
		{ TEXT("OUTBOUND_CLICK_1"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::OUTBOUNDCLICK1 },
		{ TEXT("OUTBOUND_CLICK_2"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::OUTBOUNDCLICK2 },
		{ TEXT("PAGE_VISIT_COST_PER_ACTION"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::PageVisitCostPerAction },
		{ TEXT("PAGE_VISIT_ROAS"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::PageVisitRoas },
		{ TEXT("PAID_IMPRESSION"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::PaidImpression },
		{ TEXT("PIN_ID"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::PinId },
		{ TEXT("REPIN_1"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::REPIN1 },
		{ TEXT("REPIN_2"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::REPIN2 },
		{ TEXT("REPIN_RATE"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::RepinRate },
		{ TEXT("SPEND_IN_DOLLAR"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::SpendInDollar },
		{ TEXT("SPEND_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::SpendInMicroDollar },
		{ TEXT("TOTAL_CHECKOUT"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalCheckout },
		{ TEXT("TOTAL_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_CLICKTHROUGH"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalClickthrough },
		{ TEXT("TOTAL_CLICK_CHECKOUT"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalClickCheckout },
		{ TEXT("TOTAL_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalClickCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_CLICK_LEAD"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalClickLead },
		{ TEXT("TOTAL_CLICK_SIGNUP"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalClickSignup },
		{ TEXT("TOTAL_CLICK_SIGNUP_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalClickSignupValueInMicroDollar },
		{ TEXT("TOTAL_CONVERSIONS"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalConversions },
		{ TEXT("TOTAL_CUSTOM"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalCustom },
		{ TEXT("TOTAL_ENGAGEMENT"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalEngagement },
		{ TEXT("TOTAL_ENGAGEMENT_CHECKOUT"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalEngagementCheckout },
		{ TEXT("TOTAL_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalEngagementCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_ENGAGEMENT_LEAD"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalEngagementLead },
		{ TEXT("TOTAL_ENGAGEMENT_SIGNUP"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalEngagementSignup },
		{ TEXT("TOTAL_ENGAGEMENT_SIGNUP_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalEngagementSignupValueInMicroDollar },
		{ TEXT("TOTAL_IDEA_PIN_PRODUCT_TAG_VISIT"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalIdeaPinProductTagVisit },
		{ TEXT("TOTAL_IMPRESSION_FREQUENCY"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalImpressionFrequency },
		{ TEXT("TOTAL_IMPRESSION_USER"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalImpressionUser },
		{ TEXT("TOTAL_LEAD"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalLead },
		{ TEXT("TOTAL_PAGE_VISIT"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalPageVisit },
		{ TEXT("TOTAL_REPIN_RATE"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalRepinRate },
		{ TEXT("TOTAL_SIGNUP"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalSignup },
		{ TEXT("TOTAL_SIGNUP_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalSignupValueInMicroDollar },
		{ TEXT("TOTAL_VIDEO_3SEC_VIEWS"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TOTALVIDEO3SECVIEWS },
		{ TEXT("TOTAL_VIDEO_AVG_WATCHTIME_IN_SECOND"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalVideoAvgWatchtimeInSecond },
		{ TEXT("TOTAL_VIDEO_MRC_VIEWS"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalVideoMrcViews },
		{ TEXT("TOTAL_VIDEO_P0_COMBINED"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TOTALVIDEOP0COMBINED },
		{ TEXT("TOTAL_VIDEO_P100_COMPLETE"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TOTALVIDEOP100COMPLETE },
		{ TEXT("TOTAL_VIDEO_P25_COMBINED"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TOTALVIDEOP25COMBINED },
		{ TEXT("TOTAL_VIDEO_P50_COMBINED"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TOTALVIDEOP50COMBINED },
		{ TEXT("TOTAL_VIDEO_P75_COMBINED"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TOTALVIDEOP75COMBINED },
		{ TEXT("TOTAL_VIDEO_P95_COMBINED"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TOTALVIDEOP95COMBINED },
		{ TEXT("TOTAL_VIEW_CHECKOUT"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalViewCheckout },
		{ TEXT("TOTAL_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalViewCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_VIEW_LEAD"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalViewLead },
		{ TEXT("TOTAL_VIEW_SIGNUP"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalViewSignup },
		{ TEXT("TOTAL_VIEW_SIGNUP_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalViewSignupValueInMicroDollar },
		{ TEXT("TOTAL_WEB_CHECKOUT"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalWebCheckout },
		{ TEXT("TOTAL_WEB_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalWebCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_WEB_CLICK_CHECKOUT"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalWebClickCheckout },
		{ TEXT("TOTAL_WEB_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalWebClickCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_WEB_ENGAGEMENT_CHECKOUT"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalWebEngagementCheckout },
		{ TEXT("TOTAL_WEB_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalWebEngagementCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_WEB_VIEW_CHECKOUT"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalWebViewCheckout },
		{ TEXT("TOTAL_WEB_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::TotalWebViewCheckoutValueInMicroDollar },
		{ TEXT("VIDEO_3SEC_VIEWS_2"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::VIDEO3SECVIEWS2 },
		{ TEXT("VIDEO_LENGTH"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::VideoLength },
		{ TEXT("VIDEO_MRC_VIEWS_2"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::VIDEOMRCVIEWS2 },
		{ TEXT("VIDEO_P0_COMBINED_2"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::VIDEOP0COMBINED2 },
		{ TEXT("VIDEO_P100_COMPLETE_2"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::VIDEOP100COMPLETE2 },
		{ TEXT("VIDEO_P25_COMBINED_2"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::VIDEOP25COMBINED2 },
		{ TEXT("VIDEO_P50_COMBINED_2"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::VIDEOP50COMBINED2 },
		{ TEXT("VIDEO_P75_COMBINED_2"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::VIDEOP75COMBINED2 },
		{ TEXT("VIDEO_P95_COMBINED_2"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::VIDEOP95COMBINED2 },
		{ TEXT("WEB_CHECKOUT_COST_PER_ACTION"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::WebCheckoutCostPerAction },
		{ TEXT("WEB_CHECKOUT_ROAS"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum::WebCheckoutRoas }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::EnumFromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline FStringFormatArg ToStringFormatArg(const OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum& Value)
{
	return FStringFormatArg(ToString(Value));
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ColumnsEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

inline FString ToString(const OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ClickWindowDaysEnum& Value)
{
	switch (Value)
	{
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ClickWindowDaysEnum::_1:
		return TEXT("1");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ClickWindowDaysEnum::_7:
		return TEXT("7");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ClickWindowDaysEnum::_30:
		return TEXT("30");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ClickWindowDaysEnum::_60:
		return TEXT("60");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ClickWindowDaysEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::EnumToString(const OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ClickWindowDaysEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ClickWindowDaysEnum& Value)
{
	static TMap<FString, OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ClickWindowDaysEnum> StringToEnum = { 
		{ TEXT("1"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ClickWindowDaysEnum::_1 },
		{ TEXT("7"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ClickWindowDaysEnum::_7 },
		{ TEXT("30"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ClickWindowDaysEnum::_30 },
		{ TEXT("60"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ClickWindowDaysEnum::_60 }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::EnumFromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ClickWindowDaysEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline FStringFormatArg ToStringFormatArg(const OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ClickWindowDaysEnum& Value)
{
	return FStringFormatArg(ToString(Value));
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ClickWindowDaysEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ClickWindowDaysEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

inline FString ToString(const OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::EngagementWindowDaysEnum& Value)
{
	switch (Value)
	{
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::EngagementWindowDaysEnum::_1:
		return TEXT("1");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::EngagementWindowDaysEnum::_7:
		return TEXT("7");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::EngagementWindowDaysEnum::_30:
		return TEXT("30");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::EngagementWindowDaysEnum::_60:
		return TEXT("60");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::EngagementWindowDaysEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::EnumToString(const OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::EngagementWindowDaysEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::EngagementWindowDaysEnum& Value)
{
	static TMap<FString, OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::EngagementWindowDaysEnum> StringToEnum = { 
		{ TEXT("1"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::EngagementWindowDaysEnum::_1 },
		{ TEXT("7"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::EngagementWindowDaysEnum::_7 },
		{ TEXT("30"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::EngagementWindowDaysEnum::_30 },
		{ TEXT("60"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::EngagementWindowDaysEnum::_60 }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::EnumFromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::EngagementWindowDaysEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline FStringFormatArg ToStringFormatArg(const OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::EngagementWindowDaysEnum& Value)
{
	return FStringFormatArg(ToString(Value));
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::EngagementWindowDaysEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::EngagementWindowDaysEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

inline FString ToString(const OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ViewWindowDaysEnum& Value)
{
	switch (Value)
	{
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ViewWindowDaysEnum::_1:
		return TEXT("1");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ViewWindowDaysEnum::_7:
		return TEXT("7");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ViewWindowDaysEnum::_30:
		return TEXT("30");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ViewWindowDaysEnum::_60:
		return TEXT("60");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ViewWindowDaysEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::EnumToString(const OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ViewWindowDaysEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ViewWindowDaysEnum& Value)
{
	static TMap<FString, OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ViewWindowDaysEnum> StringToEnum = { 
		{ TEXT("1"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ViewWindowDaysEnum::_1 },
		{ TEXT("7"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ViewWindowDaysEnum::_7 },
		{ TEXT("30"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ViewWindowDaysEnum::_30 },
		{ TEXT("60"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ViewWindowDaysEnum::_60 }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::EnumFromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ViewWindowDaysEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline FStringFormatArg ToStringFormatArg(const OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ViewWindowDaysEnum& Value)
{
	return FStringFormatArg(ToString(Value));
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ViewWindowDaysEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ViewWindowDaysEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

inline FString ToString(const OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ConversionReportTimeEnum& Value)
{
	switch (Value)
	{
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ConversionReportTimeEnum::AdAction:
		return TEXT("TIME_OF_AD_ACTION");
	case OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ConversionReportTimeEnum::Conversion:
		return TEXT("TIME_OF_CONVERSION");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ConversionReportTimeEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::EnumToString(const OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ConversionReportTimeEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ConversionReportTimeEnum& Value)
{
	static TMap<FString, OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ConversionReportTimeEnum> StringToEnum = { 
		{ TEXT("TIME_OF_AD_ACTION"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ConversionReportTimeEnum::AdAction },
		{ TEXT("TIME_OF_CONVERSION"), OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ConversionReportTimeEnum::Conversion }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::EnumFromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ConversionReportTimeEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline FStringFormatArg ToStringFormatArg(const OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ConversionReportTimeEnum& Value)
{
	return FStringFormatArg(ToString(Value));
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ConversionReportTimeEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ConversionReportTimeEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

FString OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::ComputePath() const
{
	TMap<FString, FStringFormatArg> PathParams = { 
	{ TEXT("ad_account_id"), ToStringFormatArg(AdAccountId) } };

	FString Path = FString::Format(TEXT("/ad_accounts/{ad_account_id}/analytics"), PathParams);

	TArray<FString> QueryParams;
	QueryParams.Add(FString(TEXT("start_date=")) + ToUrlString(StartDate));
	QueryParams.Add(FString(TEXT("end_date=")) + ToUrlString(EndDate));
	QueryParams.Add(FString(TEXT("columns=")) + CollectionToUrlString_csv(Columns, TEXT("columns")));
	QueryParams.Add(FString(TEXT("granularity=")) + ToUrlString(Granularity));
	if(ClickWindowDays.IsSet())
	{
		QueryParams.Add(FString(TEXT("click_window_days=")) + ToUrlString(ClickWindowDays.GetValue()));
	}
	if(EngagementWindowDays.IsSet())
	{
		QueryParams.Add(FString(TEXT("engagement_window_days=")) + ToUrlString(EngagementWindowDays.GetValue()));
	}
	if(ViewWindowDays.IsSet())
	{
		QueryParams.Add(FString(TEXT("view_window_days=")) + ToUrlString(ViewWindowDays.GetValue()));
	}
	if(ConversionReportTime.IsSet())
	{
		QueryParams.Add(FString(TEXT("conversion_report_time=")) + ToUrlString(ConversionReportTime.GetValue()));
	}
	Path += TCHAR('?');
	Path += FString::Join(QueryParams, TEXT("&"));

	return Path;
}

void OpenAPIAdAccountsApi::AdAccountAnalyticsRequest::SetupHttpRequest(const FHttpRequestRef& HttpRequest) const
{
	static const TArray<FString> Consumes = {  };
	//static const TArray<FString> Produces = { TEXT("application/json") };

	HttpRequest->SetVerb(TEXT("GET"));

	// Default to Json Body request
	if (Consumes.Num() == 0 || Consumes.Contains(TEXT("application/json")))
	{
		// Form parameters
		FString JsonBody;
		JsonWriter Writer = TJsonWriterFactory<>::Create(&JsonBody);
		Writer->WriteObjectStart();
		Writer->WriteObjectEnd();
		Writer->Close();
		HttpRequest->SetHeader(TEXT("Content-Type"), TEXT("application/json; charset=utf-8"));
		HttpRequest->SetContentAsString(JsonBody);
	}
	else if (Consumes.Contains(TEXT("multipart/form-data")))
	{
	}
	else if (Consumes.Contains(TEXT("application/x-www-form-urlencoded")))
	{
	}
	else
	{
		UE_LOG(LogOpenAPI, Error, TEXT("Request ContentType not supported (%s)"), *FString::Join(Consumes, TEXT(",")));
	}
}

void OpenAPIAdAccountsApi::AdAccountAnalyticsResponse::SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode)
{
	Response::SetHttpResponseCode(InHttpResponseCode);
	switch ((int)InHttpResponseCode)
	{
	case 200:
		SetResponseString(TEXT("Success"));
		break;
	case 400:
		SetResponseString(TEXT("Invalid ad account analytics parameters."));
		break;
	case 0:
	default:
		SetResponseString(TEXT("Unexpected error"));
		break;
	}
}

bool OpenAPIAdAccountsApi::AdAccountAnalyticsResponse::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	return TryGetJsonValue(JsonValue, Content);
}

FString OpenAPIAdAccountsApi::AdAccountsListRequest::ComputePath() const
{
	FString Path(TEXT("/ad_accounts"));
	TArray<FString> QueryParams;
	if(Bookmark.IsSet())
	{
		QueryParams.Add(FString(TEXT("bookmark=")) + ToUrlString(Bookmark.GetValue()));
	}
	if(PageSize.IsSet())
	{
		QueryParams.Add(FString(TEXT("page_size=")) + ToUrlString(PageSize.GetValue()));
	}
	if(IncludeSharedAccounts.IsSet())
	{
		QueryParams.Add(FString(TEXT("include_shared_accounts=")) + ToUrlString(IncludeSharedAccounts.GetValue()));
	}
	Path += TCHAR('?');
	Path += FString::Join(QueryParams, TEXT("&"));

	return Path;
}

void OpenAPIAdAccountsApi::AdAccountsListRequest::SetupHttpRequest(const FHttpRequestRef& HttpRequest) const
{
	static const TArray<FString> Consumes = {  };
	//static const TArray<FString> Produces = { TEXT("application/json") };

	HttpRequest->SetVerb(TEXT("GET"));

	// Default to Json Body request
	if (Consumes.Num() == 0 || Consumes.Contains(TEXT("application/json")))
	{
		// Form parameters
		FString JsonBody;
		JsonWriter Writer = TJsonWriterFactory<>::Create(&JsonBody);
		Writer->WriteObjectStart();
		Writer->WriteObjectEnd();
		Writer->Close();
		HttpRequest->SetHeader(TEXT("Content-Type"), TEXT("application/json; charset=utf-8"));
		HttpRequest->SetContentAsString(JsonBody);
	}
	else if (Consumes.Contains(TEXT("multipart/form-data")))
	{
	}
	else if (Consumes.Contains(TEXT("application/x-www-form-urlencoded")))
	{
	}
	else
	{
		UE_LOG(LogOpenAPI, Error, TEXT("Request ContentType not supported (%s)"), *FString::Join(Consumes, TEXT(",")));
	}
}

void OpenAPIAdAccountsApi::AdAccountsListResponse::SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode)
{
	Response::SetHttpResponseCode(InHttpResponseCode);
	switch ((int)InHttpResponseCode)
	{
	case 200:
		SetResponseString(TEXT("response"));
		break;
	case 0:
	default:
		SetResponseString(TEXT("Unexpected error"));
		break;
	}
}

bool OpenAPIAdAccountsApi::AdAccountsListResponse::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	return TryGetJsonValue(JsonValue, Content);
}

inline FString ToString(const OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum& Value)
{
	switch (Value)
	{
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::AdAccountId:
		return TEXT("AD_ACCOUNT_ID");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::AdGroupEntityStatus:
		return TEXT("AD_GROUP_ENTITY_STATUS");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::AdGroupId:
		return TEXT("AD_GROUP_ID");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::AdId:
		return TEXT("AD_ID");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::CampaignDailySpendCap:
		return TEXT("CAMPAIGN_DAILY_SPEND_CAP");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::CampaignEntityStatus:
		return TEXT("CAMPAIGN_ENTITY_STATUS");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::CampaignId:
		return TEXT("CAMPAIGN_ID");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::CampaignLifetimeSpendCap:
		return TEXT("CAMPAIGN_LIFETIME_SPEND_CAP");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::CampaignName:
		return TEXT("CAMPAIGN_NAME");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::CheckoutRoas:
		return TEXT("CHECKOUT_ROAS");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::CLICKTHROUGH1:
		return TEXT("CLICKTHROUGH_1");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::CLICKTHROUGH1GROSS:
		return TEXT("CLICKTHROUGH_1_GROSS");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::CLICKTHROUGH2:
		return TEXT("CLICKTHROUGH_2");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::CpcInMicroDollar:
		return TEXT("CPC_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::CpmInDollar:
		return TEXT("CPM_IN_DOLLAR");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::CpmInMicroDollar:
		return TEXT("CPM_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::Ctr:
		return TEXT("CTR");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::CTR2:
		return TEXT("CTR_2");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::EcpcvInDollar:
		return TEXT("ECPCV_IN_DOLLAR");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::ECPCVP95INDOLLAR:
		return TEXT("ECPCV_P95_IN_DOLLAR");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::EcpcInDollar:
		return TEXT("ECPC_IN_DOLLAR");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::EcpcInMicroDollar:
		return TEXT("ECPC_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::EcpeInDollar:
		return TEXT("ECPE_IN_DOLLAR");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::EcpmInMicroDollar:
		return TEXT("ECPM_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::EcpvInDollar:
		return TEXT("ECPV_IN_DOLLAR");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::Ectr:
		return TEXT("ECTR");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::EengagementRate:
		return TEXT("EENGAGEMENT_RATE");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::ENGAGEMENT1:
		return TEXT("ENGAGEMENT_1");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::ENGAGEMENT2:
		return TEXT("ENGAGEMENT_2");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::EngagementRate:
		return TEXT("ENGAGEMENT_RATE");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::IDEAPINPRODUCTTAGVISIT1:
		return TEXT("IDEA_PIN_PRODUCT_TAG_VISIT_1");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::IDEAPINPRODUCTTAGVISIT2:
		return TEXT("IDEA_PIN_PRODUCT_TAG_VISIT_2");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::IMPRESSION1:
		return TEXT("IMPRESSION_1");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::IMPRESSION1GROSS:
		return TEXT("IMPRESSION_1_GROSS");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::IMPRESSION2:
		return TEXT("IMPRESSION_2");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::InappCheckoutCostPerAction:
		return TEXT("INAPP_CHECKOUT_COST_PER_ACTION");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::OUTBOUNDCLICK1:
		return TEXT("OUTBOUND_CLICK_1");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::OUTBOUNDCLICK2:
		return TEXT("OUTBOUND_CLICK_2");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::PageVisitCostPerAction:
		return TEXT("PAGE_VISIT_COST_PER_ACTION");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::PageVisitRoas:
		return TEXT("PAGE_VISIT_ROAS");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::PaidImpression:
		return TEXT("PAID_IMPRESSION");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::PinId:
		return TEXT("PIN_ID");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::REPIN1:
		return TEXT("REPIN_1");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::REPIN2:
		return TEXT("REPIN_2");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::RepinRate:
		return TEXT("REPIN_RATE");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::SpendInDollar:
		return TEXT("SPEND_IN_DOLLAR");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::SpendInMicroDollar:
		return TEXT("SPEND_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalCheckout:
		return TEXT("TOTAL_CHECKOUT");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalCheckoutValueInMicroDollar:
		return TEXT("TOTAL_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalClickthrough:
		return TEXT("TOTAL_CLICKTHROUGH");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalClickCheckout:
		return TEXT("TOTAL_CLICK_CHECKOUT");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalClickCheckoutValueInMicroDollar:
		return TEXT("TOTAL_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalClickLead:
		return TEXT("TOTAL_CLICK_LEAD");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalClickSignup:
		return TEXT("TOTAL_CLICK_SIGNUP");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalClickSignupValueInMicroDollar:
		return TEXT("TOTAL_CLICK_SIGNUP_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalConversions:
		return TEXT("TOTAL_CONVERSIONS");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalCustom:
		return TEXT("TOTAL_CUSTOM");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalEngagement:
		return TEXT("TOTAL_ENGAGEMENT");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalEngagementCheckout:
		return TEXT("TOTAL_ENGAGEMENT_CHECKOUT");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalEngagementCheckoutValueInMicroDollar:
		return TEXT("TOTAL_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalEngagementLead:
		return TEXT("TOTAL_ENGAGEMENT_LEAD");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalEngagementSignup:
		return TEXT("TOTAL_ENGAGEMENT_SIGNUP");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalEngagementSignupValueInMicroDollar:
		return TEXT("TOTAL_ENGAGEMENT_SIGNUP_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalIdeaPinProductTagVisit:
		return TEXT("TOTAL_IDEA_PIN_PRODUCT_TAG_VISIT");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalImpressionFrequency:
		return TEXT("TOTAL_IMPRESSION_FREQUENCY");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalImpressionUser:
		return TEXT("TOTAL_IMPRESSION_USER");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalLead:
		return TEXT("TOTAL_LEAD");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalPageVisit:
		return TEXT("TOTAL_PAGE_VISIT");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalRepinRate:
		return TEXT("TOTAL_REPIN_RATE");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalSignup:
		return TEXT("TOTAL_SIGNUP");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalSignupValueInMicroDollar:
		return TEXT("TOTAL_SIGNUP_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TOTALVIDEO3SECVIEWS:
		return TEXT("TOTAL_VIDEO_3SEC_VIEWS");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalVideoAvgWatchtimeInSecond:
		return TEXT("TOTAL_VIDEO_AVG_WATCHTIME_IN_SECOND");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalVideoMrcViews:
		return TEXT("TOTAL_VIDEO_MRC_VIEWS");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP0COMBINED:
		return TEXT("TOTAL_VIDEO_P0_COMBINED");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP100COMPLETE:
		return TEXT("TOTAL_VIDEO_P100_COMPLETE");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP25COMBINED:
		return TEXT("TOTAL_VIDEO_P25_COMBINED");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP50COMBINED:
		return TEXT("TOTAL_VIDEO_P50_COMBINED");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP75COMBINED:
		return TEXT("TOTAL_VIDEO_P75_COMBINED");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP95COMBINED:
		return TEXT("TOTAL_VIDEO_P95_COMBINED");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalViewCheckout:
		return TEXT("TOTAL_VIEW_CHECKOUT");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalViewCheckoutValueInMicroDollar:
		return TEXT("TOTAL_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalViewLead:
		return TEXT("TOTAL_VIEW_LEAD");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalViewSignup:
		return TEXT("TOTAL_VIEW_SIGNUP");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalViewSignupValueInMicroDollar:
		return TEXT("TOTAL_VIEW_SIGNUP_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalWebCheckout:
		return TEXT("TOTAL_WEB_CHECKOUT");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalWebCheckoutValueInMicroDollar:
		return TEXT("TOTAL_WEB_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalWebClickCheckout:
		return TEXT("TOTAL_WEB_CLICK_CHECKOUT");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalWebClickCheckoutValueInMicroDollar:
		return TEXT("TOTAL_WEB_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalWebEngagementCheckout:
		return TEXT("TOTAL_WEB_ENGAGEMENT_CHECKOUT");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalWebEngagementCheckoutValueInMicroDollar:
		return TEXT("TOTAL_WEB_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalWebViewCheckout:
		return TEXT("TOTAL_WEB_VIEW_CHECKOUT");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalWebViewCheckoutValueInMicroDollar:
		return TEXT("TOTAL_WEB_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::VIDEO3SECVIEWS2:
		return TEXT("VIDEO_3SEC_VIEWS_2");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::VideoLength:
		return TEXT("VIDEO_LENGTH");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::VIDEOMRCVIEWS2:
		return TEXT("VIDEO_MRC_VIEWS_2");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::VIDEOP0COMBINED2:
		return TEXT("VIDEO_P0_COMBINED_2");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::VIDEOP100COMPLETE2:
		return TEXT("VIDEO_P100_COMPLETE_2");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::VIDEOP25COMBINED2:
		return TEXT("VIDEO_P25_COMBINED_2");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::VIDEOP50COMBINED2:
		return TEXT("VIDEO_P50_COMBINED_2");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::VIDEOP75COMBINED2:
		return TEXT("VIDEO_P75_COMBINED_2");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::VIDEOP95COMBINED2:
		return TEXT("VIDEO_P95_COMBINED_2");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::WebCheckoutCostPerAction:
		return TEXT("WEB_CHECKOUT_COST_PER_ACTION");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::WebCheckoutRoas:
		return TEXT("WEB_CHECKOUT_ROAS");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::EnumToString(const OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum& Value)
{
	static TMap<FString, OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum> StringToEnum = { 
		{ TEXT("AD_ACCOUNT_ID"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::AdAccountId },
		{ TEXT("AD_GROUP_ENTITY_STATUS"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::AdGroupEntityStatus },
		{ TEXT("AD_GROUP_ID"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::AdGroupId },
		{ TEXT("AD_ID"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::AdId },
		{ TEXT("CAMPAIGN_DAILY_SPEND_CAP"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::CampaignDailySpendCap },
		{ TEXT("CAMPAIGN_ENTITY_STATUS"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::CampaignEntityStatus },
		{ TEXT("CAMPAIGN_ID"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::CampaignId },
		{ TEXT("CAMPAIGN_LIFETIME_SPEND_CAP"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::CampaignLifetimeSpendCap },
		{ TEXT("CAMPAIGN_NAME"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::CampaignName },
		{ TEXT("CHECKOUT_ROAS"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::CheckoutRoas },
		{ TEXT("CLICKTHROUGH_1"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::CLICKTHROUGH1 },
		{ TEXT("CLICKTHROUGH_1_GROSS"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::CLICKTHROUGH1GROSS },
		{ TEXT("CLICKTHROUGH_2"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::CLICKTHROUGH2 },
		{ TEXT("CPC_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::CpcInMicroDollar },
		{ TEXT("CPM_IN_DOLLAR"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::CpmInDollar },
		{ TEXT("CPM_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::CpmInMicroDollar },
		{ TEXT("CTR"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::Ctr },
		{ TEXT("CTR_2"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::CTR2 },
		{ TEXT("ECPCV_IN_DOLLAR"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::EcpcvInDollar },
		{ TEXT("ECPCV_P95_IN_DOLLAR"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::ECPCVP95INDOLLAR },
		{ TEXT("ECPC_IN_DOLLAR"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::EcpcInDollar },
		{ TEXT("ECPC_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::EcpcInMicroDollar },
		{ TEXT("ECPE_IN_DOLLAR"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::EcpeInDollar },
		{ TEXT("ECPM_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::EcpmInMicroDollar },
		{ TEXT("ECPV_IN_DOLLAR"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::EcpvInDollar },
		{ TEXT("ECTR"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::Ectr },
		{ TEXT("EENGAGEMENT_RATE"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::EengagementRate },
		{ TEXT("ENGAGEMENT_1"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::ENGAGEMENT1 },
		{ TEXT("ENGAGEMENT_2"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::ENGAGEMENT2 },
		{ TEXT("ENGAGEMENT_RATE"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::EngagementRate },
		{ TEXT("IDEA_PIN_PRODUCT_TAG_VISIT_1"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::IDEAPINPRODUCTTAGVISIT1 },
		{ TEXT("IDEA_PIN_PRODUCT_TAG_VISIT_2"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::IDEAPINPRODUCTTAGVISIT2 },
		{ TEXT("IMPRESSION_1"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::IMPRESSION1 },
		{ TEXT("IMPRESSION_1_GROSS"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::IMPRESSION1GROSS },
		{ TEXT("IMPRESSION_2"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::IMPRESSION2 },
		{ TEXT("INAPP_CHECKOUT_COST_PER_ACTION"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::InappCheckoutCostPerAction },
		{ TEXT("OUTBOUND_CLICK_1"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::OUTBOUNDCLICK1 },
		{ TEXT("OUTBOUND_CLICK_2"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::OUTBOUNDCLICK2 },
		{ TEXT("PAGE_VISIT_COST_PER_ACTION"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::PageVisitCostPerAction },
		{ TEXT("PAGE_VISIT_ROAS"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::PageVisitRoas },
		{ TEXT("PAID_IMPRESSION"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::PaidImpression },
		{ TEXT("PIN_ID"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::PinId },
		{ TEXT("REPIN_1"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::REPIN1 },
		{ TEXT("REPIN_2"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::REPIN2 },
		{ TEXT("REPIN_RATE"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::RepinRate },
		{ TEXT("SPEND_IN_DOLLAR"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::SpendInDollar },
		{ TEXT("SPEND_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::SpendInMicroDollar },
		{ TEXT("TOTAL_CHECKOUT"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalCheckout },
		{ TEXT("TOTAL_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_CLICKTHROUGH"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalClickthrough },
		{ TEXT("TOTAL_CLICK_CHECKOUT"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalClickCheckout },
		{ TEXT("TOTAL_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalClickCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_CLICK_LEAD"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalClickLead },
		{ TEXT("TOTAL_CLICK_SIGNUP"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalClickSignup },
		{ TEXT("TOTAL_CLICK_SIGNUP_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalClickSignupValueInMicroDollar },
		{ TEXT("TOTAL_CONVERSIONS"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalConversions },
		{ TEXT("TOTAL_CUSTOM"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalCustom },
		{ TEXT("TOTAL_ENGAGEMENT"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalEngagement },
		{ TEXT("TOTAL_ENGAGEMENT_CHECKOUT"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalEngagementCheckout },
		{ TEXT("TOTAL_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalEngagementCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_ENGAGEMENT_LEAD"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalEngagementLead },
		{ TEXT("TOTAL_ENGAGEMENT_SIGNUP"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalEngagementSignup },
		{ TEXT("TOTAL_ENGAGEMENT_SIGNUP_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalEngagementSignupValueInMicroDollar },
		{ TEXT("TOTAL_IDEA_PIN_PRODUCT_TAG_VISIT"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalIdeaPinProductTagVisit },
		{ TEXT("TOTAL_IMPRESSION_FREQUENCY"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalImpressionFrequency },
		{ TEXT("TOTAL_IMPRESSION_USER"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalImpressionUser },
		{ TEXT("TOTAL_LEAD"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalLead },
		{ TEXT("TOTAL_PAGE_VISIT"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalPageVisit },
		{ TEXT("TOTAL_REPIN_RATE"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalRepinRate },
		{ TEXT("TOTAL_SIGNUP"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalSignup },
		{ TEXT("TOTAL_SIGNUP_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalSignupValueInMicroDollar },
		{ TEXT("TOTAL_VIDEO_3SEC_VIEWS"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TOTALVIDEO3SECVIEWS },
		{ TEXT("TOTAL_VIDEO_AVG_WATCHTIME_IN_SECOND"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalVideoAvgWatchtimeInSecond },
		{ TEXT("TOTAL_VIDEO_MRC_VIEWS"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalVideoMrcViews },
		{ TEXT("TOTAL_VIDEO_P0_COMBINED"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP0COMBINED },
		{ TEXT("TOTAL_VIDEO_P100_COMPLETE"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP100COMPLETE },
		{ TEXT("TOTAL_VIDEO_P25_COMBINED"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP25COMBINED },
		{ TEXT("TOTAL_VIDEO_P50_COMBINED"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP50COMBINED },
		{ TEXT("TOTAL_VIDEO_P75_COMBINED"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP75COMBINED },
		{ TEXT("TOTAL_VIDEO_P95_COMBINED"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP95COMBINED },
		{ TEXT("TOTAL_VIEW_CHECKOUT"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalViewCheckout },
		{ TEXT("TOTAL_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalViewCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_VIEW_LEAD"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalViewLead },
		{ TEXT("TOTAL_VIEW_SIGNUP"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalViewSignup },
		{ TEXT("TOTAL_VIEW_SIGNUP_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalViewSignupValueInMicroDollar },
		{ TEXT("TOTAL_WEB_CHECKOUT"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalWebCheckout },
		{ TEXT("TOTAL_WEB_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalWebCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_WEB_CLICK_CHECKOUT"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalWebClickCheckout },
		{ TEXT("TOTAL_WEB_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalWebClickCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_WEB_ENGAGEMENT_CHECKOUT"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalWebEngagementCheckout },
		{ TEXT("TOTAL_WEB_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalWebEngagementCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_WEB_VIEW_CHECKOUT"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalWebViewCheckout },
		{ TEXT("TOTAL_WEB_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::TotalWebViewCheckoutValueInMicroDollar },
		{ TEXT("VIDEO_3SEC_VIEWS_2"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::VIDEO3SECVIEWS2 },
		{ TEXT("VIDEO_LENGTH"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::VideoLength },
		{ TEXT("VIDEO_MRC_VIEWS_2"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::VIDEOMRCVIEWS2 },
		{ TEXT("VIDEO_P0_COMBINED_2"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::VIDEOP0COMBINED2 },
		{ TEXT("VIDEO_P100_COMPLETE_2"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::VIDEOP100COMPLETE2 },
		{ TEXT("VIDEO_P25_COMBINED_2"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::VIDEOP25COMBINED2 },
		{ TEXT("VIDEO_P50_COMBINED_2"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::VIDEOP50COMBINED2 },
		{ TEXT("VIDEO_P75_COMBINED_2"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::VIDEOP75COMBINED2 },
		{ TEXT("VIDEO_P95_COMBINED_2"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::VIDEOP95COMBINED2 },
		{ TEXT("WEB_CHECKOUT_COST_PER_ACTION"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::WebCheckoutCostPerAction },
		{ TEXT("WEB_CHECKOUT_ROAS"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum::WebCheckoutRoas }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::EnumFromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline FStringFormatArg ToStringFormatArg(const OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum& Value)
{
	return FStringFormatArg(ToString(Value));
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ColumnsEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

inline FString ToString(const OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ClickWindowDaysEnum& Value)
{
	switch (Value)
	{
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ClickWindowDaysEnum::_1:
		return TEXT("1");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ClickWindowDaysEnum::_7:
		return TEXT("7");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ClickWindowDaysEnum::_30:
		return TEXT("30");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ClickWindowDaysEnum::_60:
		return TEXT("60");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ClickWindowDaysEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::EnumToString(const OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ClickWindowDaysEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ClickWindowDaysEnum& Value)
{
	static TMap<FString, OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ClickWindowDaysEnum> StringToEnum = { 
		{ TEXT("1"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ClickWindowDaysEnum::_1 },
		{ TEXT("7"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ClickWindowDaysEnum::_7 },
		{ TEXT("30"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ClickWindowDaysEnum::_30 },
		{ TEXT("60"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ClickWindowDaysEnum::_60 }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::EnumFromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ClickWindowDaysEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline FStringFormatArg ToStringFormatArg(const OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ClickWindowDaysEnum& Value)
{
	return FStringFormatArg(ToString(Value));
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ClickWindowDaysEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ClickWindowDaysEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

inline FString ToString(const OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::EngagementWindowDaysEnum& Value)
{
	switch (Value)
	{
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::EngagementWindowDaysEnum::_1:
		return TEXT("1");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::EngagementWindowDaysEnum::_7:
		return TEXT("7");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::EngagementWindowDaysEnum::_30:
		return TEXT("30");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::EngagementWindowDaysEnum::_60:
		return TEXT("60");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::EngagementWindowDaysEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::EnumToString(const OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::EngagementWindowDaysEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::EngagementWindowDaysEnum& Value)
{
	static TMap<FString, OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::EngagementWindowDaysEnum> StringToEnum = { 
		{ TEXT("1"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::EngagementWindowDaysEnum::_1 },
		{ TEXT("7"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::EngagementWindowDaysEnum::_7 },
		{ TEXT("30"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::EngagementWindowDaysEnum::_30 },
		{ TEXT("60"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::EngagementWindowDaysEnum::_60 }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::EnumFromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::EngagementWindowDaysEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline FStringFormatArg ToStringFormatArg(const OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::EngagementWindowDaysEnum& Value)
{
	return FStringFormatArg(ToString(Value));
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::EngagementWindowDaysEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::EngagementWindowDaysEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

inline FString ToString(const OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ViewWindowDaysEnum& Value)
{
	switch (Value)
	{
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ViewWindowDaysEnum::_1:
		return TEXT("1");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ViewWindowDaysEnum::_7:
		return TEXT("7");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ViewWindowDaysEnum::_30:
		return TEXT("30");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ViewWindowDaysEnum::_60:
		return TEXT("60");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ViewWindowDaysEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::EnumToString(const OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ViewWindowDaysEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ViewWindowDaysEnum& Value)
{
	static TMap<FString, OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ViewWindowDaysEnum> StringToEnum = { 
		{ TEXT("1"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ViewWindowDaysEnum::_1 },
		{ TEXT("7"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ViewWindowDaysEnum::_7 },
		{ TEXT("30"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ViewWindowDaysEnum::_30 },
		{ TEXT("60"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ViewWindowDaysEnum::_60 }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::EnumFromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ViewWindowDaysEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline FStringFormatArg ToStringFormatArg(const OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ViewWindowDaysEnum& Value)
{
	return FStringFormatArg(ToString(Value));
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ViewWindowDaysEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ViewWindowDaysEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

inline FString ToString(const OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ConversionReportTimeEnum& Value)
{
	switch (Value)
	{
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ConversionReportTimeEnum::AdAction:
		return TEXT("TIME_OF_AD_ACTION");
	case OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ConversionReportTimeEnum::Conversion:
		return TEXT("TIME_OF_CONVERSION");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ConversionReportTimeEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::EnumToString(const OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ConversionReportTimeEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ConversionReportTimeEnum& Value)
{
	static TMap<FString, OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ConversionReportTimeEnum> StringToEnum = { 
		{ TEXT("TIME_OF_AD_ACTION"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ConversionReportTimeEnum::AdAction },
		{ TEXT("TIME_OF_CONVERSION"), OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ConversionReportTimeEnum::Conversion }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::EnumFromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ConversionReportTimeEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline FStringFormatArg ToStringFormatArg(const OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ConversionReportTimeEnum& Value)
{
	return FStringFormatArg(ToString(Value));
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ConversionReportTimeEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ConversionReportTimeEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

FString OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::ComputePath() const
{
	TMap<FString, FStringFormatArg> PathParams = { 
	{ TEXT("ad_account_id"), ToStringFormatArg(AdAccountId) } };

	FString Path = FString::Format(TEXT("/ad_accounts/{ad_account_id}/ad_groups/analytics"), PathParams);

	TArray<FString> QueryParams;
	QueryParams.Add(FString(TEXT("start_date=")) + ToUrlString(StartDate));
	QueryParams.Add(FString(TEXT("end_date=")) + ToUrlString(EndDate));
	QueryParams.Add(FString(TEXT("ad_group_ids=")) + CollectionToUrlString_multi(AdGroupIds, TEXT("ad_group_ids")));
	QueryParams.Add(FString(TEXT("columns=")) + CollectionToUrlString_csv(Columns, TEXT("columns")));
	QueryParams.Add(FString(TEXT("granularity=")) + ToUrlString(Granularity));
	if(ClickWindowDays.IsSet())
	{
		QueryParams.Add(FString(TEXT("click_window_days=")) + ToUrlString(ClickWindowDays.GetValue()));
	}
	if(EngagementWindowDays.IsSet())
	{
		QueryParams.Add(FString(TEXT("engagement_window_days=")) + ToUrlString(EngagementWindowDays.GetValue()));
	}
	if(ViewWindowDays.IsSet())
	{
		QueryParams.Add(FString(TEXT("view_window_days=")) + ToUrlString(ViewWindowDays.GetValue()));
	}
	if(ConversionReportTime.IsSet())
	{
		QueryParams.Add(FString(TEXT("conversion_report_time=")) + ToUrlString(ConversionReportTime.GetValue()));
	}
	Path += TCHAR('?');
	Path += FString::Join(QueryParams, TEXT("&"));

	return Path;
}

void OpenAPIAdAccountsApi::AdGroupsAnalyticsRequest::SetupHttpRequest(const FHttpRequestRef& HttpRequest) const
{
	static const TArray<FString> Consumes = {  };
	//static const TArray<FString> Produces = { TEXT("application/json") };

	HttpRequest->SetVerb(TEXT("GET"));

	// Default to Json Body request
	if (Consumes.Num() == 0 || Consumes.Contains(TEXT("application/json")))
	{
		// Form parameters
		FString JsonBody;
		JsonWriter Writer = TJsonWriterFactory<>::Create(&JsonBody);
		Writer->WriteObjectStart();
		Writer->WriteObjectEnd();
		Writer->Close();
		HttpRequest->SetHeader(TEXT("Content-Type"), TEXT("application/json; charset=utf-8"));
		HttpRequest->SetContentAsString(JsonBody);
	}
	else if (Consumes.Contains(TEXT("multipart/form-data")))
	{
	}
	else if (Consumes.Contains(TEXT("application/x-www-form-urlencoded")))
	{
	}
	else
	{
		UE_LOG(LogOpenAPI, Error, TEXT("Request ContentType not supported (%s)"), *FString::Join(Consumes, TEXT(",")));
	}
}

void OpenAPIAdAccountsApi::AdGroupsAnalyticsResponse::SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode)
{
	Response::SetHttpResponseCode(InHttpResponseCode);
	switch ((int)InHttpResponseCode)
	{
	case 200:
		SetResponseString(TEXT("Success"));
		break;
	case 400:
		SetResponseString(TEXT("Invalid ad account group analytics parameters."));
		break;
	case 0:
	default:
		SetResponseString(TEXT("Unexpected error"));
		break;
	}
}

bool OpenAPIAdAccountsApi::AdGroupsAnalyticsResponse::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	return TryGetJsonValue(JsonValue, Content);
}

inline FString ToString(const OpenAPIAdAccountsApi::AdGroupsListRequest::EntityStatusesEnum& Value)
{
	switch (Value)
	{
	case OpenAPIAdAccountsApi::AdGroupsListRequest::EntityStatusesEnum::Active:
		return TEXT("ACTIVE");
	case OpenAPIAdAccountsApi::AdGroupsListRequest::EntityStatusesEnum::Paused:
		return TEXT("PAUSED");
	case OpenAPIAdAccountsApi::AdGroupsListRequest::EntityStatusesEnum::Archived:
		return TEXT("ARCHIVED");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIAdAccountsApi::AdGroupsListRequest::EntityStatusesEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIAdAccountsApi::AdGroupsListRequest::EnumToString(const OpenAPIAdAccountsApi::AdGroupsListRequest::EntityStatusesEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdGroupsListRequest::EntityStatusesEnum& Value)
{
	static TMap<FString, OpenAPIAdAccountsApi::AdGroupsListRequest::EntityStatusesEnum> StringToEnum = { 
		{ TEXT("ACTIVE"), OpenAPIAdAccountsApi::AdGroupsListRequest::EntityStatusesEnum::Active },
		{ TEXT("PAUSED"), OpenAPIAdAccountsApi::AdGroupsListRequest::EntityStatusesEnum::Paused },
		{ TEXT("ARCHIVED"), OpenAPIAdAccountsApi::AdGroupsListRequest::EntityStatusesEnum::Archived }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIAdAccountsApi::AdGroupsListRequest::EnumFromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdGroupsListRequest::EntityStatusesEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline FStringFormatArg ToStringFormatArg(const OpenAPIAdAccountsApi::AdGroupsListRequest::EntityStatusesEnum& Value)
{
	return FStringFormatArg(ToString(Value));
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIAdAccountsApi::AdGroupsListRequest::EntityStatusesEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIAdAccountsApi::AdGroupsListRequest::EntityStatusesEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

inline FString ToString(const OpenAPIAdAccountsApi::AdGroupsListRequest::OrderEnum& Value)
{
	switch (Value)
	{
	case OpenAPIAdAccountsApi::AdGroupsListRequest::OrderEnum::Ascending:
		return TEXT("ASCENDING");
	case OpenAPIAdAccountsApi::AdGroupsListRequest::OrderEnum::Descending:
		return TEXT("DESCENDING");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIAdAccountsApi::AdGroupsListRequest::OrderEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIAdAccountsApi::AdGroupsListRequest::EnumToString(const OpenAPIAdAccountsApi::AdGroupsListRequest::OrderEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdGroupsListRequest::OrderEnum& Value)
{
	static TMap<FString, OpenAPIAdAccountsApi::AdGroupsListRequest::OrderEnum> StringToEnum = { 
		{ TEXT("ASCENDING"), OpenAPIAdAccountsApi::AdGroupsListRequest::OrderEnum::Ascending },
		{ TEXT("DESCENDING"), OpenAPIAdAccountsApi::AdGroupsListRequest::OrderEnum::Descending }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIAdAccountsApi::AdGroupsListRequest::EnumFromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdGroupsListRequest::OrderEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline FStringFormatArg ToStringFormatArg(const OpenAPIAdAccountsApi::AdGroupsListRequest::OrderEnum& Value)
{
	return FStringFormatArg(ToString(Value));
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIAdAccountsApi::AdGroupsListRequest::OrderEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIAdAccountsApi::AdGroupsListRequest::OrderEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

FString OpenAPIAdAccountsApi::AdGroupsListRequest::ComputePath() const
{
	TMap<FString, FStringFormatArg> PathParams = { 
	{ TEXT("ad_account_id"), ToStringFormatArg(AdAccountId) } };

	FString Path = FString::Format(TEXT("/ad_accounts/{ad_account_id}/ad_groups"), PathParams);

	TArray<FString> QueryParams;
	if(CampaignIds.IsSet())
	{
		QueryParams.Add(FString(TEXT("campaign_ids=")) + CollectionToUrlString_multi(CampaignIds.GetValue(), TEXT("campaign_ids")));
	}
	if(AdGroupIds.IsSet())
	{
		QueryParams.Add(FString(TEXT("ad_group_ids=")) + CollectionToUrlString_multi(AdGroupIds.GetValue(), TEXT("ad_group_ids")));
	}
	if(EntityStatuses.IsSet())
	{
		QueryParams.Add(FString(TEXT("entity_statuses=")) + CollectionToUrlString_multi(EntityStatuses.GetValue(), TEXT("entity_statuses")));
	}
	if(PageSize.IsSet())
	{
		QueryParams.Add(FString(TEXT("page_size=")) + ToUrlString(PageSize.GetValue()));
	}
	if(Order.IsSet())
	{
		QueryParams.Add(FString(TEXT("order=")) + ToUrlString(Order.GetValue()));
	}
	if(Bookmark.IsSet())
	{
		QueryParams.Add(FString(TEXT("bookmark=")) + ToUrlString(Bookmark.GetValue()));
	}
	if(TranslateInterestsToNames.IsSet())
	{
		QueryParams.Add(FString(TEXT("translate_interests_to_names=")) + ToUrlString(TranslateInterestsToNames.GetValue()));
	}
	Path += TCHAR('?');
	Path += FString::Join(QueryParams, TEXT("&"));

	return Path;
}

void OpenAPIAdAccountsApi::AdGroupsListRequest::SetupHttpRequest(const FHttpRequestRef& HttpRequest) const
{
	static const TArray<FString> Consumes = {  };
	//static const TArray<FString> Produces = { TEXT("application/json") };

	HttpRequest->SetVerb(TEXT("GET"));

	// Default to Json Body request
	if (Consumes.Num() == 0 || Consumes.Contains(TEXT("application/json")))
	{
		// Form parameters
		FString JsonBody;
		JsonWriter Writer = TJsonWriterFactory<>::Create(&JsonBody);
		Writer->WriteObjectStart();
		Writer->WriteObjectEnd();
		Writer->Close();
		HttpRequest->SetHeader(TEXT("Content-Type"), TEXT("application/json; charset=utf-8"));
		HttpRequest->SetContentAsString(JsonBody);
	}
	else if (Consumes.Contains(TEXT("multipart/form-data")))
	{
	}
	else if (Consumes.Contains(TEXT("application/x-www-form-urlencoded")))
	{
	}
	else
	{
		UE_LOG(LogOpenAPI, Error, TEXT("Request ContentType not supported (%s)"), *FString::Join(Consumes, TEXT(",")));
	}
}

void OpenAPIAdAccountsApi::AdGroupsListResponse::SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode)
{
	Response::SetHttpResponseCode(InHttpResponseCode);
	switch ((int)InHttpResponseCode)
	{
	case 200:
		SetResponseString(TEXT("Success"));
		break;
	case 400:
		SetResponseString(TEXT("Invalid ad account group parameters."));
		break;
	case 0:
	default:
		SetResponseString(TEXT("Unexpected error"));
		break;
	}
}

bool OpenAPIAdAccountsApi::AdGroupsListResponse::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	return TryGetJsonValue(JsonValue, Content);
}

inline FString ToString(const OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum& Value)
{
	switch (Value)
	{
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::AdAccountId:
		return TEXT("AD_ACCOUNT_ID");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::AdGroupEntityStatus:
		return TEXT("AD_GROUP_ENTITY_STATUS");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::AdGroupId:
		return TEXT("AD_GROUP_ID");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::AdId:
		return TEXT("AD_ID");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::CampaignDailySpendCap:
		return TEXT("CAMPAIGN_DAILY_SPEND_CAP");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::CampaignEntityStatus:
		return TEXT("CAMPAIGN_ENTITY_STATUS");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::CampaignId:
		return TEXT("CAMPAIGN_ID");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::CampaignLifetimeSpendCap:
		return TEXT("CAMPAIGN_LIFETIME_SPEND_CAP");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::CampaignName:
		return TEXT("CAMPAIGN_NAME");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::CheckoutRoas:
		return TEXT("CHECKOUT_ROAS");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::CLICKTHROUGH1:
		return TEXT("CLICKTHROUGH_1");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::CLICKTHROUGH1GROSS:
		return TEXT("CLICKTHROUGH_1_GROSS");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::CLICKTHROUGH2:
		return TEXT("CLICKTHROUGH_2");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::CpcInMicroDollar:
		return TEXT("CPC_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::CpmInDollar:
		return TEXT("CPM_IN_DOLLAR");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::CpmInMicroDollar:
		return TEXT("CPM_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::Ctr:
		return TEXT("CTR");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::CTR2:
		return TEXT("CTR_2");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::EcpcvInDollar:
		return TEXT("ECPCV_IN_DOLLAR");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::ECPCVP95INDOLLAR:
		return TEXT("ECPCV_P95_IN_DOLLAR");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::EcpcInDollar:
		return TEXT("ECPC_IN_DOLLAR");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::EcpcInMicroDollar:
		return TEXT("ECPC_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::EcpeInDollar:
		return TEXT("ECPE_IN_DOLLAR");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::EcpmInMicroDollar:
		return TEXT("ECPM_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::EcpvInDollar:
		return TEXT("ECPV_IN_DOLLAR");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::Ectr:
		return TEXT("ECTR");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::EengagementRate:
		return TEXT("EENGAGEMENT_RATE");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::ENGAGEMENT1:
		return TEXT("ENGAGEMENT_1");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::ENGAGEMENT2:
		return TEXT("ENGAGEMENT_2");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::EngagementRate:
		return TEXT("ENGAGEMENT_RATE");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::IDEAPINPRODUCTTAGVISIT1:
		return TEXT("IDEA_PIN_PRODUCT_TAG_VISIT_1");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::IDEAPINPRODUCTTAGVISIT2:
		return TEXT("IDEA_PIN_PRODUCT_TAG_VISIT_2");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::IMPRESSION1:
		return TEXT("IMPRESSION_1");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::IMPRESSION1GROSS:
		return TEXT("IMPRESSION_1_GROSS");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::IMPRESSION2:
		return TEXT("IMPRESSION_2");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::InappCheckoutCostPerAction:
		return TEXT("INAPP_CHECKOUT_COST_PER_ACTION");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::OUTBOUNDCLICK1:
		return TEXT("OUTBOUND_CLICK_1");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::OUTBOUNDCLICK2:
		return TEXT("OUTBOUND_CLICK_2");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::PageVisitCostPerAction:
		return TEXT("PAGE_VISIT_COST_PER_ACTION");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::PageVisitRoas:
		return TEXT("PAGE_VISIT_ROAS");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::PaidImpression:
		return TEXT("PAID_IMPRESSION");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::PinId:
		return TEXT("PIN_ID");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::REPIN1:
		return TEXT("REPIN_1");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::REPIN2:
		return TEXT("REPIN_2");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::RepinRate:
		return TEXT("REPIN_RATE");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::SpendInDollar:
		return TEXT("SPEND_IN_DOLLAR");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::SpendInMicroDollar:
		return TEXT("SPEND_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalCheckout:
		return TEXT("TOTAL_CHECKOUT");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalCheckoutValueInMicroDollar:
		return TEXT("TOTAL_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalClickthrough:
		return TEXT("TOTAL_CLICKTHROUGH");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalClickCheckout:
		return TEXT("TOTAL_CLICK_CHECKOUT");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalClickCheckoutValueInMicroDollar:
		return TEXT("TOTAL_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalClickLead:
		return TEXT("TOTAL_CLICK_LEAD");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalClickSignup:
		return TEXT("TOTAL_CLICK_SIGNUP");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalClickSignupValueInMicroDollar:
		return TEXT("TOTAL_CLICK_SIGNUP_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalConversions:
		return TEXT("TOTAL_CONVERSIONS");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalCustom:
		return TEXT("TOTAL_CUSTOM");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalEngagement:
		return TEXT("TOTAL_ENGAGEMENT");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalEngagementCheckout:
		return TEXT("TOTAL_ENGAGEMENT_CHECKOUT");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalEngagementCheckoutValueInMicroDollar:
		return TEXT("TOTAL_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalEngagementLead:
		return TEXT("TOTAL_ENGAGEMENT_LEAD");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalEngagementSignup:
		return TEXT("TOTAL_ENGAGEMENT_SIGNUP");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalEngagementSignupValueInMicroDollar:
		return TEXT("TOTAL_ENGAGEMENT_SIGNUP_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalIdeaPinProductTagVisit:
		return TEXT("TOTAL_IDEA_PIN_PRODUCT_TAG_VISIT");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalImpressionFrequency:
		return TEXT("TOTAL_IMPRESSION_FREQUENCY");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalImpressionUser:
		return TEXT("TOTAL_IMPRESSION_USER");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalLead:
		return TEXT("TOTAL_LEAD");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalPageVisit:
		return TEXT("TOTAL_PAGE_VISIT");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalRepinRate:
		return TEXT("TOTAL_REPIN_RATE");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalSignup:
		return TEXT("TOTAL_SIGNUP");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalSignupValueInMicroDollar:
		return TEXT("TOTAL_SIGNUP_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TOTALVIDEO3SECVIEWS:
		return TEXT("TOTAL_VIDEO_3SEC_VIEWS");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalVideoAvgWatchtimeInSecond:
		return TEXT("TOTAL_VIDEO_AVG_WATCHTIME_IN_SECOND");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalVideoMrcViews:
		return TEXT("TOTAL_VIDEO_MRC_VIEWS");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP0COMBINED:
		return TEXT("TOTAL_VIDEO_P0_COMBINED");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP100COMPLETE:
		return TEXT("TOTAL_VIDEO_P100_COMPLETE");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP25COMBINED:
		return TEXT("TOTAL_VIDEO_P25_COMBINED");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP50COMBINED:
		return TEXT("TOTAL_VIDEO_P50_COMBINED");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP75COMBINED:
		return TEXT("TOTAL_VIDEO_P75_COMBINED");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP95COMBINED:
		return TEXT("TOTAL_VIDEO_P95_COMBINED");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalViewCheckout:
		return TEXT("TOTAL_VIEW_CHECKOUT");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalViewCheckoutValueInMicroDollar:
		return TEXT("TOTAL_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalViewLead:
		return TEXT("TOTAL_VIEW_LEAD");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalViewSignup:
		return TEXT("TOTAL_VIEW_SIGNUP");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalViewSignupValueInMicroDollar:
		return TEXT("TOTAL_VIEW_SIGNUP_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalWebCheckout:
		return TEXT("TOTAL_WEB_CHECKOUT");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalWebCheckoutValueInMicroDollar:
		return TEXT("TOTAL_WEB_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalWebClickCheckout:
		return TEXT("TOTAL_WEB_CLICK_CHECKOUT");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalWebClickCheckoutValueInMicroDollar:
		return TEXT("TOTAL_WEB_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalWebEngagementCheckout:
		return TEXT("TOTAL_WEB_ENGAGEMENT_CHECKOUT");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalWebEngagementCheckoutValueInMicroDollar:
		return TEXT("TOTAL_WEB_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalWebViewCheckout:
		return TEXT("TOTAL_WEB_VIEW_CHECKOUT");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalWebViewCheckoutValueInMicroDollar:
		return TEXT("TOTAL_WEB_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::VIDEO3SECVIEWS2:
		return TEXT("VIDEO_3SEC_VIEWS_2");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::VideoLength:
		return TEXT("VIDEO_LENGTH");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::VIDEOMRCVIEWS2:
		return TEXT("VIDEO_MRC_VIEWS_2");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::VIDEOP0COMBINED2:
		return TEXT("VIDEO_P0_COMBINED_2");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::VIDEOP100COMPLETE2:
		return TEXT("VIDEO_P100_COMPLETE_2");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::VIDEOP25COMBINED2:
		return TEXT("VIDEO_P25_COMBINED_2");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::VIDEOP50COMBINED2:
		return TEXT("VIDEO_P50_COMBINED_2");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::VIDEOP75COMBINED2:
		return TEXT("VIDEO_P75_COMBINED_2");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::VIDEOP95COMBINED2:
		return TEXT("VIDEO_P95_COMBINED_2");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::WebCheckoutCostPerAction:
		return TEXT("WEB_CHECKOUT_COST_PER_ACTION");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::WebCheckoutRoas:
		return TEXT("WEB_CHECKOUT_ROAS");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIAdAccountsApi::AdsAnalyticsRequest::EnumToString(const OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum& Value)
{
	static TMap<FString, OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum> StringToEnum = { 
		{ TEXT("AD_ACCOUNT_ID"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::AdAccountId },
		{ TEXT("AD_GROUP_ENTITY_STATUS"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::AdGroupEntityStatus },
		{ TEXT("AD_GROUP_ID"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::AdGroupId },
		{ TEXT("AD_ID"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::AdId },
		{ TEXT("CAMPAIGN_DAILY_SPEND_CAP"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::CampaignDailySpendCap },
		{ TEXT("CAMPAIGN_ENTITY_STATUS"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::CampaignEntityStatus },
		{ TEXT("CAMPAIGN_ID"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::CampaignId },
		{ TEXT("CAMPAIGN_LIFETIME_SPEND_CAP"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::CampaignLifetimeSpendCap },
		{ TEXT("CAMPAIGN_NAME"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::CampaignName },
		{ TEXT("CHECKOUT_ROAS"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::CheckoutRoas },
		{ TEXT("CLICKTHROUGH_1"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::CLICKTHROUGH1 },
		{ TEXT("CLICKTHROUGH_1_GROSS"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::CLICKTHROUGH1GROSS },
		{ TEXT("CLICKTHROUGH_2"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::CLICKTHROUGH2 },
		{ TEXT("CPC_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::CpcInMicroDollar },
		{ TEXT("CPM_IN_DOLLAR"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::CpmInDollar },
		{ TEXT("CPM_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::CpmInMicroDollar },
		{ TEXT("CTR"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::Ctr },
		{ TEXT("CTR_2"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::CTR2 },
		{ TEXT("ECPCV_IN_DOLLAR"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::EcpcvInDollar },
		{ TEXT("ECPCV_P95_IN_DOLLAR"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::ECPCVP95INDOLLAR },
		{ TEXT("ECPC_IN_DOLLAR"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::EcpcInDollar },
		{ TEXT("ECPC_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::EcpcInMicroDollar },
		{ TEXT("ECPE_IN_DOLLAR"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::EcpeInDollar },
		{ TEXT("ECPM_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::EcpmInMicroDollar },
		{ TEXT("ECPV_IN_DOLLAR"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::EcpvInDollar },
		{ TEXT("ECTR"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::Ectr },
		{ TEXT("EENGAGEMENT_RATE"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::EengagementRate },
		{ TEXT("ENGAGEMENT_1"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::ENGAGEMENT1 },
		{ TEXT("ENGAGEMENT_2"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::ENGAGEMENT2 },
		{ TEXT("ENGAGEMENT_RATE"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::EngagementRate },
		{ TEXT("IDEA_PIN_PRODUCT_TAG_VISIT_1"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::IDEAPINPRODUCTTAGVISIT1 },
		{ TEXT("IDEA_PIN_PRODUCT_TAG_VISIT_2"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::IDEAPINPRODUCTTAGVISIT2 },
		{ TEXT("IMPRESSION_1"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::IMPRESSION1 },
		{ TEXT("IMPRESSION_1_GROSS"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::IMPRESSION1GROSS },
		{ TEXT("IMPRESSION_2"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::IMPRESSION2 },
		{ TEXT("INAPP_CHECKOUT_COST_PER_ACTION"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::InappCheckoutCostPerAction },
		{ TEXT("OUTBOUND_CLICK_1"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::OUTBOUNDCLICK1 },
		{ TEXT("OUTBOUND_CLICK_2"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::OUTBOUNDCLICK2 },
		{ TEXT("PAGE_VISIT_COST_PER_ACTION"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::PageVisitCostPerAction },
		{ TEXT("PAGE_VISIT_ROAS"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::PageVisitRoas },
		{ TEXT("PAID_IMPRESSION"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::PaidImpression },
		{ TEXT("PIN_ID"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::PinId },
		{ TEXT("REPIN_1"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::REPIN1 },
		{ TEXT("REPIN_2"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::REPIN2 },
		{ TEXT("REPIN_RATE"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::RepinRate },
		{ TEXT("SPEND_IN_DOLLAR"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::SpendInDollar },
		{ TEXT("SPEND_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::SpendInMicroDollar },
		{ TEXT("TOTAL_CHECKOUT"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalCheckout },
		{ TEXT("TOTAL_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_CLICKTHROUGH"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalClickthrough },
		{ TEXT("TOTAL_CLICK_CHECKOUT"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalClickCheckout },
		{ TEXT("TOTAL_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalClickCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_CLICK_LEAD"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalClickLead },
		{ TEXT("TOTAL_CLICK_SIGNUP"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalClickSignup },
		{ TEXT("TOTAL_CLICK_SIGNUP_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalClickSignupValueInMicroDollar },
		{ TEXT("TOTAL_CONVERSIONS"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalConversions },
		{ TEXT("TOTAL_CUSTOM"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalCustom },
		{ TEXT("TOTAL_ENGAGEMENT"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalEngagement },
		{ TEXT("TOTAL_ENGAGEMENT_CHECKOUT"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalEngagementCheckout },
		{ TEXT("TOTAL_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalEngagementCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_ENGAGEMENT_LEAD"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalEngagementLead },
		{ TEXT("TOTAL_ENGAGEMENT_SIGNUP"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalEngagementSignup },
		{ TEXT("TOTAL_ENGAGEMENT_SIGNUP_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalEngagementSignupValueInMicroDollar },
		{ TEXT("TOTAL_IDEA_PIN_PRODUCT_TAG_VISIT"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalIdeaPinProductTagVisit },
		{ TEXT("TOTAL_IMPRESSION_FREQUENCY"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalImpressionFrequency },
		{ TEXT("TOTAL_IMPRESSION_USER"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalImpressionUser },
		{ TEXT("TOTAL_LEAD"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalLead },
		{ TEXT("TOTAL_PAGE_VISIT"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalPageVisit },
		{ TEXT("TOTAL_REPIN_RATE"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalRepinRate },
		{ TEXT("TOTAL_SIGNUP"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalSignup },
		{ TEXT("TOTAL_SIGNUP_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalSignupValueInMicroDollar },
		{ TEXT("TOTAL_VIDEO_3SEC_VIEWS"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TOTALVIDEO3SECVIEWS },
		{ TEXT("TOTAL_VIDEO_AVG_WATCHTIME_IN_SECOND"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalVideoAvgWatchtimeInSecond },
		{ TEXT("TOTAL_VIDEO_MRC_VIEWS"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalVideoMrcViews },
		{ TEXT("TOTAL_VIDEO_P0_COMBINED"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP0COMBINED },
		{ TEXT("TOTAL_VIDEO_P100_COMPLETE"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP100COMPLETE },
		{ TEXT("TOTAL_VIDEO_P25_COMBINED"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP25COMBINED },
		{ TEXT("TOTAL_VIDEO_P50_COMBINED"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP50COMBINED },
		{ TEXT("TOTAL_VIDEO_P75_COMBINED"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP75COMBINED },
		{ TEXT("TOTAL_VIDEO_P95_COMBINED"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP95COMBINED },
		{ TEXT("TOTAL_VIEW_CHECKOUT"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalViewCheckout },
		{ TEXT("TOTAL_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalViewCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_VIEW_LEAD"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalViewLead },
		{ TEXT("TOTAL_VIEW_SIGNUP"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalViewSignup },
		{ TEXT("TOTAL_VIEW_SIGNUP_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalViewSignupValueInMicroDollar },
		{ TEXT("TOTAL_WEB_CHECKOUT"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalWebCheckout },
		{ TEXT("TOTAL_WEB_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalWebCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_WEB_CLICK_CHECKOUT"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalWebClickCheckout },
		{ TEXT("TOTAL_WEB_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalWebClickCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_WEB_ENGAGEMENT_CHECKOUT"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalWebEngagementCheckout },
		{ TEXT("TOTAL_WEB_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalWebEngagementCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_WEB_VIEW_CHECKOUT"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalWebViewCheckout },
		{ TEXT("TOTAL_WEB_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::TotalWebViewCheckoutValueInMicroDollar },
		{ TEXT("VIDEO_3SEC_VIEWS_2"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::VIDEO3SECVIEWS2 },
		{ TEXT("VIDEO_LENGTH"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::VideoLength },
		{ TEXT("VIDEO_MRC_VIEWS_2"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::VIDEOMRCVIEWS2 },
		{ TEXT("VIDEO_P0_COMBINED_2"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::VIDEOP0COMBINED2 },
		{ TEXT("VIDEO_P100_COMPLETE_2"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::VIDEOP100COMPLETE2 },
		{ TEXT("VIDEO_P25_COMBINED_2"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::VIDEOP25COMBINED2 },
		{ TEXT("VIDEO_P50_COMBINED_2"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::VIDEOP50COMBINED2 },
		{ TEXT("VIDEO_P75_COMBINED_2"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::VIDEOP75COMBINED2 },
		{ TEXT("VIDEO_P95_COMBINED_2"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::VIDEOP95COMBINED2 },
		{ TEXT("WEB_CHECKOUT_COST_PER_ACTION"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::WebCheckoutCostPerAction },
		{ TEXT("WEB_CHECKOUT_ROAS"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum::WebCheckoutRoas }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIAdAccountsApi::AdsAnalyticsRequest::EnumFromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline FStringFormatArg ToStringFormatArg(const OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum& Value)
{
	return FStringFormatArg(ToString(Value));
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIAdAccountsApi::AdsAnalyticsRequest::ColumnsEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

inline FString ToString(const OpenAPIAdAccountsApi::AdsAnalyticsRequest::ClickWindowDaysEnum& Value)
{
	switch (Value)
	{
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ClickWindowDaysEnum::_1:
		return TEXT("1");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ClickWindowDaysEnum::_7:
		return TEXT("7");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ClickWindowDaysEnum::_30:
		return TEXT("30");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ClickWindowDaysEnum::_60:
		return TEXT("60");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIAdAccountsApi::AdsAnalyticsRequest::ClickWindowDaysEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIAdAccountsApi::AdsAnalyticsRequest::EnumToString(const OpenAPIAdAccountsApi::AdsAnalyticsRequest::ClickWindowDaysEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdsAnalyticsRequest::ClickWindowDaysEnum& Value)
{
	static TMap<FString, OpenAPIAdAccountsApi::AdsAnalyticsRequest::ClickWindowDaysEnum> StringToEnum = { 
		{ TEXT("1"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ClickWindowDaysEnum::_1 },
		{ TEXT("7"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ClickWindowDaysEnum::_7 },
		{ TEXT("30"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ClickWindowDaysEnum::_30 },
		{ TEXT("60"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ClickWindowDaysEnum::_60 }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIAdAccountsApi::AdsAnalyticsRequest::EnumFromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdsAnalyticsRequest::ClickWindowDaysEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline FStringFormatArg ToStringFormatArg(const OpenAPIAdAccountsApi::AdsAnalyticsRequest::ClickWindowDaysEnum& Value)
{
	return FStringFormatArg(ToString(Value));
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIAdAccountsApi::AdsAnalyticsRequest::ClickWindowDaysEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIAdAccountsApi::AdsAnalyticsRequest::ClickWindowDaysEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

inline FString ToString(const OpenAPIAdAccountsApi::AdsAnalyticsRequest::EngagementWindowDaysEnum& Value)
{
	switch (Value)
	{
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::EngagementWindowDaysEnum::_1:
		return TEXT("1");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::EngagementWindowDaysEnum::_7:
		return TEXT("7");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::EngagementWindowDaysEnum::_30:
		return TEXT("30");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::EngagementWindowDaysEnum::_60:
		return TEXT("60");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIAdAccountsApi::AdsAnalyticsRequest::EngagementWindowDaysEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIAdAccountsApi::AdsAnalyticsRequest::EnumToString(const OpenAPIAdAccountsApi::AdsAnalyticsRequest::EngagementWindowDaysEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdsAnalyticsRequest::EngagementWindowDaysEnum& Value)
{
	static TMap<FString, OpenAPIAdAccountsApi::AdsAnalyticsRequest::EngagementWindowDaysEnum> StringToEnum = { 
		{ TEXT("1"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::EngagementWindowDaysEnum::_1 },
		{ TEXT("7"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::EngagementWindowDaysEnum::_7 },
		{ TEXT("30"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::EngagementWindowDaysEnum::_30 },
		{ TEXT("60"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::EngagementWindowDaysEnum::_60 }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIAdAccountsApi::AdsAnalyticsRequest::EnumFromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdsAnalyticsRequest::EngagementWindowDaysEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline FStringFormatArg ToStringFormatArg(const OpenAPIAdAccountsApi::AdsAnalyticsRequest::EngagementWindowDaysEnum& Value)
{
	return FStringFormatArg(ToString(Value));
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIAdAccountsApi::AdsAnalyticsRequest::EngagementWindowDaysEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIAdAccountsApi::AdsAnalyticsRequest::EngagementWindowDaysEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

inline FString ToString(const OpenAPIAdAccountsApi::AdsAnalyticsRequest::ViewWindowDaysEnum& Value)
{
	switch (Value)
	{
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ViewWindowDaysEnum::_1:
		return TEXT("1");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ViewWindowDaysEnum::_7:
		return TEXT("7");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ViewWindowDaysEnum::_30:
		return TEXT("30");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ViewWindowDaysEnum::_60:
		return TEXT("60");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIAdAccountsApi::AdsAnalyticsRequest::ViewWindowDaysEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIAdAccountsApi::AdsAnalyticsRequest::EnumToString(const OpenAPIAdAccountsApi::AdsAnalyticsRequest::ViewWindowDaysEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdsAnalyticsRequest::ViewWindowDaysEnum& Value)
{
	static TMap<FString, OpenAPIAdAccountsApi::AdsAnalyticsRequest::ViewWindowDaysEnum> StringToEnum = { 
		{ TEXT("1"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ViewWindowDaysEnum::_1 },
		{ TEXT("7"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ViewWindowDaysEnum::_7 },
		{ TEXT("30"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ViewWindowDaysEnum::_30 },
		{ TEXT("60"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ViewWindowDaysEnum::_60 }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIAdAccountsApi::AdsAnalyticsRequest::EnumFromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdsAnalyticsRequest::ViewWindowDaysEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline FStringFormatArg ToStringFormatArg(const OpenAPIAdAccountsApi::AdsAnalyticsRequest::ViewWindowDaysEnum& Value)
{
	return FStringFormatArg(ToString(Value));
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIAdAccountsApi::AdsAnalyticsRequest::ViewWindowDaysEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIAdAccountsApi::AdsAnalyticsRequest::ViewWindowDaysEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

inline FString ToString(const OpenAPIAdAccountsApi::AdsAnalyticsRequest::ConversionReportTimeEnum& Value)
{
	switch (Value)
	{
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ConversionReportTimeEnum::AdAction:
		return TEXT("TIME_OF_AD_ACTION");
	case OpenAPIAdAccountsApi::AdsAnalyticsRequest::ConversionReportTimeEnum::Conversion:
		return TEXT("TIME_OF_CONVERSION");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIAdAccountsApi::AdsAnalyticsRequest::ConversionReportTimeEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIAdAccountsApi::AdsAnalyticsRequest::EnumToString(const OpenAPIAdAccountsApi::AdsAnalyticsRequest::ConversionReportTimeEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdsAnalyticsRequest::ConversionReportTimeEnum& Value)
{
	static TMap<FString, OpenAPIAdAccountsApi::AdsAnalyticsRequest::ConversionReportTimeEnum> StringToEnum = { 
		{ TEXT("TIME_OF_AD_ACTION"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ConversionReportTimeEnum::AdAction },
		{ TEXT("TIME_OF_CONVERSION"), OpenAPIAdAccountsApi::AdsAnalyticsRequest::ConversionReportTimeEnum::Conversion }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIAdAccountsApi::AdsAnalyticsRequest::EnumFromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdsAnalyticsRequest::ConversionReportTimeEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline FStringFormatArg ToStringFormatArg(const OpenAPIAdAccountsApi::AdsAnalyticsRequest::ConversionReportTimeEnum& Value)
{
	return FStringFormatArg(ToString(Value));
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIAdAccountsApi::AdsAnalyticsRequest::ConversionReportTimeEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIAdAccountsApi::AdsAnalyticsRequest::ConversionReportTimeEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

FString OpenAPIAdAccountsApi::AdsAnalyticsRequest::ComputePath() const
{
	TMap<FString, FStringFormatArg> PathParams = { 
	{ TEXT("ad_account_id"), ToStringFormatArg(AdAccountId) } };

	FString Path = FString::Format(TEXT("/ad_accounts/{ad_account_id}/ads/analytics"), PathParams);

	TArray<FString> QueryParams;
	QueryParams.Add(FString(TEXT("start_date=")) + ToUrlString(StartDate));
	QueryParams.Add(FString(TEXT("end_date=")) + ToUrlString(EndDate));
	QueryParams.Add(FString(TEXT("ad_ids=")) + CollectionToUrlString_multi(AdIds, TEXT("ad_ids")));
	QueryParams.Add(FString(TEXT("columns=")) + CollectionToUrlString_csv(Columns, TEXT("columns")));
	QueryParams.Add(FString(TEXT("granularity=")) + ToUrlString(Granularity));
	if(ClickWindowDays.IsSet())
	{
		QueryParams.Add(FString(TEXT("click_window_days=")) + ToUrlString(ClickWindowDays.GetValue()));
	}
	if(EngagementWindowDays.IsSet())
	{
		QueryParams.Add(FString(TEXT("engagement_window_days=")) + ToUrlString(EngagementWindowDays.GetValue()));
	}
	if(ViewWindowDays.IsSet())
	{
		QueryParams.Add(FString(TEXT("view_window_days=")) + ToUrlString(ViewWindowDays.GetValue()));
	}
	if(ConversionReportTime.IsSet())
	{
		QueryParams.Add(FString(TEXT("conversion_report_time=")) + ToUrlString(ConversionReportTime.GetValue()));
	}
	Path += TCHAR('?');
	Path += FString::Join(QueryParams, TEXT("&"));

	return Path;
}

void OpenAPIAdAccountsApi::AdsAnalyticsRequest::SetupHttpRequest(const FHttpRequestRef& HttpRequest) const
{
	static const TArray<FString> Consumes = {  };
	//static const TArray<FString> Produces = { TEXT("application/json") };

	HttpRequest->SetVerb(TEXT("GET"));

	// Default to Json Body request
	if (Consumes.Num() == 0 || Consumes.Contains(TEXT("application/json")))
	{
		// Form parameters
		FString JsonBody;
		JsonWriter Writer = TJsonWriterFactory<>::Create(&JsonBody);
		Writer->WriteObjectStart();
		Writer->WriteObjectEnd();
		Writer->Close();
		HttpRequest->SetHeader(TEXT("Content-Type"), TEXT("application/json; charset=utf-8"));
		HttpRequest->SetContentAsString(JsonBody);
	}
	else if (Consumes.Contains(TEXT("multipart/form-data")))
	{
	}
	else if (Consumes.Contains(TEXT("application/x-www-form-urlencoded")))
	{
	}
	else
	{
		UE_LOG(LogOpenAPI, Error, TEXT("Request ContentType not supported (%s)"), *FString::Join(Consumes, TEXT(",")));
	}
}

void OpenAPIAdAccountsApi::AdsAnalyticsResponse::SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode)
{
	Response::SetHttpResponseCode(InHttpResponseCode);
	switch ((int)InHttpResponseCode)
	{
	case 200:
		SetResponseString(TEXT("Success"));
		break;
	case 400:
		SetResponseString(TEXT("Invalid ad account ads analytics parameters."));
		break;
	case 0:
	default:
		SetResponseString(TEXT("Unexpected error"));
		break;
	}
}

bool OpenAPIAdAccountsApi::AdsAnalyticsResponse::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	return TryGetJsonValue(JsonValue, Content);
}

inline FString ToString(const OpenAPIAdAccountsApi::AdsListRequest::EntityStatusesEnum& Value)
{
	switch (Value)
	{
	case OpenAPIAdAccountsApi::AdsListRequest::EntityStatusesEnum::Active:
		return TEXT("ACTIVE");
	case OpenAPIAdAccountsApi::AdsListRequest::EntityStatusesEnum::Paused:
		return TEXT("PAUSED");
	case OpenAPIAdAccountsApi::AdsListRequest::EntityStatusesEnum::Archived:
		return TEXT("ARCHIVED");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIAdAccountsApi::AdsListRequest::EntityStatusesEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIAdAccountsApi::AdsListRequest::EnumToString(const OpenAPIAdAccountsApi::AdsListRequest::EntityStatusesEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdsListRequest::EntityStatusesEnum& Value)
{
	static TMap<FString, OpenAPIAdAccountsApi::AdsListRequest::EntityStatusesEnum> StringToEnum = { 
		{ TEXT("ACTIVE"), OpenAPIAdAccountsApi::AdsListRequest::EntityStatusesEnum::Active },
		{ TEXT("PAUSED"), OpenAPIAdAccountsApi::AdsListRequest::EntityStatusesEnum::Paused },
		{ TEXT("ARCHIVED"), OpenAPIAdAccountsApi::AdsListRequest::EntityStatusesEnum::Archived }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIAdAccountsApi::AdsListRequest::EnumFromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdsListRequest::EntityStatusesEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline FStringFormatArg ToStringFormatArg(const OpenAPIAdAccountsApi::AdsListRequest::EntityStatusesEnum& Value)
{
	return FStringFormatArg(ToString(Value));
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIAdAccountsApi::AdsListRequest::EntityStatusesEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIAdAccountsApi::AdsListRequest::EntityStatusesEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

inline FString ToString(const OpenAPIAdAccountsApi::AdsListRequest::OrderEnum& Value)
{
	switch (Value)
	{
	case OpenAPIAdAccountsApi::AdsListRequest::OrderEnum::Ascending:
		return TEXT("ASCENDING");
	case OpenAPIAdAccountsApi::AdsListRequest::OrderEnum::Descending:
		return TEXT("DESCENDING");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIAdAccountsApi::AdsListRequest::OrderEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIAdAccountsApi::AdsListRequest::EnumToString(const OpenAPIAdAccountsApi::AdsListRequest::OrderEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdsListRequest::OrderEnum& Value)
{
	static TMap<FString, OpenAPIAdAccountsApi::AdsListRequest::OrderEnum> StringToEnum = { 
		{ TEXT("ASCENDING"), OpenAPIAdAccountsApi::AdsListRequest::OrderEnum::Ascending },
		{ TEXT("DESCENDING"), OpenAPIAdAccountsApi::AdsListRequest::OrderEnum::Descending }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIAdAccountsApi::AdsListRequest::EnumFromString(const FString& EnumAsString, OpenAPIAdAccountsApi::AdsListRequest::OrderEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline FStringFormatArg ToStringFormatArg(const OpenAPIAdAccountsApi::AdsListRequest::OrderEnum& Value)
{
	return FStringFormatArg(ToString(Value));
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIAdAccountsApi::AdsListRequest::OrderEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIAdAccountsApi::AdsListRequest::OrderEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

FString OpenAPIAdAccountsApi::AdsListRequest::ComputePath() const
{
	TMap<FString, FStringFormatArg> PathParams = { 
	{ TEXT("ad_account_id"), ToStringFormatArg(AdAccountId) } };

	FString Path = FString::Format(TEXT("/ad_accounts/{ad_account_id}/ads"), PathParams);

	TArray<FString> QueryParams;
	if(CampaignIds.IsSet())
	{
		QueryParams.Add(FString(TEXT("campaign_ids=")) + CollectionToUrlString_multi(CampaignIds.GetValue(), TEXT("campaign_ids")));
	}
	if(AdGroupIds.IsSet())
	{
		QueryParams.Add(FString(TEXT("ad_group_ids=")) + CollectionToUrlString_multi(AdGroupIds.GetValue(), TEXT("ad_group_ids")));
	}
	if(AdIds.IsSet())
	{
		QueryParams.Add(FString(TEXT("ad_ids=")) + CollectionToUrlString_multi(AdIds.GetValue(), TEXT("ad_ids")));
	}
	if(EntityStatuses.IsSet())
	{
		QueryParams.Add(FString(TEXT("entity_statuses=")) + CollectionToUrlString_multi(EntityStatuses.GetValue(), TEXT("entity_statuses")));
	}
	if(PageSize.IsSet())
	{
		QueryParams.Add(FString(TEXT("page_size=")) + ToUrlString(PageSize.GetValue()));
	}
	if(Order.IsSet())
	{
		QueryParams.Add(FString(TEXT("order=")) + ToUrlString(Order.GetValue()));
	}
	if(Bookmark.IsSet())
	{
		QueryParams.Add(FString(TEXT("bookmark=")) + ToUrlString(Bookmark.GetValue()));
	}
	Path += TCHAR('?');
	Path += FString::Join(QueryParams, TEXT("&"));

	return Path;
}

void OpenAPIAdAccountsApi::AdsListRequest::SetupHttpRequest(const FHttpRequestRef& HttpRequest) const
{
	static const TArray<FString> Consumes = {  };
	//static const TArray<FString> Produces = { TEXT("application/json") };

	HttpRequest->SetVerb(TEXT("GET"));

	// Default to Json Body request
	if (Consumes.Num() == 0 || Consumes.Contains(TEXT("application/json")))
	{
		// Form parameters
		FString JsonBody;
		JsonWriter Writer = TJsonWriterFactory<>::Create(&JsonBody);
		Writer->WriteObjectStart();
		Writer->WriteObjectEnd();
		Writer->Close();
		HttpRequest->SetHeader(TEXT("Content-Type"), TEXT("application/json; charset=utf-8"));
		HttpRequest->SetContentAsString(JsonBody);
	}
	else if (Consumes.Contains(TEXT("multipart/form-data")))
	{
	}
	else if (Consumes.Contains(TEXT("application/x-www-form-urlencoded")))
	{
	}
	else
	{
		UE_LOG(LogOpenAPI, Error, TEXT("Request ContentType not supported (%s)"), *FString::Join(Consumes, TEXT(",")));
	}
}

void OpenAPIAdAccountsApi::AdsListResponse::SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode)
{
	Response::SetHttpResponseCode(InHttpResponseCode);
	switch ((int)InHttpResponseCode)
	{
	case 200:
		SetResponseString(TEXT("Success"));
		break;
	case 400:
		SetResponseString(TEXT("Invalid ad account ads parameters."));
		break;
	case 0:
	default:
		SetResponseString(TEXT("Unexpected error"));
		break;
	}
}

bool OpenAPIAdAccountsApi::AdsListResponse::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	return TryGetJsonValue(JsonValue, Content);
}

FString OpenAPIAdAccountsApi::AnalyticsCreateReportRequest::ComputePath() const
{
	TMap<FString, FStringFormatArg> PathParams = { 
	{ TEXT("ad_account_id"), ToStringFormatArg(AdAccountId) } };

	FString Path = FString::Format(TEXT("/ad_accounts/{ad_account_id}/reports"), PathParams);

	return Path;
}

void OpenAPIAdAccountsApi::AnalyticsCreateReportRequest::SetupHttpRequest(const FHttpRequestRef& HttpRequest) const
{
	static const TArray<FString> Consumes = { TEXT("application/json") };
	//static const TArray<FString> Produces = { TEXT("application/json") };

	HttpRequest->SetVerb(TEXT("POST"));

	// Default to Json Body request
	if (Consumes.Num() == 0 || Consumes.Contains(TEXT("application/json")))
	{
		// Body parameters
		FString JsonBody;
		JsonWriter Writer = TJsonWriterFactory<>::Create(&JsonBody);

		WriteJsonValue(Writer, OpenAPIAdsAnalyticsCreateAsyncRequest);
		Writer->Close();

		HttpRequest->SetHeader(TEXT("Content-Type"), TEXT("application/json; charset=utf-8"));
		HttpRequest->SetContentAsString(JsonBody);
	}
	else if (Consumes.Contains(TEXT("multipart/form-data")))
	{
		UE_LOG(LogOpenAPI, Error, TEXT("Body parameter (OpenAPIAdsAnalyticsCreateAsyncRequest) was ignored, not supported in multipart form"));
	}
	else if (Consumes.Contains(TEXT("application/x-www-form-urlencoded")))
	{
		UE_LOG(LogOpenAPI, Error, TEXT("Body parameter (OpenAPIAdsAnalyticsCreateAsyncRequest) was ignored, not supported in urlencoded requests"));
	}
	else
	{
		UE_LOG(LogOpenAPI, Error, TEXT("Request ContentType not supported (%s)"), *FString::Join(Consumes, TEXT(",")));
	}
}

void OpenAPIAdAccountsApi::AnalyticsCreateReportResponse::SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode)
{
	Response::SetHttpResponseCode(InHttpResponseCode);
	switch ((int)InHttpResponseCode)
	{
	case 200:
		SetResponseString(TEXT("Success"));
		break;
	case 400:
		SetResponseString(TEXT("Invalid ad account ads analytics parameters."));
		break;
	case 0:
	default:
		SetResponseString(TEXT("Unexpected error"));
		break;
	}
}

bool OpenAPIAdAccountsApi::AnalyticsCreateReportResponse::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	return TryGetJsonValue(JsonValue, Content);
}

FString OpenAPIAdAccountsApi::AnalyticsGetReportRequest::ComputePath() const
{
	TMap<FString, FStringFormatArg> PathParams = { 
	{ TEXT("ad_account_id"), ToStringFormatArg(AdAccountId) } };

	FString Path = FString::Format(TEXT("/ad_accounts/{ad_account_id}/reports"), PathParams);

	TArray<FString> QueryParams;
	QueryParams.Add(FString(TEXT("token=")) + ToUrlString(Token));
	Path += TCHAR('?');
	Path += FString::Join(QueryParams, TEXT("&"));

	return Path;
}

void OpenAPIAdAccountsApi::AnalyticsGetReportRequest::SetupHttpRequest(const FHttpRequestRef& HttpRequest) const
{
	static const TArray<FString> Consumes = {  };
	//static const TArray<FString> Produces = { TEXT("application/json") };

	HttpRequest->SetVerb(TEXT("GET"));

	// Default to Json Body request
	if (Consumes.Num() == 0 || Consumes.Contains(TEXT("application/json")))
	{
		// Form parameters
		FString JsonBody;
		JsonWriter Writer = TJsonWriterFactory<>::Create(&JsonBody);
		Writer->WriteObjectStart();
		Writer->WriteObjectEnd();
		Writer->Close();
		HttpRequest->SetHeader(TEXT("Content-Type"), TEXT("application/json; charset=utf-8"));
		HttpRequest->SetContentAsString(JsonBody);
	}
	else if (Consumes.Contains(TEXT("multipart/form-data")))
	{
	}
	else if (Consumes.Contains(TEXT("application/x-www-form-urlencoded")))
	{
	}
	else
	{
		UE_LOG(LogOpenAPI, Error, TEXT("Request ContentType not supported (%s)"), *FString::Join(Consumes, TEXT(",")));
	}
}

void OpenAPIAdAccountsApi::AnalyticsGetReportResponse::SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode)
{
	Response::SetHttpResponseCode(InHttpResponseCode);
	switch ((int)InHttpResponseCode)
	{
	case 200:
		SetResponseString(TEXT("Success"));
		break;
	case 400:
		SetResponseString(TEXT("Invalid ad account ads analytics parameters."));
		break;
	case 0:
	default:
		SetResponseString(TEXT("Unexpected error"));
		break;
	}
}

bool OpenAPIAdAccountsApi::AnalyticsGetReportResponse::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	return TryGetJsonValue(JsonValue, Content);
}

inline FString ToString(const OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum& Value)
{
	switch (Value)
	{
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::AdAccountId:
		return TEXT("AD_ACCOUNT_ID");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::AdGroupEntityStatus:
		return TEXT("AD_GROUP_ENTITY_STATUS");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::AdGroupId:
		return TEXT("AD_GROUP_ID");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::AdId:
		return TEXT("AD_ID");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::CampaignDailySpendCap:
		return TEXT("CAMPAIGN_DAILY_SPEND_CAP");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::CampaignEntityStatus:
		return TEXT("CAMPAIGN_ENTITY_STATUS");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::CampaignId:
		return TEXT("CAMPAIGN_ID");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::CampaignLifetimeSpendCap:
		return TEXT("CAMPAIGN_LIFETIME_SPEND_CAP");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::CampaignName:
		return TEXT("CAMPAIGN_NAME");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::CheckoutRoas:
		return TEXT("CHECKOUT_ROAS");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::CLICKTHROUGH1:
		return TEXT("CLICKTHROUGH_1");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::CLICKTHROUGH1GROSS:
		return TEXT("CLICKTHROUGH_1_GROSS");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::CLICKTHROUGH2:
		return TEXT("CLICKTHROUGH_2");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::CpcInMicroDollar:
		return TEXT("CPC_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::CpmInDollar:
		return TEXT("CPM_IN_DOLLAR");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::CpmInMicroDollar:
		return TEXT("CPM_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::Ctr:
		return TEXT("CTR");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::CTR2:
		return TEXT("CTR_2");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::EcpcvInDollar:
		return TEXT("ECPCV_IN_DOLLAR");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::ECPCVP95INDOLLAR:
		return TEXT("ECPCV_P95_IN_DOLLAR");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::EcpcInDollar:
		return TEXT("ECPC_IN_DOLLAR");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::EcpcInMicroDollar:
		return TEXT("ECPC_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::EcpeInDollar:
		return TEXT("ECPE_IN_DOLLAR");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::EcpmInMicroDollar:
		return TEXT("ECPM_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::EcpvInDollar:
		return TEXT("ECPV_IN_DOLLAR");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::Ectr:
		return TEXT("ECTR");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::EengagementRate:
		return TEXT("EENGAGEMENT_RATE");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::ENGAGEMENT1:
		return TEXT("ENGAGEMENT_1");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::ENGAGEMENT2:
		return TEXT("ENGAGEMENT_2");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::EngagementRate:
		return TEXT("ENGAGEMENT_RATE");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::IDEAPINPRODUCTTAGVISIT1:
		return TEXT("IDEA_PIN_PRODUCT_TAG_VISIT_1");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::IDEAPINPRODUCTTAGVISIT2:
		return TEXT("IDEA_PIN_PRODUCT_TAG_VISIT_2");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::IMPRESSION1:
		return TEXT("IMPRESSION_1");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::IMPRESSION1GROSS:
		return TEXT("IMPRESSION_1_GROSS");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::IMPRESSION2:
		return TEXT("IMPRESSION_2");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::InappCheckoutCostPerAction:
		return TEXT("INAPP_CHECKOUT_COST_PER_ACTION");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::OUTBOUNDCLICK1:
		return TEXT("OUTBOUND_CLICK_1");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::OUTBOUNDCLICK2:
		return TEXT("OUTBOUND_CLICK_2");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::PageVisitCostPerAction:
		return TEXT("PAGE_VISIT_COST_PER_ACTION");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::PageVisitRoas:
		return TEXT("PAGE_VISIT_ROAS");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::PaidImpression:
		return TEXT("PAID_IMPRESSION");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::PinId:
		return TEXT("PIN_ID");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::REPIN1:
		return TEXT("REPIN_1");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::REPIN2:
		return TEXT("REPIN_2");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::RepinRate:
		return TEXT("REPIN_RATE");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::SpendInDollar:
		return TEXT("SPEND_IN_DOLLAR");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::SpendInMicroDollar:
		return TEXT("SPEND_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalCheckout:
		return TEXT("TOTAL_CHECKOUT");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalCheckoutValueInMicroDollar:
		return TEXT("TOTAL_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalClickthrough:
		return TEXT("TOTAL_CLICKTHROUGH");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalClickCheckout:
		return TEXT("TOTAL_CLICK_CHECKOUT");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalClickCheckoutValueInMicroDollar:
		return TEXT("TOTAL_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalClickLead:
		return TEXT("TOTAL_CLICK_LEAD");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalClickSignup:
		return TEXT("TOTAL_CLICK_SIGNUP");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalClickSignupValueInMicroDollar:
		return TEXT("TOTAL_CLICK_SIGNUP_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalConversions:
		return TEXT("TOTAL_CONVERSIONS");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalCustom:
		return TEXT("TOTAL_CUSTOM");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalEngagement:
		return TEXT("TOTAL_ENGAGEMENT");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalEngagementCheckout:
		return TEXT("TOTAL_ENGAGEMENT_CHECKOUT");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalEngagementCheckoutValueInMicroDollar:
		return TEXT("TOTAL_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalEngagementLead:
		return TEXT("TOTAL_ENGAGEMENT_LEAD");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalEngagementSignup:
		return TEXT("TOTAL_ENGAGEMENT_SIGNUP");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalEngagementSignupValueInMicroDollar:
		return TEXT("TOTAL_ENGAGEMENT_SIGNUP_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalIdeaPinProductTagVisit:
		return TEXT("TOTAL_IDEA_PIN_PRODUCT_TAG_VISIT");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalImpressionFrequency:
		return TEXT("TOTAL_IMPRESSION_FREQUENCY");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalImpressionUser:
		return TEXT("TOTAL_IMPRESSION_USER");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalLead:
		return TEXT("TOTAL_LEAD");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalPageVisit:
		return TEXT("TOTAL_PAGE_VISIT");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalRepinRate:
		return TEXT("TOTAL_REPIN_RATE");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalSignup:
		return TEXT("TOTAL_SIGNUP");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalSignupValueInMicroDollar:
		return TEXT("TOTAL_SIGNUP_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TOTALVIDEO3SECVIEWS:
		return TEXT("TOTAL_VIDEO_3SEC_VIEWS");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalVideoAvgWatchtimeInSecond:
		return TEXT("TOTAL_VIDEO_AVG_WATCHTIME_IN_SECOND");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalVideoMrcViews:
		return TEXT("TOTAL_VIDEO_MRC_VIEWS");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP0COMBINED:
		return TEXT("TOTAL_VIDEO_P0_COMBINED");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP100COMPLETE:
		return TEXT("TOTAL_VIDEO_P100_COMPLETE");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP25COMBINED:
		return TEXT("TOTAL_VIDEO_P25_COMBINED");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP50COMBINED:
		return TEXT("TOTAL_VIDEO_P50_COMBINED");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP75COMBINED:
		return TEXT("TOTAL_VIDEO_P75_COMBINED");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP95COMBINED:
		return TEXT("TOTAL_VIDEO_P95_COMBINED");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalViewCheckout:
		return TEXT("TOTAL_VIEW_CHECKOUT");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalViewCheckoutValueInMicroDollar:
		return TEXT("TOTAL_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalViewLead:
		return TEXT("TOTAL_VIEW_LEAD");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalViewSignup:
		return TEXT("TOTAL_VIEW_SIGNUP");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalViewSignupValueInMicroDollar:
		return TEXT("TOTAL_VIEW_SIGNUP_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalWebCheckout:
		return TEXT("TOTAL_WEB_CHECKOUT");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalWebCheckoutValueInMicroDollar:
		return TEXT("TOTAL_WEB_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalWebClickCheckout:
		return TEXT("TOTAL_WEB_CLICK_CHECKOUT");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalWebClickCheckoutValueInMicroDollar:
		return TEXT("TOTAL_WEB_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalWebEngagementCheckout:
		return TEXT("TOTAL_WEB_ENGAGEMENT_CHECKOUT");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalWebEngagementCheckoutValueInMicroDollar:
		return TEXT("TOTAL_WEB_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalWebViewCheckout:
		return TEXT("TOTAL_WEB_VIEW_CHECKOUT");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalWebViewCheckoutValueInMicroDollar:
		return TEXT("TOTAL_WEB_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::VIDEO3SECVIEWS2:
		return TEXT("VIDEO_3SEC_VIEWS_2");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::VideoLength:
		return TEXT("VIDEO_LENGTH");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::VIDEOMRCVIEWS2:
		return TEXT("VIDEO_MRC_VIEWS_2");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::VIDEOP0COMBINED2:
		return TEXT("VIDEO_P0_COMBINED_2");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::VIDEOP100COMPLETE2:
		return TEXT("VIDEO_P100_COMPLETE_2");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::VIDEOP25COMBINED2:
		return TEXT("VIDEO_P25_COMBINED_2");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::VIDEOP50COMBINED2:
		return TEXT("VIDEO_P50_COMBINED_2");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::VIDEOP75COMBINED2:
		return TEXT("VIDEO_P75_COMBINED_2");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::VIDEOP95COMBINED2:
		return TEXT("VIDEO_P95_COMBINED_2");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::WebCheckoutCostPerAction:
		return TEXT("WEB_CHECKOUT_COST_PER_ACTION");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::WebCheckoutRoas:
		return TEXT("WEB_CHECKOUT_ROAS");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::EnumToString(const OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum& Value)
{
	static TMap<FString, OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum> StringToEnum = { 
		{ TEXT("AD_ACCOUNT_ID"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::AdAccountId },
		{ TEXT("AD_GROUP_ENTITY_STATUS"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::AdGroupEntityStatus },
		{ TEXT("AD_GROUP_ID"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::AdGroupId },
		{ TEXT("AD_ID"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::AdId },
		{ TEXT("CAMPAIGN_DAILY_SPEND_CAP"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::CampaignDailySpendCap },
		{ TEXT("CAMPAIGN_ENTITY_STATUS"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::CampaignEntityStatus },
		{ TEXT("CAMPAIGN_ID"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::CampaignId },
		{ TEXT("CAMPAIGN_LIFETIME_SPEND_CAP"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::CampaignLifetimeSpendCap },
		{ TEXT("CAMPAIGN_NAME"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::CampaignName },
		{ TEXT("CHECKOUT_ROAS"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::CheckoutRoas },
		{ TEXT("CLICKTHROUGH_1"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::CLICKTHROUGH1 },
		{ TEXT("CLICKTHROUGH_1_GROSS"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::CLICKTHROUGH1GROSS },
		{ TEXT("CLICKTHROUGH_2"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::CLICKTHROUGH2 },
		{ TEXT("CPC_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::CpcInMicroDollar },
		{ TEXT("CPM_IN_DOLLAR"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::CpmInDollar },
		{ TEXT("CPM_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::CpmInMicroDollar },
		{ TEXT("CTR"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::Ctr },
		{ TEXT("CTR_2"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::CTR2 },
		{ TEXT("ECPCV_IN_DOLLAR"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::EcpcvInDollar },
		{ TEXT("ECPCV_P95_IN_DOLLAR"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::ECPCVP95INDOLLAR },
		{ TEXT("ECPC_IN_DOLLAR"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::EcpcInDollar },
		{ TEXT("ECPC_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::EcpcInMicroDollar },
		{ TEXT("ECPE_IN_DOLLAR"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::EcpeInDollar },
		{ TEXT("ECPM_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::EcpmInMicroDollar },
		{ TEXT("ECPV_IN_DOLLAR"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::EcpvInDollar },
		{ TEXT("ECTR"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::Ectr },
		{ TEXT("EENGAGEMENT_RATE"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::EengagementRate },
		{ TEXT("ENGAGEMENT_1"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::ENGAGEMENT1 },
		{ TEXT("ENGAGEMENT_2"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::ENGAGEMENT2 },
		{ TEXT("ENGAGEMENT_RATE"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::EngagementRate },
		{ TEXT("IDEA_PIN_PRODUCT_TAG_VISIT_1"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::IDEAPINPRODUCTTAGVISIT1 },
		{ TEXT("IDEA_PIN_PRODUCT_TAG_VISIT_2"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::IDEAPINPRODUCTTAGVISIT2 },
		{ TEXT("IMPRESSION_1"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::IMPRESSION1 },
		{ TEXT("IMPRESSION_1_GROSS"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::IMPRESSION1GROSS },
		{ TEXT("IMPRESSION_2"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::IMPRESSION2 },
		{ TEXT("INAPP_CHECKOUT_COST_PER_ACTION"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::InappCheckoutCostPerAction },
		{ TEXT("OUTBOUND_CLICK_1"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::OUTBOUNDCLICK1 },
		{ TEXT("OUTBOUND_CLICK_2"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::OUTBOUNDCLICK2 },
		{ TEXT("PAGE_VISIT_COST_PER_ACTION"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::PageVisitCostPerAction },
		{ TEXT("PAGE_VISIT_ROAS"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::PageVisitRoas },
		{ TEXT("PAID_IMPRESSION"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::PaidImpression },
		{ TEXT("PIN_ID"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::PinId },
		{ TEXT("REPIN_1"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::REPIN1 },
		{ TEXT("REPIN_2"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::REPIN2 },
		{ TEXT("REPIN_RATE"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::RepinRate },
		{ TEXT("SPEND_IN_DOLLAR"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::SpendInDollar },
		{ TEXT("SPEND_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::SpendInMicroDollar },
		{ TEXT("TOTAL_CHECKOUT"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalCheckout },
		{ TEXT("TOTAL_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_CLICKTHROUGH"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalClickthrough },
		{ TEXT("TOTAL_CLICK_CHECKOUT"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalClickCheckout },
		{ TEXT("TOTAL_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalClickCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_CLICK_LEAD"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalClickLead },
		{ TEXT("TOTAL_CLICK_SIGNUP"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalClickSignup },
		{ TEXT("TOTAL_CLICK_SIGNUP_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalClickSignupValueInMicroDollar },
		{ TEXT("TOTAL_CONVERSIONS"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalConversions },
		{ TEXT("TOTAL_CUSTOM"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalCustom },
		{ TEXT("TOTAL_ENGAGEMENT"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalEngagement },
		{ TEXT("TOTAL_ENGAGEMENT_CHECKOUT"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalEngagementCheckout },
		{ TEXT("TOTAL_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalEngagementCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_ENGAGEMENT_LEAD"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalEngagementLead },
		{ TEXT("TOTAL_ENGAGEMENT_SIGNUP"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalEngagementSignup },
		{ TEXT("TOTAL_ENGAGEMENT_SIGNUP_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalEngagementSignupValueInMicroDollar },
		{ TEXT("TOTAL_IDEA_PIN_PRODUCT_TAG_VISIT"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalIdeaPinProductTagVisit },
		{ TEXT("TOTAL_IMPRESSION_FREQUENCY"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalImpressionFrequency },
		{ TEXT("TOTAL_IMPRESSION_USER"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalImpressionUser },
		{ TEXT("TOTAL_LEAD"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalLead },
		{ TEXT("TOTAL_PAGE_VISIT"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalPageVisit },
		{ TEXT("TOTAL_REPIN_RATE"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalRepinRate },
		{ TEXT("TOTAL_SIGNUP"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalSignup },
		{ TEXT("TOTAL_SIGNUP_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalSignupValueInMicroDollar },
		{ TEXT("TOTAL_VIDEO_3SEC_VIEWS"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TOTALVIDEO3SECVIEWS },
		{ TEXT("TOTAL_VIDEO_AVG_WATCHTIME_IN_SECOND"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalVideoAvgWatchtimeInSecond },
		{ TEXT("TOTAL_VIDEO_MRC_VIEWS"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalVideoMrcViews },
		{ TEXT("TOTAL_VIDEO_P0_COMBINED"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP0COMBINED },
		{ TEXT("TOTAL_VIDEO_P100_COMPLETE"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP100COMPLETE },
		{ TEXT("TOTAL_VIDEO_P25_COMBINED"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP25COMBINED },
		{ TEXT("TOTAL_VIDEO_P50_COMBINED"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP50COMBINED },
		{ TEXT("TOTAL_VIDEO_P75_COMBINED"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP75COMBINED },
		{ TEXT("TOTAL_VIDEO_P95_COMBINED"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP95COMBINED },
		{ TEXT("TOTAL_VIEW_CHECKOUT"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalViewCheckout },
		{ TEXT("TOTAL_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalViewCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_VIEW_LEAD"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalViewLead },
		{ TEXT("TOTAL_VIEW_SIGNUP"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalViewSignup },
		{ TEXT("TOTAL_VIEW_SIGNUP_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalViewSignupValueInMicroDollar },
		{ TEXT("TOTAL_WEB_CHECKOUT"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalWebCheckout },
		{ TEXT("TOTAL_WEB_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalWebCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_WEB_CLICK_CHECKOUT"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalWebClickCheckout },
		{ TEXT("TOTAL_WEB_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalWebClickCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_WEB_ENGAGEMENT_CHECKOUT"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalWebEngagementCheckout },
		{ TEXT("TOTAL_WEB_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalWebEngagementCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_WEB_VIEW_CHECKOUT"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalWebViewCheckout },
		{ TEXT("TOTAL_WEB_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::TotalWebViewCheckoutValueInMicroDollar },
		{ TEXT("VIDEO_3SEC_VIEWS_2"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::VIDEO3SECVIEWS2 },
		{ TEXT("VIDEO_LENGTH"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::VideoLength },
		{ TEXT("VIDEO_MRC_VIEWS_2"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::VIDEOMRCVIEWS2 },
		{ TEXT("VIDEO_P0_COMBINED_2"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::VIDEOP0COMBINED2 },
		{ TEXT("VIDEO_P100_COMPLETE_2"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::VIDEOP100COMPLETE2 },
		{ TEXT("VIDEO_P25_COMBINED_2"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::VIDEOP25COMBINED2 },
		{ TEXT("VIDEO_P50_COMBINED_2"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::VIDEOP50COMBINED2 },
		{ TEXT("VIDEO_P75_COMBINED_2"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::VIDEOP75COMBINED2 },
		{ TEXT("VIDEO_P95_COMBINED_2"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::VIDEOP95COMBINED2 },
		{ TEXT("WEB_CHECKOUT_COST_PER_ACTION"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::WebCheckoutCostPerAction },
		{ TEXT("WEB_CHECKOUT_ROAS"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum::WebCheckoutRoas }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::EnumFromString(const FString& EnumAsString, OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline FStringFormatArg ToStringFormatArg(const OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum& Value)
{
	return FStringFormatArg(ToString(Value));
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ColumnsEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

inline FString ToString(const OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ClickWindowDaysEnum& Value)
{
	switch (Value)
	{
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ClickWindowDaysEnum::_1:
		return TEXT("1");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ClickWindowDaysEnum::_7:
		return TEXT("7");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ClickWindowDaysEnum::_30:
		return TEXT("30");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ClickWindowDaysEnum::_60:
		return TEXT("60");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ClickWindowDaysEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::EnumToString(const OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ClickWindowDaysEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ClickWindowDaysEnum& Value)
{
	static TMap<FString, OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ClickWindowDaysEnum> StringToEnum = { 
		{ TEXT("1"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ClickWindowDaysEnum::_1 },
		{ TEXT("7"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ClickWindowDaysEnum::_7 },
		{ TEXT("30"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ClickWindowDaysEnum::_30 },
		{ TEXT("60"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ClickWindowDaysEnum::_60 }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::EnumFromString(const FString& EnumAsString, OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ClickWindowDaysEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline FStringFormatArg ToStringFormatArg(const OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ClickWindowDaysEnum& Value)
{
	return FStringFormatArg(ToString(Value));
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ClickWindowDaysEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ClickWindowDaysEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

inline FString ToString(const OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::EngagementWindowDaysEnum& Value)
{
	switch (Value)
	{
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::EngagementWindowDaysEnum::_1:
		return TEXT("1");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::EngagementWindowDaysEnum::_7:
		return TEXT("7");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::EngagementWindowDaysEnum::_30:
		return TEXT("30");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::EngagementWindowDaysEnum::_60:
		return TEXT("60");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::EngagementWindowDaysEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::EnumToString(const OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::EngagementWindowDaysEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::EngagementWindowDaysEnum& Value)
{
	static TMap<FString, OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::EngagementWindowDaysEnum> StringToEnum = { 
		{ TEXT("1"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::EngagementWindowDaysEnum::_1 },
		{ TEXT("7"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::EngagementWindowDaysEnum::_7 },
		{ TEXT("30"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::EngagementWindowDaysEnum::_30 },
		{ TEXT("60"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::EngagementWindowDaysEnum::_60 }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::EnumFromString(const FString& EnumAsString, OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::EngagementWindowDaysEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline FStringFormatArg ToStringFormatArg(const OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::EngagementWindowDaysEnum& Value)
{
	return FStringFormatArg(ToString(Value));
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::EngagementWindowDaysEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::EngagementWindowDaysEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

inline FString ToString(const OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ViewWindowDaysEnum& Value)
{
	switch (Value)
	{
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ViewWindowDaysEnum::_1:
		return TEXT("1");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ViewWindowDaysEnum::_7:
		return TEXT("7");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ViewWindowDaysEnum::_30:
		return TEXT("30");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ViewWindowDaysEnum::_60:
		return TEXT("60");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ViewWindowDaysEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::EnumToString(const OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ViewWindowDaysEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ViewWindowDaysEnum& Value)
{
	static TMap<FString, OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ViewWindowDaysEnum> StringToEnum = { 
		{ TEXT("1"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ViewWindowDaysEnum::_1 },
		{ TEXT("7"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ViewWindowDaysEnum::_7 },
		{ TEXT("30"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ViewWindowDaysEnum::_30 },
		{ TEXT("60"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ViewWindowDaysEnum::_60 }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::EnumFromString(const FString& EnumAsString, OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ViewWindowDaysEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline FStringFormatArg ToStringFormatArg(const OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ViewWindowDaysEnum& Value)
{
	return FStringFormatArg(ToString(Value));
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ViewWindowDaysEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ViewWindowDaysEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

inline FString ToString(const OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ConversionReportTimeEnum& Value)
{
	switch (Value)
	{
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ConversionReportTimeEnum::AdAction:
		return TEXT("TIME_OF_AD_ACTION");
	case OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ConversionReportTimeEnum::Conversion:
		return TEXT("TIME_OF_CONVERSION");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ConversionReportTimeEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::EnumToString(const OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ConversionReportTimeEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ConversionReportTimeEnum& Value)
{
	static TMap<FString, OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ConversionReportTimeEnum> StringToEnum = { 
		{ TEXT("TIME_OF_AD_ACTION"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ConversionReportTimeEnum::AdAction },
		{ TEXT("TIME_OF_CONVERSION"), OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ConversionReportTimeEnum::Conversion }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::EnumFromString(const FString& EnumAsString, OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ConversionReportTimeEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline FStringFormatArg ToStringFormatArg(const OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ConversionReportTimeEnum& Value)
{
	return FStringFormatArg(ToString(Value));
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ConversionReportTimeEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ConversionReportTimeEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

FString OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::ComputePath() const
{
	TMap<FString, FStringFormatArg> PathParams = { 
	{ TEXT("ad_account_id"), ToStringFormatArg(AdAccountId) } };

	FString Path = FString::Format(TEXT("/ad_accounts/{ad_account_id}/campaigns/analytics"), PathParams);

	TArray<FString> QueryParams;
	QueryParams.Add(FString(TEXT("start_date=")) + ToUrlString(StartDate));
	QueryParams.Add(FString(TEXT("end_date=")) + ToUrlString(EndDate));
	QueryParams.Add(FString(TEXT("campaign_ids=")) + CollectionToUrlString_multi(CampaignIds, TEXT("campaign_ids")));
	QueryParams.Add(FString(TEXT("columns=")) + CollectionToUrlString_csv(Columns, TEXT("columns")));
	QueryParams.Add(FString(TEXT("granularity=")) + ToUrlString(Granularity));
	if(ClickWindowDays.IsSet())
	{
		QueryParams.Add(FString(TEXT("click_window_days=")) + ToUrlString(ClickWindowDays.GetValue()));
	}
	if(EngagementWindowDays.IsSet())
	{
		QueryParams.Add(FString(TEXT("engagement_window_days=")) + ToUrlString(EngagementWindowDays.GetValue()));
	}
	if(ViewWindowDays.IsSet())
	{
		QueryParams.Add(FString(TEXT("view_window_days=")) + ToUrlString(ViewWindowDays.GetValue()));
	}
	if(ConversionReportTime.IsSet())
	{
		QueryParams.Add(FString(TEXT("conversion_report_time=")) + ToUrlString(ConversionReportTime.GetValue()));
	}
	Path += TCHAR('?');
	Path += FString::Join(QueryParams, TEXT("&"));

	return Path;
}

void OpenAPIAdAccountsApi::CampaignsAnalyticsRequest::SetupHttpRequest(const FHttpRequestRef& HttpRequest) const
{
	static const TArray<FString> Consumes = {  };
	//static const TArray<FString> Produces = { TEXT("application/json") };

	HttpRequest->SetVerb(TEXT("GET"));

	// Default to Json Body request
	if (Consumes.Num() == 0 || Consumes.Contains(TEXT("application/json")))
	{
		// Form parameters
		FString JsonBody;
		JsonWriter Writer = TJsonWriterFactory<>::Create(&JsonBody);
		Writer->WriteObjectStart();
		Writer->WriteObjectEnd();
		Writer->Close();
		HttpRequest->SetHeader(TEXT("Content-Type"), TEXT("application/json; charset=utf-8"));
		HttpRequest->SetContentAsString(JsonBody);
	}
	else if (Consumes.Contains(TEXT("multipart/form-data")))
	{
	}
	else if (Consumes.Contains(TEXT("application/x-www-form-urlencoded")))
	{
	}
	else
	{
		UE_LOG(LogOpenAPI, Error, TEXT("Request ContentType not supported (%s)"), *FString::Join(Consumes, TEXT(",")));
	}
}

void OpenAPIAdAccountsApi::CampaignsAnalyticsResponse::SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode)
{
	Response::SetHttpResponseCode(InHttpResponseCode);
	switch ((int)InHttpResponseCode)
	{
	case 200:
		SetResponseString(TEXT("Success"));
		break;
	case 400:
		SetResponseString(TEXT("Invalid ad account campaign analytics parameters."));
		break;
	case 0:
	default:
		SetResponseString(TEXT("Unexpected error"));
		break;
	}
}

bool OpenAPIAdAccountsApi::CampaignsAnalyticsResponse::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	return TryGetJsonValue(JsonValue, Content);
}

inline FString ToString(const OpenAPIAdAccountsApi::CampaignsListRequest::EntityStatusesEnum& Value)
{
	switch (Value)
	{
	case OpenAPIAdAccountsApi::CampaignsListRequest::EntityStatusesEnum::Active:
		return TEXT("ACTIVE");
	case OpenAPIAdAccountsApi::CampaignsListRequest::EntityStatusesEnum::Paused:
		return TEXT("PAUSED");
	case OpenAPIAdAccountsApi::CampaignsListRequest::EntityStatusesEnum::Archived:
		return TEXT("ARCHIVED");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIAdAccountsApi::CampaignsListRequest::EntityStatusesEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIAdAccountsApi::CampaignsListRequest::EnumToString(const OpenAPIAdAccountsApi::CampaignsListRequest::EntityStatusesEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIAdAccountsApi::CampaignsListRequest::EntityStatusesEnum& Value)
{
	static TMap<FString, OpenAPIAdAccountsApi::CampaignsListRequest::EntityStatusesEnum> StringToEnum = { 
		{ TEXT("ACTIVE"), OpenAPIAdAccountsApi::CampaignsListRequest::EntityStatusesEnum::Active },
		{ TEXT("PAUSED"), OpenAPIAdAccountsApi::CampaignsListRequest::EntityStatusesEnum::Paused },
		{ TEXT("ARCHIVED"), OpenAPIAdAccountsApi::CampaignsListRequest::EntityStatusesEnum::Archived }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIAdAccountsApi::CampaignsListRequest::EnumFromString(const FString& EnumAsString, OpenAPIAdAccountsApi::CampaignsListRequest::EntityStatusesEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline FStringFormatArg ToStringFormatArg(const OpenAPIAdAccountsApi::CampaignsListRequest::EntityStatusesEnum& Value)
{
	return FStringFormatArg(ToString(Value));
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIAdAccountsApi::CampaignsListRequest::EntityStatusesEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIAdAccountsApi::CampaignsListRequest::EntityStatusesEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

inline FString ToString(const OpenAPIAdAccountsApi::CampaignsListRequest::OrderEnum& Value)
{
	switch (Value)
	{
	case OpenAPIAdAccountsApi::CampaignsListRequest::OrderEnum::Ascending:
		return TEXT("ASCENDING");
	case OpenAPIAdAccountsApi::CampaignsListRequest::OrderEnum::Descending:
		return TEXT("DESCENDING");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIAdAccountsApi::CampaignsListRequest::OrderEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIAdAccountsApi::CampaignsListRequest::EnumToString(const OpenAPIAdAccountsApi::CampaignsListRequest::OrderEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIAdAccountsApi::CampaignsListRequest::OrderEnum& Value)
{
	static TMap<FString, OpenAPIAdAccountsApi::CampaignsListRequest::OrderEnum> StringToEnum = { 
		{ TEXT("ASCENDING"), OpenAPIAdAccountsApi::CampaignsListRequest::OrderEnum::Ascending },
		{ TEXT("DESCENDING"), OpenAPIAdAccountsApi::CampaignsListRequest::OrderEnum::Descending }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIAdAccountsApi::CampaignsListRequest::EnumFromString(const FString& EnumAsString, OpenAPIAdAccountsApi::CampaignsListRequest::OrderEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline FStringFormatArg ToStringFormatArg(const OpenAPIAdAccountsApi::CampaignsListRequest::OrderEnum& Value)
{
	return FStringFormatArg(ToString(Value));
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIAdAccountsApi::CampaignsListRequest::OrderEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIAdAccountsApi::CampaignsListRequest::OrderEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

FString OpenAPIAdAccountsApi::CampaignsListRequest::ComputePath() const
{
	TMap<FString, FStringFormatArg> PathParams = { 
	{ TEXT("ad_account_id"), ToStringFormatArg(AdAccountId) } };

	FString Path = FString::Format(TEXT("/ad_accounts/{ad_account_id}/campaigns"), PathParams);

	TArray<FString> QueryParams;
	if(CampaignIds.IsSet())
	{
		QueryParams.Add(FString(TEXT("campaign_ids=")) + CollectionToUrlString_multi(CampaignIds.GetValue(), TEXT("campaign_ids")));
	}
	if(EntityStatuses.IsSet())
	{
		QueryParams.Add(FString(TEXT("entity_statuses=")) + CollectionToUrlString_multi(EntityStatuses.GetValue(), TEXT("entity_statuses")));
	}
	if(PageSize.IsSet())
	{
		QueryParams.Add(FString(TEXT("page_size=")) + ToUrlString(PageSize.GetValue()));
	}
	if(Order.IsSet())
	{
		QueryParams.Add(FString(TEXT("order=")) + ToUrlString(Order.GetValue()));
	}
	if(Bookmark.IsSet())
	{
		QueryParams.Add(FString(TEXT("bookmark=")) + ToUrlString(Bookmark.GetValue()));
	}
	Path += TCHAR('?');
	Path += FString::Join(QueryParams, TEXT("&"));

	return Path;
}

void OpenAPIAdAccountsApi::CampaignsListRequest::SetupHttpRequest(const FHttpRequestRef& HttpRequest) const
{
	static const TArray<FString> Consumes = {  };
	//static const TArray<FString> Produces = { TEXT("application/json") };

	HttpRequest->SetVerb(TEXT("GET"));

	// Default to Json Body request
	if (Consumes.Num() == 0 || Consumes.Contains(TEXT("application/json")))
	{
		// Form parameters
		FString JsonBody;
		JsonWriter Writer = TJsonWriterFactory<>::Create(&JsonBody);
		Writer->WriteObjectStart();
		Writer->WriteObjectEnd();
		Writer->Close();
		HttpRequest->SetHeader(TEXT("Content-Type"), TEXT("application/json; charset=utf-8"));
		HttpRequest->SetContentAsString(JsonBody);
	}
	else if (Consumes.Contains(TEXT("multipart/form-data")))
	{
	}
	else if (Consumes.Contains(TEXT("application/x-www-form-urlencoded")))
	{
	}
	else
	{
		UE_LOG(LogOpenAPI, Error, TEXT("Request ContentType not supported (%s)"), *FString::Join(Consumes, TEXT(",")));
	}
}

void OpenAPIAdAccountsApi::CampaignsListResponse::SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode)
{
	Response::SetHttpResponseCode(InHttpResponseCode);
	switch ((int)InHttpResponseCode)
	{
	case 200:
		SetResponseString(TEXT("Success"));
		break;
	case 400:
		SetResponseString(TEXT("Invalid ad account campaign parameters."));
		break;
	case 0:
	default:
		SetResponseString(TEXT("Unexpected error"));
		break;
	}
}

bool OpenAPIAdAccountsApi::CampaignsListResponse::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	return TryGetJsonValue(JsonValue, Content);
}

inline FString ToString(const OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum& Value)
{
	switch (Value)
	{
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::AdAccountId:
		return TEXT("AD_ACCOUNT_ID");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::AdGroupEntityStatus:
		return TEXT("AD_GROUP_ENTITY_STATUS");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::AdGroupId:
		return TEXT("AD_GROUP_ID");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::AdId:
		return TEXT("AD_ID");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::CampaignDailySpendCap:
		return TEXT("CAMPAIGN_DAILY_SPEND_CAP");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::CampaignEntityStatus:
		return TEXT("CAMPAIGN_ENTITY_STATUS");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::CampaignId:
		return TEXT("CAMPAIGN_ID");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::CampaignLifetimeSpendCap:
		return TEXT("CAMPAIGN_LIFETIME_SPEND_CAP");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::CampaignName:
		return TEXT("CAMPAIGN_NAME");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::CheckoutRoas:
		return TEXT("CHECKOUT_ROAS");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::CLICKTHROUGH1:
		return TEXT("CLICKTHROUGH_1");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::CLICKTHROUGH1GROSS:
		return TEXT("CLICKTHROUGH_1_GROSS");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::CLICKTHROUGH2:
		return TEXT("CLICKTHROUGH_2");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::CpcInMicroDollar:
		return TEXT("CPC_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::CpmInDollar:
		return TEXT("CPM_IN_DOLLAR");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::CpmInMicroDollar:
		return TEXT("CPM_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::Ctr:
		return TEXT("CTR");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::CTR2:
		return TEXT("CTR_2");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::EcpcvInDollar:
		return TEXT("ECPCV_IN_DOLLAR");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::ECPCVP95INDOLLAR:
		return TEXT("ECPCV_P95_IN_DOLLAR");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::EcpcInDollar:
		return TEXT("ECPC_IN_DOLLAR");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::EcpcInMicroDollar:
		return TEXT("ECPC_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::EcpeInDollar:
		return TEXT("ECPE_IN_DOLLAR");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::EcpmInMicroDollar:
		return TEXT("ECPM_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::EcpvInDollar:
		return TEXT("ECPV_IN_DOLLAR");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::Ectr:
		return TEXT("ECTR");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::EengagementRate:
		return TEXT("EENGAGEMENT_RATE");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::ENGAGEMENT1:
		return TEXT("ENGAGEMENT_1");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::ENGAGEMENT2:
		return TEXT("ENGAGEMENT_2");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::EngagementRate:
		return TEXT("ENGAGEMENT_RATE");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::IDEAPINPRODUCTTAGVISIT1:
		return TEXT("IDEA_PIN_PRODUCT_TAG_VISIT_1");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::IDEAPINPRODUCTTAGVISIT2:
		return TEXT("IDEA_PIN_PRODUCT_TAG_VISIT_2");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::IMPRESSION1:
		return TEXT("IMPRESSION_1");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::IMPRESSION1GROSS:
		return TEXT("IMPRESSION_1_GROSS");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::IMPRESSION2:
		return TEXT("IMPRESSION_2");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::InappCheckoutCostPerAction:
		return TEXT("INAPP_CHECKOUT_COST_PER_ACTION");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::OUTBOUNDCLICK1:
		return TEXT("OUTBOUND_CLICK_1");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::OUTBOUNDCLICK2:
		return TEXT("OUTBOUND_CLICK_2");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::PageVisitCostPerAction:
		return TEXT("PAGE_VISIT_COST_PER_ACTION");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::PageVisitRoas:
		return TEXT("PAGE_VISIT_ROAS");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::PaidImpression:
		return TEXT("PAID_IMPRESSION");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::PinId:
		return TEXT("PIN_ID");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::REPIN1:
		return TEXT("REPIN_1");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::REPIN2:
		return TEXT("REPIN_2");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::RepinRate:
		return TEXT("REPIN_RATE");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::SpendInDollar:
		return TEXT("SPEND_IN_DOLLAR");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::SpendInMicroDollar:
		return TEXT("SPEND_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalCheckout:
		return TEXT("TOTAL_CHECKOUT");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalCheckoutValueInMicroDollar:
		return TEXT("TOTAL_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalClickthrough:
		return TEXT("TOTAL_CLICKTHROUGH");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalClickCheckout:
		return TEXT("TOTAL_CLICK_CHECKOUT");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalClickCheckoutValueInMicroDollar:
		return TEXT("TOTAL_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalClickLead:
		return TEXT("TOTAL_CLICK_LEAD");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalClickSignup:
		return TEXT("TOTAL_CLICK_SIGNUP");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalClickSignupValueInMicroDollar:
		return TEXT("TOTAL_CLICK_SIGNUP_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalConversions:
		return TEXT("TOTAL_CONVERSIONS");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalCustom:
		return TEXT("TOTAL_CUSTOM");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalEngagement:
		return TEXT("TOTAL_ENGAGEMENT");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalEngagementCheckout:
		return TEXT("TOTAL_ENGAGEMENT_CHECKOUT");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalEngagementCheckoutValueInMicroDollar:
		return TEXT("TOTAL_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalEngagementLead:
		return TEXT("TOTAL_ENGAGEMENT_LEAD");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalEngagementSignup:
		return TEXT("TOTAL_ENGAGEMENT_SIGNUP");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalEngagementSignupValueInMicroDollar:
		return TEXT("TOTAL_ENGAGEMENT_SIGNUP_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalIdeaPinProductTagVisit:
		return TEXT("TOTAL_IDEA_PIN_PRODUCT_TAG_VISIT");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalImpressionFrequency:
		return TEXT("TOTAL_IMPRESSION_FREQUENCY");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalImpressionUser:
		return TEXT("TOTAL_IMPRESSION_USER");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalLead:
		return TEXT("TOTAL_LEAD");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalPageVisit:
		return TEXT("TOTAL_PAGE_VISIT");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalRepinRate:
		return TEXT("TOTAL_REPIN_RATE");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalSignup:
		return TEXT("TOTAL_SIGNUP");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalSignupValueInMicroDollar:
		return TEXT("TOTAL_SIGNUP_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TOTALVIDEO3SECVIEWS:
		return TEXT("TOTAL_VIDEO_3SEC_VIEWS");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalVideoAvgWatchtimeInSecond:
		return TEXT("TOTAL_VIDEO_AVG_WATCHTIME_IN_SECOND");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalVideoMrcViews:
		return TEXT("TOTAL_VIDEO_MRC_VIEWS");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP0COMBINED:
		return TEXT("TOTAL_VIDEO_P0_COMBINED");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP100COMPLETE:
		return TEXT("TOTAL_VIDEO_P100_COMPLETE");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP25COMBINED:
		return TEXT("TOTAL_VIDEO_P25_COMBINED");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP50COMBINED:
		return TEXT("TOTAL_VIDEO_P50_COMBINED");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP75COMBINED:
		return TEXT("TOTAL_VIDEO_P75_COMBINED");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP95COMBINED:
		return TEXT("TOTAL_VIDEO_P95_COMBINED");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalViewCheckout:
		return TEXT("TOTAL_VIEW_CHECKOUT");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalViewCheckoutValueInMicroDollar:
		return TEXT("TOTAL_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalViewLead:
		return TEXT("TOTAL_VIEW_LEAD");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalViewSignup:
		return TEXT("TOTAL_VIEW_SIGNUP");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalViewSignupValueInMicroDollar:
		return TEXT("TOTAL_VIEW_SIGNUP_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalWebCheckout:
		return TEXT("TOTAL_WEB_CHECKOUT");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalWebCheckoutValueInMicroDollar:
		return TEXT("TOTAL_WEB_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalWebClickCheckout:
		return TEXT("TOTAL_WEB_CLICK_CHECKOUT");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalWebClickCheckoutValueInMicroDollar:
		return TEXT("TOTAL_WEB_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalWebEngagementCheckout:
		return TEXT("TOTAL_WEB_ENGAGEMENT_CHECKOUT");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalWebEngagementCheckoutValueInMicroDollar:
		return TEXT("TOTAL_WEB_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalWebViewCheckout:
		return TEXT("TOTAL_WEB_VIEW_CHECKOUT");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalWebViewCheckoutValueInMicroDollar:
		return TEXT("TOTAL_WEB_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::VIDEO3SECVIEWS2:
		return TEXT("VIDEO_3SEC_VIEWS_2");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::VideoLength:
		return TEXT("VIDEO_LENGTH");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::VIDEOMRCVIEWS2:
		return TEXT("VIDEO_MRC_VIEWS_2");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::VIDEOP0COMBINED2:
		return TEXT("VIDEO_P0_COMBINED_2");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::VIDEOP100COMPLETE2:
		return TEXT("VIDEO_P100_COMPLETE_2");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::VIDEOP25COMBINED2:
		return TEXT("VIDEO_P25_COMBINED_2");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::VIDEOP50COMBINED2:
		return TEXT("VIDEO_P50_COMBINED_2");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::VIDEOP75COMBINED2:
		return TEXT("VIDEO_P75_COMBINED_2");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::VIDEOP95COMBINED2:
		return TEXT("VIDEO_P95_COMBINED_2");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::WebCheckoutCostPerAction:
		return TEXT("WEB_CHECKOUT_COST_PER_ACTION");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::WebCheckoutRoas:
		return TEXT("WEB_CHECKOUT_ROAS");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::EnumToString(const OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum& Value)
{
	static TMap<FString, OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum> StringToEnum = { 
		{ TEXT("AD_ACCOUNT_ID"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::AdAccountId },
		{ TEXT("AD_GROUP_ENTITY_STATUS"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::AdGroupEntityStatus },
		{ TEXT("AD_GROUP_ID"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::AdGroupId },
		{ TEXT("AD_ID"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::AdId },
		{ TEXT("CAMPAIGN_DAILY_SPEND_CAP"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::CampaignDailySpendCap },
		{ TEXT("CAMPAIGN_ENTITY_STATUS"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::CampaignEntityStatus },
		{ TEXT("CAMPAIGN_ID"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::CampaignId },
		{ TEXT("CAMPAIGN_LIFETIME_SPEND_CAP"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::CampaignLifetimeSpendCap },
		{ TEXT("CAMPAIGN_NAME"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::CampaignName },
		{ TEXT("CHECKOUT_ROAS"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::CheckoutRoas },
		{ TEXT("CLICKTHROUGH_1"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::CLICKTHROUGH1 },
		{ TEXT("CLICKTHROUGH_1_GROSS"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::CLICKTHROUGH1GROSS },
		{ TEXT("CLICKTHROUGH_2"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::CLICKTHROUGH2 },
		{ TEXT("CPC_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::CpcInMicroDollar },
		{ TEXT("CPM_IN_DOLLAR"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::CpmInDollar },
		{ TEXT("CPM_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::CpmInMicroDollar },
		{ TEXT("CTR"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::Ctr },
		{ TEXT("CTR_2"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::CTR2 },
		{ TEXT("ECPCV_IN_DOLLAR"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::EcpcvInDollar },
		{ TEXT("ECPCV_P95_IN_DOLLAR"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::ECPCVP95INDOLLAR },
		{ TEXT("ECPC_IN_DOLLAR"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::EcpcInDollar },
		{ TEXT("ECPC_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::EcpcInMicroDollar },
		{ TEXT("ECPE_IN_DOLLAR"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::EcpeInDollar },
		{ TEXT("ECPM_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::EcpmInMicroDollar },
		{ TEXT("ECPV_IN_DOLLAR"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::EcpvInDollar },
		{ TEXT("ECTR"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::Ectr },
		{ TEXT("EENGAGEMENT_RATE"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::EengagementRate },
		{ TEXT("ENGAGEMENT_1"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::ENGAGEMENT1 },
		{ TEXT("ENGAGEMENT_2"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::ENGAGEMENT2 },
		{ TEXT("ENGAGEMENT_RATE"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::EngagementRate },
		{ TEXT("IDEA_PIN_PRODUCT_TAG_VISIT_1"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::IDEAPINPRODUCTTAGVISIT1 },
		{ TEXT("IDEA_PIN_PRODUCT_TAG_VISIT_2"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::IDEAPINPRODUCTTAGVISIT2 },
		{ TEXT("IMPRESSION_1"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::IMPRESSION1 },
		{ TEXT("IMPRESSION_1_GROSS"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::IMPRESSION1GROSS },
		{ TEXT("IMPRESSION_2"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::IMPRESSION2 },
		{ TEXT("INAPP_CHECKOUT_COST_PER_ACTION"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::InappCheckoutCostPerAction },
		{ TEXT("OUTBOUND_CLICK_1"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::OUTBOUNDCLICK1 },
		{ TEXT("OUTBOUND_CLICK_2"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::OUTBOUNDCLICK2 },
		{ TEXT("PAGE_VISIT_COST_PER_ACTION"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::PageVisitCostPerAction },
		{ TEXT("PAGE_VISIT_ROAS"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::PageVisitRoas },
		{ TEXT("PAID_IMPRESSION"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::PaidImpression },
		{ TEXT("PIN_ID"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::PinId },
		{ TEXT("REPIN_1"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::REPIN1 },
		{ TEXT("REPIN_2"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::REPIN2 },
		{ TEXT("REPIN_RATE"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::RepinRate },
		{ TEXT("SPEND_IN_DOLLAR"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::SpendInDollar },
		{ TEXT("SPEND_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::SpendInMicroDollar },
		{ TEXT("TOTAL_CHECKOUT"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalCheckout },
		{ TEXT("TOTAL_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_CLICKTHROUGH"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalClickthrough },
		{ TEXT("TOTAL_CLICK_CHECKOUT"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalClickCheckout },
		{ TEXT("TOTAL_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalClickCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_CLICK_LEAD"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalClickLead },
		{ TEXT("TOTAL_CLICK_SIGNUP"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalClickSignup },
		{ TEXT("TOTAL_CLICK_SIGNUP_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalClickSignupValueInMicroDollar },
		{ TEXT("TOTAL_CONVERSIONS"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalConversions },
		{ TEXT("TOTAL_CUSTOM"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalCustom },
		{ TEXT("TOTAL_ENGAGEMENT"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalEngagement },
		{ TEXT("TOTAL_ENGAGEMENT_CHECKOUT"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalEngagementCheckout },
		{ TEXT("TOTAL_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalEngagementCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_ENGAGEMENT_LEAD"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalEngagementLead },
		{ TEXT("TOTAL_ENGAGEMENT_SIGNUP"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalEngagementSignup },
		{ TEXT("TOTAL_ENGAGEMENT_SIGNUP_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalEngagementSignupValueInMicroDollar },
		{ TEXT("TOTAL_IDEA_PIN_PRODUCT_TAG_VISIT"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalIdeaPinProductTagVisit },
		{ TEXT("TOTAL_IMPRESSION_FREQUENCY"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalImpressionFrequency },
		{ TEXT("TOTAL_IMPRESSION_USER"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalImpressionUser },
		{ TEXT("TOTAL_LEAD"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalLead },
		{ TEXT("TOTAL_PAGE_VISIT"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalPageVisit },
		{ TEXT("TOTAL_REPIN_RATE"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalRepinRate },
		{ TEXT("TOTAL_SIGNUP"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalSignup },
		{ TEXT("TOTAL_SIGNUP_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalSignupValueInMicroDollar },
		{ TEXT("TOTAL_VIDEO_3SEC_VIEWS"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TOTALVIDEO3SECVIEWS },
		{ TEXT("TOTAL_VIDEO_AVG_WATCHTIME_IN_SECOND"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalVideoAvgWatchtimeInSecond },
		{ TEXT("TOTAL_VIDEO_MRC_VIEWS"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalVideoMrcViews },
		{ TEXT("TOTAL_VIDEO_P0_COMBINED"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP0COMBINED },
		{ TEXT("TOTAL_VIDEO_P100_COMPLETE"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP100COMPLETE },
		{ TEXT("TOTAL_VIDEO_P25_COMBINED"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP25COMBINED },
		{ TEXT("TOTAL_VIDEO_P50_COMBINED"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP50COMBINED },
		{ TEXT("TOTAL_VIDEO_P75_COMBINED"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP75COMBINED },
		{ TEXT("TOTAL_VIDEO_P95_COMBINED"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TOTALVIDEOP95COMBINED },
		{ TEXT("TOTAL_VIEW_CHECKOUT"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalViewCheckout },
		{ TEXT("TOTAL_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalViewCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_VIEW_LEAD"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalViewLead },
		{ TEXT("TOTAL_VIEW_SIGNUP"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalViewSignup },
		{ TEXT("TOTAL_VIEW_SIGNUP_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalViewSignupValueInMicroDollar },
		{ TEXT("TOTAL_WEB_CHECKOUT"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalWebCheckout },
		{ TEXT("TOTAL_WEB_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalWebCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_WEB_CLICK_CHECKOUT"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalWebClickCheckout },
		{ TEXT("TOTAL_WEB_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalWebClickCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_WEB_ENGAGEMENT_CHECKOUT"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalWebEngagementCheckout },
		{ TEXT("TOTAL_WEB_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalWebEngagementCheckoutValueInMicroDollar },
		{ TEXT("TOTAL_WEB_VIEW_CHECKOUT"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalWebViewCheckout },
		{ TEXT("TOTAL_WEB_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::TotalWebViewCheckoutValueInMicroDollar },
		{ TEXT("VIDEO_3SEC_VIEWS_2"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::VIDEO3SECVIEWS2 },
		{ TEXT("VIDEO_LENGTH"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::VideoLength },
		{ TEXT("VIDEO_MRC_VIEWS_2"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::VIDEOMRCVIEWS2 },
		{ TEXT("VIDEO_P0_COMBINED_2"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::VIDEOP0COMBINED2 },
		{ TEXT("VIDEO_P100_COMPLETE_2"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::VIDEOP100COMPLETE2 },
		{ TEXT("VIDEO_P25_COMBINED_2"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::VIDEOP25COMBINED2 },
		{ TEXT("VIDEO_P50_COMBINED_2"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::VIDEOP50COMBINED2 },
		{ TEXT("VIDEO_P75_COMBINED_2"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::VIDEOP75COMBINED2 },
		{ TEXT("VIDEO_P95_COMBINED_2"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::VIDEOP95COMBINED2 },
		{ TEXT("WEB_CHECKOUT_COST_PER_ACTION"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::WebCheckoutCostPerAction },
		{ TEXT("WEB_CHECKOUT_ROAS"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum::WebCheckoutRoas }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::EnumFromString(const FString& EnumAsString, OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline FStringFormatArg ToStringFormatArg(const OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum& Value)
{
	return FStringFormatArg(ToString(Value));
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ColumnsEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

inline FString ToString(const OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ClickWindowDaysEnum& Value)
{
	switch (Value)
	{
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ClickWindowDaysEnum::_1:
		return TEXT("1");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ClickWindowDaysEnum::_7:
		return TEXT("7");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ClickWindowDaysEnum::_30:
		return TEXT("30");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ClickWindowDaysEnum::_60:
		return TEXT("60");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ClickWindowDaysEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::EnumToString(const OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ClickWindowDaysEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ClickWindowDaysEnum& Value)
{
	static TMap<FString, OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ClickWindowDaysEnum> StringToEnum = { 
		{ TEXT("1"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ClickWindowDaysEnum::_1 },
		{ TEXT("7"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ClickWindowDaysEnum::_7 },
		{ TEXT("30"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ClickWindowDaysEnum::_30 },
		{ TEXT("60"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ClickWindowDaysEnum::_60 }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::EnumFromString(const FString& EnumAsString, OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ClickWindowDaysEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline FStringFormatArg ToStringFormatArg(const OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ClickWindowDaysEnum& Value)
{
	return FStringFormatArg(ToString(Value));
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ClickWindowDaysEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ClickWindowDaysEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

inline FString ToString(const OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::EngagementWindowDaysEnum& Value)
{
	switch (Value)
	{
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::EngagementWindowDaysEnum::_1:
		return TEXT("1");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::EngagementWindowDaysEnum::_7:
		return TEXT("7");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::EngagementWindowDaysEnum::_30:
		return TEXT("30");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::EngagementWindowDaysEnum::_60:
		return TEXT("60");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::EngagementWindowDaysEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::EnumToString(const OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::EngagementWindowDaysEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::EngagementWindowDaysEnum& Value)
{
	static TMap<FString, OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::EngagementWindowDaysEnum> StringToEnum = { 
		{ TEXT("1"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::EngagementWindowDaysEnum::_1 },
		{ TEXT("7"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::EngagementWindowDaysEnum::_7 },
		{ TEXT("30"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::EngagementWindowDaysEnum::_30 },
		{ TEXT("60"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::EngagementWindowDaysEnum::_60 }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::EnumFromString(const FString& EnumAsString, OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::EngagementWindowDaysEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline FStringFormatArg ToStringFormatArg(const OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::EngagementWindowDaysEnum& Value)
{
	return FStringFormatArg(ToString(Value));
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::EngagementWindowDaysEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::EngagementWindowDaysEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

inline FString ToString(const OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ViewWindowDaysEnum& Value)
{
	switch (Value)
	{
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ViewWindowDaysEnum::_1:
		return TEXT("1");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ViewWindowDaysEnum::_7:
		return TEXT("7");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ViewWindowDaysEnum::_30:
		return TEXT("30");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ViewWindowDaysEnum::_60:
		return TEXT("60");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ViewWindowDaysEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::EnumToString(const OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ViewWindowDaysEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ViewWindowDaysEnum& Value)
{
	static TMap<FString, OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ViewWindowDaysEnum> StringToEnum = { 
		{ TEXT("1"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ViewWindowDaysEnum::_1 },
		{ TEXT("7"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ViewWindowDaysEnum::_7 },
		{ TEXT("30"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ViewWindowDaysEnum::_30 },
		{ TEXT("60"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ViewWindowDaysEnum::_60 }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::EnumFromString(const FString& EnumAsString, OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ViewWindowDaysEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline FStringFormatArg ToStringFormatArg(const OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ViewWindowDaysEnum& Value)
{
	return FStringFormatArg(ToString(Value));
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ViewWindowDaysEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ViewWindowDaysEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

inline FString ToString(const OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ConversionReportTimeEnum& Value)
{
	switch (Value)
	{
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ConversionReportTimeEnum::AdAction:
		return TEXT("TIME_OF_AD_ACTION");
	case OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ConversionReportTimeEnum::Conversion:
		return TEXT("TIME_OF_CONVERSION");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ConversionReportTimeEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::EnumToString(const OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ConversionReportTimeEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ConversionReportTimeEnum& Value)
{
	static TMap<FString, OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ConversionReportTimeEnum> StringToEnum = { 
		{ TEXT("TIME_OF_AD_ACTION"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ConversionReportTimeEnum::AdAction },
		{ TEXT("TIME_OF_CONVERSION"), OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ConversionReportTimeEnum::Conversion }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::EnumFromString(const FString& EnumAsString, OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ConversionReportTimeEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline FStringFormatArg ToStringFormatArg(const OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ConversionReportTimeEnum& Value)
{
	return FStringFormatArg(ToString(Value));
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ConversionReportTimeEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ConversionReportTimeEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

FString OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::ComputePath() const
{
	TMap<FString, FStringFormatArg> PathParams = { 
	{ TEXT("ad_account_id"), ToStringFormatArg(AdAccountId) } };

	FString Path = FString::Format(TEXT("/ad_accounts/{ad_account_id}/product_groups/analytics"), PathParams);

	TArray<FString> QueryParams;
	QueryParams.Add(FString(TEXT("start_date=")) + ToUrlString(StartDate));
	QueryParams.Add(FString(TEXT("end_date=")) + ToUrlString(EndDate));
	QueryParams.Add(FString(TEXT("product_group_ids=")) + CollectionToUrlString_multi(ProductGroupIds, TEXT("product_group_ids")));
	QueryParams.Add(FString(TEXT("columns=")) + CollectionToUrlString_csv(Columns, TEXT("columns")));
	QueryParams.Add(FString(TEXT("granularity=")) + ToUrlString(Granularity));
	if(ClickWindowDays.IsSet())
	{
		QueryParams.Add(FString(TEXT("click_window_days=")) + ToUrlString(ClickWindowDays.GetValue()));
	}
	if(EngagementWindowDays.IsSet())
	{
		QueryParams.Add(FString(TEXT("engagement_window_days=")) + ToUrlString(EngagementWindowDays.GetValue()));
	}
	if(ViewWindowDays.IsSet())
	{
		QueryParams.Add(FString(TEXT("view_window_days=")) + ToUrlString(ViewWindowDays.GetValue()));
	}
	if(ConversionReportTime.IsSet())
	{
		QueryParams.Add(FString(TEXT("conversion_report_time=")) + ToUrlString(ConversionReportTime.GetValue()));
	}
	Path += TCHAR('?');
	Path += FString::Join(QueryParams, TEXT("&"));

	return Path;
}

void OpenAPIAdAccountsApi::ProductGroupsAnalyticsRequest::SetupHttpRequest(const FHttpRequestRef& HttpRequest) const
{
	static const TArray<FString> Consumes = {  };
	//static const TArray<FString> Produces = { TEXT("application/json") };

	HttpRequest->SetVerb(TEXT("GET"));

	// Default to Json Body request
	if (Consumes.Num() == 0 || Consumes.Contains(TEXT("application/json")))
	{
		// Form parameters
		FString JsonBody;
		JsonWriter Writer = TJsonWriterFactory<>::Create(&JsonBody);
		Writer->WriteObjectStart();
		Writer->WriteObjectEnd();
		Writer->Close();
		HttpRequest->SetHeader(TEXT("Content-Type"), TEXT("application/json; charset=utf-8"));
		HttpRequest->SetContentAsString(JsonBody);
	}
	else if (Consumes.Contains(TEXT("multipart/form-data")))
	{
	}
	else if (Consumes.Contains(TEXT("application/x-www-form-urlencoded")))
	{
	}
	else
	{
		UE_LOG(LogOpenAPI, Error, TEXT("Request ContentType not supported (%s)"), *FString::Join(Consumes, TEXT(",")));
	}
}

void OpenAPIAdAccountsApi::ProductGroupsAnalyticsResponse::SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode)
{
	Response::SetHttpResponseCode(InHttpResponseCode);
	switch ((int)InHttpResponseCode)
	{
	case 200:
		SetResponseString(TEXT("Success"));
		break;
	case 400:
		SetResponseString(TEXT("Invalid ad account ads analytics parameters."));
		break;
	case 0:
	default:
		SetResponseString(TEXT("Unexpected error"));
		break;
	}
}

bool OpenAPIAdAccountsApi::ProductGroupsAnalyticsResponse::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	return TryGetJsonValue(JsonValue, Content);
}

}
