/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.reflect.TypeToken;
import java.lang.reflect.Type;
import java.util.List;
import java.util.Date;
import org.openapitools.client.model.*;

public class JsonUtil {
  public static GsonBuilder gsonBuilder;

  static {
    gsonBuilder = new GsonBuilder();
    gsonBuilder.serializeNulls();
    gsonBuilder.setDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
    gsonBuilder.registerTypeAdapter(Date.class, new JsonDeserializer<Date>() {
      public Date deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
        return new Date(json.getAsJsonPrimitive().getAsLong());
      }
    });
  }

  public static Gson getGson() {
    return gsonBuilder.create();
  }

  public static String serialize(Object obj){
    return getGson().toJson(obj);
  }

  public static <T> T deserializeToList(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getListTypeForDeserialization(cls));
  }

  public static <T> T deserializeToObject(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getTypeForDeserialization(cls));
  }

  public static Type getListTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("Account".equalsIgnoreCase(className)) {
      return new TypeToken<List<Account>>(){}.getType();
    }
    
    if ("ActionType".equalsIgnoreCase(className)) {
      return new TypeToken<List<ActionType>>(){}.getType();
    }
    
    if ("AdAccount".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdAccount>>(){}.getType();
    }
    
    if ("AdAccountAnalyticsResponseInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdAccountAnalyticsResponseInner>>(){}.getType();
    }
    
    if ("AdAccountCreateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdAccountCreateRequest>>(){}.getType();
    }
    
    if ("AdAccountCreateSubscriptionRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdAccountCreateSubscriptionRequest>>(){}.getType();
    }
    
    if ("AdAccountCreateSubscriptionResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdAccountCreateSubscriptionResponse>>(){}.getType();
    }
    
    if ("AdAccountGetSubscriptionResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdAccountGetSubscriptionResponse>>(){}.getType();
    }
    
    if ("AdAccountOwner".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdAccountOwner>>(){}.getType();
    }
    
    if ("AdAccountsCatalogsProductGroupsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdAccountsCatalogsProductGroupsList200Response>>(){}.getType();
    }
    
    if ("AdAccountsCountryResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdAccountsCountryResponse>>(){}.getType();
    }
    
    if ("AdAccountsCountryResponseData".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdAccountsCountryResponseData>>(){}.getType();
    }
    
    if ("AdAccountsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdAccountsList200Response>>(){}.getType();
    }
    
    if ("AdAccountsSubscriptionsGetList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdAccountsSubscriptionsGetList200Response>>(){}.getType();
    }
    
    if ("AdArrayResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdArrayResponse>>(){}.getType();
    }
    
    if ("AdArrayResponseElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdArrayResponseElement>>(){}.getType();
    }
    
    if ("AdCommon".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdCommon>>(){}.getType();
    }
    
    if ("AdCommonQuizPinData".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdCommonQuizPinData>>(){}.getType();
    }
    
    if ("AdCommonTrackingUrls".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdCommonTrackingUrls>>(){}.getType();
    }
    
    if ("AdCountry".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdCountry>>(){}.getType();
    }
    
    if ("AdCreateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdCreateRequest>>(){}.getType();
    }
    
    if ("AdGroupArrayResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdGroupArrayResponse>>(){}.getType();
    }
    
    if ("AdGroupArrayResponseElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdGroupArrayResponseElement>>(){}.getType();
    }
    
    if ("AdGroupAudienceSizingRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdGroupAudienceSizingRequest>>(){}.getType();
    }
    
    if ("AdGroupAudienceSizingRequestKeywordsInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdGroupAudienceSizingRequestKeywordsInner>>(){}.getType();
    }
    
    if ("AdGroupAudienceSizingResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdGroupAudienceSizingResponse>>(){}.getType();
    }
    
    if ("AdGroupCommon".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdGroupCommon>>(){}.getType();
    }
    
    if ("AdGroupCommonOptimizationGoalMetadata".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdGroupCommonOptimizationGoalMetadata>>(){}.getType();
    }
    
    if ("AdGroupCommonTrackingUrls".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdGroupCommonTrackingUrls>>(){}.getType();
    }
    
    if ("AdGroupCreateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdGroupCreateRequest>>(){}.getType();
    }
    
    if ("AdGroupResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdGroupResponse>>(){}.getType();
    }
    
    if ("AdGroupSummaryStatus".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdGroupSummaryStatus>>(){}.getType();
    }
    
    if ("AdGroupUpdateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdGroupUpdateRequest>>(){}.getType();
    }
    
    if ("AdGroupsAnalyticsResponseInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdGroupsAnalyticsResponseInner>>(){}.getType();
    }
    
    if ("AdGroupsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdGroupsList200Response>>(){}.getType();
    }
    
    if ("AdPinId".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdPinId>>(){}.getType();
    }
    
    if ("AdPreviewCreateFromImage".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdPreviewCreateFromImage>>(){}.getType();
    }
    
    if ("AdPreviewCreateFromPin".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdPreviewCreateFromPin>>(){}.getType();
    }
    
    if ("AdPreviewRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdPreviewRequest>>(){}.getType();
    }
    
    if ("AdPreviewURLResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdPreviewURLResponse>>(){}.getType();
    }
    
    if ("AdResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdResponse>>(){}.getType();
    }
    
    if ("AdUpdateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdUpdateRequest>>(){}.getType();
    }
    
    if ("AdsAnalyticsCreateAsyncRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdsAnalyticsCreateAsyncRequest>>(){}.getType();
    }
    
    if ("AdsAnalyticsCreateAsyncResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdsAnalyticsCreateAsyncResponse>>(){}.getType();
    }
    
    if ("AdsAnalyticsFilterColumn".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdsAnalyticsFilterColumn>>(){}.getType();
    }
    
    if ("AdsAnalyticsFilterOperator".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdsAnalyticsFilterOperator>>(){}.getType();
    }
    
    if ("AdsAnalyticsGetAsyncResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdsAnalyticsGetAsyncResponse>>(){}.getType();
    }
    
    if ("AdsAnalyticsMetricsFilter".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdsAnalyticsMetricsFilter>>(){}.getType();
    }
    
    if ("AdsAnalyticsResponseInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdsAnalyticsResponseInner>>(){}.getType();
    }
    
    if ("AdsAnalyticsTargetingType".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdsAnalyticsTargetingType>>(){}.getType();
    }
    
    if ("AdsCreditDiscountsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdsCreditDiscountsResponse>>(){}.getType();
    }
    
    if ("AdsCreditRedeemRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdsCreditRedeemRequest>>(){}.getType();
    }
    
    if ("AdsCreditRedeemResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdsCreditRedeemResponse>>(){}.getType();
    }
    
    if ("AdsCreditsDiscountsGet200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdsCreditsDiscountsGet200Response>>(){}.getType();
    }
    
    if ("AdsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdsList200Response>>(){}.getType();
    }
    
    if ("AnalyticsDailyMetrics".equalsIgnoreCase(className)) {
      return new TypeToken<List<AnalyticsDailyMetrics>>(){}.getType();
    }
    
    if ("AnalyticsMetricsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<AnalyticsMetricsResponse>>(){}.getType();
    }
    
    if ("Audience".equalsIgnoreCase(className)) {
      return new TypeToken<List<Audience>>(){}.getType();
    }
    
    if ("AudienceCategory".equalsIgnoreCase(className)) {
      return new TypeToken<List<AudienceCategory>>(){}.getType();
    }
    
    if ("AudienceCommon".equalsIgnoreCase(className)) {
      return new TypeToken<List<AudienceCommon>>(){}.getType();
    }
    
    if ("AudienceCreateCustomRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<AudienceCreateCustomRequest>>(){}.getType();
    }
    
    if ("AudienceCreateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<AudienceCreateRequest>>(){}.getType();
    }
    
    if ("AudienceCreateRequest1AudienceType".equalsIgnoreCase(className)) {
      return new TypeToken<List<AudienceCreateRequest1AudienceType>>(){}.getType();
    }
    
    if ("AudienceDataParty".equalsIgnoreCase(className)) {
      return new TypeToken<List<AudienceDataParty>>(){}.getType();
    }
    
    if ("AudienceDefinition".equalsIgnoreCase(className)) {
      return new TypeToken<List<AudienceDefinition>>(){}.getType();
    }
    
    if ("AudienceDefinitionResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<AudienceDefinitionResponse>>(){}.getType();
    }
    
    if ("AudienceDemographicValue".equalsIgnoreCase(className)) {
      return new TypeToken<List<AudienceDemographicValue>>(){}.getType();
    }
    
    if ("AudienceDemographics".equalsIgnoreCase(className)) {
      return new TypeToken<List<AudienceDemographics>>(){}.getType();
    }
    
    if ("AudienceInsightCategoryArrayResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<AudienceInsightCategoryArrayResponse>>(){}.getType();
    }
    
    if ("AudienceInsightCategoryCommon".equalsIgnoreCase(className)) {
      return new TypeToken<List<AudienceInsightCategoryCommon>>(){}.getType();
    }
    
    if ("AudienceInsightType".equalsIgnoreCase(className)) {
      return new TypeToken<List<AudienceInsightType>>(){}.getType();
    }
    
    if ("AudienceInsightsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<AudienceInsightsResponse>>(){}.getType();
    }
    
    if ("AudienceRule".equalsIgnoreCase(className)) {
      return new TypeToken<List<AudienceRule>>(){}.getType();
    }
    
    if ("AudienceSharingType".equalsIgnoreCase(className)) {
      return new TypeToken<List<AudienceSharingType>>(){}.getType();
    }
    
    if ("AudienceSubcategory".equalsIgnoreCase(className)) {
      return new TypeToken<List<AudienceSubcategory>>(){}.getType();
    }
    
    if ("AudienceType".equalsIgnoreCase(className)) {
      return new TypeToken<List<AudienceType>>(){}.getType();
    }
    
    if ("AudienceUpdateOperationType".equalsIgnoreCase(className)) {
      return new TypeToken<List<AudienceUpdateOperationType>>(){}.getType();
    }
    
    if ("AudienceUpdateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<AudienceUpdateRequest>>(){}.getType();
    }
    
    if ("AudiencesList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<AudiencesList200Response>>(){}.getType();
    }
    
    if ("AvailabilityFilter".equalsIgnoreCase(className)) {
      return new TypeToken<List<AvailabilityFilter>>(){}.getType();
    }
    
    if ("BatchOperation".equalsIgnoreCase(className)) {
      return new TypeToken<List<BatchOperation>>(){}.getType();
    }
    
    if ("BatchOperationStatus".equalsIgnoreCase(className)) {
      return new TypeToken<List<BatchOperationStatus>>(){}.getType();
    }
    
    if ("BidFloor".equalsIgnoreCase(className)) {
      return new TypeToken<List<BidFloor>>(){}.getType();
    }
    
    if ("BidFloorRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<BidFloorRequest>>(){}.getType();
    }
    
    if ("BidFloorSpec".equalsIgnoreCase(className)) {
      return new TypeToken<List<BidFloorSpec>>(){}.getType();
    }
    
    if ("BillingProfilesGet200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<BillingProfilesGet200Response>>(){}.getType();
    }
    
    if ("BillingProfilesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<BillingProfilesResponse>>(){}.getType();
    }
    
    if ("Board".equalsIgnoreCase(className)) {
      return new TypeToken<List<Board>>(){}.getType();
    }
    
    if ("BoardMedia".equalsIgnoreCase(className)) {
      return new TypeToken<List<BoardMedia>>(){}.getType();
    }
    
    if ("BoardOwner".equalsIgnoreCase(className)) {
      return new TypeToken<List<BoardOwner>>(){}.getType();
    }
    
    if ("BoardSection".equalsIgnoreCase(className)) {
      return new TypeToken<List<BoardSection>>(){}.getType();
    }
    
    if ("BoardSectionsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<BoardSectionsList200Response>>(){}.getType();
    }
    
    if ("BoardUpdate".equalsIgnoreCase(className)) {
      return new TypeToken<List<BoardUpdate>>(){}.getType();
    }
    
    if ("BoardsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<BoardsList200Response>>(){}.getType();
    }
    
    if ("BoardsListPins200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<BoardsListPins200Response>>(){}.getType();
    }
    
    if ("BoardsUserFollowsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<BoardsUserFollowsList200Response>>(){}.getType();
    }
    
    if ("BookClosedResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<BookClosedResponse>>(){}.getType();
    }
    
    if ("BrandFilter".equalsIgnoreCase(className)) {
      return new TypeToken<List<BrandFilter>>(){}.getType();
    }
    
    if ("BudgetType".equalsIgnoreCase(className)) {
      return new TypeToken<List<BudgetType>>(){}.getType();
    }
    
    if ("BulkDownloadRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<BulkDownloadRequest>>(){}.getType();
    }
    
    if ("BulkDownloadRequestCampaignFilter".equalsIgnoreCase(className)) {
      return new TypeToken<List<BulkDownloadRequestCampaignFilter>>(){}.getType();
    }
    
    if ("BulkDownloadResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<BulkDownloadResponse>>(){}.getType();
    }
    
    if ("BulkEntityType".equalsIgnoreCase(className)) {
      return new TypeToken<List<BulkEntityType>>(){}.getType();
    }
    
    if ("BulkOutputFormat".equalsIgnoreCase(className)) {
      return new TypeToken<List<BulkOutputFormat>>(){}.getType();
    }
    
    if ("BulkReportingJobStatus".equalsIgnoreCase(className)) {
      return new TypeToken<List<BulkReportingJobStatus>>(){}.getType();
    }
    
    if ("BulkUpsertRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<BulkUpsertRequest>>(){}.getType();
    }
    
    if ("BulkUpsertRequestCreate".equalsIgnoreCase(className)) {
      return new TypeToken<List<BulkUpsertRequestCreate>>(){}.getType();
    }
    
    if ("BulkUpsertRequestUpdate".equalsIgnoreCase(className)) {
      return new TypeToken<List<BulkUpsertRequestUpdate>>(){}.getType();
    }
    
    if ("BulkUpsertResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<BulkUpsertResponse>>(){}.getType();
    }
    
    if ("BulkUpsertStatus".equalsIgnoreCase(className)) {
      return new TypeToken<List<BulkUpsertStatus>>(){}.getType();
    }
    
    if ("BulkUpsertStatusResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<BulkUpsertStatusResponse>>(){}.getType();
    }
    
    if ("BusinessAccessRole".equalsIgnoreCase(className)) {
      return new TypeToken<List<BusinessAccessRole>>(){}.getType();
    }
    
    if ("CampaignCommon".equalsIgnoreCase(className)) {
      return new TypeToken<List<CampaignCommon>>(){}.getType();
    }
    
    if ("CampaignCreateCommon".equalsIgnoreCase(className)) {
      return new TypeToken<List<CampaignCreateCommon>>(){}.getType();
    }
    
    if ("CampaignCreateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CampaignCreateRequest>>(){}.getType();
    }
    
    if ("CampaignCreateResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<CampaignCreateResponse>>(){}.getType();
    }
    
    if ("CampaignCreateResponseData".equalsIgnoreCase(className)) {
      return new TypeToken<List<CampaignCreateResponseData>>(){}.getType();
    }
    
    if ("CampaignCreateResponseItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<CampaignCreateResponseItem>>(){}.getType();
    }
    
    if ("CampaignId".equalsIgnoreCase(className)) {
      return new TypeToken<List<CampaignId>>(){}.getType();
    }
    
    if ("CampaignResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<CampaignResponse>>(){}.getType();
    }
    
    if ("CampaignSummaryStatus".equalsIgnoreCase(className)) {
      return new TypeToken<List<CampaignSummaryStatus>>(){}.getType();
    }
    
    if ("CampaignUpdateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CampaignUpdateRequest>>(){}.getType();
    }
    
    if ("CampaignUpdateResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<CampaignUpdateResponse>>(){}.getType();
    }
    
    if ("CampaignsAnalyticsResponseInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<CampaignsAnalyticsResponseInner>>(){}.getType();
    }
    
    if ("CampaignsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CampaignsList200Response>>(){}.getType();
    }
    
    if ("Catalog".equalsIgnoreCase(className)) {
      return new TypeToken<List<Catalog>>(){}.getType();
    }
    
    if ("CatalogProductGroup".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogProductGroup>>(){}.getType();
    }
    
    if ("CatalogsCreateHotelItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsCreateHotelItem>>(){}.getType();
    }
    
    if ("CatalogsCreateRetailItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsCreateRetailItem>>(){}.getType();
    }
    
    if ("CatalogsDbItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsDbItem>>(){}.getType();
    }
    
    if ("CatalogsDeleteHotelItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsDeleteHotelItem>>(){}.getType();
    }
    
    if ("CatalogsDeleteRetailItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsDeleteRetailItem>>(){}.getType();
    }
    
    if ("CatalogsFeed".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsFeed>>(){}.getType();
    }
    
    if ("CatalogsFeedCredentials".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsFeedCredentials>>(){}.getType();
    }
    
    if ("CatalogsFeedIngestionDetails".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsFeedIngestionDetails>>(){}.getType();
    }
    
    if ("CatalogsFeedIngestionErrors".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsFeedIngestionErrors>>(){}.getType();
    }
    
    if ("CatalogsFeedIngestionInfo".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsFeedIngestionInfo>>(){}.getType();
    }
    
    if ("CatalogsFeedIngestionWarnings".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsFeedIngestionWarnings>>(){}.getType();
    }
    
    if ("CatalogsFeedProcessingResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsFeedProcessingResult>>(){}.getType();
    }
    
    if ("CatalogsFeedProcessingSchedule".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsFeedProcessingSchedule>>(){}.getType();
    }
    
    if ("CatalogsFeedProcessingStatus".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsFeedProcessingStatus>>(){}.getType();
    }
    
    if ("CatalogsFeedProductCounts".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsFeedProductCounts>>(){}.getType();
    }
    
    if ("CatalogsFeedValidationDetails".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsFeedValidationDetails>>(){}.getType();
    }
    
    if ("CatalogsFeedValidationErrors".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsFeedValidationErrors>>(){}.getType();
    }
    
    if ("CatalogsFeedValidationWarnings".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsFeedValidationWarnings>>(){}.getType();
    }
    
    if ("CatalogsFeedsCreateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsFeedsCreateRequest>>(){}.getType();
    }
    
    if ("CatalogsFeedsCreateRequestDefaultLocale".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsFeedsCreateRequestDefaultLocale>>(){}.getType();
    }
    
    if ("CatalogsFeedsUpdateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsFeedsUpdateRequest>>(){}.getType();
    }
    
    if ("CatalogsFormat".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsFormat>>(){}.getType();
    }
    
    if ("CatalogsHotelAddress".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsHotelAddress>>(){}.getType();
    }
    
    if ("CatalogsHotelAttributes".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsHotelAttributes>>(){}.getType();
    }
    
    if ("CatalogsHotelAttributesAllOfMainImage".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsHotelAttributesAllOfMainImage>>(){}.getType();
    }
    
    if ("CatalogsHotelBatchItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsHotelBatchItem>>(){}.getType();
    }
    
    if ("CatalogsHotelBatchRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsHotelBatchRequest>>(){}.getType();
    }
    
    if ("CatalogsHotelFeed".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsHotelFeed>>(){}.getType();
    }
    
    if ("CatalogsHotelFeedsCreateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsHotelFeedsCreateRequest>>(){}.getType();
    }
    
    if ("CatalogsHotelFeedsUpdateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsHotelFeedsUpdateRequest>>(){}.getType();
    }
    
    if ("CatalogsHotelGuestRatings".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsHotelGuestRatings>>(){}.getType();
    }
    
    if ("CatalogsHotelItemErrorResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsHotelItemErrorResponse>>(){}.getType();
    }
    
    if ("CatalogsHotelItemResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsHotelItemResponse>>(){}.getType();
    }
    
    if ("CatalogsHotelItemsBatch".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsHotelItemsBatch>>(){}.getType();
    }
    
    if ("CatalogsHotelItemsFilter".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsHotelItemsFilter>>(){}.getType();
    }
    
    if ("CatalogsHotelProductGroup".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsHotelProductGroup>>(){}.getType();
    }
    
    if ("CatalogsHotelProductGroupCreateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsHotelProductGroupCreateRequest>>(){}.getType();
    }
    
    if ("CatalogsHotelProductGroupFilterKeys".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsHotelProductGroupFilterKeys>>(){}.getType();
    }
    
    if ("CatalogsHotelProductGroupFilters".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsHotelProductGroupFilters>>(){}.getType();
    }
    
    if ("CatalogsHotelProductGroupFiltersAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsHotelProductGroupFiltersAllOf>>(){}.getType();
    }
    
    if ("CatalogsHotelProductGroupFiltersAnyOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsHotelProductGroupFiltersAnyOf>>(){}.getType();
    }
    
    if ("CatalogsHotelProductGroupUpdateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsHotelProductGroupUpdateRequest>>(){}.getType();
    }
    
    if ("CatalogsItemValidationDetails".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsItemValidationDetails>>(){}.getType();
    }
    
    if ("CatalogsItemValidationErrors".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsItemValidationErrors>>(){}.getType();
    }
    
    if ("CatalogsItemValidationIssue".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsItemValidationIssue>>(){}.getType();
    }
    
    if ("CatalogsItemValidationIssues".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsItemValidationIssues>>(){}.getType();
    }
    
    if ("CatalogsItemValidationWarnings".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsItemValidationWarnings>>(){}.getType();
    }
    
    if ("CatalogsItems".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsItems>>(){}.getType();
    }
    
    if ("CatalogsItemsBatch".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsItemsBatch>>(){}.getType();
    }
    
    if ("CatalogsItemsBatchRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsItemsBatchRequest>>(){}.getType();
    }
    
    if ("CatalogsItemsCreateBatchRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsItemsCreateBatchRequest>>(){}.getType();
    }
    
    if ("CatalogsItemsDeleteBatchRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsItemsDeleteBatchRequest>>(){}.getType();
    }
    
    if ("CatalogsItemsDeleteDiscontinuedBatchRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsItemsDeleteDiscontinuedBatchRequest>>(){}.getType();
    }
    
    if ("CatalogsItemsFilters".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsItemsFilters>>(){}.getType();
    }
    
    if ("CatalogsItemsUpdateBatchRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsItemsUpdateBatchRequest>>(){}.getType();
    }
    
    if ("CatalogsItemsUpsertBatchRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsItemsUpsertBatchRequest>>(){}.getType();
    }
    
    if ("CatalogsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsList200Response>>(){}.getType();
    }
    
    if ("CatalogsListProductsByFilterRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsListProductsByFilterRequest>>(){}.getType();
    }
    
    if ("CatalogsListProductsByFilterRequestOneOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsListProductsByFilterRequestOneOf>>(){}.getType();
    }
    
    if ("CatalogsLocale".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsLocale>>(){}.getType();
    }
    
    if ("CatalogsProduct".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsProduct>>(){}.getType();
    }
    
    if ("CatalogsProductGroup".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsProductGroup>>(){}.getType();
    }
    
    if ("CatalogsProductGroupCreateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsProductGroupCreateRequest>>(){}.getType();
    }
    
    if ("CatalogsProductGroupCurrencyCriteria".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsProductGroupCurrencyCriteria>>(){}.getType();
    }
    
    if ("CatalogsProductGroupFilterKeys".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsProductGroupFilterKeys>>(){}.getType();
    }
    
    if ("CatalogsProductGroupFilters".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsProductGroupFilters>>(){}.getType();
    }
    
    if ("CatalogsProductGroupFiltersAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsProductGroupFiltersAllOf>>(){}.getType();
    }
    
    if ("CatalogsProductGroupFiltersAnyOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsProductGroupFiltersAnyOf>>(){}.getType();
    }
    
    if ("CatalogsProductGroupFiltersRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsProductGroupFiltersRequest>>(){}.getType();
    }
    
    if ("CatalogsProductGroupFiltersRequestAnyOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsProductGroupFiltersRequestAnyOf>>(){}.getType();
    }
    
    if ("CatalogsProductGroupFiltersRequestAnyOf1".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsProductGroupFiltersRequestAnyOf1>>(){}.getType();
    }
    
    if ("CatalogsProductGroupMultipleCountriesCriteria".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsProductGroupMultipleCountriesCriteria>>(){}.getType();
    }
    
    if ("CatalogsProductGroupMultipleGenderCriteria".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsProductGroupMultipleGenderCriteria>>(){}.getType();
    }
    
    if ("CatalogsProductGroupMultipleStringCriteria".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsProductGroupMultipleStringCriteria>>(){}.getType();
    }
    
    if ("CatalogsProductGroupMultipleStringListCriteria".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsProductGroupMultipleStringListCriteria>>(){}.getType();
    }
    
    if ("CatalogsProductGroupPinsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsProductGroupPinsList200Response>>(){}.getType();
    }
    
    if ("CatalogsProductGroupPricingCriteria".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsProductGroupPricingCriteria>>(){}.getType();
    }
    
    if ("CatalogsProductGroupPricingCurrencyCriteria".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsProductGroupPricingCurrencyCriteria>>(){}.getType();
    }
    
    if ("CatalogsProductGroupProductCounts".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsProductGroupProductCounts>>(){}.getType();
    }
    
    if ("CatalogsProductGroupStatus".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsProductGroupStatus>>(){}.getType();
    }
    
    if ("CatalogsProductGroupType".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsProductGroupType>>(){}.getType();
    }
    
    if ("CatalogsProductGroupUpdateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsProductGroupUpdateRequest>>(){}.getType();
    }
    
    if ("CatalogsProductGroupsCreate201Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsProductGroupsCreate201Response>>(){}.getType();
    }
    
    if ("CatalogsProductGroupsCreateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsProductGroupsCreateRequest>>(){}.getType();
    }
    
    if ("CatalogsProductGroupsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsProductGroupsList200Response>>(){}.getType();
    }
    
    if ("CatalogsProductGroupsList200ResponseAllOfItemsInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsProductGroupsList200ResponseAllOfItemsInner>>(){}.getType();
    }
    
    if ("CatalogsProductGroupsUpdateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsProductGroupsUpdateRequest>>(){}.getType();
    }
    
    if ("CatalogsProductMetadata".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsProductMetadata>>(){}.getType();
    }
    
    if ("CatalogsRetailBatchRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsRetailBatchRequest>>(){}.getType();
    }
    
    if ("CatalogsRetailBatchRequestItemsInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsRetailBatchRequestItemsInner>>(){}.getType();
    }
    
    if ("CatalogsRetailFeed".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsRetailFeed>>(){}.getType();
    }
    
    if ("CatalogsRetailFeedsCreateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsRetailFeedsCreateRequest>>(){}.getType();
    }
    
    if ("CatalogsRetailFeedsUpdateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsRetailFeedsUpdateRequest>>(){}.getType();
    }
    
    if ("CatalogsRetailItemErrorResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsRetailItemErrorResponse>>(){}.getType();
    }
    
    if ("CatalogsRetailItemResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsRetailItemResponse>>(){}.getType();
    }
    
    if ("CatalogsRetailItemsBatch".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsRetailItemsBatch>>(){}.getType();
    }
    
    if ("CatalogsRetailItemsFilter".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsRetailItemsFilter>>(){}.getType();
    }
    
    if ("CatalogsRetailProductGroup".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsRetailProductGroup>>(){}.getType();
    }
    
    if ("CatalogsStatus".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsStatus>>(){}.getType();
    }
    
    if ("CatalogsType".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsType>>(){}.getType();
    }
    
    if ("CatalogsUpdatableHotelAttributes".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsUpdatableHotelAttributes>>(){}.getType();
    }
    
    if ("CatalogsUpdateHotelItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsUpdateHotelItem>>(){}.getType();
    }
    
    if ("CatalogsUpdateRetailItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsUpdateRetailItem>>(){}.getType();
    }
    
    if ("CatalogsUpsertHotelItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsUpsertHotelItem>>(){}.getType();
    }
    
    if ("CatalogsUpsertRetailItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsUpsertRetailItem>>(){}.getType();
    }
    
    if ("CatalogsVerticalBatchRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsVerticalBatchRequest>>(){}.getType();
    }
    
    if ("CatalogsVerticalFeedsCreateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsVerticalFeedsCreateRequest>>(){}.getType();
    }
    
    if ("CatalogsVerticalFeedsUpdateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsVerticalFeedsUpdateRequest>>(){}.getType();
    }
    
    if ("CatalogsVerticalProductGroup".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsVerticalProductGroup>>(){}.getType();
    }
    
    if ("CatalogsVerticalProductGroupCreateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsVerticalProductGroupCreateRequest>>(){}.getType();
    }
    
    if ("CatalogsVerticalProductGroupUpdateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogsVerticalProductGroupUpdateRequest>>(){}.getType();
    }
    
    if ("ConditionFilter".equalsIgnoreCase(className)) {
      return new TypeToken<List<ConditionFilter>>(){}.getType();
    }
    
    if ("ConversionApiResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<ConversionApiResponse>>(){}.getType();
    }
    
    if ("ConversionApiResponseEventsInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ConversionApiResponseEventsInner>>(){}.getType();
    }
    
    if ("ConversionAttributionWindowDays".equalsIgnoreCase(className)) {
      return new TypeToken<List<ConversionAttributionWindowDays>>(){}.getType();
    }
    
    if ("ConversionEventResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<ConversionEventResponse>>(){}.getType();
    }
    
    if ("ConversionEvents".equalsIgnoreCase(className)) {
      return new TypeToken<List<ConversionEvents>>(){}.getType();
    }
    
    if ("ConversionEventsDataInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ConversionEventsDataInner>>(){}.getType();
    }
    
    if ("ConversionEventsDataInnerCustomData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ConversionEventsDataInnerCustomData>>(){}.getType();
    }
    
    if ("ConversionEventsDataInnerCustomDataContentsInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ConversionEventsDataInnerCustomDataContentsInner>>(){}.getType();
    }
    
    if ("ConversionEventsUserData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ConversionEventsUserData>>(){}.getType();
    }
    
    if ("ConversionReportAttributionType".equalsIgnoreCase(className)) {
      return new TypeToken<List<ConversionReportAttributionType>>(){}.getType();
    }
    
    if ("ConversionReportTimeType".equalsIgnoreCase(className)) {
      return new TypeToken<List<ConversionReportTimeType>>(){}.getType();
    }
    
    if ("ConversionTagCommon".equalsIgnoreCase(className)) {
      return new TypeToken<List<ConversionTagCommon>>(){}.getType();
    }
    
    if ("ConversionTagConfigs".equalsIgnoreCase(className)) {
      return new TypeToken<List<ConversionTagConfigs>>(){}.getType();
    }
    
    if ("ConversionTagCreate".equalsIgnoreCase(className)) {
      return new TypeToken<List<ConversionTagCreate>>(){}.getType();
    }
    
    if ("ConversionTagListResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<ConversionTagListResponse>>(){}.getType();
    }
    
    if ("ConversionTagResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<ConversionTagResponse>>(){}.getType();
    }
    
    if ("ConversionTagType".equalsIgnoreCase(className)) {
      return new TypeToken<List<ConversionTagType>>(){}.getType();
    }
    
    if ("Country".equalsIgnoreCase(className)) {
      return new TypeToken<List<Country>>(){}.getType();
    }
    
    if ("CountryFilter".equalsIgnoreCase(className)) {
      return new TypeToken<List<CountryFilter>>(){}.getType();
    }
    
    if ("CreateMMMReportRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateMMMReportRequest>>(){}.getType();
    }
    
    if ("CreateMMMReportResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateMMMReportResponse>>(){}.getType();
    }
    
    if ("CreateMMMReportResponseData".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateMMMReportResponseData>>(){}.getType();
    }
    
    if ("CreativeType".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreativeType>>(){}.getType();
    }
    
    if ("Currency".equalsIgnoreCase(className)) {
      return new TypeToken<List<Currency>>(){}.getType();
    }
    
    if ("CurrencyFilter".equalsIgnoreCase(className)) {
      return new TypeToken<List<CurrencyFilter>>(){}.getType();
    }
    
    if ("CustomLabel0Filter".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomLabel0Filter>>(){}.getType();
    }
    
    if ("CustomLabel1Filter".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomLabel1Filter>>(){}.getType();
    }
    
    if ("CustomLabel2Filter".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomLabel2Filter>>(){}.getType();
    }
    
    if ("CustomLabel3Filter".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomLabel3Filter>>(){}.getType();
    }
    
    if ("CustomLabel4Filter".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomLabel4Filter>>(){}.getType();
    }
    
    if ("CustomerList".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomerList>>(){}.getType();
    }
    
    if ("CustomerListRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomerListRequest>>(){}.getType();
    }
    
    if ("CustomerListUpdateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomerListUpdateRequest>>(){}.getType();
    }
    
    if ("CustomerListsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomerListsList200Response>>(){}.getType();
    }
    
    if ("DataOutputFormat".equalsIgnoreCase(className)) {
      return new TypeToken<List<DataOutputFormat>>(){}.getType();
    }
    
    if ("DataStatus".equalsIgnoreCase(className)) {
      return new TypeToken<List<DataStatus>>(){}.getType();
    }
    
    if ("DeliveryMetricsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeliveryMetricsResponse>>(){}.getType();
    }
    
    if ("DeliveryMetricsResponseItemsInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeliveryMetricsResponseItemsInner>>(){}.getType();
    }
    
    if ("DetailedError".equalsIgnoreCase(className)) {
      return new TypeToken<List<DetailedError>>(){}.getType();
    }
    
    if ("EnhancedMatchStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<List<EnhancedMatchStatusType>>(){}.getType();
    }
    
    if ("EntityStatus".equalsIgnoreCase(className)) {
      return new TypeToken<List<EntityStatus>>(){}.getType();
    }
    
    if ("Error".equalsIgnoreCase(className)) {
      return new TypeToken<List<Error>>(){}.getType();
    }
    
    if ("Exception".equalsIgnoreCase(className)) {
      return new TypeToken<List<Exception>>(){}.getType();
    }
    
    if ("FeedProcessingResultsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedProcessingResultsList200Response>>(){}.getType();
    }
    
    if ("FeedsCreateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedsCreateRequest>>(){}.getType();
    }
    
    if ("FeedsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedsList200Response>>(){}.getType();
    }
    
    if ("FeedsUpdateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedsUpdateRequest>>(){}.getType();
    }
    
    if ("FollowUserRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<FollowUserRequest>>(){}.getType();
    }
    
    if ("FollowersList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<FollowersList200Response>>(){}.getType();
    }
    
    if ("Gender".equalsIgnoreCase(className)) {
      return new TypeToken<List<Gender>>(){}.getType();
    }
    
    if ("GenderFilter".equalsIgnoreCase(className)) {
      return new TypeToken<List<GenderFilter>>(){}.getType();
    }
    
    if ("GetAudiencesOrderBy".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetAudiencesOrderBy>>(){}.getType();
    }
    
    if ("GetMMMReportResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetMMMReportResponse>>(){}.getType();
    }
    
    if ("GetMMMReportResponseData".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetMMMReportResponseData>>(){}.getType();
    }
    
    if ("GoogleProductCategory0Filter".equalsIgnoreCase(className)) {
      return new TypeToken<List<GoogleProductCategory0Filter>>(){}.getType();
    }
    
    if ("GoogleProductCategory1Filter".equalsIgnoreCase(className)) {
      return new TypeToken<List<GoogleProductCategory1Filter>>(){}.getType();
    }
    
    if ("GoogleProductCategory2Filter".equalsIgnoreCase(className)) {
      return new TypeToken<List<GoogleProductCategory2Filter>>(){}.getType();
    }
    
    if ("GoogleProductCategory3Filter".equalsIgnoreCase(className)) {
      return new TypeToken<List<GoogleProductCategory3Filter>>(){}.getType();
    }
    
    if ("GoogleProductCategory4Filter".equalsIgnoreCase(className)) {
      return new TypeToken<List<GoogleProductCategory4Filter>>(){}.getType();
    }
    
    if ("GoogleProductCategory5Filter".equalsIgnoreCase(className)) {
      return new TypeToken<List<GoogleProductCategory5Filter>>(){}.getType();
    }
    
    if ("GoogleProductCategory6Filter".equalsIgnoreCase(className)) {
      return new TypeToken<List<GoogleProductCategory6Filter>>(){}.getType();
    }
    
    if ("Granularity".equalsIgnoreCase(className)) {
      return new TypeToken<List<Granularity>>(){}.getType();
    }
    
    if ("GridClickType".equalsIgnoreCase(className)) {
      return new TypeToken<List<GridClickType>>(){}.getType();
    }
    
    if ("HotelIdFilter".equalsIgnoreCase(className)) {
      return new TypeToken<List<HotelIdFilter>>(){}.getType();
    }
    
    if ("HotelProcessingRecord".equalsIgnoreCase(className)) {
      return new TypeToken<List<HotelProcessingRecord>>(){}.getType();
    }
    
    if ("ImageDetails".equalsIgnoreCase(className)) {
      return new TypeToken<List<ImageDetails>>(){}.getType();
    }
    
    if ("ImageMetadata".equalsIgnoreCase(className)) {
      return new TypeToken<List<ImageMetadata>>(){}.getType();
    }
    
    if ("ImageMetadataImages".equalsIgnoreCase(className)) {
      return new TypeToken<List<ImageMetadataImages>>(){}.getType();
    }
    
    if ("IntegrationLog".equalsIgnoreCase(className)) {
      return new TypeToken<List<IntegrationLog>>(){}.getType();
    }
    
    if ("IntegrationLogClientError".equalsIgnoreCase(className)) {
      return new TypeToken<List<IntegrationLogClientError>>(){}.getType();
    }
    
    if ("IntegrationLogClientRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<IntegrationLogClientRequest>>(){}.getType();
    }
    
    if ("IntegrationLogsInvalidLogResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<IntegrationLogsInvalidLogResponse>>(){}.getType();
    }
    
    if ("IntegrationLogsInvalidLogResponseRejectedLogsInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<IntegrationLogsInvalidLogResponseRejectedLogsInner>>(){}.getType();
    }
    
    if ("IntegrationLogsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<IntegrationLogsRequest>>(){}.getType();
    }
    
    if ("IntegrationLogsSuccessResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<IntegrationLogsSuccessResponse>>(){}.getType();
    }
    
    if ("IntegrationMetadata".equalsIgnoreCase(className)) {
      return new TypeToken<List<IntegrationMetadata>>(){}.getType();
    }
    
    if ("IntegrationRecord".equalsIgnoreCase(className)) {
      return new TypeToken<List<IntegrationRecord>>(){}.getType();
    }
    
    if ("IntegrationRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<IntegrationRequest>>(){}.getType();
    }
    
    if ("IntegrationRequestPatch".equalsIgnoreCase(className)) {
      return new TypeToken<List<IntegrationRequestPatch>>(){}.getType();
    }
    
    if ("IntegrationsGetList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<IntegrationsGetList200Response>>(){}.getType();
    }
    
    if ("Interest".equalsIgnoreCase(className)) {
      return new TypeToken<List<Interest>>(){}.getType();
    }
    
    if ("ItemAttributes".equalsIgnoreCase(className)) {
      return new TypeToken<List<ItemAttributes>>(){}.getType();
    }
    
    if ("ItemBatchRecord".equalsIgnoreCase(className)) {
      return new TypeToken<List<ItemBatchRecord>>(){}.getType();
    }
    
    if ("ItemCreateBatchRecord".equalsIgnoreCase(className)) {
      return new TypeToken<List<ItemCreateBatchRecord>>(){}.getType();
    }
    
    if ("ItemDeleteBatchRecord".equalsIgnoreCase(className)) {
      return new TypeToken<List<ItemDeleteBatchRecord>>(){}.getType();
    }
    
    if ("ItemDeleteDiscontinuedBatchRecord".equalsIgnoreCase(className)) {
      return new TypeToken<List<ItemDeleteDiscontinuedBatchRecord>>(){}.getType();
    }
    
    if ("ItemGroupIdFilter".equalsIgnoreCase(className)) {
      return new TypeToken<List<ItemGroupIdFilter>>(){}.getType();
    }
    
    if ("ItemIdFilter".equalsIgnoreCase(className)) {
      return new TypeToken<List<ItemIdFilter>>(){}.getType();
    }
    
    if ("ItemProcessingRecord".equalsIgnoreCase(className)) {
      return new TypeToken<List<ItemProcessingRecord>>(){}.getType();
    }
    
    if ("ItemProcessingStatus".equalsIgnoreCase(className)) {
      return new TypeToken<List<ItemProcessingStatus>>(){}.getType();
    }
    
    if ("ItemResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<ItemResponse>>(){}.getType();
    }
    
    if ("ItemResponseAnyOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<ItemResponseAnyOf>>(){}.getType();
    }
    
    if ("ItemResponseAnyOf1".equalsIgnoreCase(className)) {
      return new TypeToken<List<ItemResponseAnyOf1>>(){}.getType();
    }
    
    if ("ItemUpdateBatchRecord".equalsIgnoreCase(className)) {
      return new TypeToken<List<ItemUpdateBatchRecord>>(){}.getType();
    }
    
    if ("ItemUpsertBatchRecord".equalsIgnoreCase(className)) {
      return new TypeToken<List<ItemUpsertBatchRecord>>(){}.getType();
    }
    
    if ("ItemValidationEvent".equalsIgnoreCase(className)) {
      return new TypeToken<List<ItemValidationEvent>>(){}.getType();
    }
    
    if ("ItemsBatchPostRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<ItemsBatchPostRequest>>(){}.getType();
    }
    
    if ("ItemsIssuesList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<ItemsIssuesList200Response>>(){}.getType();
    }
    
    if ("Keyword".equalsIgnoreCase(className)) {
      return new TypeToken<List<Keyword>>(){}.getType();
    }
    
    if ("KeywordError".equalsIgnoreCase(className)) {
      return new TypeToken<List<KeywordError>>(){}.getType();
    }
    
    if ("KeywordMetrics".equalsIgnoreCase(className)) {
      return new TypeToken<List<KeywordMetrics>>(){}.getType();
    }
    
    if ("KeywordMetricsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<KeywordMetricsResponse>>(){}.getType();
    }
    
    if ("KeywordUpdate".equalsIgnoreCase(className)) {
      return new TypeToken<List<KeywordUpdate>>(){}.getType();
    }
    
    if ("KeywordUpdateBody".equalsIgnoreCase(className)) {
      return new TypeToken<List<KeywordUpdateBody>>(){}.getType();
    }
    
    if ("KeywordsCommon".equalsIgnoreCase(className)) {
      return new TypeToken<List<KeywordsCommon>>(){}.getType();
    }
    
    if ("KeywordsGet200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<KeywordsGet200Response>>(){}.getType();
    }
    
    if ("KeywordsMetricsArrayResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<KeywordsMetricsArrayResponse>>(){}.getType();
    }
    
    if ("KeywordsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<KeywordsRequest>>(){}.getType();
    }
    
    if ("KeywordsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<KeywordsResponse>>(){}.getType();
    }
    
    if ("Language".equalsIgnoreCase(className)) {
      return new TypeToken<List<Language>>(){}.getType();
    }
    
    if ("LeadFormCommon".equalsIgnoreCase(className)) {
      return new TypeToken<List<LeadFormCommon>>(){}.getType();
    }
    
    if ("LeadFormQuestion".equalsIgnoreCase(className)) {
      return new TypeToken<List<LeadFormQuestion>>(){}.getType();
    }
    
    if ("LeadFormQuestionFieldType".equalsIgnoreCase(className)) {
      return new TypeToken<List<LeadFormQuestionFieldType>>(){}.getType();
    }
    
    if ("LeadFormQuestionType".equalsIgnoreCase(className)) {
      return new TypeToken<List<LeadFormQuestionType>>(){}.getType();
    }
    
    if ("LeadFormResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<LeadFormResponse>>(){}.getType();
    }
    
    if ("LeadFormStatus".equalsIgnoreCase(className)) {
      return new TypeToken<List<LeadFormStatus>>(){}.getType();
    }
    
    if ("LeadFormTestRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<LeadFormTestRequest>>(){}.getType();
    }
    
    if ("LeadFormTestResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<LeadFormTestResponse>>(){}.getType();
    }
    
    if ("LeadFormsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<LeadFormsList200Response>>(){}.getType();
    }
    
    if ("LineItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<LineItem>>(){}.getType();
    }
    
    if ("LinkedBusiness".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinkedBusiness>>(){}.getType();
    }
    
    if ("MMMReportingColumn".equalsIgnoreCase(className)) {
      return new TypeToken<List<MMMReportingColumn>>(){}.getType();
    }
    
    if ("MMMReportingTargetingType".equalsIgnoreCase(className)) {
      return new TypeToken<List<MMMReportingTargetingType>>(){}.getType();
    }
    
    if ("MatchType".equalsIgnoreCase(className)) {
      return new TypeToken<List<MatchType>>(){}.getType();
    }
    
    if ("MatchTypeResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<MatchTypeResponse>>(){}.getType();
    }
    
    if ("MaxPriceFilter".equalsIgnoreCase(className)) {
      return new TypeToken<List<MaxPriceFilter>>(){}.getType();
    }
    
    if ("MediaList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<MediaList200Response>>(){}.getType();
    }
    
    if ("MediaUpload".equalsIgnoreCase(className)) {
      return new TypeToken<List<MediaUpload>>(){}.getType();
    }
    
    if ("MediaUploadAllOfUploadParameters".equalsIgnoreCase(className)) {
      return new TypeToken<List<MediaUploadAllOfUploadParameters>>(){}.getType();
    }
    
    if ("MediaUploadDetails".equalsIgnoreCase(className)) {
      return new TypeToken<List<MediaUploadDetails>>(){}.getType();
    }
    
    if ("MediaUploadRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<MediaUploadRequest>>(){}.getType();
    }
    
    if ("MediaUploadStatus".equalsIgnoreCase(className)) {
      return new TypeToken<List<MediaUploadStatus>>(){}.getType();
    }
    
    if ("MediaUploadType".equalsIgnoreCase(className)) {
      return new TypeToken<List<MediaUploadType>>(){}.getType();
    }
    
    if ("MetricsReportingLevel".equalsIgnoreCase(className)) {
      return new TypeToken<List<MetricsReportingLevel>>(){}.getType();
    }
    
    if ("MetricsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<MetricsResponse>>(){}.getType();
    }
    
    if ("MinPriceFilter".equalsIgnoreCase(className)) {
      return new TypeToken<List<MinPriceFilter>>(){}.getType();
    }
    
    if ("NonNullableCatalogsCurrency".equalsIgnoreCase(className)) {
      return new TypeToken<List<NonNullableCatalogsCurrency>>(){}.getType();
    }
    
    if ("NonNullableProductAvailabilityType".equalsIgnoreCase(className)) {
      return new TypeToken<List<NonNullableProductAvailabilityType>>(){}.getType();
    }
    
    if ("NullableCatalogsItemFieldType".equalsIgnoreCase(className)) {
      return new TypeToken<List<NullableCatalogsItemFieldType>>(){}.getType();
    }
    
    if ("NullableCurrency".equalsIgnoreCase(className)) {
      return new TypeToken<List<NullableCurrency>>(){}.getType();
    }
    
    if ("OauthAccessTokenRequestCode".equalsIgnoreCase(className)) {
      return new TypeToken<List<OauthAccessTokenRequestCode>>(){}.getType();
    }
    
    if ("OauthAccessTokenRequestRefresh".equalsIgnoreCase(className)) {
      return new TypeToken<List<OauthAccessTokenRequestRefresh>>(){}.getType();
    }
    
    if ("OauthAccessTokenResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<OauthAccessTokenResponse>>(){}.getType();
    }
    
    if ("OauthAccessTokenResponseCode".equalsIgnoreCase(className)) {
      return new TypeToken<List<OauthAccessTokenResponseCode>>(){}.getType();
    }
    
    if ("OauthAccessTokenResponseEverlastingRefresh".equalsIgnoreCase(className)) {
      return new TypeToken<List<OauthAccessTokenResponseEverlastingRefresh>>(){}.getType();
    }
    
    if ("OauthAccessTokenResponseIntegrationRefresh".equalsIgnoreCase(className)) {
      return new TypeToken<List<OauthAccessTokenResponseIntegrationRefresh>>(){}.getType();
    }
    
    if ("OauthAccessTokenResponseRefresh".equalsIgnoreCase(className)) {
      return new TypeToken<List<OauthAccessTokenResponseRefresh>>(){}.getType();
    }
    
    if ("ObjectiveType".equalsIgnoreCase(className)) {
      return new TypeToken<List<ObjectiveType>>(){}.getType();
    }
    
    if ("OptimizationGoalMetadata".equalsIgnoreCase(className)) {
      return new TypeToken<List<OptimizationGoalMetadata>>(){}.getType();
    }
    
    if ("OptimizationGoalMetadataConversionTagV3GoalMetadata".equalsIgnoreCase(className)) {
      return new TypeToken<List<OptimizationGoalMetadataConversionTagV3GoalMetadata>>(){}.getType();
    }
    
    if ("OptimizationGoalMetadataConversionTagV3GoalMetadataAttributionWindows".equalsIgnoreCase(className)) {
      return new TypeToken<List<OptimizationGoalMetadataConversionTagV3GoalMetadataAttributionWindows>>(){}.getType();
    }
    
    if ("OptimizationGoalMetadataFrequencyGoalMetadata".equalsIgnoreCase(className)) {
      return new TypeToken<List<OptimizationGoalMetadataFrequencyGoalMetadata>>(){}.getType();
    }
    
    if ("OptimizationGoalMetadataScrollupGoalMetadata".equalsIgnoreCase(className)) {
      return new TypeToken<List<OptimizationGoalMetadataScrollupGoalMetadata>>(){}.getType();
    }
    
    if ("OrderLine".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderLine>>(){}.getType();
    }
    
    if ("OrderLineError".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderLineError>>(){}.getType();
    }
    
    if ("OrderLinePaidType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderLinePaidType>>(){}.getType();
    }
    
    if ("OrderLineResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderLineResponse>>(){}.getType();
    }
    
    if ("OrderLineSingleResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderLineSingleResponse>>(){}.getType();
    }
    
    if ("OrderLineStatus".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderLineStatus>>(){}.getType();
    }
    
    if ("OrderLines".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderLines>>(){}.getType();
    }
    
    if ("OrderLinesArrayResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderLinesArrayResponse>>(){}.getType();
    }
    
    if ("OrderLinesList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderLinesList200Response>>(){}.getType();
    }
    
    if ("PacingDeliveryType".equalsIgnoreCase(className)) {
      return new TypeToken<List<PacingDeliveryType>>(){}.getType();
    }
    
    if ("PageVisitConversionTagsGet200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageVisitConversionTagsGet200Response>>(){}.getType();
    }
    
    if ("Paginated".equalsIgnoreCase(className)) {
      return new TypeToken<List<Paginated>>(){}.getType();
    }
    
    if ("PartnerType".equalsIgnoreCase(className)) {
      return new TypeToken<List<PartnerType>>(){}.getType();
    }
    
    if ("Pin".equalsIgnoreCase(className)) {
      return new TypeToken<List<Pin>>(){}.getType();
    }
    
    if ("PinAnalyticsMetricsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<PinAnalyticsMetricsResponse>>(){}.getType();
    }
    
    if ("PinAnalyticsMetricsResponseDailyMetricsInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<PinAnalyticsMetricsResponseDailyMetricsInner>>(){}.getType();
    }
    
    if ("PinCreate".equalsIgnoreCase(className)) {
      return new TypeToken<List<PinCreate>>(){}.getType();
    }
    
    if ("PinMedia".equalsIgnoreCase(className)) {
      return new TypeToken<List<PinMedia>>(){}.getType();
    }
    
    if ("PinMediaMetadata".equalsIgnoreCase(className)) {
      return new TypeToken<List<PinMediaMetadata>>(){}.getType();
    }
    
    if ("PinMediaSource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PinMediaSource>>(){}.getType();
    }
    
    if ("PinMediaSourceImageBase64".equalsIgnoreCase(className)) {
      return new TypeToken<List<PinMediaSourceImageBase64>>(){}.getType();
    }
    
    if ("PinMediaSourceImageURL".equalsIgnoreCase(className)) {
      return new TypeToken<List<PinMediaSourceImageURL>>(){}.getType();
    }
    
    if ("PinMediaSourceImagesBase64".equalsIgnoreCase(className)) {
      return new TypeToken<List<PinMediaSourceImagesBase64>>(){}.getType();
    }
    
    if ("PinMediaSourceImagesBase64ItemsInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<PinMediaSourceImagesBase64ItemsInner>>(){}.getType();
    }
    
    if ("PinMediaSourceImagesURL".equalsIgnoreCase(className)) {
      return new TypeToken<List<PinMediaSourceImagesURL>>(){}.getType();
    }
    
    if ("PinMediaSourceImagesURLItemsInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<PinMediaSourceImagesURLItemsInner>>(){}.getType();
    }
    
    if ("PinMediaSourcePinURL".equalsIgnoreCase(className)) {
      return new TypeToken<List<PinMediaSourcePinURL>>(){}.getType();
    }
    
    if ("PinMediaSourceVideoID".equalsIgnoreCase(className)) {
      return new TypeToken<List<PinMediaSourceVideoID>>(){}.getType();
    }
    
    if ("PinMediaWithImage".equalsIgnoreCase(className)) {
      return new TypeToken<List<PinMediaWithImage>>(){}.getType();
    }
    
    if ("PinMediaWithImageAndVideo".equalsIgnoreCase(className)) {
      return new TypeToken<List<PinMediaWithImageAndVideo>>(){}.getType();
    }
    
    if ("PinMediaWithImages".equalsIgnoreCase(className)) {
      return new TypeToken<List<PinMediaWithImages>>(){}.getType();
    }
    
    if ("PinMediaWithVideo".equalsIgnoreCase(className)) {
      return new TypeToken<List<PinMediaWithVideo>>(){}.getType();
    }
    
    if ("PinMediaWithVideos".equalsIgnoreCase(className)) {
      return new TypeToken<List<PinMediaWithVideos>>(){}.getType();
    }
    
    if ("PinPromotionSummaryStatus".equalsIgnoreCase(className)) {
      return new TypeToken<List<PinPromotionSummaryStatus>>(){}.getType();
    }
    
    if ("PinUpdate".equalsIgnoreCase(className)) {
      return new TypeToken<List<PinUpdate>>(){}.getType();
    }
    
    if ("PinUpdateCarouselSlotsInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<PinUpdateCarouselSlotsInner>>(){}.getType();
    }
    
    if ("PinsAnalyticsMetricTypesParameterInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<PinsAnalyticsMetricTypesParameterInner>>(){}.getType();
    }
    
    if ("PinsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<PinsList200Response>>(){}.getType();
    }
    
    if ("PinsSaveRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<PinsSaveRequest>>(){}.getType();
    }
    
    if ("PinterestTagEventData".equalsIgnoreCase(className)) {
      return new TypeToken<List<PinterestTagEventData>>(){}.getType();
    }
    
    if ("PlacementGroupType".equalsIgnoreCase(className)) {
      return new TypeToken<List<PlacementGroupType>>(){}.getType();
    }
    
    if ("PriceFilter".equalsIgnoreCase(className)) {
      return new TypeToken<List<PriceFilter>>(){}.getType();
    }
    
    if ("ProductAvailabilityType".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAvailabilityType>>(){}.getType();
    }
    
    if ("ProductGroupAnalyticsResponseInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductGroupAnalyticsResponseInner>>(){}.getType();
    }
    
    if ("ProductGroupPromotion".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductGroupPromotion>>(){}.getType();
    }
    
    if ("ProductGroupPromotionCreateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductGroupPromotionCreateRequest>>(){}.getType();
    }
    
    if ("ProductGroupPromotionResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductGroupPromotionResponse>>(){}.getType();
    }
    
    if ("ProductGroupPromotionResponseItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductGroupPromotionResponseItem>>(){}.getType();
    }
    
    if ("ProductGroupPromotionUpdateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductGroupPromotionUpdateRequest>>(){}.getType();
    }
    
    if ("ProductGroupPromotionsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductGroupPromotionsList200Response>>(){}.getType();
    }
    
    if ("ProductGroupSummaryStatus".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductGroupSummaryStatus>>(){}.getType();
    }
    
    if ("ProductType0Filter".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductType0Filter>>(){}.getType();
    }
    
    if ("ProductType1Filter".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductType1Filter>>(){}.getType();
    }
    
    if ("ProductType2Filter".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductType2Filter>>(){}.getType();
    }
    
    if ("ProductType3Filter".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductType3Filter>>(){}.getType();
    }
    
    if ("ProductType4Filter".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductType4Filter>>(){}.getType();
    }
    
    if ("QuizPinData".equalsIgnoreCase(className)) {
      return new TypeToken<List<QuizPinData>>(){}.getType();
    }
    
    if ("QuizPinOption".equalsIgnoreCase(className)) {
      return new TypeToken<List<QuizPinOption>>(){}.getType();
    }
    
    if ("QuizPinQuestion".equalsIgnoreCase(className)) {
      return new TypeToken<List<QuizPinQuestion>>(){}.getType();
    }
    
    if ("QuizPinResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<QuizPinResult>>(){}.getType();
    }
    
    if ("RelatedTerms".equalsIgnoreCase(className)) {
      return new TypeToken<List<RelatedTerms>>(){}.getType();
    }
    
    if ("RelatedTermsRelatedTermsListInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<RelatedTermsRelatedTermsListInner>>(){}.getType();
    }
    
    if ("ReportingColumnAsync".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReportingColumnAsync>>(){}.getType();
    }
    
    if ("Role".equalsIgnoreCase(className)) {
      return new TypeToken<List<Role>>(){}.getType();
    }
    
    if ("SSIOAccountAddress".equalsIgnoreCase(className)) {
      return new TypeToken<List<SSIOAccountAddress>>(){}.getType();
    }
    
    if ("SSIOAccountItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<SSIOAccountItem>>(){}.getType();
    }
    
    if ("SSIOAccountPMPName".equalsIgnoreCase(className)) {
      return new TypeToken<List<SSIOAccountPMPName>>(){}.getType();
    }
    
    if ("SSIOAccountResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<SSIOAccountResponse>>(){}.getType();
    }
    
    if ("SSIOCreateInsertionOrderRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<SSIOCreateInsertionOrderRequest>>(){}.getType();
    }
    
    if ("SSIOCreateInsertionOrderResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<SSIOCreateInsertionOrderResponse>>(){}.getType();
    }
    
    if ("SSIOEditInsertionOrderRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<SSIOEditInsertionOrderRequest>>(){}.getType();
    }
    
    if ("SSIOEditInsertionOrderResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<SSIOEditInsertionOrderResponse>>(){}.getType();
    }
    
    if ("SSIOInsertionOrderCommon".equalsIgnoreCase(className)) {
      return new TypeToken<List<SSIOInsertionOrderCommon>>(){}.getType();
    }
    
    if ("SSIOInsertionOrderStatus".equalsIgnoreCase(className)) {
      return new TypeToken<List<SSIOInsertionOrderStatus>>(){}.getType();
    }
    
    if ("SSIOInsertionOrderStatusResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<SSIOInsertionOrderStatusResponse>>(){}.getType();
    }
    
    if ("SSIOOrderLine".equalsIgnoreCase(className)) {
      return new TypeToken<List<SSIOOrderLine>>(){}.getType();
    }
    
    if ("SearchPartnerPins200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<SearchPartnerPins200Response>>(){}.getType();
    }
    
    if ("SearchUserBoardsGet200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<SearchUserBoardsGet200Response>>(){}.getType();
    }
    
    if ("SingleInterestTargetingOptionResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<SingleInterestTargetingOptionResponse>>(){}.getType();
    }
    
    if ("SsioInsertionOrdersStatusGetByAdAccount200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<SsioInsertionOrdersStatusGetByAdAccount200Response>>(){}.getType();
    }
    
    if ("SsioOrderLinesGetByAdAccount200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<SsioOrderLinesGetByAdAccount200Response>>(){}.getType();
    }
    
    if ("SummaryPin".equalsIgnoreCase(className)) {
      return new TypeToken<List<SummaryPin>>(){}.getType();
    }
    
    if ("SummaryPinMedia".equalsIgnoreCase(className)) {
      return new TypeToken<List<SummaryPinMedia>>(){}.getType();
    }
    
    if ("TargetingAdvertiserCountry".equalsIgnoreCase(className)) {
      return new TypeToken<List<TargetingAdvertiserCountry>>(){}.getType();
    }
    
    if ("TargetingSpec".equalsIgnoreCase(className)) {
      return new TypeToken<List<TargetingSpec>>(){}.getType();
    }
    
    if ("TargetingSpecSHOPPINGRETARGETING".equalsIgnoreCase(className)) {
      return new TypeToken<List<TargetingSpecSHOPPINGRETARGETING>>(){}.getType();
    }
    
    if ("TargetingTypeFilter".equalsIgnoreCase(className)) {
      return new TypeToken<List<TargetingTypeFilter>>(){}.getType();
    }
    
    if ("TemplateResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<TemplateResponse>>(){}.getType();
    }
    
    if ("TemplateResponseDateRange".equalsIgnoreCase(className)) {
      return new TypeToken<List<TemplateResponseDateRange>>(){}.getType();
    }
    
    if ("TemplateResponseDateRangeAbsoluteDateRange".equalsIgnoreCase(className)) {
      return new TypeToken<List<TemplateResponseDateRangeAbsoluteDateRange>>(){}.getType();
    }
    
    if ("TemplateResponseDateRangeDynamicDateRange".equalsIgnoreCase(className)) {
      return new TypeToken<List<TemplateResponseDateRangeDynamicDateRange>>(){}.getType();
    }
    
    if ("TemplateResponseDateRangeRelativeDateRange".equalsIgnoreCase(className)) {
      return new TypeToken<List<TemplateResponseDateRangeRelativeDateRange>>(){}.getType();
    }
    
    if ("TemplatesList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<TemplatesList200Response>>(){}.getType();
    }
    
    if ("TermsOfService".equalsIgnoreCase(className)) {
      return new TypeToken<List<TermsOfService>>(){}.getType();
    }
    
    if ("TopPinsAnalyticsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<TopPinsAnalyticsResponse>>(){}.getType();
    }
    
    if ("TopPinsAnalyticsResponseDateAvailability".equalsIgnoreCase(className)) {
      return new TypeToken<List<TopPinsAnalyticsResponseDateAvailability>>(){}.getType();
    }
    
    if ("TopPinsAnalyticsResponsePinsInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<TopPinsAnalyticsResponsePinsInner>>(){}.getType();
    }
    
    if ("TopVideoPinsAnalyticsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<TopVideoPinsAnalyticsResponse>>(){}.getType();
    }
    
    if ("TopVideoPinsAnalyticsResponsePinsInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<TopVideoPinsAnalyticsResponsePinsInner>>(){}.getType();
    }
    
    if ("TrackingUrls".equalsIgnoreCase(className)) {
      return new TypeToken<List<TrackingUrls>>(){}.getType();
    }
    
    if ("TrendType".equalsIgnoreCase(className)) {
      return new TypeToken<List<TrendType>>(){}.getType();
    }
    
    if ("TrendingKeywordsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<TrendingKeywordsResponse>>(){}.getType();
    }
    
    if ("TrendingKeywordsResponseTrendsInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<TrendingKeywordsResponseTrendsInner>>(){}.getType();
    }
    
    if ("TrendingKeywordsResponseTrendsInnerTimeSeries".equalsIgnoreCase(className)) {
      return new TypeToken<List<TrendingKeywordsResponseTrendsInnerTimeSeries>>(){}.getType();
    }
    
    if ("TrendsSupportedRegion".equalsIgnoreCase(className)) {
      return new TypeToken<List<TrendsSupportedRegion>>(){}.getType();
    }
    
    if ("UpdatableItemAttributes".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdatableItemAttributes>>(){}.getType();
    }
    
    if ("UpdateMaskFieldType".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateMaskFieldType>>(){}.getType();
    }
    
    if ("UserAccountFollowedInterests200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserAccountFollowedInterests200Response>>(){}.getType();
    }
    
    if ("UserFollowingFeedType".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserFollowingFeedType>>(){}.getType();
    }
    
    if ("UserFollowingGet200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserFollowingGet200Response>>(){}.getType();
    }
    
    if ("UserListOperationType".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserListOperationType>>(){}.getType();
    }
    
    if ("UserListType".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserListType>>(){}.getType();
    }
    
    if ("UserSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserSummary>>(){}.getType();
    }
    
    if ("UserWebsiteSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserWebsiteSummary>>(){}.getType();
    }
    
    if ("UserWebsiteVerificationCode".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserWebsiteVerificationCode>>(){}.getType();
    }
    
    if ("UserWebsiteVerifyRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserWebsiteVerifyRequest>>(){}.getType();
    }
    
    if ("UserWebsitesGet200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserWebsitesGet200Response>>(){}.getType();
    }
    
    if ("VideoMetadata".equalsIgnoreCase(className)) {
      return new TypeToken<List<VideoMetadata>>(){}.getType();
    }
    
    return new TypeToken<List<Object>>(){}.getType();
  }

  public static Type getTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("Account".equalsIgnoreCase(className)) {
      return new TypeToken<Account>(){}.getType();
    }
    
    if ("ActionType".equalsIgnoreCase(className)) {
      return new TypeToken<ActionType>(){}.getType();
    }
    
    if ("AdAccount".equalsIgnoreCase(className)) {
      return new TypeToken<AdAccount>(){}.getType();
    }
    
    if ("AdAccountAnalyticsResponseInner".equalsIgnoreCase(className)) {
      return new TypeToken<AdAccountAnalyticsResponseInner>(){}.getType();
    }
    
    if ("AdAccountCreateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<AdAccountCreateRequest>(){}.getType();
    }
    
    if ("AdAccountCreateSubscriptionRequest".equalsIgnoreCase(className)) {
      return new TypeToken<AdAccountCreateSubscriptionRequest>(){}.getType();
    }
    
    if ("AdAccountCreateSubscriptionResponse".equalsIgnoreCase(className)) {
      return new TypeToken<AdAccountCreateSubscriptionResponse>(){}.getType();
    }
    
    if ("AdAccountGetSubscriptionResponse".equalsIgnoreCase(className)) {
      return new TypeToken<AdAccountGetSubscriptionResponse>(){}.getType();
    }
    
    if ("AdAccountOwner".equalsIgnoreCase(className)) {
      return new TypeToken<AdAccountOwner>(){}.getType();
    }
    
    if ("AdAccountsCatalogsProductGroupsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<AdAccountsCatalogsProductGroupsList200Response>(){}.getType();
    }
    
    if ("AdAccountsCountryResponse".equalsIgnoreCase(className)) {
      return new TypeToken<AdAccountsCountryResponse>(){}.getType();
    }
    
    if ("AdAccountsCountryResponseData".equalsIgnoreCase(className)) {
      return new TypeToken<AdAccountsCountryResponseData>(){}.getType();
    }
    
    if ("AdAccountsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<AdAccountsList200Response>(){}.getType();
    }
    
    if ("AdAccountsSubscriptionsGetList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<AdAccountsSubscriptionsGetList200Response>(){}.getType();
    }
    
    if ("AdArrayResponse".equalsIgnoreCase(className)) {
      return new TypeToken<AdArrayResponse>(){}.getType();
    }
    
    if ("AdArrayResponseElement".equalsIgnoreCase(className)) {
      return new TypeToken<AdArrayResponseElement>(){}.getType();
    }
    
    if ("AdCommon".equalsIgnoreCase(className)) {
      return new TypeToken<AdCommon>(){}.getType();
    }
    
    if ("AdCommonQuizPinData".equalsIgnoreCase(className)) {
      return new TypeToken<AdCommonQuizPinData>(){}.getType();
    }
    
    if ("AdCommonTrackingUrls".equalsIgnoreCase(className)) {
      return new TypeToken<AdCommonTrackingUrls>(){}.getType();
    }
    
    if ("AdCountry".equalsIgnoreCase(className)) {
      return new TypeToken<AdCountry>(){}.getType();
    }
    
    if ("AdCreateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<AdCreateRequest>(){}.getType();
    }
    
    if ("AdGroupArrayResponse".equalsIgnoreCase(className)) {
      return new TypeToken<AdGroupArrayResponse>(){}.getType();
    }
    
    if ("AdGroupArrayResponseElement".equalsIgnoreCase(className)) {
      return new TypeToken<AdGroupArrayResponseElement>(){}.getType();
    }
    
    if ("AdGroupAudienceSizingRequest".equalsIgnoreCase(className)) {
      return new TypeToken<AdGroupAudienceSizingRequest>(){}.getType();
    }
    
    if ("AdGroupAudienceSizingRequestKeywordsInner".equalsIgnoreCase(className)) {
      return new TypeToken<AdGroupAudienceSizingRequestKeywordsInner>(){}.getType();
    }
    
    if ("AdGroupAudienceSizingResponse".equalsIgnoreCase(className)) {
      return new TypeToken<AdGroupAudienceSizingResponse>(){}.getType();
    }
    
    if ("AdGroupCommon".equalsIgnoreCase(className)) {
      return new TypeToken<AdGroupCommon>(){}.getType();
    }
    
    if ("AdGroupCommonOptimizationGoalMetadata".equalsIgnoreCase(className)) {
      return new TypeToken<AdGroupCommonOptimizationGoalMetadata>(){}.getType();
    }
    
    if ("AdGroupCommonTrackingUrls".equalsIgnoreCase(className)) {
      return new TypeToken<AdGroupCommonTrackingUrls>(){}.getType();
    }
    
    if ("AdGroupCreateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<AdGroupCreateRequest>(){}.getType();
    }
    
    if ("AdGroupResponse".equalsIgnoreCase(className)) {
      return new TypeToken<AdGroupResponse>(){}.getType();
    }
    
    if ("AdGroupSummaryStatus".equalsIgnoreCase(className)) {
      return new TypeToken<AdGroupSummaryStatus>(){}.getType();
    }
    
    if ("AdGroupUpdateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<AdGroupUpdateRequest>(){}.getType();
    }
    
    if ("AdGroupsAnalyticsResponseInner".equalsIgnoreCase(className)) {
      return new TypeToken<AdGroupsAnalyticsResponseInner>(){}.getType();
    }
    
    if ("AdGroupsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<AdGroupsList200Response>(){}.getType();
    }
    
    if ("AdPinId".equalsIgnoreCase(className)) {
      return new TypeToken<AdPinId>(){}.getType();
    }
    
    if ("AdPreviewCreateFromImage".equalsIgnoreCase(className)) {
      return new TypeToken<AdPreviewCreateFromImage>(){}.getType();
    }
    
    if ("AdPreviewCreateFromPin".equalsIgnoreCase(className)) {
      return new TypeToken<AdPreviewCreateFromPin>(){}.getType();
    }
    
    if ("AdPreviewRequest".equalsIgnoreCase(className)) {
      return new TypeToken<AdPreviewRequest>(){}.getType();
    }
    
    if ("AdPreviewURLResponse".equalsIgnoreCase(className)) {
      return new TypeToken<AdPreviewURLResponse>(){}.getType();
    }
    
    if ("AdResponse".equalsIgnoreCase(className)) {
      return new TypeToken<AdResponse>(){}.getType();
    }
    
    if ("AdUpdateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<AdUpdateRequest>(){}.getType();
    }
    
    if ("AdsAnalyticsCreateAsyncRequest".equalsIgnoreCase(className)) {
      return new TypeToken<AdsAnalyticsCreateAsyncRequest>(){}.getType();
    }
    
    if ("AdsAnalyticsCreateAsyncResponse".equalsIgnoreCase(className)) {
      return new TypeToken<AdsAnalyticsCreateAsyncResponse>(){}.getType();
    }
    
    if ("AdsAnalyticsFilterColumn".equalsIgnoreCase(className)) {
      return new TypeToken<AdsAnalyticsFilterColumn>(){}.getType();
    }
    
    if ("AdsAnalyticsFilterOperator".equalsIgnoreCase(className)) {
      return new TypeToken<AdsAnalyticsFilterOperator>(){}.getType();
    }
    
    if ("AdsAnalyticsGetAsyncResponse".equalsIgnoreCase(className)) {
      return new TypeToken<AdsAnalyticsGetAsyncResponse>(){}.getType();
    }
    
    if ("AdsAnalyticsMetricsFilter".equalsIgnoreCase(className)) {
      return new TypeToken<AdsAnalyticsMetricsFilter>(){}.getType();
    }
    
    if ("AdsAnalyticsResponseInner".equalsIgnoreCase(className)) {
      return new TypeToken<AdsAnalyticsResponseInner>(){}.getType();
    }
    
    if ("AdsAnalyticsTargetingType".equalsIgnoreCase(className)) {
      return new TypeToken<AdsAnalyticsTargetingType>(){}.getType();
    }
    
    if ("AdsCreditDiscountsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<AdsCreditDiscountsResponse>(){}.getType();
    }
    
    if ("AdsCreditRedeemRequest".equalsIgnoreCase(className)) {
      return new TypeToken<AdsCreditRedeemRequest>(){}.getType();
    }
    
    if ("AdsCreditRedeemResponse".equalsIgnoreCase(className)) {
      return new TypeToken<AdsCreditRedeemResponse>(){}.getType();
    }
    
    if ("AdsCreditsDiscountsGet200Response".equalsIgnoreCase(className)) {
      return new TypeToken<AdsCreditsDiscountsGet200Response>(){}.getType();
    }
    
    if ("AdsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<AdsList200Response>(){}.getType();
    }
    
    if ("AnalyticsDailyMetrics".equalsIgnoreCase(className)) {
      return new TypeToken<AnalyticsDailyMetrics>(){}.getType();
    }
    
    if ("AnalyticsMetricsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<AnalyticsMetricsResponse>(){}.getType();
    }
    
    if ("Audience".equalsIgnoreCase(className)) {
      return new TypeToken<Audience>(){}.getType();
    }
    
    if ("AudienceCategory".equalsIgnoreCase(className)) {
      return new TypeToken<AudienceCategory>(){}.getType();
    }
    
    if ("AudienceCommon".equalsIgnoreCase(className)) {
      return new TypeToken<AudienceCommon>(){}.getType();
    }
    
    if ("AudienceCreateCustomRequest".equalsIgnoreCase(className)) {
      return new TypeToken<AudienceCreateCustomRequest>(){}.getType();
    }
    
    if ("AudienceCreateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<AudienceCreateRequest>(){}.getType();
    }
    
    if ("AudienceCreateRequest1AudienceType".equalsIgnoreCase(className)) {
      return new TypeToken<AudienceCreateRequest1AudienceType>(){}.getType();
    }
    
    if ("AudienceDataParty".equalsIgnoreCase(className)) {
      return new TypeToken<AudienceDataParty>(){}.getType();
    }
    
    if ("AudienceDefinition".equalsIgnoreCase(className)) {
      return new TypeToken<AudienceDefinition>(){}.getType();
    }
    
    if ("AudienceDefinitionResponse".equalsIgnoreCase(className)) {
      return new TypeToken<AudienceDefinitionResponse>(){}.getType();
    }
    
    if ("AudienceDemographicValue".equalsIgnoreCase(className)) {
      return new TypeToken<AudienceDemographicValue>(){}.getType();
    }
    
    if ("AudienceDemographics".equalsIgnoreCase(className)) {
      return new TypeToken<AudienceDemographics>(){}.getType();
    }
    
    if ("AudienceInsightCategoryArrayResponse".equalsIgnoreCase(className)) {
      return new TypeToken<AudienceInsightCategoryArrayResponse>(){}.getType();
    }
    
    if ("AudienceInsightCategoryCommon".equalsIgnoreCase(className)) {
      return new TypeToken<AudienceInsightCategoryCommon>(){}.getType();
    }
    
    if ("AudienceInsightType".equalsIgnoreCase(className)) {
      return new TypeToken<AudienceInsightType>(){}.getType();
    }
    
    if ("AudienceInsightsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<AudienceInsightsResponse>(){}.getType();
    }
    
    if ("AudienceRule".equalsIgnoreCase(className)) {
      return new TypeToken<AudienceRule>(){}.getType();
    }
    
    if ("AudienceSharingType".equalsIgnoreCase(className)) {
      return new TypeToken<AudienceSharingType>(){}.getType();
    }
    
    if ("AudienceSubcategory".equalsIgnoreCase(className)) {
      return new TypeToken<AudienceSubcategory>(){}.getType();
    }
    
    if ("AudienceType".equalsIgnoreCase(className)) {
      return new TypeToken<AudienceType>(){}.getType();
    }
    
    if ("AudienceUpdateOperationType".equalsIgnoreCase(className)) {
      return new TypeToken<AudienceUpdateOperationType>(){}.getType();
    }
    
    if ("AudienceUpdateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<AudienceUpdateRequest>(){}.getType();
    }
    
    if ("AudiencesList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<AudiencesList200Response>(){}.getType();
    }
    
    if ("AvailabilityFilter".equalsIgnoreCase(className)) {
      return new TypeToken<AvailabilityFilter>(){}.getType();
    }
    
    if ("BatchOperation".equalsIgnoreCase(className)) {
      return new TypeToken<BatchOperation>(){}.getType();
    }
    
    if ("BatchOperationStatus".equalsIgnoreCase(className)) {
      return new TypeToken<BatchOperationStatus>(){}.getType();
    }
    
    if ("BidFloor".equalsIgnoreCase(className)) {
      return new TypeToken<BidFloor>(){}.getType();
    }
    
    if ("BidFloorRequest".equalsIgnoreCase(className)) {
      return new TypeToken<BidFloorRequest>(){}.getType();
    }
    
    if ("BidFloorSpec".equalsIgnoreCase(className)) {
      return new TypeToken<BidFloorSpec>(){}.getType();
    }
    
    if ("BillingProfilesGet200Response".equalsIgnoreCase(className)) {
      return new TypeToken<BillingProfilesGet200Response>(){}.getType();
    }
    
    if ("BillingProfilesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<BillingProfilesResponse>(){}.getType();
    }
    
    if ("Board".equalsIgnoreCase(className)) {
      return new TypeToken<Board>(){}.getType();
    }
    
    if ("BoardMedia".equalsIgnoreCase(className)) {
      return new TypeToken<BoardMedia>(){}.getType();
    }
    
    if ("BoardOwner".equalsIgnoreCase(className)) {
      return new TypeToken<BoardOwner>(){}.getType();
    }
    
    if ("BoardSection".equalsIgnoreCase(className)) {
      return new TypeToken<BoardSection>(){}.getType();
    }
    
    if ("BoardSectionsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<BoardSectionsList200Response>(){}.getType();
    }
    
    if ("BoardUpdate".equalsIgnoreCase(className)) {
      return new TypeToken<BoardUpdate>(){}.getType();
    }
    
    if ("BoardsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<BoardsList200Response>(){}.getType();
    }
    
    if ("BoardsListPins200Response".equalsIgnoreCase(className)) {
      return new TypeToken<BoardsListPins200Response>(){}.getType();
    }
    
    if ("BoardsUserFollowsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<BoardsUserFollowsList200Response>(){}.getType();
    }
    
    if ("BookClosedResponse".equalsIgnoreCase(className)) {
      return new TypeToken<BookClosedResponse>(){}.getType();
    }
    
    if ("BrandFilter".equalsIgnoreCase(className)) {
      return new TypeToken<BrandFilter>(){}.getType();
    }
    
    if ("BudgetType".equalsIgnoreCase(className)) {
      return new TypeToken<BudgetType>(){}.getType();
    }
    
    if ("BulkDownloadRequest".equalsIgnoreCase(className)) {
      return new TypeToken<BulkDownloadRequest>(){}.getType();
    }
    
    if ("BulkDownloadRequestCampaignFilter".equalsIgnoreCase(className)) {
      return new TypeToken<BulkDownloadRequestCampaignFilter>(){}.getType();
    }
    
    if ("BulkDownloadResponse".equalsIgnoreCase(className)) {
      return new TypeToken<BulkDownloadResponse>(){}.getType();
    }
    
    if ("BulkEntityType".equalsIgnoreCase(className)) {
      return new TypeToken<BulkEntityType>(){}.getType();
    }
    
    if ("BulkOutputFormat".equalsIgnoreCase(className)) {
      return new TypeToken<BulkOutputFormat>(){}.getType();
    }
    
    if ("BulkReportingJobStatus".equalsIgnoreCase(className)) {
      return new TypeToken<BulkReportingJobStatus>(){}.getType();
    }
    
    if ("BulkUpsertRequest".equalsIgnoreCase(className)) {
      return new TypeToken<BulkUpsertRequest>(){}.getType();
    }
    
    if ("BulkUpsertRequestCreate".equalsIgnoreCase(className)) {
      return new TypeToken<BulkUpsertRequestCreate>(){}.getType();
    }
    
    if ("BulkUpsertRequestUpdate".equalsIgnoreCase(className)) {
      return new TypeToken<BulkUpsertRequestUpdate>(){}.getType();
    }
    
    if ("BulkUpsertResponse".equalsIgnoreCase(className)) {
      return new TypeToken<BulkUpsertResponse>(){}.getType();
    }
    
    if ("BulkUpsertStatus".equalsIgnoreCase(className)) {
      return new TypeToken<BulkUpsertStatus>(){}.getType();
    }
    
    if ("BulkUpsertStatusResponse".equalsIgnoreCase(className)) {
      return new TypeToken<BulkUpsertStatusResponse>(){}.getType();
    }
    
    if ("BusinessAccessRole".equalsIgnoreCase(className)) {
      return new TypeToken<BusinessAccessRole>(){}.getType();
    }
    
    if ("CampaignCommon".equalsIgnoreCase(className)) {
      return new TypeToken<CampaignCommon>(){}.getType();
    }
    
    if ("CampaignCreateCommon".equalsIgnoreCase(className)) {
      return new TypeToken<CampaignCreateCommon>(){}.getType();
    }
    
    if ("CampaignCreateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CampaignCreateRequest>(){}.getType();
    }
    
    if ("CampaignCreateResponse".equalsIgnoreCase(className)) {
      return new TypeToken<CampaignCreateResponse>(){}.getType();
    }
    
    if ("CampaignCreateResponseData".equalsIgnoreCase(className)) {
      return new TypeToken<CampaignCreateResponseData>(){}.getType();
    }
    
    if ("CampaignCreateResponseItem".equalsIgnoreCase(className)) {
      return new TypeToken<CampaignCreateResponseItem>(){}.getType();
    }
    
    if ("CampaignId".equalsIgnoreCase(className)) {
      return new TypeToken<CampaignId>(){}.getType();
    }
    
    if ("CampaignResponse".equalsIgnoreCase(className)) {
      return new TypeToken<CampaignResponse>(){}.getType();
    }
    
    if ("CampaignSummaryStatus".equalsIgnoreCase(className)) {
      return new TypeToken<CampaignSummaryStatus>(){}.getType();
    }
    
    if ("CampaignUpdateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CampaignUpdateRequest>(){}.getType();
    }
    
    if ("CampaignUpdateResponse".equalsIgnoreCase(className)) {
      return new TypeToken<CampaignUpdateResponse>(){}.getType();
    }
    
    if ("CampaignsAnalyticsResponseInner".equalsIgnoreCase(className)) {
      return new TypeToken<CampaignsAnalyticsResponseInner>(){}.getType();
    }
    
    if ("CampaignsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CampaignsList200Response>(){}.getType();
    }
    
    if ("Catalog".equalsIgnoreCase(className)) {
      return new TypeToken<Catalog>(){}.getType();
    }
    
    if ("CatalogProductGroup".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogProductGroup>(){}.getType();
    }
    
    if ("CatalogsCreateHotelItem".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsCreateHotelItem>(){}.getType();
    }
    
    if ("CatalogsCreateRetailItem".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsCreateRetailItem>(){}.getType();
    }
    
    if ("CatalogsDbItem".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsDbItem>(){}.getType();
    }
    
    if ("CatalogsDeleteHotelItem".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsDeleteHotelItem>(){}.getType();
    }
    
    if ("CatalogsDeleteRetailItem".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsDeleteRetailItem>(){}.getType();
    }
    
    if ("CatalogsFeed".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsFeed>(){}.getType();
    }
    
    if ("CatalogsFeedCredentials".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsFeedCredentials>(){}.getType();
    }
    
    if ("CatalogsFeedIngestionDetails".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsFeedIngestionDetails>(){}.getType();
    }
    
    if ("CatalogsFeedIngestionErrors".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsFeedIngestionErrors>(){}.getType();
    }
    
    if ("CatalogsFeedIngestionInfo".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsFeedIngestionInfo>(){}.getType();
    }
    
    if ("CatalogsFeedIngestionWarnings".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsFeedIngestionWarnings>(){}.getType();
    }
    
    if ("CatalogsFeedProcessingResult".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsFeedProcessingResult>(){}.getType();
    }
    
    if ("CatalogsFeedProcessingSchedule".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsFeedProcessingSchedule>(){}.getType();
    }
    
    if ("CatalogsFeedProcessingStatus".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsFeedProcessingStatus>(){}.getType();
    }
    
    if ("CatalogsFeedProductCounts".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsFeedProductCounts>(){}.getType();
    }
    
    if ("CatalogsFeedValidationDetails".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsFeedValidationDetails>(){}.getType();
    }
    
    if ("CatalogsFeedValidationErrors".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsFeedValidationErrors>(){}.getType();
    }
    
    if ("CatalogsFeedValidationWarnings".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsFeedValidationWarnings>(){}.getType();
    }
    
    if ("CatalogsFeedsCreateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsFeedsCreateRequest>(){}.getType();
    }
    
    if ("CatalogsFeedsCreateRequestDefaultLocale".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsFeedsCreateRequestDefaultLocale>(){}.getType();
    }
    
    if ("CatalogsFeedsUpdateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsFeedsUpdateRequest>(){}.getType();
    }
    
    if ("CatalogsFormat".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsFormat>(){}.getType();
    }
    
    if ("CatalogsHotelAddress".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsHotelAddress>(){}.getType();
    }
    
    if ("CatalogsHotelAttributes".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsHotelAttributes>(){}.getType();
    }
    
    if ("CatalogsHotelAttributesAllOfMainImage".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsHotelAttributesAllOfMainImage>(){}.getType();
    }
    
    if ("CatalogsHotelBatchItem".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsHotelBatchItem>(){}.getType();
    }
    
    if ("CatalogsHotelBatchRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsHotelBatchRequest>(){}.getType();
    }
    
    if ("CatalogsHotelFeed".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsHotelFeed>(){}.getType();
    }
    
    if ("CatalogsHotelFeedsCreateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsHotelFeedsCreateRequest>(){}.getType();
    }
    
    if ("CatalogsHotelFeedsUpdateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsHotelFeedsUpdateRequest>(){}.getType();
    }
    
    if ("CatalogsHotelGuestRatings".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsHotelGuestRatings>(){}.getType();
    }
    
    if ("CatalogsHotelItemErrorResponse".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsHotelItemErrorResponse>(){}.getType();
    }
    
    if ("CatalogsHotelItemResponse".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsHotelItemResponse>(){}.getType();
    }
    
    if ("CatalogsHotelItemsBatch".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsHotelItemsBatch>(){}.getType();
    }
    
    if ("CatalogsHotelItemsFilter".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsHotelItemsFilter>(){}.getType();
    }
    
    if ("CatalogsHotelProductGroup".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsHotelProductGroup>(){}.getType();
    }
    
    if ("CatalogsHotelProductGroupCreateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsHotelProductGroupCreateRequest>(){}.getType();
    }
    
    if ("CatalogsHotelProductGroupFilterKeys".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsHotelProductGroupFilterKeys>(){}.getType();
    }
    
    if ("CatalogsHotelProductGroupFilters".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsHotelProductGroupFilters>(){}.getType();
    }
    
    if ("CatalogsHotelProductGroupFiltersAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsHotelProductGroupFiltersAllOf>(){}.getType();
    }
    
    if ("CatalogsHotelProductGroupFiltersAnyOf".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsHotelProductGroupFiltersAnyOf>(){}.getType();
    }
    
    if ("CatalogsHotelProductGroupUpdateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsHotelProductGroupUpdateRequest>(){}.getType();
    }
    
    if ("CatalogsItemValidationDetails".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsItemValidationDetails>(){}.getType();
    }
    
    if ("CatalogsItemValidationErrors".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsItemValidationErrors>(){}.getType();
    }
    
    if ("CatalogsItemValidationIssue".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsItemValidationIssue>(){}.getType();
    }
    
    if ("CatalogsItemValidationIssues".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsItemValidationIssues>(){}.getType();
    }
    
    if ("CatalogsItemValidationWarnings".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsItemValidationWarnings>(){}.getType();
    }
    
    if ("CatalogsItems".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsItems>(){}.getType();
    }
    
    if ("CatalogsItemsBatch".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsItemsBatch>(){}.getType();
    }
    
    if ("CatalogsItemsBatchRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsItemsBatchRequest>(){}.getType();
    }
    
    if ("CatalogsItemsCreateBatchRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsItemsCreateBatchRequest>(){}.getType();
    }
    
    if ("CatalogsItemsDeleteBatchRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsItemsDeleteBatchRequest>(){}.getType();
    }
    
    if ("CatalogsItemsDeleteDiscontinuedBatchRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsItemsDeleteDiscontinuedBatchRequest>(){}.getType();
    }
    
    if ("CatalogsItemsFilters".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsItemsFilters>(){}.getType();
    }
    
    if ("CatalogsItemsUpdateBatchRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsItemsUpdateBatchRequest>(){}.getType();
    }
    
    if ("CatalogsItemsUpsertBatchRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsItemsUpsertBatchRequest>(){}.getType();
    }
    
    if ("CatalogsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsList200Response>(){}.getType();
    }
    
    if ("CatalogsListProductsByFilterRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsListProductsByFilterRequest>(){}.getType();
    }
    
    if ("CatalogsListProductsByFilterRequestOneOf".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsListProductsByFilterRequestOneOf>(){}.getType();
    }
    
    if ("CatalogsLocale".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsLocale>(){}.getType();
    }
    
    if ("CatalogsProduct".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsProduct>(){}.getType();
    }
    
    if ("CatalogsProductGroup".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsProductGroup>(){}.getType();
    }
    
    if ("CatalogsProductGroupCreateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsProductGroupCreateRequest>(){}.getType();
    }
    
    if ("CatalogsProductGroupCurrencyCriteria".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsProductGroupCurrencyCriteria>(){}.getType();
    }
    
    if ("CatalogsProductGroupFilterKeys".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsProductGroupFilterKeys>(){}.getType();
    }
    
    if ("CatalogsProductGroupFilters".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsProductGroupFilters>(){}.getType();
    }
    
    if ("CatalogsProductGroupFiltersAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsProductGroupFiltersAllOf>(){}.getType();
    }
    
    if ("CatalogsProductGroupFiltersAnyOf".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsProductGroupFiltersAnyOf>(){}.getType();
    }
    
    if ("CatalogsProductGroupFiltersRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsProductGroupFiltersRequest>(){}.getType();
    }
    
    if ("CatalogsProductGroupFiltersRequestAnyOf".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsProductGroupFiltersRequestAnyOf>(){}.getType();
    }
    
    if ("CatalogsProductGroupFiltersRequestAnyOf1".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsProductGroupFiltersRequestAnyOf1>(){}.getType();
    }
    
    if ("CatalogsProductGroupMultipleCountriesCriteria".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsProductGroupMultipleCountriesCriteria>(){}.getType();
    }
    
    if ("CatalogsProductGroupMultipleGenderCriteria".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsProductGroupMultipleGenderCriteria>(){}.getType();
    }
    
    if ("CatalogsProductGroupMultipleStringCriteria".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsProductGroupMultipleStringCriteria>(){}.getType();
    }
    
    if ("CatalogsProductGroupMultipleStringListCriteria".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsProductGroupMultipleStringListCriteria>(){}.getType();
    }
    
    if ("CatalogsProductGroupPinsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsProductGroupPinsList200Response>(){}.getType();
    }
    
    if ("CatalogsProductGroupPricingCriteria".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsProductGroupPricingCriteria>(){}.getType();
    }
    
    if ("CatalogsProductGroupPricingCurrencyCriteria".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsProductGroupPricingCurrencyCriteria>(){}.getType();
    }
    
    if ("CatalogsProductGroupProductCounts".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsProductGroupProductCounts>(){}.getType();
    }
    
    if ("CatalogsProductGroupStatus".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsProductGroupStatus>(){}.getType();
    }
    
    if ("CatalogsProductGroupType".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsProductGroupType>(){}.getType();
    }
    
    if ("CatalogsProductGroupUpdateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsProductGroupUpdateRequest>(){}.getType();
    }
    
    if ("CatalogsProductGroupsCreate201Response".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsProductGroupsCreate201Response>(){}.getType();
    }
    
    if ("CatalogsProductGroupsCreateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsProductGroupsCreateRequest>(){}.getType();
    }
    
    if ("CatalogsProductGroupsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsProductGroupsList200Response>(){}.getType();
    }
    
    if ("CatalogsProductGroupsList200ResponseAllOfItemsInner".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsProductGroupsList200ResponseAllOfItemsInner>(){}.getType();
    }
    
    if ("CatalogsProductGroupsUpdateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsProductGroupsUpdateRequest>(){}.getType();
    }
    
    if ("CatalogsProductMetadata".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsProductMetadata>(){}.getType();
    }
    
    if ("CatalogsRetailBatchRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsRetailBatchRequest>(){}.getType();
    }
    
    if ("CatalogsRetailBatchRequestItemsInner".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsRetailBatchRequestItemsInner>(){}.getType();
    }
    
    if ("CatalogsRetailFeed".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsRetailFeed>(){}.getType();
    }
    
    if ("CatalogsRetailFeedsCreateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsRetailFeedsCreateRequest>(){}.getType();
    }
    
    if ("CatalogsRetailFeedsUpdateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsRetailFeedsUpdateRequest>(){}.getType();
    }
    
    if ("CatalogsRetailItemErrorResponse".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsRetailItemErrorResponse>(){}.getType();
    }
    
    if ("CatalogsRetailItemResponse".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsRetailItemResponse>(){}.getType();
    }
    
    if ("CatalogsRetailItemsBatch".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsRetailItemsBatch>(){}.getType();
    }
    
    if ("CatalogsRetailItemsFilter".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsRetailItemsFilter>(){}.getType();
    }
    
    if ("CatalogsRetailProductGroup".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsRetailProductGroup>(){}.getType();
    }
    
    if ("CatalogsStatus".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsStatus>(){}.getType();
    }
    
    if ("CatalogsType".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsType>(){}.getType();
    }
    
    if ("CatalogsUpdatableHotelAttributes".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsUpdatableHotelAttributes>(){}.getType();
    }
    
    if ("CatalogsUpdateHotelItem".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsUpdateHotelItem>(){}.getType();
    }
    
    if ("CatalogsUpdateRetailItem".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsUpdateRetailItem>(){}.getType();
    }
    
    if ("CatalogsUpsertHotelItem".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsUpsertHotelItem>(){}.getType();
    }
    
    if ("CatalogsUpsertRetailItem".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsUpsertRetailItem>(){}.getType();
    }
    
    if ("CatalogsVerticalBatchRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsVerticalBatchRequest>(){}.getType();
    }
    
    if ("CatalogsVerticalFeedsCreateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsVerticalFeedsCreateRequest>(){}.getType();
    }
    
    if ("CatalogsVerticalFeedsUpdateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsVerticalFeedsUpdateRequest>(){}.getType();
    }
    
    if ("CatalogsVerticalProductGroup".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsVerticalProductGroup>(){}.getType();
    }
    
    if ("CatalogsVerticalProductGroupCreateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsVerticalProductGroupCreateRequest>(){}.getType();
    }
    
    if ("CatalogsVerticalProductGroupUpdateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogsVerticalProductGroupUpdateRequest>(){}.getType();
    }
    
    if ("ConditionFilter".equalsIgnoreCase(className)) {
      return new TypeToken<ConditionFilter>(){}.getType();
    }
    
    if ("ConversionApiResponse".equalsIgnoreCase(className)) {
      return new TypeToken<ConversionApiResponse>(){}.getType();
    }
    
    if ("ConversionApiResponseEventsInner".equalsIgnoreCase(className)) {
      return new TypeToken<ConversionApiResponseEventsInner>(){}.getType();
    }
    
    if ("ConversionAttributionWindowDays".equalsIgnoreCase(className)) {
      return new TypeToken<ConversionAttributionWindowDays>(){}.getType();
    }
    
    if ("ConversionEventResponse".equalsIgnoreCase(className)) {
      return new TypeToken<ConversionEventResponse>(){}.getType();
    }
    
    if ("ConversionEvents".equalsIgnoreCase(className)) {
      return new TypeToken<ConversionEvents>(){}.getType();
    }
    
    if ("ConversionEventsDataInner".equalsIgnoreCase(className)) {
      return new TypeToken<ConversionEventsDataInner>(){}.getType();
    }
    
    if ("ConversionEventsDataInnerCustomData".equalsIgnoreCase(className)) {
      return new TypeToken<ConversionEventsDataInnerCustomData>(){}.getType();
    }
    
    if ("ConversionEventsDataInnerCustomDataContentsInner".equalsIgnoreCase(className)) {
      return new TypeToken<ConversionEventsDataInnerCustomDataContentsInner>(){}.getType();
    }
    
    if ("ConversionEventsUserData".equalsIgnoreCase(className)) {
      return new TypeToken<ConversionEventsUserData>(){}.getType();
    }
    
    if ("ConversionReportAttributionType".equalsIgnoreCase(className)) {
      return new TypeToken<ConversionReportAttributionType>(){}.getType();
    }
    
    if ("ConversionReportTimeType".equalsIgnoreCase(className)) {
      return new TypeToken<ConversionReportTimeType>(){}.getType();
    }
    
    if ("ConversionTagCommon".equalsIgnoreCase(className)) {
      return new TypeToken<ConversionTagCommon>(){}.getType();
    }
    
    if ("ConversionTagConfigs".equalsIgnoreCase(className)) {
      return new TypeToken<ConversionTagConfigs>(){}.getType();
    }
    
    if ("ConversionTagCreate".equalsIgnoreCase(className)) {
      return new TypeToken<ConversionTagCreate>(){}.getType();
    }
    
    if ("ConversionTagListResponse".equalsIgnoreCase(className)) {
      return new TypeToken<ConversionTagListResponse>(){}.getType();
    }
    
    if ("ConversionTagResponse".equalsIgnoreCase(className)) {
      return new TypeToken<ConversionTagResponse>(){}.getType();
    }
    
    if ("ConversionTagType".equalsIgnoreCase(className)) {
      return new TypeToken<ConversionTagType>(){}.getType();
    }
    
    if ("Country".equalsIgnoreCase(className)) {
      return new TypeToken<Country>(){}.getType();
    }
    
    if ("CountryFilter".equalsIgnoreCase(className)) {
      return new TypeToken<CountryFilter>(){}.getType();
    }
    
    if ("CreateMMMReportRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CreateMMMReportRequest>(){}.getType();
    }
    
    if ("CreateMMMReportResponse".equalsIgnoreCase(className)) {
      return new TypeToken<CreateMMMReportResponse>(){}.getType();
    }
    
    if ("CreateMMMReportResponseData".equalsIgnoreCase(className)) {
      return new TypeToken<CreateMMMReportResponseData>(){}.getType();
    }
    
    if ("CreativeType".equalsIgnoreCase(className)) {
      return new TypeToken<CreativeType>(){}.getType();
    }
    
    if ("Currency".equalsIgnoreCase(className)) {
      return new TypeToken<Currency>(){}.getType();
    }
    
    if ("CurrencyFilter".equalsIgnoreCase(className)) {
      return new TypeToken<CurrencyFilter>(){}.getType();
    }
    
    if ("CustomLabel0Filter".equalsIgnoreCase(className)) {
      return new TypeToken<CustomLabel0Filter>(){}.getType();
    }
    
    if ("CustomLabel1Filter".equalsIgnoreCase(className)) {
      return new TypeToken<CustomLabel1Filter>(){}.getType();
    }
    
    if ("CustomLabel2Filter".equalsIgnoreCase(className)) {
      return new TypeToken<CustomLabel2Filter>(){}.getType();
    }
    
    if ("CustomLabel3Filter".equalsIgnoreCase(className)) {
      return new TypeToken<CustomLabel3Filter>(){}.getType();
    }
    
    if ("CustomLabel4Filter".equalsIgnoreCase(className)) {
      return new TypeToken<CustomLabel4Filter>(){}.getType();
    }
    
    if ("CustomerList".equalsIgnoreCase(className)) {
      return new TypeToken<CustomerList>(){}.getType();
    }
    
    if ("CustomerListRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CustomerListRequest>(){}.getType();
    }
    
    if ("CustomerListUpdateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CustomerListUpdateRequest>(){}.getType();
    }
    
    if ("CustomerListsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CustomerListsList200Response>(){}.getType();
    }
    
    if ("DataOutputFormat".equalsIgnoreCase(className)) {
      return new TypeToken<DataOutputFormat>(){}.getType();
    }
    
    if ("DataStatus".equalsIgnoreCase(className)) {
      return new TypeToken<DataStatus>(){}.getType();
    }
    
    if ("DeliveryMetricsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<DeliveryMetricsResponse>(){}.getType();
    }
    
    if ("DeliveryMetricsResponseItemsInner".equalsIgnoreCase(className)) {
      return new TypeToken<DeliveryMetricsResponseItemsInner>(){}.getType();
    }
    
    if ("DetailedError".equalsIgnoreCase(className)) {
      return new TypeToken<DetailedError>(){}.getType();
    }
    
    if ("EnhancedMatchStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<EnhancedMatchStatusType>(){}.getType();
    }
    
    if ("EntityStatus".equalsIgnoreCase(className)) {
      return new TypeToken<EntityStatus>(){}.getType();
    }
    
    if ("Error".equalsIgnoreCase(className)) {
      return new TypeToken<Error>(){}.getType();
    }
    
    if ("Exception".equalsIgnoreCase(className)) {
      return new TypeToken<Exception>(){}.getType();
    }
    
    if ("FeedProcessingResultsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<FeedProcessingResultsList200Response>(){}.getType();
    }
    
    if ("FeedsCreateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<FeedsCreateRequest>(){}.getType();
    }
    
    if ("FeedsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<FeedsList200Response>(){}.getType();
    }
    
    if ("FeedsUpdateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<FeedsUpdateRequest>(){}.getType();
    }
    
    if ("FollowUserRequest".equalsIgnoreCase(className)) {
      return new TypeToken<FollowUserRequest>(){}.getType();
    }
    
    if ("FollowersList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<FollowersList200Response>(){}.getType();
    }
    
    if ("Gender".equalsIgnoreCase(className)) {
      return new TypeToken<Gender>(){}.getType();
    }
    
    if ("GenderFilter".equalsIgnoreCase(className)) {
      return new TypeToken<GenderFilter>(){}.getType();
    }
    
    if ("GetAudiencesOrderBy".equalsIgnoreCase(className)) {
      return new TypeToken<GetAudiencesOrderBy>(){}.getType();
    }
    
    if ("GetMMMReportResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetMMMReportResponse>(){}.getType();
    }
    
    if ("GetMMMReportResponseData".equalsIgnoreCase(className)) {
      return new TypeToken<GetMMMReportResponseData>(){}.getType();
    }
    
    if ("GoogleProductCategory0Filter".equalsIgnoreCase(className)) {
      return new TypeToken<GoogleProductCategory0Filter>(){}.getType();
    }
    
    if ("GoogleProductCategory1Filter".equalsIgnoreCase(className)) {
      return new TypeToken<GoogleProductCategory1Filter>(){}.getType();
    }
    
    if ("GoogleProductCategory2Filter".equalsIgnoreCase(className)) {
      return new TypeToken<GoogleProductCategory2Filter>(){}.getType();
    }
    
    if ("GoogleProductCategory3Filter".equalsIgnoreCase(className)) {
      return new TypeToken<GoogleProductCategory3Filter>(){}.getType();
    }
    
    if ("GoogleProductCategory4Filter".equalsIgnoreCase(className)) {
      return new TypeToken<GoogleProductCategory4Filter>(){}.getType();
    }
    
    if ("GoogleProductCategory5Filter".equalsIgnoreCase(className)) {
      return new TypeToken<GoogleProductCategory5Filter>(){}.getType();
    }
    
    if ("GoogleProductCategory6Filter".equalsIgnoreCase(className)) {
      return new TypeToken<GoogleProductCategory6Filter>(){}.getType();
    }
    
    if ("Granularity".equalsIgnoreCase(className)) {
      return new TypeToken<Granularity>(){}.getType();
    }
    
    if ("GridClickType".equalsIgnoreCase(className)) {
      return new TypeToken<GridClickType>(){}.getType();
    }
    
    if ("HotelIdFilter".equalsIgnoreCase(className)) {
      return new TypeToken<HotelIdFilter>(){}.getType();
    }
    
    if ("HotelProcessingRecord".equalsIgnoreCase(className)) {
      return new TypeToken<HotelProcessingRecord>(){}.getType();
    }
    
    if ("ImageDetails".equalsIgnoreCase(className)) {
      return new TypeToken<ImageDetails>(){}.getType();
    }
    
    if ("ImageMetadata".equalsIgnoreCase(className)) {
      return new TypeToken<ImageMetadata>(){}.getType();
    }
    
    if ("ImageMetadataImages".equalsIgnoreCase(className)) {
      return new TypeToken<ImageMetadataImages>(){}.getType();
    }
    
    if ("IntegrationLog".equalsIgnoreCase(className)) {
      return new TypeToken<IntegrationLog>(){}.getType();
    }
    
    if ("IntegrationLogClientError".equalsIgnoreCase(className)) {
      return new TypeToken<IntegrationLogClientError>(){}.getType();
    }
    
    if ("IntegrationLogClientRequest".equalsIgnoreCase(className)) {
      return new TypeToken<IntegrationLogClientRequest>(){}.getType();
    }
    
    if ("IntegrationLogsInvalidLogResponse".equalsIgnoreCase(className)) {
      return new TypeToken<IntegrationLogsInvalidLogResponse>(){}.getType();
    }
    
    if ("IntegrationLogsInvalidLogResponseRejectedLogsInner".equalsIgnoreCase(className)) {
      return new TypeToken<IntegrationLogsInvalidLogResponseRejectedLogsInner>(){}.getType();
    }
    
    if ("IntegrationLogsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<IntegrationLogsRequest>(){}.getType();
    }
    
    if ("IntegrationLogsSuccessResponse".equalsIgnoreCase(className)) {
      return new TypeToken<IntegrationLogsSuccessResponse>(){}.getType();
    }
    
    if ("IntegrationMetadata".equalsIgnoreCase(className)) {
      return new TypeToken<IntegrationMetadata>(){}.getType();
    }
    
    if ("IntegrationRecord".equalsIgnoreCase(className)) {
      return new TypeToken<IntegrationRecord>(){}.getType();
    }
    
    if ("IntegrationRequest".equalsIgnoreCase(className)) {
      return new TypeToken<IntegrationRequest>(){}.getType();
    }
    
    if ("IntegrationRequestPatch".equalsIgnoreCase(className)) {
      return new TypeToken<IntegrationRequestPatch>(){}.getType();
    }
    
    if ("IntegrationsGetList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<IntegrationsGetList200Response>(){}.getType();
    }
    
    if ("Interest".equalsIgnoreCase(className)) {
      return new TypeToken<Interest>(){}.getType();
    }
    
    if ("ItemAttributes".equalsIgnoreCase(className)) {
      return new TypeToken<ItemAttributes>(){}.getType();
    }
    
    if ("ItemBatchRecord".equalsIgnoreCase(className)) {
      return new TypeToken<ItemBatchRecord>(){}.getType();
    }
    
    if ("ItemCreateBatchRecord".equalsIgnoreCase(className)) {
      return new TypeToken<ItemCreateBatchRecord>(){}.getType();
    }
    
    if ("ItemDeleteBatchRecord".equalsIgnoreCase(className)) {
      return new TypeToken<ItemDeleteBatchRecord>(){}.getType();
    }
    
    if ("ItemDeleteDiscontinuedBatchRecord".equalsIgnoreCase(className)) {
      return new TypeToken<ItemDeleteDiscontinuedBatchRecord>(){}.getType();
    }
    
    if ("ItemGroupIdFilter".equalsIgnoreCase(className)) {
      return new TypeToken<ItemGroupIdFilter>(){}.getType();
    }
    
    if ("ItemIdFilter".equalsIgnoreCase(className)) {
      return new TypeToken<ItemIdFilter>(){}.getType();
    }
    
    if ("ItemProcessingRecord".equalsIgnoreCase(className)) {
      return new TypeToken<ItemProcessingRecord>(){}.getType();
    }
    
    if ("ItemProcessingStatus".equalsIgnoreCase(className)) {
      return new TypeToken<ItemProcessingStatus>(){}.getType();
    }
    
    if ("ItemResponse".equalsIgnoreCase(className)) {
      return new TypeToken<ItemResponse>(){}.getType();
    }
    
    if ("ItemResponseAnyOf".equalsIgnoreCase(className)) {
      return new TypeToken<ItemResponseAnyOf>(){}.getType();
    }
    
    if ("ItemResponseAnyOf1".equalsIgnoreCase(className)) {
      return new TypeToken<ItemResponseAnyOf1>(){}.getType();
    }
    
    if ("ItemUpdateBatchRecord".equalsIgnoreCase(className)) {
      return new TypeToken<ItemUpdateBatchRecord>(){}.getType();
    }
    
    if ("ItemUpsertBatchRecord".equalsIgnoreCase(className)) {
      return new TypeToken<ItemUpsertBatchRecord>(){}.getType();
    }
    
    if ("ItemValidationEvent".equalsIgnoreCase(className)) {
      return new TypeToken<ItemValidationEvent>(){}.getType();
    }
    
    if ("ItemsBatchPostRequest".equalsIgnoreCase(className)) {
      return new TypeToken<ItemsBatchPostRequest>(){}.getType();
    }
    
    if ("ItemsIssuesList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<ItemsIssuesList200Response>(){}.getType();
    }
    
    if ("Keyword".equalsIgnoreCase(className)) {
      return new TypeToken<Keyword>(){}.getType();
    }
    
    if ("KeywordError".equalsIgnoreCase(className)) {
      return new TypeToken<KeywordError>(){}.getType();
    }
    
    if ("KeywordMetrics".equalsIgnoreCase(className)) {
      return new TypeToken<KeywordMetrics>(){}.getType();
    }
    
    if ("KeywordMetricsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<KeywordMetricsResponse>(){}.getType();
    }
    
    if ("KeywordUpdate".equalsIgnoreCase(className)) {
      return new TypeToken<KeywordUpdate>(){}.getType();
    }
    
    if ("KeywordUpdateBody".equalsIgnoreCase(className)) {
      return new TypeToken<KeywordUpdateBody>(){}.getType();
    }
    
    if ("KeywordsCommon".equalsIgnoreCase(className)) {
      return new TypeToken<KeywordsCommon>(){}.getType();
    }
    
    if ("KeywordsGet200Response".equalsIgnoreCase(className)) {
      return new TypeToken<KeywordsGet200Response>(){}.getType();
    }
    
    if ("KeywordsMetricsArrayResponse".equalsIgnoreCase(className)) {
      return new TypeToken<KeywordsMetricsArrayResponse>(){}.getType();
    }
    
    if ("KeywordsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<KeywordsRequest>(){}.getType();
    }
    
    if ("KeywordsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<KeywordsResponse>(){}.getType();
    }
    
    if ("Language".equalsIgnoreCase(className)) {
      return new TypeToken<Language>(){}.getType();
    }
    
    if ("LeadFormCommon".equalsIgnoreCase(className)) {
      return new TypeToken<LeadFormCommon>(){}.getType();
    }
    
    if ("LeadFormQuestion".equalsIgnoreCase(className)) {
      return new TypeToken<LeadFormQuestion>(){}.getType();
    }
    
    if ("LeadFormQuestionFieldType".equalsIgnoreCase(className)) {
      return new TypeToken<LeadFormQuestionFieldType>(){}.getType();
    }
    
    if ("LeadFormQuestionType".equalsIgnoreCase(className)) {
      return new TypeToken<LeadFormQuestionType>(){}.getType();
    }
    
    if ("LeadFormResponse".equalsIgnoreCase(className)) {
      return new TypeToken<LeadFormResponse>(){}.getType();
    }
    
    if ("LeadFormStatus".equalsIgnoreCase(className)) {
      return new TypeToken<LeadFormStatus>(){}.getType();
    }
    
    if ("LeadFormTestRequest".equalsIgnoreCase(className)) {
      return new TypeToken<LeadFormTestRequest>(){}.getType();
    }
    
    if ("LeadFormTestResponse".equalsIgnoreCase(className)) {
      return new TypeToken<LeadFormTestResponse>(){}.getType();
    }
    
    if ("LeadFormsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<LeadFormsList200Response>(){}.getType();
    }
    
    if ("LineItem".equalsIgnoreCase(className)) {
      return new TypeToken<LineItem>(){}.getType();
    }
    
    if ("LinkedBusiness".equalsIgnoreCase(className)) {
      return new TypeToken<LinkedBusiness>(){}.getType();
    }
    
    if ("MMMReportingColumn".equalsIgnoreCase(className)) {
      return new TypeToken<MMMReportingColumn>(){}.getType();
    }
    
    if ("MMMReportingTargetingType".equalsIgnoreCase(className)) {
      return new TypeToken<MMMReportingTargetingType>(){}.getType();
    }
    
    if ("MatchType".equalsIgnoreCase(className)) {
      return new TypeToken<MatchType>(){}.getType();
    }
    
    if ("MatchTypeResponse".equalsIgnoreCase(className)) {
      return new TypeToken<MatchTypeResponse>(){}.getType();
    }
    
    if ("MaxPriceFilter".equalsIgnoreCase(className)) {
      return new TypeToken<MaxPriceFilter>(){}.getType();
    }
    
    if ("MediaList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<MediaList200Response>(){}.getType();
    }
    
    if ("MediaUpload".equalsIgnoreCase(className)) {
      return new TypeToken<MediaUpload>(){}.getType();
    }
    
    if ("MediaUploadAllOfUploadParameters".equalsIgnoreCase(className)) {
      return new TypeToken<MediaUploadAllOfUploadParameters>(){}.getType();
    }
    
    if ("MediaUploadDetails".equalsIgnoreCase(className)) {
      return new TypeToken<MediaUploadDetails>(){}.getType();
    }
    
    if ("MediaUploadRequest".equalsIgnoreCase(className)) {
      return new TypeToken<MediaUploadRequest>(){}.getType();
    }
    
    if ("MediaUploadStatus".equalsIgnoreCase(className)) {
      return new TypeToken<MediaUploadStatus>(){}.getType();
    }
    
    if ("MediaUploadType".equalsIgnoreCase(className)) {
      return new TypeToken<MediaUploadType>(){}.getType();
    }
    
    if ("MetricsReportingLevel".equalsIgnoreCase(className)) {
      return new TypeToken<MetricsReportingLevel>(){}.getType();
    }
    
    if ("MetricsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<MetricsResponse>(){}.getType();
    }
    
    if ("MinPriceFilter".equalsIgnoreCase(className)) {
      return new TypeToken<MinPriceFilter>(){}.getType();
    }
    
    if ("NonNullableCatalogsCurrency".equalsIgnoreCase(className)) {
      return new TypeToken<NonNullableCatalogsCurrency>(){}.getType();
    }
    
    if ("NonNullableProductAvailabilityType".equalsIgnoreCase(className)) {
      return new TypeToken<NonNullableProductAvailabilityType>(){}.getType();
    }
    
    if ("NullableCatalogsItemFieldType".equalsIgnoreCase(className)) {
      return new TypeToken<NullableCatalogsItemFieldType>(){}.getType();
    }
    
    if ("NullableCurrency".equalsIgnoreCase(className)) {
      return new TypeToken<NullableCurrency>(){}.getType();
    }
    
    if ("OauthAccessTokenRequestCode".equalsIgnoreCase(className)) {
      return new TypeToken<OauthAccessTokenRequestCode>(){}.getType();
    }
    
    if ("OauthAccessTokenRequestRefresh".equalsIgnoreCase(className)) {
      return new TypeToken<OauthAccessTokenRequestRefresh>(){}.getType();
    }
    
    if ("OauthAccessTokenResponse".equalsIgnoreCase(className)) {
      return new TypeToken<OauthAccessTokenResponse>(){}.getType();
    }
    
    if ("OauthAccessTokenResponseCode".equalsIgnoreCase(className)) {
      return new TypeToken<OauthAccessTokenResponseCode>(){}.getType();
    }
    
    if ("OauthAccessTokenResponseEverlastingRefresh".equalsIgnoreCase(className)) {
      return new TypeToken<OauthAccessTokenResponseEverlastingRefresh>(){}.getType();
    }
    
    if ("OauthAccessTokenResponseIntegrationRefresh".equalsIgnoreCase(className)) {
      return new TypeToken<OauthAccessTokenResponseIntegrationRefresh>(){}.getType();
    }
    
    if ("OauthAccessTokenResponseRefresh".equalsIgnoreCase(className)) {
      return new TypeToken<OauthAccessTokenResponseRefresh>(){}.getType();
    }
    
    if ("ObjectiveType".equalsIgnoreCase(className)) {
      return new TypeToken<ObjectiveType>(){}.getType();
    }
    
    if ("OptimizationGoalMetadata".equalsIgnoreCase(className)) {
      return new TypeToken<OptimizationGoalMetadata>(){}.getType();
    }
    
    if ("OptimizationGoalMetadataConversionTagV3GoalMetadata".equalsIgnoreCase(className)) {
      return new TypeToken<OptimizationGoalMetadataConversionTagV3GoalMetadata>(){}.getType();
    }
    
    if ("OptimizationGoalMetadataConversionTagV3GoalMetadataAttributionWindows".equalsIgnoreCase(className)) {
      return new TypeToken<OptimizationGoalMetadataConversionTagV3GoalMetadataAttributionWindows>(){}.getType();
    }
    
    if ("OptimizationGoalMetadataFrequencyGoalMetadata".equalsIgnoreCase(className)) {
      return new TypeToken<OptimizationGoalMetadataFrequencyGoalMetadata>(){}.getType();
    }
    
    if ("OptimizationGoalMetadataScrollupGoalMetadata".equalsIgnoreCase(className)) {
      return new TypeToken<OptimizationGoalMetadataScrollupGoalMetadata>(){}.getType();
    }
    
    if ("OrderLine".equalsIgnoreCase(className)) {
      return new TypeToken<OrderLine>(){}.getType();
    }
    
    if ("OrderLineError".equalsIgnoreCase(className)) {
      return new TypeToken<OrderLineError>(){}.getType();
    }
    
    if ("OrderLinePaidType".equalsIgnoreCase(className)) {
      return new TypeToken<OrderLinePaidType>(){}.getType();
    }
    
    if ("OrderLineResponse".equalsIgnoreCase(className)) {
      return new TypeToken<OrderLineResponse>(){}.getType();
    }
    
    if ("OrderLineSingleResponse".equalsIgnoreCase(className)) {
      return new TypeToken<OrderLineSingleResponse>(){}.getType();
    }
    
    if ("OrderLineStatus".equalsIgnoreCase(className)) {
      return new TypeToken<OrderLineStatus>(){}.getType();
    }
    
    if ("OrderLines".equalsIgnoreCase(className)) {
      return new TypeToken<OrderLines>(){}.getType();
    }
    
    if ("OrderLinesArrayResponse".equalsIgnoreCase(className)) {
      return new TypeToken<OrderLinesArrayResponse>(){}.getType();
    }
    
    if ("OrderLinesList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<OrderLinesList200Response>(){}.getType();
    }
    
    if ("PacingDeliveryType".equalsIgnoreCase(className)) {
      return new TypeToken<PacingDeliveryType>(){}.getType();
    }
    
    if ("PageVisitConversionTagsGet200Response".equalsIgnoreCase(className)) {
      return new TypeToken<PageVisitConversionTagsGet200Response>(){}.getType();
    }
    
    if ("Paginated".equalsIgnoreCase(className)) {
      return new TypeToken<Paginated>(){}.getType();
    }
    
    if ("PartnerType".equalsIgnoreCase(className)) {
      return new TypeToken<PartnerType>(){}.getType();
    }
    
    if ("Pin".equalsIgnoreCase(className)) {
      return new TypeToken<Pin>(){}.getType();
    }
    
    if ("PinAnalyticsMetricsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<PinAnalyticsMetricsResponse>(){}.getType();
    }
    
    if ("PinAnalyticsMetricsResponseDailyMetricsInner".equalsIgnoreCase(className)) {
      return new TypeToken<PinAnalyticsMetricsResponseDailyMetricsInner>(){}.getType();
    }
    
    if ("PinCreate".equalsIgnoreCase(className)) {
      return new TypeToken<PinCreate>(){}.getType();
    }
    
    if ("PinMedia".equalsIgnoreCase(className)) {
      return new TypeToken<PinMedia>(){}.getType();
    }
    
    if ("PinMediaMetadata".equalsIgnoreCase(className)) {
      return new TypeToken<PinMediaMetadata>(){}.getType();
    }
    
    if ("PinMediaSource".equalsIgnoreCase(className)) {
      return new TypeToken<PinMediaSource>(){}.getType();
    }
    
    if ("PinMediaSourceImageBase64".equalsIgnoreCase(className)) {
      return new TypeToken<PinMediaSourceImageBase64>(){}.getType();
    }
    
    if ("PinMediaSourceImageURL".equalsIgnoreCase(className)) {
      return new TypeToken<PinMediaSourceImageURL>(){}.getType();
    }
    
    if ("PinMediaSourceImagesBase64".equalsIgnoreCase(className)) {
      return new TypeToken<PinMediaSourceImagesBase64>(){}.getType();
    }
    
    if ("PinMediaSourceImagesBase64ItemsInner".equalsIgnoreCase(className)) {
      return new TypeToken<PinMediaSourceImagesBase64ItemsInner>(){}.getType();
    }
    
    if ("PinMediaSourceImagesURL".equalsIgnoreCase(className)) {
      return new TypeToken<PinMediaSourceImagesURL>(){}.getType();
    }
    
    if ("PinMediaSourceImagesURLItemsInner".equalsIgnoreCase(className)) {
      return new TypeToken<PinMediaSourceImagesURLItemsInner>(){}.getType();
    }
    
    if ("PinMediaSourcePinURL".equalsIgnoreCase(className)) {
      return new TypeToken<PinMediaSourcePinURL>(){}.getType();
    }
    
    if ("PinMediaSourceVideoID".equalsIgnoreCase(className)) {
      return new TypeToken<PinMediaSourceVideoID>(){}.getType();
    }
    
    if ("PinMediaWithImage".equalsIgnoreCase(className)) {
      return new TypeToken<PinMediaWithImage>(){}.getType();
    }
    
    if ("PinMediaWithImageAndVideo".equalsIgnoreCase(className)) {
      return new TypeToken<PinMediaWithImageAndVideo>(){}.getType();
    }
    
    if ("PinMediaWithImages".equalsIgnoreCase(className)) {
      return new TypeToken<PinMediaWithImages>(){}.getType();
    }
    
    if ("PinMediaWithVideo".equalsIgnoreCase(className)) {
      return new TypeToken<PinMediaWithVideo>(){}.getType();
    }
    
    if ("PinMediaWithVideos".equalsIgnoreCase(className)) {
      return new TypeToken<PinMediaWithVideos>(){}.getType();
    }
    
    if ("PinPromotionSummaryStatus".equalsIgnoreCase(className)) {
      return new TypeToken<PinPromotionSummaryStatus>(){}.getType();
    }
    
    if ("PinUpdate".equalsIgnoreCase(className)) {
      return new TypeToken<PinUpdate>(){}.getType();
    }
    
    if ("PinUpdateCarouselSlotsInner".equalsIgnoreCase(className)) {
      return new TypeToken<PinUpdateCarouselSlotsInner>(){}.getType();
    }
    
    if ("PinsAnalyticsMetricTypesParameterInner".equalsIgnoreCase(className)) {
      return new TypeToken<PinsAnalyticsMetricTypesParameterInner>(){}.getType();
    }
    
    if ("PinsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<PinsList200Response>(){}.getType();
    }
    
    if ("PinsSaveRequest".equalsIgnoreCase(className)) {
      return new TypeToken<PinsSaveRequest>(){}.getType();
    }
    
    if ("PinterestTagEventData".equalsIgnoreCase(className)) {
      return new TypeToken<PinterestTagEventData>(){}.getType();
    }
    
    if ("PlacementGroupType".equalsIgnoreCase(className)) {
      return new TypeToken<PlacementGroupType>(){}.getType();
    }
    
    if ("PriceFilter".equalsIgnoreCase(className)) {
      return new TypeToken<PriceFilter>(){}.getType();
    }
    
    if ("ProductAvailabilityType".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAvailabilityType>(){}.getType();
    }
    
    if ("ProductGroupAnalyticsResponseInner".equalsIgnoreCase(className)) {
      return new TypeToken<ProductGroupAnalyticsResponseInner>(){}.getType();
    }
    
    if ("ProductGroupPromotion".equalsIgnoreCase(className)) {
      return new TypeToken<ProductGroupPromotion>(){}.getType();
    }
    
    if ("ProductGroupPromotionCreateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<ProductGroupPromotionCreateRequest>(){}.getType();
    }
    
    if ("ProductGroupPromotionResponse".equalsIgnoreCase(className)) {
      return new TypeToken<ProductGroupPromotionResponse>(){}.getType();
    }
    
    if ("ProductGroupPromotionResponseItem".equalsIgnoreCase(className)) {
      return new TypeToken<ProductGroupPromotionResponseItem>(){}.getType();
    }
    
    if ("ProductGroupPromotionUpdateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<ProductGroupPromotionUpdateRequest>(){}.getType();
    }
    
    if ("ProductGroupPromotionsList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<ProductGroupPromotionsList200Response>(){}.getType();
    }
    
    if ("ProductGroupSummaryStatus".equalsIgnoreCase(className)) {
      return new TypeToken<ProductGroupSummaryStatus>(){}.getType();
    }
    
    if ("ProductType0Filter".equalsIgnoreCase(className)) {
      return new TypeToken<ProductType0Filter>(){}.getType();
    }
    
    if ("ProductType1Filter".equalsIgnoreCase(className)) {
      return new TypeToken<ProductType1Filter>(){}.getType();
    }
    
    if ("ProductType2Filter".equalsIgnoreCase(className)) {
      return new TypeToken<ProductType2Filter>(){}.getType();
    }
    
    if ("ProductType3Filter".equalsIgnoreCase(className)) {
      return new TypeToken<ProductType3Filter>(){}.getType();
    }
    
    if ("ProductType4Filter".equalsIgnoreCase(className)) {
      return new TypeToken<ProductType4Filter>(){}.getType();
    }
    
    if ("QuizPinData".equalsIgnoreCase(className)) {
      return new TypeToken<QuizPinData>(){}.getType();
    }
    
    if ("QuizPinOption".equalsIgnoreCase(className)) {
      return new TypeToken<QuizPinOption>(){}.getType();
    }
    
    if ("QuizPinQuestion".equalsIgnoreCase(className)) {
      return new TypeToken<QuizPinQuestion>(){}.getType();
    }
    
    if ("QuizPinResult".equalsIgnoreCase(className)) {
      return new TypeToken<QuizPinResult>(){}.getType();
    }
    
    if ("RelatedTerms".equalsIgnoreCase(className)) {
      return new TypeToken<RelatedTerms>(){}.getType();
    }
    
    if ("RelatedTermsRelatedTermsListInner".equalsIgnoreCase(className)) {
      return new TypeToken<RelatedTermsRelatedTermsListInner>(){}.getType();
    }
    
    if ("ReportingColumnAsync".equalsIgnoreCase(className)) {
      return new TypeToken<ReportingColumnAsync>(){}.getType();
    }
    
    if ("Role".equalsIgnoreCase(className)) {
      return new TypeToken<Role>(){}.getType();
    }
    
    if ("SSIOAccountAddress".equalsIgnoreCase(className)) {
      return new TypeToken<SSIOAccountAddress>(){}.getType();
    }
    
    if ("SSIOAccountItem".equalsIgnoreCase(className)) {
      return new TypeToken<SSIOAccountItem>(){}.getType();
    }
    
    if ("SSIOAccountPMPName".equalsIgnoreCase(className)) {
      return new TypeToken<SSIOAccountPMPName>(){}.getType();
    }
    
    if ("SSIOAccountResponse".equalsIgnoreCase(className)) {
      return new TypeToken<SSIOAccountResponse>(){}.getType();
    }
    
    if ("SSIOCreateInsertionOrderRequest".equalsIgnoreCase(className)) {
      return new TypeToken<SSIOCreateInsertionOrderRequest>(){}.getType();
    }
    
    if ("SSIOCreateInsertionOrderResponse".equalsIgnoreCase(className)) {
      return new TypeToken<SSIOCreateInsertionOrderResponse>(){}.getType();
    }
    
    if ("SSIOEditInsertionOrderRequest".equalsIgnoreCase(className)) {
      return new TypeToken<SSIOEditInsertionOrderRequest>(){}.getType();
    }
    
    if ("SSIOEditInsertionOrderResponse".equalsIgnoreCase(className)) {
      return new TypeToken<SSIOEditInsertionOrderResponse>(){}.getType();
    }
    
    if ("SSIOInsertionOrderCommon".equalsIgnoreCase(className)) {
      return new TypeToken<SSIOInsertionOrderCommon>(){}.getType();
    }
    
    if ("SSIOInsertionOrderStatus".equalsIgnoreCase(className)) {
      return new TypeToken<SSIOInsertionOrderStatus>(){}.getType();
    }
    
    if ("SSIOInsertionOrderStatusResponse".equalsIgnoreCase(className)) {
      return new TypeToken<SSIOInsertionOrderStatusResponse>(){}.getType();
    }
    
    if ("SSIOOrderLine".equalsIgnoreCase(className)) {
      return new TypeToken<SSIOOrderLine>(){}.getType();
    }
    
    if ("SearchPartnerPins200Response".equalsIgnoreCase(className)) {
      return new TypeToken<SearchPartnerPins200Response>(){}.getType();
    }
    
    if ("SearchUserBoardsGet200Response".equalsIgnoreCase(className)) {
      return new TypeToken<SearchUserBoardsGet200Response>(){}.getType();
    }
    
    if ("SingleInterestTargetingOptionResponse".equalsIgnoreCase(className)) {
      return new TypeToken<SingleInterestTargetingOptionResponse>(){}.getType();
    }
    
    if ("SsioInsertionOrdersStatusGetByAdAccount200Response".equalsIgnoreCase(className)) {
      return new TypeToken<SsioInsertionOrdersStatusGetByAdAccount200Response>(){}.getType();
    }
    
    if ("SsioOrderLinesGetByAdAccount200Response".equalsIgnoreCase(className)) {
      return new TypeToken<SsioOrderLinesGetByAdAccount200Response>(){}.getType();
    }
    
    if ("SummaryPin".equalsIgnoreCase(className)) {
      return new TypeToken<SummaryPin>(){}.getType();
    }
    
    if ("SummaryPinMedia".equalsIgnoreCase(className)) {
      return new TypeToken<SummaryPinMedia>(){}.getType();
    }
    
    if ("TargetingAdvertiserCountry".equalsIgnoreCase(className)) {
      return new TypeToken<TargetingAdvertiserCountry>(){}.getType();
    }
    
    if ("TargetingSpec".equalsIgnoreCase(className)) {
      return new TypeToken<TargetingSpec>(){}.getType();
    }
    
    if ("TargetingSpecSHOPPINGRETARGETING".equalsIgnoreCase(className)) {
      return new TypeToken<TargetingSpecSHOPPINGRETARGETING>(){}.getType();
    }
    
    if ("TargetingTypeFilter".equalsIgnoreCase(className)) {
      return new TypeToken<TargetingTypeFilter>(){}.getType();
    }
    
    if ("TemplateResponse".equalsIgnoreCase(className)) {
      return new TypeToken<TemplateResponse>(){}.getType();
    }
    
    if ("TemplateResponseDateRange".equalsIgnoreCase(className)) {
      return new TypeToken<TemplateResponseDateRange>(){}.getType();
    }
    
    if ("TemplateResponseDateRangeAbsoluteDateRange".equalsIgnoreCase(className)) {
      return new TypeToken<TemplateResponseDateRangeAbsoluteDateRange>(){}.getType();
    }
    
    if ("TemplateResponseDateRangeDynamicDateRange".equalsIgnoreCase(className)) {
      return new TypeToken<TemplateResponseDateRangeDynamicDateRange>(){}.getType();
    }
    
    if ("TemplateResponseDateRangeRelativeDateRange".equalsIgnoreCase(className)) {
      return new TypeToken<TemplateResponseDateRangeRelativeDateRange>(){}.getType();
    }
    
    if ("TemplatesList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<TemplatesList200Response>(){}.getType();
    }
    
    if ("TermsOfService".equalsIgnoreCase(className)) {
      return new TypeToken<TermsOfService>(){}.getType();
    }
    
    if ("TopPinsAnalyticsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<TopPinsAnalyticsResponse>(){}.getType();
    }
    
    if ("TopPinsAnalyticsResponseDateAvailability".equalsIgnoreCase(className)) {
      return new TypeToken<TopPinsAnalyticsResponseDateAvailability>(){}.getType();
    }
    
    if ("TopPinsAnalyticsResponsePinsInner".equalsIgnoreCase(className)) {
      return new TypeToken<TopPinsAnalyticsResponsePinsInner>(){}.getType();
    }
    
    if ("TopVideoPinsAnalyticsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<TopVideoPinsAnalyticsResponse>(){}.getType();
    }
    
    if ("TopVideoPinsAnalyticsResponsePinsInner".equalsIgnoreCase(className)) {
      return new TypeToken<TopVideoPinsAnalyticsResponsePinsInner>(){}.getType();
    }
    
    if ("TrackingUrls".equalsIgnoreCase(className)) {
      return new TypeToken<TrackingUrls>(){}.getType();
    }
    
    if ("TrendType".equalsIgnoreCase(className)) {
      return new TypeToken<TrendType>(){}.getType();
    }
    
    if ("TrendingKeywordsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<TrendingKeywordsResponse>(){}.getType();
    }
    
    if ("TrendingKeywordsResponseTrendsInner".equalsIgnoreCase(className)) {
      return new TypeToken<TrendingKeywordsResponseTrendsInner>(){}.getType();
    }
    
    if ("TrendingKeywordsResponseTrendsInnerTimeSeries".equalsIgnoreCase(className)) {
      return new TypeToken<TrendingKeywordsResponseTrendsInnerTimeSeries>(){}.getType();
    }
    
    if ("TrendsSupportedRegion".equalsIgnoreCase(className)) {
      return new TypeToken<TrendsSupportedRegion>(){}.getType();
    }
    
    if ("UpdatableItemAttributes".equalsIgnoreCase(className)) {
      return new TypeToken<UpdatableItemAttributes>(){}.getType();
    }
    
    if ("UpdateMaskFieldType".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateMaskFieldType>(){}.getType();
    }
    
    if ("UserAccountFollowedInterests200Response".equalsIgnoreCase(className)) {
      return new TypeToken<UserAccountFollowedInterests200Response>(){}.getType();
    }
    
    if ("UserFollowingFeedType".equalsIgnoreCase(className)) {
      return new TypeToken<UserFollowingFeedType>(){}.getType();
    }
    
    if ("UserFollowingGet200Response".equalsIgnoreCase(className)) {
      return new TypeToken<UserFollowingGet200Response>(){}.getType();
    }
    
    if ("UserListOperationType".equalsIgnoreCase(className)) {
      return new TypeToken<UserListOperationType>(){}.getType();
    }
    
    if ("UserListType".equalsIgnoreCase(className)) {
      return new TypeToken<UserListType>(){}.getType();
    }
    
    if ("UserSummary".equalsIgnoreCase(className)) {
      return new TypeToken<UserSummary>(){}.getType();
    }
    
    if ("UserWebsiteSummary".equalsIgnoreCase(className)) {
      return new TypeToken<UserWebsiteSummary>(){}.getType();
    }
    
    if ("UserWebsiteVerificationCode".equalsIgnoreCase(className)) {
      return new TypeToken<UserWebsiteVerificationCode>(){}.getType();
    }
    
    if ("UserWebsiteVerifyRequest".equalsIgnoreCase(className)) {
      return new TypeToken<UserWebsiteVerifyRequest>(){}.getType();
    }
    
    if ("UserWebsitesGet200Response".equalsIgnoreCase(className)) {
      return new TypeToken<UserWebsitesGet200Response>(){}.getType();
    }
    
    if ("VideoMetadata".equalsIgnoreCase(className)) {
      return new TypeToken<VideoMetadata>(){}.getType();
    }
    
    return new TypeToken<Object>(){}.getType();
  }

};
