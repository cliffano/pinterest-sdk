/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.Board;
import org.openapitools.client.model.EntityStatus;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * non-promoted catalog product group entity
 **/
@ApiModel(description = "non-promoted catalog product group entity")
public class CatalogProductGroup {
  
  @SerializedName("id")
  private String id = null;
  @SerializedName("merchant_id")
  private String merchantId = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("filters")
  private Object filters = null;
  @SerializedName("filter_v2")
  private Object filterV2 = null;
  @SerializedName("type")
  private Board type = null;
  @SerializedName("status")
  private EntityStatus status = null;
  @SerializedName("feed_profile_id")
  private String feedProfileId = null;
  @SerializedName("created_at")
  private Integer createdAt = null;
  @SerializedName("last_update")
  private Integer lastUpdate = null;
  @SerializedName("product_count")
  private Integer productCount = null;
  @SerializedName("featured_position")
  private Integer featuredPosition = null;

  /**
   * ID of the catalog product group.
   **/
  @ApiModelProperty(value = "ID of the catalog product group.")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Merchant ID pertaining to the owner of the catalog product group.
   **/
  @ApiModelProperty(value = "Merchant ID pertaining to the owner of the catalog product group.")
  public String getMerchantId() {
    return merchantId;
  }
  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }

  /**
   * Name of catalog product group
   **/
  @ApiModelProperty(value = "Name of catalog product group")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Object holding a list of filters
   **/
  @ApiModelProperty(value = "Object holding a list of filters")
  public Object getFilters() {
    return filters;
  }
  public void setFilters(Object filters) {
    this.filters = filters;
  }

  /**
   * Object holding a list of filters
   **/
  @ApiModelProperty(value = "Object holding a list of filters")
  public Object getFilterV2() {
    return filterV2;
  }
  public void setFilterV2(Object filterV2) {
    this.filterV2 = filterV2;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Board getType() {
    return type;
  }
  public void setType(Board type) {
    this.type = type;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public EntityStatus getStatus() {
    return status;
  }
  public void setStatus(EntityStatus status) {
    this.status = status;
  }

  /**
   * id of the feed profile belonging to this catalog product group
   **/
  @ApiModelProperty(value = "id of the feed profile belonging to this catalog product group")
  public String getFeedProfileId() {
    return feedProfileId;
  }
  public void setFeedProfileId(String feedProfileId) {
    this.feedProfileId = feedProfileId;
  }

  /**
   * Unix timestamp in seconds of when catalog product group was created.
   **/
  @ApiModelProperty(value = "Unix timestamp in seconds of when catalog product group was created.")
  public Integer getCreatedAt() {
    return createdAt;
  }
  public void setCreatedAt(Integer createdAt) {
    this.createdAt = createdAt;
  }

  /**
   * Unix timestamp in seconds of last time catalog product group was updated.
   **/
  @ApiModelProperty(value = "Unix timestamp in seconds of last time catalog product group was updated.")
  public Integer getLastUpdate() {
    return lastUpdate;
  }
  public void setLastUpdate(Integer lastUpdate) {
    this.lastUpdate = lastUpdate;
  }

  /**
   * Amount of products in the catalog product group
   **/
  @ApiModelProperty(value = "Amount of products in the catalog product group")
  public Integer getProductCount() {
    return productCount;
  }
  public void setProductCount(Integer productCount) {
    this.productCount = productCount;
  }

  /**
   * index of the featured position of the catalog product group
   **/
  @ApiModelProperty(value = "index of the featured position of the catalog product group")
  public Integer getFeaturedPosition() {
    return featuredPosition;
  }
  public void setFeaturedPosition(Integer featuredPosition) {
    this.featuredPosition = featuredPosition;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CatalogProductGroup catalogProductGroup = (CatalogProductGroup) o;
    return (this.id == null ? catalogProductGroup.id == null : this.id.equals(catalogProductGroup.id)) &&
        (this.merchantId == null ? catalogProductGroup.merchantId == null : this.merchantId.equals(catalogProductGroup.merchantId)) &&
        (this.name == null ? catalogProductGroup.name == null : this.name.equals(catalogProductGroup.name)) &&
        (this.filters == null ? catalogProductGroup.filters == null : this.filters.equals(catalogProductGroup.filters)) &&
        (this.filterV2 == null ? catalogProductGroup.filterV2 == null : this.filterV2.equals(catalogProductGroup.filterV2)) &&
        (this.type == null ? catalogProductGroup.type == null : this.type.equals(catalogProductGroup.type)) &&
        (this.status == null ? catalogProductGroup.status == null : this.status.equals(catalogProductGroup.status)) &&
        (this.feedProfileId == null ? catalogProductGroup.feedProfileId == null : this.feedProfileId.equals(catalogProductGroup.feedProfileId)) &&
        (this.createdAt == null ? catalogProductGroup.createdAt == null : this.createdAt.equals(catalogProductGroup.createdAt)) &&
        (this.lastUpdate == null ? catalogProductGroup.lastUpdate == null : this.lastUpdate.equals(catalogProductGroup.lastUpdate)) &&
        (this.productCount == null ? catalogProductGroup.productCount == null : this.productCount.equals(catalogProductGroup.productCount)) &&
        (this.featuredPosition == null ? catalogProductGroup.featuredPosition == null : this.featuredPosition.equals(catalogProductGroup.featuredPosition));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.merchantId == null ? 0: this.merchantId.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.filters == null ? 0: this.filters.hashCode());
    result = 31 * result + (this.filterV2 == null ? 0: this.filterV2.hashCode());
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.status == null ? 0: this.status.hashCode());
    result = 31 * result + (this.feedProfileId == null ? 0: this.feedProfileId.hashCode());
    result = 31 * result + (this.createdAt == null ? 0: this.createdAt.hashCode());
    result = 31 * result + (this.lastUpdate == null ? 0: this.lastUpdate.hashCode());
    result = 31 * result + (this.productCount == null ? 0: this.productCount.hashCode());
    result = 31 * result + (this.featuredPosition == null ? 0: this.featuredPosition.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CatalogProductGroup {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  merchantId: ").append(merchantId).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  filters: ").append(filters).append("\n");
    sb.append("  filterV2: ").append(filterV2).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  status: ").append(status).append("\n");
    sb.append("  feedProfileId: ").append(feedProfileId).append("\n");
    sb.append("  createdAt: ").append(createdAt).append("\n");
    sb.append("  lastUpdate: ").append(lastUpdate).append("\n");
    sb.append("  productCount: ").append(productCount).append("\n");
    sb.append("  featuredPosition: ").append(featuredPosition).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
