(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

let catalogs_product_groups_create ~catalogs_product_group_create_request_t =
    let open Lwt in
    let uri = Request.build_uri "/catalogs/product_groups" in
    let headers = Request.default_headers in
    let body = Request.write_as_json_body Catalogs_product_group_create_request.to_yojson catalogs_product_group_create_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body  resp body

let catalogs_product_groups_delete ~product_group_id =
    let open Lwt in
    let uri = Request.build_uri "/catalogs/product_groups/{product_group_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "product_group_id" (fun x -> x) product_group_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let catalogs_product_groups_list ~feed_id ?bookmark ?(page_size = 25l) () =
    let open Lwt in
    let uri = Request.build_uri "/catalogs/product_groups" in
    let headers = Request.default_headers in
    let uri = Request.add_query_param uri "feed_id" (fun x -> x) feed_id in
    let uri = Request.maybe_add_query_param uri "bookmark" (fun x -> x) bookmark in
    let uri = Request.add_query_param uri "page_size" Int32.to_string page_size in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Paginated.of_yojson) resp body

let catalogs_product_groups_update ~product_group_id ~catalogs_product_group_update_request_t =
    let open Lwt in
    let uri = Request.build_uri "/catalogs/product_groups/{product_group_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "product_group_id" (fun x -> x) product_group_id in
    let body = Request.write_as_json_body Catalogs_product_group_update_request.to_yojson catalogs_product_group_update_request_t in
    Cohttp_lwt_unix.Client.call `PATCH uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Catalogs_product_group.of_yojson) resp body

let feed_processing_results_list ~feed_id ?bookmark ?(page_size = 25l) () =
    let open Lwt in
    let uri = Request.build_uri "/catalogs/feeds/{feed_id}/processing_results" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "feed_id" (fun x -> x) feed_id in
    let uri = Request.maybe_add_query_param uri "bookmark" (fun x -> x) bookmark in
    let uri = Request.add_query_param uri "page_size" Int32.to_string page_size in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Paginated.of_yojson) resp body

let feeds_create ~catalogs_feeds_create_request_t =
    let open Lwt in
    let uri = Request.build_uri "/catalogs/feeds" in
    let headers = Request.default_headers in
    let body = Request.write_as_json_body Catalogs_feeds_create_request.to_yojson catalogs_feeds_create_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Catalogs_feed.of_yojson) resp body

let feeds_delete ~feed_id =
    let open Lwt in
    let uri = Request.build_uri "/catalogs/feeds/{feed_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "feed_id" (fun x -> x) feed_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let feeds_get ~feed_id =
    let open Lwt in
    let uri = Request.build_uri "/catalogs/feeds/{feed_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "feed_id" (fun x -> x) feed_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Catalogs_feed.of_yojson) resp body

let feeds_list ?bookmark ?(page_size = 25l) () =
    let open Lwt in
    let uri = Request.build_uri "/catalogs/feeds" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "bookmark" (fun x -> x) bookmark in
    let uri = Request.add_query_param uri "page_size" Int32.to_string page_size in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Paginated.of_yojson) resp body

let feeds_update ~feed_id ~catalogs_feeds_update_request_t =
    let open Lwt in
    let uri = Request.build_uri "/catalogs/feeds/{feed_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "feed_id" (fun x -> x) feed_id in
    let body = Request.write_as_json_body Catalogs_feeds_update_request.to_yojson catalogs_feeds_update_request_t in
    Cohttp_lwt_unix.Client.call `PATCH uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Catalogs_feed.of_yojson) resp body

let items_batch_get ~batch_id =
    let open Lwt in
    let uri = Request.build_uri "/catalogs/items/batch/{batch_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "batch_id" (fun x -> x) batch_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Catalogs_items_batch.of_yojson) resp body

let items_batch_post ~catalogs_items_batch_request_t =
    let open Lwt in
    let uri = Request.build_uri "/catalogs/items/batch" in
    let headers = Request.default_headers in
    let body = Request.write_as_json_body Catalogs_items_batch_request.to_yojson catalogs_items_batch_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Catalogs_items_batch.of_yojson) resp body

let items_get ~country ~item_ids ~language =
    let open Lwt in
    let uri = Request.build_uri "/catalogs/items" in
    let headers = Request.default_headers in
    let uri = Request.add_query_param uri "country" (fun x -> x) country in
    let uri = Request.add_query_param_list uri "item_ids" (List.map (fun x -> x)) item_ids in
    let uri = Request.add_query_param uri "language" (fun x -> x) language in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Catalogs_items.of_yojson) resp body

