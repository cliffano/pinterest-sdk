<?php

/**
 * Pinterest REST API
 * PHP version 7.4
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest's REST API
 * The version of the OpenAPI document: 5.3.0
 * Contact: blah@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the model.
 */
namespace OpenAPIServer\Model;

use PHPUnit\Framework\TestCase;
use OpenAPIServer\Model\CatalogsFeedIngestionErrors;

/**
 * CatalogsFeedIngestionErrorsTest Class Doc Comment
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 *
 * @coversDefaultClass \OpenAPIServer\Model\CatalogsFeedIngestionErrors
 */
class CatalogsFeedIngestionErrorsTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "CatalogsFeedIngestionErrors"
     */
    public function testCatalogsFeedIngestionErrors()
    {
        $testCatalogsFeedIngestionErrors = new CatalogsFeedIngestionErrors();
        $namespacedClassname = CatalogsFeedIngestionErrors::getModelsNamespace() . '\\CatalogsFeedIngestionErrors';
        $this->assertSame('\\' . CatalogsFeedIngestionErrors::class, $namespacedClassname);
        $this->assertTrue(
            class_exists($namespacedClassname),
            sprintf('Assertion failed that "%s" class exists', $namespacedClassname)
        );
        $this->markTestIncomplete(
            'Test of "CatalogsFeedIngestionErrors" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "imageDownloadError"
     */
    public function testPropertyImageDownloadError()
    {
        $this->markTestIncomplete(
            'Test of "imageDownloadError" property in "CatalogsFeedIngestionErrors" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "imageDownloadConnectionTimeout"
     */
    public function testPropertyImageDownloadConnectionTimeout()
    {
        $this->markTestIncomplete(
            'Test of "imageDownloadConnectionTimeout" property in "CatalogsFeedIngestionErrors" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "imageFormatUnrecognize"
     */
    public function testPropertyImageFormatUnrecognize()
    {
        $this->markTestIncomplete(
            'Test of "imageFormatUnrecognize" property in "CatalogsFeedIngestionErrors" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "lineLevelInternalError"
     */
    public function testPropertyLineLevelInternalError()
    {
        $this->markTestIncomplete(
            'Test of "lineLevelInternalError" property in "CatalogsFeedIngestionErrors" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "largeProductCountDecrease"
     */
    public function testPropertyLargeProductCountDecrease()
    {
        $this->markTestIncomplete(
            'Test of "largeProductCountDecrease" property in "CatalogsFeedIngestionErrors" model has not been implemented yet.'
        );
    }

    /**
     * Test getOpenApiSchema static method
     * @covers ::getOpenApiSchema
     */
    public function testGetOpenApiSchema()
    {
        $schemaArr = CatalogsFeedIngestionErrors::getOpenApiSchema();
        $this->assertIsArray($schemaArr);
    }
}
