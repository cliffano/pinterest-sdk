/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.api

import org.openapitools.client.model.CatalogsFeed
import org.openapitools.client.model.CatalogsItemValidationIssue
import org.openapitools.client.model.CatalogsItems
import org.openapitools.client.model.CatalogsItemsBatch
import org.openapitools.client.model.CatalogsItemsFilters
import org.openapitools.client.model.CatalogsList200Response
import org.openapitools.client.model.CatalogsListProductsByFilterRequest
import org.openapitools.client.model.CatalogsProductGroupPinsList200Response
import org.openapitools.client.model.CatalogsProductGroupProductCounts
import org.openapitools.client.model.CatalogsProductGroupsCreate201Response
import org.openapitools.client.model.CatalogsProductGroupsCreateRequest
import org.openapitools.client.model.CatalogsProductGroupsList200Response
import org.openapitools.client.model.CatalogsProductGroupsUpdateRequest
import org.openapitools.client.model.Error
import org.openapitools.client.model.FeedProcessingResultsList200Response
import org.openapitools.client.model.FeedsCreateRequest
import org.openapitools.client.model.FeedsList200Response
import org.openapitools.client.model.FeedsUpdateRequest
import org.openapitools.client.model.ItemsBatchPostRequest
import org.openapitools.client.model.ItemsIssuesList200Response
import org.openapitools.client.core._
import org.openapitools.client.core.CollectionFormats._
import org.openapitools.client.core.ApiKeyLocations._

object CatalogsApi {

  def apply(baseUrl: String = "https://api.pinterest.com/v5") = new CatalogsApi(baseUrl)
}

class CatalogsApi(baseUrl: String) {

  /**
   * Fetch catalogs owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/shopping/catalog/'>Learn more</a>
   * 
   * Expected answers:
   *   code 200 : CatalogsList200Response (Success)
   *   code 400 : Error (Invalid parameters.)
   *   code 401 : Error (Unauthorized access.)
   *   code 0 : Error (Unexpected error.)
   * 
   * @param bookmark Cursor used to fetch the next page of items
   * @param pageSize Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/getting-started/pagination/'>Pagination</a> for more information.
   * @param adAccountId Unique identifier of an ad account.
   */
  def catalogsList(bookmark: Option[String] = None, pageSize: Option[Int] = None, adAccountId: Option[String] = None): ApiRequest[CatalogsList200Response] =
    ApiRequest[CatalogsList200Response](ApiMethods.GET, baseUrl, "/catalogs", "application/json")
      .withQueryParam("bookmark", bookmark)
      .withQueryParam("page_size", pageSize)
      .withQueryParam("ad_account_id", adAccountId)
      .withSuccessResponse[CatalogsList200Response](200)
      .withErrorResponse[Error](400)
      .withErrorResponse[Error](401)
      .withDefaultErrorResponse[Error]
      

  /**
   * Get a list of product pins for a given Catalogs Product Group Id owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/shopping/catalog/'>Learn more</a>
   * 
   * Expected answers:
   *   code 200 : CatalogsProductGroupPinsList200Response (Success)
   *   code 400 : Error (Invalid parameters.)
   *   code 401 : Error (Unauthorized access.)
   *   code 404 : Error (Catalogs product group not found.)
   *   code 0 : Error (Unexpected error.)
   * 
   * @param productGroupId Unique identifier of a product group
   * @param bookmark Cursor used to fetch the next page of items
   * @param pageSize Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/getting-started/pagination/'>Pagination</a> for more information.
   * @param adAccountId Unique identifier of an ad account.
   */
  def catalogsProductGroupPinsList(productGroupId: String, bookmark: Option[String] = None, pageSize: Option[Int] = None, adAccountId: Option[String] = None): ApiRequest[CatalogsProductGroupPinsList200Response] =
    ApiRequest[CatalogsProductGroupPinsList200Response](ApiMethods.GET, baseUrl, "/catalogs/product_groups/{product_group_id}/products", "application/json")
      .withQueryParam("bookmark", bookmark)
      .withQueryParam("page_size", pageSize)
      .withQueryParam("ad_account_id", adAccountId)
      .withPathParam("product_group_id", productGroupId)
      .withSuccessResponse[CatalogsProductGroupPinsList200Response](200)
      .withErrorResponse[Error](400)
      .withErrorResponse[Error](401)
      .withErrorResponse[Error](404)
      .withDefaultErrorResponse[Error]
      

  /**
   * Create product group to use in Catalogs owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/shopping/catalog/'>Learn more</a>
   * 
   * Expected answers:
   *   code 201 : CatalogsProductGroupsCreate201Response (Success)
   *   code 400 : Error (Invalid body.)
   *   code 401 : Error (Unauthorized access.)
   *   code 403 : Error (Forbidden. Account not approved for catalog product group mutations yet.)
   *   code 409 : Error (Conflict. Can't create this catalogs product group with this value.)
   *   code 0 : Error (Unexpected error.)
   * 
   * @param catalogsProductGroupsCreateRequest Request object used to created a catalogs product group.
   * @param adAccountId Unique identifier of an ad account.
   */
  def catalogsProductGroupsCreate(catalogsProductGroupsCreateRequest: CatalogsProductGroupsCreateRequest, adAccountId: Option[String] = None): ApiRequest[CatalogsProductGroupsCreate201Response] =
    ApiRequest[CatalogsProductGroupsCreate201Response](ApiMethods.POST, baseUrl, "/catalogs/product_groups", "application/json")
      .withBody(catalogsProductGroupsCreateRequest)
      .withQueryParam("ad_account_id", adAccountId)
      .withSuccessResponse[CatalogsProductGroupsCreate201Response](201)
      .withErrorResponse[Error](400)
      .withErrorResponse[Error](401)
      .withErrorResponse[Error](403)
      .withErrorResponse[Error](409)
      .withDefaultErrorResponse[Error]
      

  /**
   * Delete a product group owned by the \"operation user_account\" from being in use in Catalogs. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/shopping/catalog/'>Learn more</a>
   * 
   * Expected answers:
   *   code 204 :  (Catalogs Product Group deleted successfully.)
   *   code 400 : Error (Invalid catalogs product group id parameters.)
   *   code 401 : Error (Unauthorized access.)
   *   code 403 : Error (Forbidden. Account not approved for catalog product group mutations yet.)
   *   code 404 : Error (Catalogs product group not found.)
   *   code 409 : Error (Conflict. Can't delete this catalogs product group.)
   *   code 0 : Error (Unexpected error.)
   * 
   * @param productGroupId Unique identifier of a product group
   * @param adAccountId Unique identifier of an ad account.
   */
  def catalogsProductGroupsDelete(productGroupId: String, adAccountId: Option[String] = None): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.DELETE, baseUrl, "/catalogs/product_groups/{product_group_id}", "application/json")
      .withQueryParam("ad_account_id", adAccountId)
      .withPathParam("product_group_id", productGroupId)
      .withSuccessResponse[Unit](204)
      .withErrorResponse[Error](400)
      .withErrorResponse[Error](401)
      .withErrorResponse[Error](403)
      .withErrorResponse[Error](404)
      .withErrorResponse[Error](409)
      .withDefaultErrorResponse[Error]
      

  /**
   * Get a singe product group for a given Catalogs Product Group Id owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/shopping/catalog/'>Learn more</a>
   * 
   * Expected answers:
   *   code 200 : CatalogsProductGroupsCreate201Response (Success)
   *   code 400 : Error (Invalid catalogs product group id parameters.)
   *   code 401 : Error (Unauthorized access.)
   *   code 403 : Error (Forbidden. Account not approved for catalog product group mutations yet.)
   *   code 404 : Error (Catalogs product group not found.)
   *   code 409 : Error (Conflict. Can't get a catalogs product group without an existing catalog.)
   *   code 0 : Error (Unexpected error.)
   * 
   * @param productGroupId Unique identifier of a product group
   * @param adAccountId Unique identifier of an ad account.
   */
  def catalogsProductGroupsGet(productGroupId: String, adAccountId: Option[String] = None): ApiRequest[CatalogsProductGroupsCreate201Response] =
    ApiRequest[CatalogsProductGroupsCreate201Response](ApiMethods.GET, baseUrl, "/catalogs/product_groups/{product_group_id}", "application/json")
      .withQueryParam("ad_account_id", adAccountId)
      .withPathParam("product_group_id", productGroupId)
      .withSuccessResponse[CatalogsProductGroupsCreate201Response](200)
      .withErrorResponse[Error](400)
      .withErrorResponse[Error](401)
      .withErrorResponse[Error](403)
      .withErrorResponse[Error](404)
      .withErrorResponse[Error](409)
      .withDefaultErrorResponse[Error]
      

  /**
   * Get a list of product groups for a given Catalogs Feed Id owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/shopping/catalog/'>Learn more</a>
   * 
   * Expected answers:
   *   code 200 : CatalogsProductGroupsList200Response (Success)
   *   code 400 : Error (Invalid feed parameters.)
   *   code 401 : Error (Unauthorized access.)
   *   code 403 : Error (Forbidden. Account not approved for catalog product group mutations yet.)
   *   code 404 : Error (Data feed not found.)
   *   code 409 : Error (Conflict. Can't create this catalogs product group with this value.)
   *   code 0 : Error (Unexpected error.)
   * 
   * @param feedId Filter entities for a given feed_id. If not given, all feeds are considered.
   * @param catalogId Filter entities for a given catalog_id. If not given, all catalogs are considered.
   * @param bookmark Cursor used to fetch the next page of items
   * @param pageSize Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/getting-started/pagination/'>Pagination</a> for more information.
   * @param adAccountId Unique identifier of an ad account.
   */
  def catalogsProductGroupsList(feedId: Option[String] = None, catalogId: Option[String] = None, bookmark: Option[String] = None, pageSize: Option[Int] = None, adAccountId: Option[String] = None): ApiRequest[CatalogsProductGroupsList200Response] =
    ApiRequest[CatalogsProductGroupsList200Response](ApiMethods.GET, baseUrl, "/catalogs/product_groups", "application/json")
      .withQueryParam("feed_id", feedId)
      .withQueryParam("catalog_id", catalogId)
      .withQueryParam("bookmark", bookmark)
      .withQueryParam("page_size", pageSize)
      .withQueryParam("ad_account_id", adAccountId)
      .withSuccessResponse[CatalogsProductGroupsList200Response](200)
      .withErrorResponse[Error](400)
      .withErrorResponse[Error](401)
      .withErrorResponse[Error](403)
      .withErrorResponse[Error](404)
      .withErrorResponse[Error](409)
      .withDefaultErrorResponse[Error]
      

  /**
   * Get a product counts for a given Catalogs Product Group owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/shopping/catalog/'>Learn more</a>
   * 
   * Expected answers:
   *   code 200 : CatalogsProductGroupProductCounts (Success)
   *   code 404 : Error (Product Group Not Found.)
   *   code 409 : Error (Can't access this feature without an existing catalog.)
   *   code 0 : Error (Unexpected error.)
   * 
   * @param productGroupId Unique identifier of a product group
   * @param adAccountId Unique identifier of an ad account.
   */
  def catalogsProductGroupsProductCountsGet(productGroupId: String, adAccountId: Option[String] = None): ApiRequest[CatalogsProductGroupProductCounts] =
    ApiRequest[CatalogsProductGroupProductCounts](ApiMethods.GET, baseUrl, "/catalogs/product_groups/{product_group_id}/product_counts", "application/json")
      .withQueryParam("ad_account_id", adAccountId)
      .withPathParam("product_group_id", productGroupId)
      .withSuccessResponse[CatalogsProductGroupProductCounts](200)
      .withErrorResponse[Error](404)
      .withErrorResponse[Error](409)
      .withDefaultErrorResponse[Error]
      

  /**
   * Update product group owned by the \"operation user_account\" to use in Catalogs. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/shopping/catalog/'>Learn more</a>
   * 
   * Expected answers:
   *   code 200 : CatalogsProductGroupsCreate201Response (Success)
   *   code 400 : Error (Invalid parameters.)
   *   code 401 : Error (Unauthorized access.)
   *   code 403 : Error (Forbidden. Account not approved for catalog product group mutations yet.)
   *   code 404 : Error (Catalogs product group not found.)
   *   code 409 : Error (Conflict. Can't update this catalogs product group to this value.)
   *   code 0 : Error (Unexpected error.)
   * 
   * @param productGroupId Unique identifier of a product group
   * @param catalogsProductGroupsUpdateRequest Request object used to Update a catalogs product group.
   * @param adAccountId Unique identifier of an ad account.
   */
  def catalogsProductGroupsUpdate(productGroupId: String, catalogsProductGroupsUpdateRequest: CatalogsProductGroupsUpdateRequest, adAccountId: Option[String] = None): ApiRequest[CatalogsProductGroupsCreate201Response] =
    ApiRequest[CatalogsProductGroupsCreate201Response](ApiMethods.PATCH, baseUrl, "/catalogs/product_groups/{product_group_id}", "application/json")
      .withBody(catalogsProductGroupsUpdateRequest)
      .withQueryParam("ad_account_id", adAccountId)
      .withPathParam("product_group_id", productGroupId)
      .withSuccessResponse[CatalogsProductGroupsCreate201Response](200)
      .withErrorResponse[Error](400)
      .withErrorResponse[Error](401)
      .withErrorResponse[Error](403)
      .withErrorResponse[Error](404)
      .withErrorResponse[Error](409)
      .withDefaultErrorResponse[Error]
      

  /**
   * Fetch a feed processing results owned by the \"operation user_account\". Please note that for now the bookmark parameter is not functional and only the first page will be available until it is implemented in some release in the near future. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/shopping/catalog/'>Learn more</a>
   * 
   * Expected answers:
   *   code 200 : FeedProcessingResultsList200Response (Success)
   *   code 400 : Error (Invalid parameters.)
   *   code 401 : Error (Unauthorized access.)
   *   code 404 : Error (Feed not found.)
   *   code 0 : Error (Unexpected error.)
   * 
   * @param feedId Unique identifier of a feed
   * @param bookmark Cursor used to fetch the next page of items
   * @param pageSize Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/getting-started/pagination/'>Pagination</a> for more information.
   * @param adAccountId Unique identifier of an ad account.
   */
  def feedProcessingResultsList(feedId: String, bookmark: Option[String] = None, pageSize: Option[Int] = None, adAccountId: Option[String] = None): ApiRequest[FeedProcessingResultsList200Response] =
    ApiRequest[FeedProcessingResultsList200Response](ApiMethods.GET, baseUrl, "/catalogs/feeds/{feed_id}/processing_results", "application/json")
      .withQueryParam("bookmark", bookmark)
      .withQueryParam("page_size", pageSize)
      .withQueryParam("ad_account_id", adAccountId)
      .withPathParam("feed_id", feedId)
      .withSuccessResponse[FeedProcessingResultsList200Response](200)
      .withErrorResponse[Error](400)
      .withErrorResponse[Error](401)
      .withErrorResponse[Error](404)
      .withDefaultErrorResponse[Error]
      

  /**
   * Create a new feed owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Please, be aware that \"default_country\" and \"default_locale\" are not required in the spec for forward compatibility but for now the API will not accept requests without those fields.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to <a href='https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href='/docs/shopping/catalog/'>Pinterest API for shopping</a>.
   * 
   * Expected answers:
   *   code 201 : CatalogsFeed (Success)
   *   code 400 : Error (Invalid feed parameters.)
   *   code 401 : Error (Unauthorized access.)
   *   code 403 : Error (Business account required.)
   *   code 409 : Error (User website required.)
   *   code 422 : Error (Unique feed name is required.)
   *   code 501 : Error (Not implemented (absent \"default_country\" or \"default_locale\").)
   *   code 0 : Error (Unexpected error)
   * 
   * @param feedsCreateRequest Request object used to created a feed.
   * @param adAccountId Unique identifier of an ad account.
   */
  def feedsCreate(feedsCreateRequest: FeedsCreateRequest, adAccountId: Option[String] = None): ApiRequest[CatalogsFeed] =
    ApiRequest[CatalogsFeed](ApiMethods.POST, baseUrl, "/catalogs/feeds", "application/json")
      .withBody(feedsCreateRequest)
      .withQueryParam("ad_account_id", adAccountId)
      .withSuccessResponse[CatalogsFeed](201)
      .withErrorResponse[Error](400)
      .withErrorResponse[Error](401)
      .withErrorResponse[Error](403)
      .withErrorResponse[Error](409)
      .withErrorResponse[Error](422)
      .withErrorResponse[Error](501)
      .withDefaultErrorResponse[Error]
      

  /**
   * Delete a feed owned by the \"operating user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to <a href='https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href='/docs/shopping/catalog/'>Pinterest API for shopping</a>.
   * 
   * Expected answers:
   *   code 204 :  (Feed deleted successfully.)
   *   code 400 : Error (Invalid feed parameters.)
   *   code 403 : Error (Forbidden. Account not approved for feed mutations yet.)
   *   code 404 : Error (Data feed not found.)
   *   code 409 : Error (Conflict. Can't delete a feed with active promotions.)
   *   code 0 : Error (Unexpected error)
   * 
   * @param feedId Unique identifier of a feed
   * @param adAccountId Unique identifier of an ad account.
   */
  def feedsDelete(feedId: String, adAccountId: Option[String] = None): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.DELETE, baseUrl, "/catalogs/feeds/{feed_id}", "application/json")
      .withQueryParam("ad_account_id", adAccountId)
      .withPathParam("feed_id", feedId)
      .withSuccessResponse[Unit](204)
      .withErrorResponse[Error](400)
      .withErrorResponse[Error](403)
      .withErrorResponse[Error](404)
      .withErrorResponse[Error](409)
      .withDefaultErrorResponse[Error]
      

  /**
   * Get a single feed owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to <a href='https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href='/docs/shopping/catalog/'>Pinterest API for shopping</a>.
   * 
   * Expected answers:
   *   code 200 : CatalogsFeed (Success)
   *   code 400 : Error (Invalid feed parameters.)
   *   code 401 : Error (Unauthorized access.)
   *   code 404 : Error (Data feed not found.)
   *   code 0 : Error (Unexpected error.)
   * 
   * @param feedId Unique identifier of a feed
   * @param adAccountId Unique identifier of an ad account.
   */
  def feedsGet(feedId: String, adAccountId: Option[String] = None): ApiRequest[CatalogsFeed] =
    ApiRequest[CatalogsFeed](ApiMethods.GET, baseUrl, "/catalogs/feeds/{feed_id}", "application/json")
      .withQueryParam("ad_account_id", adAccountId)
      .withPathParam("feed_id", feedId)
      .withSuccessResponse[CatalogsFeed](200)
      .withErrorResponse[Error](400)
      .withErrorResponse[Error](401)
      .withErrorResponse[Error](404)
      .withDefaultErrorResponse[Error]
      

  /**
   * Fetch feeds owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to <a href='https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href='/docs/shopping/catalog/'>Pinterest API for shopping</a>.
   * 
   * Expected answers:
   *   code 200 : FeedsList200Response (Success)
   *   code 400 : Error (Invalid parameters.)
   *   code 401 : Error (Unauthorized access.)
   *   code 0 : Error (Unexpected error.)
   * 
   * @param bookmark Cursor used to fetch the next page of items
   * @param pageSize Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/getting-started/pagination/'>Pagination</a> for more information.
   * @param catalogId Filter entities for a given catalog_id. If not given, all catalogs are considered.
   * @param adAccountId Unique identifier of an ad account.
   */
  def feedsList(bookmark: Option[String] = None, pageSize: Option[Int] = None, catalogId: Option[String] = None, adAccountId: Option[String] = None): ApiRequest[FeedsList200Response] =
    ApiRequest[FeedsList200Response](ApiMethods.GET, baseUrl, "/catalogs/feeds", "application/json")
      .withQueryParam("bookmark", bookmark)
      .withQueryParam("page_size", pageSize)
      .withQueryParam("catalog_id", catalogId)
      .withQueryParam("ad_account_id", adAccountId)
      .withSuccessResponse[FeedsList200Response](200)
      .withErrorResponse[Error](400)
      .withErrorResponse[Error](401)
      .withDefaultErrorResponse[Error]
      

  /**
   * Update a feed owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to <a href='https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href='/docs/shopping/catalog/'>Pinterest API for shopping</a>.
   * 
   * Expected answers:
   *   code 200 : CatalogsFeed (Success)
   *   code 400 : Error (Invalid feed parameters.)
   *   code 403 : Error (Forbidden. Account not approved for feed mutations yet.)
   *   code 404 : Error (Data feed not found.)
   *   code 0 : Error (Unexpected error)
   * 
   * @param feedId Unique identifier of a feed
   * @param feedsUpdateRequest Request object used to update a feed.
   * @param adAccountId Unique identifier of an ad account.
   */
  def feedsUpdate(feedId: String, feedsUpdateRequest: FeedsUpdateRequest, adAccountId: Option[String] = None): ApiRequest[CatalogsFeed] =
    ApiRequest[CatalogsFeed](ApiMethods.PATCH, baseUrl, "/catalogs/feeds/{feed_id}", "application/json")
      .withBody(feedsUpdateRequest)
      .withQueryParam("ad_account_id", adAccountId)
      .withPathParam("feed_id", feedId)
      .withSuccessResponse[CatalogsFeed](200)
      .withErrorResponse[Error](400)
      .withErrorResponse[Error](403)
      .withErrorResponse[Error](404)
      .withDefaultErrorResponse[Error]
      

  /**
   * Get a single catalogs items batch owned by the \"operating user_account\". <a href=\"/docs/shopping/catalog/#Update%20items%20in%20batch\" target=\"_blank\">See detailed documentation here.</a> - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.
   * 
   * Expected answers:
   *   code 200 : CatalogsItemsBatch (Response containing the requested catalogs items batch)
   *   code 401 : Error (Not authenticated to access catalogs items batch)
   *   code 403 : Error (Not authorized to access catalogs items batch)
   *   code 404 : Error (Catalogs items batch not found)
   *   code 405 : Error (Method Not Allowed.)
   *   code 0 : Error (Unexpected error)
   * 
   * @param batchId Id of a catalogs items batch to fetch
   * @param adAccountId Unique identifier of an ad account.
   */
  def itemsBatchGet(batchId: String, adAccountId: Option[String] = None): ApiRequest[CatalogsItemsBatch] =
    ApiRequest[CatalogsItemsBatch](ApiMethods.GET, baseUrl, "/catalogs/items/batch/{batch_id}", "application/json")
      .withQueryParam("ad_account_id", adAccountId)
      .withPathParam("batch_id", batchId)
      .withSuccessResponse[CatalogsItemsBatch](200)
      .withErrorResponse[Error](401)
      .withErrorResponse[Error](403)
      .withErrorResponse[Error](404)
      .withErrorResponse[Error](405)
      .withDefaultErrorResponse[Error]
      

  /**
   * This endpoint supports multiple operations on a set of one or more catalog items owned by the \"operation user_account\". <a href=\"/docs/shopping/catalog/#Update%20items%20in%20batch\" target=\"_blank\">See detailed documentation here.</a> - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.
   * 
   * Expected answers:
   *   code 200 : CatalogsItemsBatch (Response containing the requested catalogs items batch)
   *   code 400 : Error (Invalid request parameters.)
   *   code 401 : Error (Not authenticated to post catalogs items)
   *   code 403 : Error (Not authorized to post catalogs items)
   *   code 0 : Error (Unexpected error)
   * 
   * @param itemsBatchPostRequest Request object used to create catalogs items in a batch
   * @param adAccountId Unique identifier of an ad account.
   */
  def itemsBatchPost(itemsBatchPostRequest: ItemsBatchPostRequest, adAccountId: Option[String] = None): ApiRequest[CatalogsItemsBatch] =
    ApiRequest[CatalogsItemsBatch](ApiMethods.POST, baseUrl, "/catalogs/items/batch", "application/json")
      .withBody(itemsBatchPostRequest)
      .withQueryParam("ad_account_id", adAccountId)
      .withSuccessResponse[CatalogsItemsBatch](200)
      .withErrorResponse[Error](400)
      .withErrorResponse[Error](401)
      .withErrorResponse[Error](403)
      .withDefaultErrorResponse[Error]
      

  /**
   * Get the items of the catalog owned by the \"operation user_account\". <a href=\"/docs/shopping/catalog/#Update%20items%20in%20batch\" target=\"_blank\">See detailed documentation here.</a> - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.
   * 
   * Expected answers:
   *   code 200 : CatalogsItems (Response containing the requested catalogs items)
   *   code 400 : Error (Invalid request parameters.)
   *   code 401 : Error (Not authorized to access catalogs items)
   *   code 403 : Error (Not authorized to access catalogs items)
   *   code 0 : Error (Unexpected error)
   * 
   * @param country Country for the Catalogs Items
   * @param language Language for the Catalogs Items
   * @param adAccountId Unique identifier of an ad account.
   * @param itemIds This parameter is deprecated. Use filters instead.
   * @param filters Identifies items to be retrieved. This is a required parameter.
   */
  def itemsGet(country: String, language: String, adAccountId: Option[String] = None, itemIds: Seq[String], filters: Option[CatalogsItemsFilters] = None): ApiRequest[CatalogsItems] =
    ApiRequest[CatalogsItems](ApiMethods.GET, baseUrl, "/catalogs/items", "application/json")
      .withQueryParam("ad_account_id", adAccountId)
      .withQueryParam("country", country)
      .withQueryParam("language", language)
      .withQueryParam("item_ids", ArrayValues(itemIds, MULTI))
      .withQueryParam("filters", filters)
      .withSuccessResponse[CatalogsItems](200)
      .withErrorResponse[Error](400)
      .withErrorResponse[Error](401)
      .withErrorResponse[Error](403)
      .withDefaultErrorResponse[Error]
      

  /**
   * List item validation issues for a given feed processing result owned by the \"operation user_account\". Up to 20 random samples of affected items are returned for each error and warning code. Please note that for now query parameters 'item_numbers' and 'item_validation_issue' cannot be used simultaneously until it is implemented in some release in the future. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/shopping/catalog/'>Learn more</a>
   * 
   * Expected answers:
   *   code 200 : ItemsIssuesList200Response (Success)
   *   code 401 : Error (Unauthorized access.)
   *   code 404 : Error (Processing Result not found.)
   *   code 501 : Error (Not implemented.)
   *   code 0 : Error (Unexpected error.)
   * 
   * @param processingResultId Unique identifier of a feed processing result. It can be acquired from the \"id\" field of the \"items\" array within the response of the [List processing results for a given feed](https://developers.pinterest.com/docs/api/v5/#operation/feed_processing_results/list).
   * @param bookmark Cursor used to fetch the next page of items
   * @param pageSize Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/getting-started/pagination/'>Pagination</a> for more information.
   * @param itemNumbers Item number based on order of appearance in the Catalogs Feed. For example, '0' refers to first item found in a feed that was downloaded from a 'location' specified during feed creation.
   * @param itemValidationIssue Filter item validation issues that have a given type of item validation issue.
   * @param adAccountId Unique identifier of an ad account.
   */
  def itemsIssuesList(processingResultId: String, bookmark: Option[String] = None, pageSize: Option[Int] = None, itemNumbers: Seq[Int], itemValidationIssue: Option[CatalogsItemValidationIssue] = None, adAccountId: Option[String] = None): ApiRequest[ItemsIssuesList200Response] =
    ApiRequest[ItemsIssuesList200Response](ApiMethods.GET, baseUrl, "/catalogs/processing_results/{processing_result_id}/item_issues", "application/json")
      .withQueryParam("bookmark", bookmark)
      .withQueryParam("page_size", pageSize)
      .withQueryParam("item_numbers", ArrayValues(itemNumbers, MULTI))
      .withQueryParam("item_validation_issue", itemValidationIssue)
      .withQueryParam("ad_account_id", adAccountId)
      .withPathParam("processing_result_id", processingResultId)
      .withSuccessResponse[ItemsIssuesList200Response](200)
      .withErrorResponse[Error](401)
      .withErrorResponse[Error](404)
      .withErrorResponse[Error](501)
      .withDefaultErrorResponse[Error]
      

  /**
   * List products Pins owned by the \"operation user_account\" that meet the criteria specified in the Catalogs Product Group Filter given in the request. - This endpoint has been implemented in POST to allow for complex filters. This specific POST endpoint is designed to be idempotent. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/shopping/catalog/'>Learn more</a>
   * 
   * Expected answers:
   *   code 200 : CatalogsProductGroupPinsList200Response (Success)
   *   code 401 : Error (Unauthorized access.)
   *   code 409 : Error (Conflict. Can't get products.)
   *   code 0 : Error (Unexpected error.)
   * 
   * @param catalogsListProductsByFilterRequest Object holding a group of filters for a catalog product group
   * @param bookmark Cursor used to fetch the next page of items
   * @param pageSize Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/getting-started/pagination/'>Pagination</a> for more information.
   * @param adAccountId Unique identifier of an ad account.
   */
  def productsByProductGroupFilterList(catalogsListProductsByFilterRequest: CatalogsListProductsByFilterRequest, bookmark: Option[String] = None, pageSize: Option[Int] = None, adAccountId: Option[String] = None): ApiRequest[CatalogsProductGroupPinsList200Response] =
    ApiRequest[CatalogsProductGroupPinsList200Response](ApiMethods.POST, baseUrl, "/catalogs/products/get_by_product_group_filters", "application/json")
      .withBody(catalogsListProductsByFilterRequest)
      .withQueryParam("bookmark", bookmark)
      .withQueryParam("page_size", pageSize)
      .withQueryParam("ad_account_id", adAccountId)
      .withSuccessResponse[CatalogsProductGroupPinsList200Response](200)
      .withErrorResponse[Error](401)
      .withErrorResponse[Error](409)
      .withDefaultErrorResponse[Error]
      



}

