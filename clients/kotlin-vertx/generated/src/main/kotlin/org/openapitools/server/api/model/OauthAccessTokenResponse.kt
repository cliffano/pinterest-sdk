/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.3.0
* Contact: blah@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.api.model


        
import com.google.gson.annotations.SerializedName
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
/**
 * A successful OAuth access token response.
 * @param accessToken 
 * @param tokenType 
 * @param expiresIn 
 * @param scope 
 * @param responseType 
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
data class OauthAccessTokenResponse (
    @SerializedName("accessToken") private val _accessToken: kotlin.String?,
    @SerializedName("tokenType") private val _tokenType: kotlin.String?,
    @SerializedName("expiresIn") private val _expiresIn: kotlin.Int?,
    @SerializedName("scope") private val _scope: kotlin.String?,
    val responseType: OauthAccessTokenResponse.ResponseType? = null
) {

    /**
    * 
    * Values: authorizationCode,refreshToken
    */
    enum class ResponseType(val value: kotlin.String){
    
        authorizationCode("authorization_code"),
    
        refreshToken("refresh_token");
    
    }

        val accessToken get() = _accessToken ?: throw IllegalArgumentException("accessToken is required")
                    
        val tokenType get() = _tokenType ?: throw IllegalArgumentException("tokenType is required")
                    
        val expiresIn get() = _expiresIn ?: throw IllegalArgumentException("expiresIn is required")
                    
        val scope get() = _scope ?: throw IllegalArgumentException("scope is required")
                    
}

