# coding: utf-8

"""
    Pinterest REST API

    Pinterest's REST API  # noqa: E501

    The version of the OpenAPI document: 5.3.0
    Contact: pinterest-api@pinterest.com
    Generated by: https://openapi-generator.tech
"""

import re  # noqa: F401
import sys  # noqa: F401
import typing  # noqa: F401

from frozendict import frozendict  # noqa: F401

import decimal  # noqa: F401
from datetime import date, datetime  # noqa: F401
from frozendict import frozendict  # noqa: F401

from openapi_client.schemas import (  # noqa: F401
    AnyTypeSchema,
    ComposedSchema,
    DictSchema,
    ListSchema,
    StrSchema,
    IntSchema,
    Int32Schema,
    Int64Schema,
    Float32Schema,
    Float64Schema,
    NumberSchema,
    DateSchema,
    DateTimeSchema,
    DecimalSchema,
    BoolSchema,
    BinarySchema,
    NoneSchema,
    none_type,
    InstantiationMetadata,
    Unset,
    unset,
    ComposedBase,
    ListBase,
    DictBase,
    NoneBase,
    StrBase,
    IntBase,
    NumberBase,
    DateBase,
    DateTimeBase,
    BoolBase,
    BinaryBase,
    Schema,
    _SchemaValidator,
    _SchemaTypeChecker,
    _SchemaEnumMaker
)


class AdGroupResponseAllOf1(
    DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    
    
    class campaign_id(
        _SchemaValidator(
            regex=[{
                'pattern': r'^\d+$',  # noqa: E501
            }],
        ),
        StrSchema
    ):
        pass

    @classmethod
    @property
    def billable_event(cls) -> typing.Type['ActionType']:
        return ActionType
    
    
    class id(
        _SchemaValidator(
            regex=[{
                'pattern': r'^\d+$',  # noqa: E501
            }],
        ),
        StrSchema
    ):
        pass
    type = StrSchema
    
    
    class ad_account_id(
        _SchemaValidator(
            regex=[{
                'pattern': r'^\d+$',  # noqa: E501
            }],
        ),
        StrSchema
    ):
        pass
    created_time = IntSchema
    updated_time = IntSchema


    def __new__(
        cls,
        *args: typing.Union[dict, frozendict, ],
        campaign_id: typing.Union[campaign_id, Unset] = unset,
        billable_event: typing.Union['ActionType', Unset] = unset,
        id: typing.Union[id, Unset] = unset,
        type: typing.Union[type, Unset] = unset,
        ad_account_id: typing.Union[ad_account_id, Unset] = unset,
        created_time: typing.Union[created_time, Unset] = unset,
        updated_time: typing.Union[updated_time, Unset] = unset,
        _instantiation_metadata: typing.Optional[InstantiationMetadata] = None,
        **kwargs: typing.Type[Schema],
    ) -> 'AdGroupResponseAllOf1':
        return super().__new__(
            cls,
            *args,
            campaign_id=campaign_id,
            billable_event=billable_event,
            id=id,
            type=type,
            ad_account_id=ad_account_id,
            created_time=created_time,
            updated_time=updated_time,
            _instantiation_metadata=_instantiation_metadata,
            **kwargs,
        )

from openapi_client.model.action_type import ActionType
