# coding: utf-8

"""
    Pinterest REST API

    Pinterest's REST API  # noqa: E501

    The version of the OpenAPI document: 5.3.0
    Contact: pinterest-api@pinterest.com
    Generated by: https://openapi-generator.tech
"""

import re  # noqa: F401
import sys  # noqa: F401
import typing  # noqa: F401

from frozendict import frozendict  # noqa: F401

import decimal  # noqa: F401
from datetime import date, datetime  # noqa: F401
from frozendict import frozendict  # noqa: F401

from openapi_client.schemas import (  # noqa: F401
    AnyTypeSchema,
    ComposedSchema,
    DictSchema,
    ListSchema,
    StrSchema,
    IntSchema,
    Int32Schema,
    Int64Schema,
    Float32Schema,
    Float64Schema,
    NumberSchema,
    DateSchema,
    DateTimeSchema,
    DecimalSchema,
    BoolSchema,
    BinarySchema,
    NoneSchema,
    none_type,
    InstantiationMetadata,
    Unset,
    unset,
    ComposedBase,
    ListBase,
    DictBase,
    NoneBase,
    StrBase,
    IntBase,
    NumberBase,
    DateBase,
    DateTimeBase,
    BoolBase,
    BinaryBase,
    Schema,
    _SchemaValidator,
    _SchemaTypeChecker,
    _SchemaEnumMaker
)


class TrackingUrls(
    _SchemaTypeChecker(typing.Union[frozendict, none_type, ]),
    DictBase,
    NoneBase,
    Schema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Third-party tracking URLs. Up to three tracking URLs are supported for each event type. Tracking URLs set at the ad group or ad level can override those set at the campaign level. For more information, see <a href="https://help.pinterest.com/en/business/article/third-party-and-dynamic-tracking" target="_blank">Third-party and dynamic tracking</a>.
    """
    
    
    class impression(
        _SchemaValidator(
            max_items=3,
        ),
        ListSchema
    ):
        
        
        class _items(
            _SchemaValidator(
                max_length=2000,
            ),
            StrSchema
        ):
            pass
    
    
    class click(
        _SchemaValidator(
            max_items=3,
        ),
        ListSchema
    ):
        
        
        class _items(
            _SchemaValidator(
                max_length=2000,
            ),
            StrSchema
        ):
            pass
    
    
    class engagement(
        _SchemaValidator(
            max_items=3,
        ),
        ListSchema
    ):
        
        
        class _items(
            _SchemaValidator(
                max_length=2000,
            ),
            StrSchema
        ):
            pass
    
    
    class buyable_button(
        _SchemaValidator(
            max_items=3,
        ),
        ListSchema
    ):
        
        
        class _items(
            _SchemaValidator(
                max_length=2000,
            ),
            StrSchema
        ):
            pass
    
    
    class audience_verification(
        _SchemaValidator(
            max_items=3,
        ),
        ListSchema
    ):
        
        
        class _items(
            _SchemaValidator(
                max_length=2000,
            ),
            StrSchema
        ):
            pass

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict, None, ],
        impression: typing.Union[impression, Unset] = unset,
        click: typing.Union[click, Unset] = unset,
        engagement: typing.Union[engagement, Unset] = unset,
        buyable_button: typing.Union[buyable_button, Unset] = unset,
        audience_verification: typing.Union[audience_verification, Unset] = unset,
        _instantiation_metadata: typing.Optional[InstantiationMetadata] = None,
        **kwargs: typing.Type[Schema],
    ) -> 'TrackingUrls':
        return super().__new__(
            cls,
            *args,
            impression=impression,
            click=click,
            engagement=engagement,
            buyable_button=buyable_button,
            audience_verification=audience_verification,
            _instantiation_metadata=_instantiation_metadata,
            **kwargs,
        )
