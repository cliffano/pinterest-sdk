# coding: utf-8

"""
    Pinterest REST API

    Pinterest's REST API  # noqa: E501

    The version of the OpenAPI document: 5.3.0
    Contact: blah@cliffano.com
    Generated by: https://openapi-generator.tech
"""

import re  # noqa: F401
import sys  # noqa: F401
import typing  # noqa: F401

from frozendict import frozendict  # noqa: F401

import decimal  # noqa: F401
from datetime import date, datetime  # noqa: F401
from frozendict import frozendict  # noqa: F401

from openapi_client.schemas import (  # noqa: F401
    AnyTypeSchema,
    ComposedSchema,
    DictSchema,
    ListSchema,
    StrSchema,
    IntSchema,
    Int32Schema,
    Int64Schema,
    Float32Schema,
    Float64Schema,
    NumberSchema,
    DateSchema,
    DateTimeSchema,
    DecimalSchema,
    BoolSchema,
    BinarySchema,
    NoneSchema,
    none_type,
    InstantiationMetadata,
    Unset,
    unset,
    ComposedBase,
    ListBase,
    DictBase,
    NoneBase,
    StrBase,
    IntBase,
    NumberBase,
    DateBase,
    DateTimeBase,
    BoolBase,
    BinaryBase,
    Schema,
    _SchemaValidator,
    _SchemaTypeChecker,
    _SchemaEnumMaker
)


class Account(
    DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    
    
    class account_type(
        _SchemaEnumMaker(
            enum_value_to_name={
                "PINNER": "PINNER",
                "BUSINESS": "BUSINESS",
            }
        ),
        StrSchema
    ):
        
        @classmethod
        @property
        def PINNER(cls):
            return cls._enum_by_value["PINNER"]("PINNER")
        
        @classmethod
        @property
        def BUSINESS(cls):
            return cls._enum_by_value["BUSINESS"]("BUSINESS")
    profile_image = StrSchema
    website_url = StrSchema
    username = StrSchema


    def __new__(
        cls,
        *args: typing.Union[dict, frozendict, ],
        account_type: typing.Union[account_type, Unset] = unset,
        profile_image: typing.Union[profile_image, Unset] = unset,
        website_url: typing.Union[website_url, Unset] = unset,
        username: typing.Union[username, Unset] = unset,
        _instantiation_metadata: typing.Optional[InstantiationMetadata] = None,
        **kwargs: typing.Type[Schema],
    ) -> 'Account':
        return super().__new__(
            cls,
            *args,
            account_type=account_type,
            profile_image=profile_image,
            website_url=website_url,
            username=username,
            _instantiation_metadata=_instantiation_metadata,
            **kwargs,
        )
