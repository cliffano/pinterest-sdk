# coding: utf-8

"""
    Pinterest REST API

    Pinterest's REST API  # noqa: E501

    The version of the OpenAPI document: 5.3.0
    Contact: blah@cliffano.com
    Generated by: https://openapi-generator.tech
"""

import re  # noqa: F401
import sys  # noqa: F401
import typing  # noqa: F401

from frozendict import frozendict  # noqa: F401

import decimal  # noqa: F401
from datetime import date, datetime  # noqa: F401
from frozendict import frozendict  # noqa: F401

from openapi_client.schemas import (  # noqa: F401
    AnyTypeSchema,
    ComposedSchema,
    DictSchema,
    ListSchema,
    StrSchema,
    IntSchema,
    Int32Schema,
    Int64Schema,
    Float32Schema,
    Float64Schema,
    NumberSchema,
    DateSchema,
    DateTimeSchema,
    DecimalSchema,
    BoolSchema,
    BinarySchema,
    NoneSchema,
    none_type,
    InstantiationMetadata,
    Unset,
    unset,
    ComposedBase,
    ListBase,
    DictBase,
    NoneBase,
    StrBase,
    IntBase,
    NumberBase,
    DateBase,
    DateTimeBase,
    BoolBase,
    BinaryBase,
    Schema,
    _SchemaValidator,
    _SchemaTypeChecker,
    _SchemaEnumMaker
)


class CatalogsFeedsUpdateRequest(
    DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Request object for updating a feed.
    """

    @classmethod
    @property
    def default_availability(cls) -> typing.Type['ProductAvailabilityType']:
        return ProductAvailabilityType

    @classmethod
    @property
    def default_currency(cls) -> typing.Type['NullableCurrency']:
        return NullableCurrency
    name = StrSchema

    @classmethod
    @property
    def format(cls) -> typing.Type['CatalogsFormat']:
        return CatalogsFormat

    @classmethod
    @property
    def credentials(cls) -> typing.Type['CatalogsFeedCredentials']:
        return CatalogsFeedCredentials
    location = StrSchema

    @classmethod
    @property
    def preferred_processing_schedule(cls) -> typing.Type['CatalogsFeedProcessingSchedule']:
        return CatalogsFeedProcessingSchedule

    @classmethod
    @property
    def status(cls) -> typing.Type['CatalogsStatus']:
        return CatalogsStatus


    def __new__(
        cls,
        *args: typing.Union[dict, frozendict, ],
        default_availability: typing.Union['ProductAvailabilityType', Unset] = unset,
        default_currency: typing.Union['NullableCurrency', Unset] = unset,
        name: typing.Union[name, Unset] = unset,
        format: typing.Union['CatalogsFormat', Unset] = unset,
        credentials: typing.Union['CatalogsFeedCredentials', Unset] = unset,
        location: typing.Union[location, Unset] = unset,
        preferred_processing_schedule: typing.Union['CatalogsFeedProcessingSchedule', Unset] = unset,
        status: typing.Union['CatalogsStatus', Unset] = unset,
        _instantiation_metadata: typing.Optional[InstantiationMetadata] = None,
        **kwargs: typing.Type[Schema],
    ) -> 'CatalogsFeedsUpdateRequest':
        return super().__new__(
            cls,
            *args,
            default_availability=default_availability,
            default_currency=default_currency,
            name=name,
            format=format,
            credentials=credentials,
            location=location,
            preferred_processing_schedule=preferred_processing_schedule,
            status=status,
            _instantiation_metadata=_instantiation_metadata,
            **kwargs,
        )

from openapi_client.model.catalogs_feed_credentials import CatalogsFeedCredentials
from openapi_client.model.catalogs_feed_processing_schedule import CatalogsFeedProcessingSchedule
from openapi_client.model.catalogs_format import CatalogsFormat
from openapi_client.model.catalogs_status import CatalogsStatus
from openapi_client.model.nullable_currency import NullableCurrency
from openapi_client.model.product_availability_type import ProductAvailabilityType
