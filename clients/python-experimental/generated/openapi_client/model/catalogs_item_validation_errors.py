# coding: utf-8

"""
    Pinterest REST API

    Pinterest's REST API  # noqa: E501

    The version of the OpenAPI document: 5.4.1
    Contact: blah@cliffano.com
    Generated by: https://openapi-generator.tech
"""

import re  # noqa: F401
import sys  # noqa: F401
import typing  # noqa: F401
import functools  # noqa: F401

from frozendict import frozendict  # noqa: F401

import decimal  # noqa: F401
from datetime import date, datetime  # noqa: F401
from frozendict import frozendict  # noqa: F401

from openapi_client.schemas import (  # noqa: F401
    AnyTypeSchema,
    ComposedSchema,
    DictSchema,
    ListSchema,
    StrSchema,
    IntSchema,
    Int32Schema,
    Int64Schema,
    Float32Schema,
    Float64Schema,
    NumberSchema,
    UUIDSchema,
    DateSchema,
    DateTimeSchema,
    DecimalSchema,
    BoolSchema,
    BinarySchema,
    NoneSchema,
    none_type,
    Configuration,
    Unset,
    unset,
    ComposedBase,
    ListBase,
    DictBase,
    NoneBase,
    StrBase,
    IntBase,
    Int32Base,
    Int64Base,
    Float32Base,
    Float64Base,
    NumberBase,
    UUIDBase,
    DateBase,
    DateTimeBase,
    BoolBase,
    BinaryBase,
    Schema,
    _SchemaValidator,
    _SchemaTypeChecker,
    _SchemaEnumMaker
)


class CatalogsItemValidationErrors(
    DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    @classmethod
    @property
    def ADULT_INVALID(cls) -> typing.Type['CatalogsItemValidationDetails']:
        return CatalogsItemValidationDetails

    @classmethod
    @property
    def ADWORDS_FORMAT_INVALID(cls) -> typing.Type['CatalogsItemValidationDetails']:
        return CatalogsItemValidationDetails

    @classmethod
    @property
    def AVAILABILITY_INVALID(cls) -> typing.Type['CatalogsItemValidationDetails']:
        return CatalogsItemValidationDetails

    @classmethod
    @property
    def BLOCKLISTED_IMAGE_SIGNATURE(cls) -> typing.Type['CatalogsItemValidationDetails']:
        return CatalogsItemValidationDetails

    @classmethod
    @property
    def DESCRIPTION_MISSING(cls) -> typing.Type['CatalogsItemValidationDetails']:
        return CatalogsItemValidationDetails

    @classmethod
    @property
    def IMAGE_LINK_INVALID(cls) -> typing.Type['CatalogsItemValidationDetails']:
        return CatalogsItemValidationDetails

    @classmethod
    @property
    def IMAGE_LINK_LENGTH_TOO_LONG(cls) -> typing.Type['CatalogsItemValidationDetails']:
        return CatalogsItemValidationDetails

    @classmethod
    @property
    def IMAGE_LINK_MISSING(cls) -> typing.Type['CatalogsItemValidationDetails']:
        return CatalogsItemValidationDetails

    @classmethod
    @property
    def INVALID_DOMAIN(cls) -> typing.Type['CatalogsItemValidationDetails']:
        return CatalogsItemValidationDetails

    @classmethod
    @property
    def ITEMID_MISSING(cls) -> typing.Type['CatalogsItemValidationDetails']:
        return CatalogsItemValidationDetails

    @classmethod
    @property
    def ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE(cls) -> typing.Type['CatalogsItemValidationDetails']:
        return CatalogsItemValidationDetails

    @classmethod
    @property
    def LINK_FORMAT_INVALID(cls) -> typing.Type['CatalogsItemValidationDetails']:
        return CatalogsItemValidationDetails

    @classmethod
    @property
    def LINK_LENGTH_TOO_LONG(cls) -> typing.Type['CatalogsItemValidationDetails']:
        return CatalogsItemValidationDetails

    @classmethod
    @property
    def MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED(cls) -> typing.Type['CatalogsItemValidationDetails']:
        return CatalogsItemValidationDetails

    @classmethod
    @property
    def PARSE_LINE_ERROR(cls) -> typing.Type['CatalogsItemValidationDetails']:
        return CatalogsItemValidationDetails

    @classmethod
    @property
    def PINJOIN_CONTENT_UNSAFE(cls) -> typing.Type['CatalogsItemValidationDetails']:
        return CatalogsItemValidationDetails

    @classmethod
    @property
    def PRICE_MISSING(cls) -> typing.Type['CatalogsItemValidationDetails']:
        return CatalogsItemValidationDetails

    @classmethod
    @property
    def PRODUCT_LINK_MISSING(cls) -> typing.Type['CatalogsItemValidationDetails']:
        return CatalogsItemValidationDetails

    @classmethod
    @property
    def PRODUCT_PRICE_INVALID(cls) -> typing.Type['CatalogsItemValidationDetails']:
        return CatalogsItemValidationDetails

    @classmethod
    @property
    def TITLE_MISSING(cls) -> typing.Type['CatalogsItemValidationDetails']:
        return CatalogsItemValidationDetails


    def __new__(
        cls,
        *args: typing.Union[dict, frozendict, ],
        ADULT_INVALID: typing.Union['CatalogsItemValidationDetails', Unset] = unset,
        ADWORDS_FORMAT_INVALID: typing.Union['CatalogsItemValidationDetails', Unset] = unset,
        AVAILABILITY_INVALID: typing.Union['CatalogsItemValidationDetails', Unset] = unset,
        BLOCKLISTED_IMAGE_SIGNATURE: typing.Union['CatalogsItemValidationDetails', Unset] = unset,
        DESCRIPTION_MISSING: typing.Union['CatalogsItemValidationDetails', Unset] = unset,
        IMAGE_LINK_INVALID: typing.Union['CatalogsItemValidationDetails', Unset] = unset,
        IMAGE_LINK_LENGTH_TOO_LONG: typing.Union['CatalogsItemValidationDetails', Unset] = unset,
        IMAGE_LINK_MISSING: typing.Union['CatalogsItemValidationDetails', Unset] = unset,
        INVALID_DOMAIN: typing.Union['CatalogsItemValidationDetails', Unset] = unset,
        ITEMID_MISSING: typing.Union['CatalogsItemValidationDetails', Unset] = unset,
        ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE: typing.Union['CatalogsItemValidationDetails', Unset] = unset,
        LINK_FORMAT_INVALID: typing.Union['CatalogsItemValidationDetails', Unset] = unset,
        LINK_LENGTH_TOO_LONG: typing.Union['CatalogsItemValidationDetails', Unset] = unset,
        MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED: typing.Union['CatalogsItemValidationDetails', Unset] = unset,
        PARSE_LINE_ERROR: typing.Union['CatalogsItemValidationDetails', Unset] = unset,
        PINJOIN_CONTENT_UNSAFE: typing.Union['CatalogsItemValidationDetails', Unset] = unset,
        PRICE_MISSING: typing.Union['CatalogsItemValidationDetails', Unset] = unset,
        PRODUCT_LINK_MISSING: typing.Union['CatalogsItemValidationDetails', Unset] = unset,
        PRODUCT_PRICE_INVALID: typing.Union['CatalogsItemValidationDetails', Unset] = unset,
        TITLE_MISSING: typing.Union['CatalogsItemValidationDetails', Unset] = unset,
        _configuration: typing.Optional[Configuration] = None,
        **kwargs: typing.Type[Schema],
    ) -> 'CatalogsItemValidationErrors':
        return super().__new__(
            cls,
            *args,
            ADULT_INVALID=ADULT_INVALID,
            ADWORDS_FORMAT_INVALID=ADWORDS_FORMAT_INVALID,
            AVAILABILITY_INVALID=AVAILABILITY_INVALID,
            BLOCKLISTED_IMAGE_SIGNATURE=BLOCKLISTED_IMAGE_SIGNATURE,
            DESCRIPTION_MISSING=DESCRIPTION_MISSING,
            IMAGE_LINK_INVALID=IMAGE_LINK_INVALID,
            IMAGE_LINK_LENGTH_TOO_LONG=IMAGE_LINK_LENGTH_TOO_LONG,
            IMAGE_LINK_MISSING=IMAGE_LINK_MISSING,
            INVALID_DOMAIN=INVALID_DOMAIN,
            ITEMID_MISSING=ITEMID_MISSING,
            ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE=ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE,
            LINK_FORMAT_INVALID=LINK_FORMAT_INVALID,
            LINK_LENGTH_TOO_LONG=LINK_LENGTH_TOO_LONG,
            MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED=MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED,
            PARSE_LINE_ERROR=PARSE_LINE_ERROR,
            PINJOIN_CONTENT_UNSAFE=PINJOIN_CONTENT_UNSAFE,
            PRICE_MISSING=PRICE_MISSING,
            PRODUCT_LINK_MISSING=PRODUCT_LINK_MISSING,
            PRODUCT_PRICE_INVALID=PRODUCT_PRICE_INVALID,
            TITLE_MISSING=TITLE_MISSING,
            _configuration=_configuration,
            **kwargs,
        )

from openapi_client.model.catalogs_item_validation_details import CatalogsItemValidationDetails
