#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.3.0
# Contact: blah@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER AccountType
Type of account
.PARAMETER ProfileImage
No description available.
.PARAMETER WebsiteUrl
No description available.
.PARAMETER Username
No description available.
.OUTPUTS

Account<PSCustomObject>
#>

function Initialize-Account {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("PINNER", "BUSINESS")]
        [String]
        ${AccountType},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ProfileImage},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WebsiteUrl},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Username}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => Account' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "account_type" = ${AccountType}
            "profile_image" = ${ProfileImage}
            "website_url" = ${WebsiteUrl}
            "username" = ${Username}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to Account<PSCustomObject>

.DESCRIPTION

Convert from JSON to Account<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

Account<PSCustomObject>
#>
function ConvertFrom-JsonToAccount {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => Account' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in Account
        $AllProperties = ("account_type", "profile_image", "website_url", "username")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "account_type"))) { #optional property not found
            $AccountType = $null
        } else {
            $AccountType = $JsonParameters.PSobject.Properties["account_type"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "profile_image"))) { #optional property not found
            $ProfileImage = $null
        } else {
            $ProfileImage = $JsonParameters.PSobject.Properties["profile_image"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "website_url"))) { #optional property not found
            $WebsiteUrl = $null
        } else {
            $WebsiteUrl = $JsonParameters.PSobject.Properties["website_url"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "username"))) { #optional property not found
            $Username = $null
        } else {
            $Username = $JsonParameters.PSobject.Properties["username"].value
        }

        $PSO = [PSCustomObject]@{
            "account_type" = ${AccountType}
            "profile_image" = ${ProfileImage}
            "website_url" = ${WebsiteUrl}
            "username" = ${Username}
        }

        return $PSO
    }

}

