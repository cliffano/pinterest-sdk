/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.controller;

import io.micronaut.http.annotation.*;
import io.micronaut.core.annotation.Nullable;
import io.micronaut.core.convert.format.Format;
import io.micronaut.security.annotation.Secured;
import io.micronaut.security.rules.SecurityRule;
import reactor.core.publisher.Mono;
import org.openapitools.model.AdsAnalyticsCreateAsyncRequest;
import org.openapitools.model.AdsAnalyticsCreateAsyncResponse;
import org.openapitools.model.AdsAnalyticsGetAsyncResponse;
import org.openapitools.model.Error;
import org.openapitools.model.Granularity;
import java.time.LocalDate;
import org.openapitools.model.Paginated;
import javax.annotation.Generated;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.annotations.*;

@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2022-07-01T11:59:34.708172Z[Etc/UTC]")
@Controller("${context-path}")
public class AdAccountsController {
    /**
     * Get ad account analytics
     * Get analytics for the specified &lt;code&gt;ad_account_id&lt;/code&gt;, filtered by the specified options. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param startDate Metric report start date (UTC). Format: YYYY-MM-DD (required)
     * @param endDate Metric report end date (UTC). Format: YYYY-MM-DD (required)
     * @param columns Columns to retrieve. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile&#39;s currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it&#39;s microdollars. Otherwise, it&#39;s in microunits of the advertiser&#39;s currency.&lt;br/&gt;For example, if the advertiser&#39;s currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).&lt;br/&gt;If a column has no value, it may not be returned (required)
     * @param granularity Granularity (required)
     * @param clickWindowDays Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param engagementWindowDays Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param viewWindowDays Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;1&#x60; day. (optional, default to 1)
     * @param conversionReportTime The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event. (optional, default to TIME_OF_AD_ACTION)
     * @return List&lt;Map&lt;String, Object&gt;&gt;
     */
    @ApiOperation(
        value = "Get ad account analytics",
        nickname = "adAccountAnalytics",
        notes = "Get analytics for the specified <code>ad_account_id</code>, filtered by the specified options. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Analyst, Campaign Manager.",
        response = Map.class,
        responseContainer = "array",
        authorizations = {
            @Authorization(value = "pinterest_oauth2", scopes = {
                @AuthorizationScope(scope = "ads:read", description = "See all of your advertising data, including ads, ad groups, campaigns etc.")
            })
        },
        tags={})
    @ApiResponses(value = {
        @ApiResponse(code = 200, message = "Success", response = Object.class, responseContainer = "array"),
        @ApiResponse(code = 400, message = "Invalid ad account analytics parameters.", response = Error.class),
        @ApiResponse(code = 0, message = "Unexpected error", response = Error.class)})
    @Get(uri="/ad_accounts/{ad_account_id}/analytics")
    @Produces(value = {"application/json"})
    @Secured(SecurityRule.IS_AUTHENTICATED)
    public Mono<List<Map<String, Object>>> adAccountAnalytics(
        @PathVariable(value="ad_account_id") @NotNull @Pattern(regexp="^\\d+$") String adAccountId, 
        @QueryValue(value="start_date") @NotNull @Format("yyyy-MM-dd") LocalDate startDate, 
        @QueryValue(value="end_date") @NotNull @Format("yyyy-MM-dd") LocalDate endDate, 
        @QueryValue(value="columns") @NotNull List<String> columns, 
        @QueryValue(value="granularity") @NotNull Granularity granularity, 
        @QueryValue(value="click_window_days", defaultValue="30") @Nullable Integer clickWindowDays, 
        @QueryValue(value="engagement_window_days", defaultValue="30") @Nullable Integer engagementWindowDays, 
        @QueryValue(value="view_window_days", defaultValue="1") @Nullable Integer viewWindowDays, 
        @QueryValue(value="conversion_report_time", defaultValue="TIME_OF_AD_ACTION") @Nullable String conversionReportTime
    ) {
        // TODO implement adAccountAnalytics() body;
        Mono<List<Map<String, Object>>> result = Mono.empty();
        return result;
    }

    /**
     * List ad accounts
     * Get a list of the ad_accounts that the \&quot;operation user_account\&quot; has access to. - This includes ad_accounts they own and ad_accounts that are owned by others who have granted them &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;.
     *
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Pagination&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param includeSharedAccounts Include shared ad accounts (optional, default to true)
     * @return Paginated
     */
    @ApiOperation(
        value = "List ad accounts",
        nickname = "adAccountsList",
        notes = "Get a list of the ad_accounts that the \"operation user_account\" has access to. - This includes ad_accounts they own and ad_accounts that are owned by others who have granted them <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>.",
        response = Paginated.class,
        authorizations = {
            @Authorization(value = "pinterest_oauth2", scopes = {
                @AuthorizationScope(scope = "ads:read", description = "See all of your advertising data, including ads, ad groups, campaigns etc.")
            })
        },
        tags={})
    @ApiResponses(value = {
        @ApiResponse(code = 200, message = "response", response = Paginated.class),
        @ApiResponse(code = 0, message = "Unexpected error", response = Error.class)})
    @Get(uri="/ad_accounts")
    @Produces(value = {"application/json"})
    @Secured(SecurityRule.IS_AUTHENTICATED)
    public Mono<Paginated> adAccountsList(
        @QueryValue(value="bookmark") @Nullable String bookmark, 
        @QueryValue(value="page_size", defaultValue="25") @Nullable @Min(1) @Max(100) Integer pageSize, 
        @QueryValue(value="include_shared_accounts", defaultValue="true") @Nullable Boolean includeSharedAccounts
    ) {
        // TODO implement adAccountsList() body;
        Mono<Paginated> result = Mono.empty();
        return result;
    }

    /**
     * Get ad group analytics
     * Get analytics for the specified ad groups in the specified &lt;code&gt;ad_account_id&lt;/code&gt;, filtered by the specified options. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param startDate Metric report start date (UTC). Format: YYYY-MM-DD (required)
     * @param endDate Metric report end date (UTC). Format: YYYY-MM-DD (required)
     * @param adGroupIds List of Ad group Ids to use to filter the results. (required)
     * @param columns Columns to retrieve. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile&#39;s currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it&#39;s microdollars. Otherwise, it&#39;s in microunits of the advertiser&#39;s currency.&lt;br/&gt;For example, if the advertiser&#39;s currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).&lt;br/&gt;If a column has no value, it may not be returned (required)
     * @param granularity Granularity (required)
     * @param clickWindowDays Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param engagementWindowDays Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param viewWindowDays Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;1&#x60; day. (optional, default to 1)
     * @param conversionReportTime The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event. (optional, default to TIME_OF_AD_ACTION)
     * @return List&lt;Map&lt;String, Object&gt;&gt;
     */
    @ApiOperation(
        value = "Get ad group analytics",
        nickname = "adGroupsAnalytics",
        notes = "Get analytics for the specified ad groups in the specified <code>ad_account_id</code>, filtered by the specified options. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Analyst, Campaign Manager.",
        response = Map.class,
        responseContainer = "array",
        authorizations = {
            @Authorization(value = "pinterest_oauth2", scopes = {
                @AuthorizationScope(scope = "ads:read", description = "See all of your advertising data, including ads, ad groups, campaigns etc.")
            })
        },
        tags={})
    @ApiResponses(value = {
        @ApiResponse(code = 200, message = "Success", response = Object.class, responseContainer = "array"),
        @ApiResponse(code = 400, message = "Invalid ad account group analytics parameters.", response = Error.class),
        @ApiResponse(code = 0, message = "Unexpected error", response = Error.class)})
    @Get(uri="/ad_accounts/{ad_account_id}/ad_groups/analytics")
    @Produces(value = {"application/json"})
    @Secured(SecurityRule.IS_AUTHENTICATED)
    public Mono<List<Map<String, Object>>> adGroupsAnalytics(
        @PathVariable(value="ad_account_id") @NotNull @Pattern(regexp="^\\d+$") String adAccountId, 
        @QueryValue(value="start_date") @NotNull @Format("yyyy-MM-dd") LocalDate startDate, 
        @QueryValue(value="end_date") @NotNull @Format("yyyy-MM-dd") LocalDate endDate, 
        @QueryValue(value="ad_group_ids") @NotNull @Size(min=1, max=100) List<String> adGroupIds, 
        @QueryValue(value="columns") @NotNull List<String> columns, 
        @QueryValue(value="granularity") @NotNull Granularity granularity, 
        @QueryValue(value="click_window_days", defaultValue="30") @Nullable Integer clickWindowDays, 
        @QueryValue(value="engagement_window_days", defaultValue="30") @Nullable Integer engagementWindowDays, 
        @QueryValue(value="view_window_days", defaultValue="1") @Nullable Integer viewWindowDays, 
        @QueryValue(value="conversion_report_time", defaultValue="TIME_OF_AD_ACTION") @Nullable String conversionReportTime
    ) {
        // TODO implement adGroupsAnalytics() body;
        Mono<List<Map<String, Object>>> result = Mono.empty();
        return result;
    }

    /**
     * List ad groups
     * Get a list of the ad groups in the specified &lt;code&gt;ad_account_id&lt;/code&gt;, filtered by the specified options. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param campaignIds List of Campaign Ids to use to filter the results. (optional)
     * @param adGroupIds List of Ad group Ids to use to filter the results. (optional)
     * @param entityStatuses Entity status (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Pagination&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param order The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param translateInterestsToNames Return interests as text names (if value is true) rather than topic IDs. (optional, default to false)
     * @return Paginated
     */
    @ApiOperation(
        value = "List ad groups",
        nickname = "adGroupsList",
        notes = "Get a list of the ad groups in the specified <code>ad_account_id</code>, filtered by the specified options. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Analyst, Campaign Manager.",
        response = Paginated.class,
        authorizations = {
            @Authorization(value = "pinterest_oauth2", scopes = {
                @AuthorizationScope(scope = "ads:read", description = "See all of your advertising data, including ads, ad groups, campaigns etc.")
            })
        },
        tags={})
    @ApiResponses(value = {
        @ApiResponse(code = 200, message = "Success", response = Paginated.class),
        @ApiResponse(code = 400, message = "Invalid ad account group parameters.", response = Error.class),
        @ApiResponse(code = 0, message = "Unexpected error", response = Error.class)})
    @Get(uri="/ad_accounts/{ad_account_id}/ad_groups")
    @Produces(value = {"application/json"})
    @Secured(SecurityRule.IS_AUTHENTICATED)
    public Mono<Paginated> adGroupsList(
        @PathVariable(value="ad_account_id") @NotNull @Pattern(regexp="^\\d+$") String adAccountId, 
        @QueryValue(value="campaign_ids") @Nullable @Size(min=1, max=100) List<String> campaignIds, 
        @QueryValue(value="ad_group_ids") @Nullable @Size(min=1, max=100) List<String> adGroupIds, 
        @QueryValue(value="entity_statuses") @Nullable List<String> entityStatuses, 
        @QueryValue(value="page_size", defaultValue="25") @Nullable @Min(1) @Max(100) Integer pageSize, 
        @QueryValue(value="order") @Nullable String order, 
        @QueryValue(value="bookmark") @Nullable String bookmark, 
        @QueryValue(value="translate_interests_to_names", defaultValue="false") @Nullable Boolean translateInterestsToNames
    ) {
        // TODO implement adGroupsList() body;
        Mono<Paginated> result = Mono.empty();
        return result;
    }

    /**
     * Get ad analytics
     * Get analytics for the specified ads in the specified &lt;code&gt;ad_account_id&lt;/code&gt;, filtered by the specified options. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param startDate Metric report start date (UTC). Format: YYYY-MM-DD (required)
     * @param endDate Metric report end date (UTC). Format: YYYY-MM-DD (required)
     * @param adIds List of Ad Ids to use to filter the results. (required)
     * @param columns Columns to retrieve. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile&#39;s currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it&#39;s microdollars. Otherwise, it&#39;s in microunits of the advertiser&#39;s currency.&lt;br/&gt;For example, if the advertiser&#39;s currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).&lt;br/&gt;If a column has no value, it may not be returned (required)
     * @param granularity Granularity (required)
     * @param clickWindowDays Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param engagementWindowDays Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param viewWindowDays Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;1&#x60; day. (optional, default to 1)
     * @param conversionReportTime The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event. (optional, default to TIME_OF_AD_ACTION)
     * @return List&lt;Map&lt;String, Object&gt;&gt;
     */
    @ApiOperation(
        value = "Get ad analytics",
        nickname = "adsAnalytics",
        notes = "Get analytics for the specified ads in the specified <code>ad_account_id</code>, filtered by the specified options. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Analyst, Campaign Manager.",
        response = Map.class,
        responseContainer = "array",
        authorizations = {
            @Authorization(value = "pinterest_oauth2", scopes = {
                @AuthorizationScope(scope = "ads:read", description = "See all of your advertising data, including ads, ad groups, campaigns etc.")
            })
        },
        tags={})
    @ApiResponses(value = {
        @ApiResponse(code = 200, message = "Success", response = Object.class, responseContainer = "array"),
        @ApiResponse(code = 400, message = "Invalid ad account ads analytics parameters.", response = Error.class),
        @ApiResponse(code = 0, message = "Unexpected error", response = Error.class)})
    @Get(uri="/ad_accounts/{ad_account_id}/ads/analytics")
    @Produces(value = {"application/json"})
    @Secured(SecurityRule.IS_AUTHENTICATED)
    public Mono<List<Map<String, Object>>> adsAnalytics(
        @PathVariable(value="ad_account_id") @NotNull @Pattern(regexp="^\\d+$") String adAccountId, 
        @QueryValue(value="start_date") @NotNull @Format("yyyy-MM-dd") LocalDate startDate, 
        @QueryValue(value="end_date") @NotNull @Format("yyyy-MM-dd") LocalDate endDate, 
        @QueryValue(value="ad_ids") @NotNull @Size(min=1, max=100) List<String> adIds, 
        @QueryValue(value="columns") @NotNull List<String> columns, 
        @QueryValue(value="granularity") @NotNull Granularity granularity, 
        @QueryValue(value="click_window_days", defaultValue="30") @Nullable Integer clickWindowDays, 
        @QueryValue(value="engagement_window_days", defaultValue="30") @Nullable Integer engagementWindowDays, 
        @QueryValue(value="view_window_days", defaultValue="1") @Nullable Integer viewWindowDays, 
        @QueryValue(value="conversion_report_time", defaultValue="TIME_OF_AD_ACTION") @Nullable String conversionReportTime
    ) {
        // TODO implement adsAnalytics() body;
        Mono<List<Map<String, Object>>> result = Mono.empty();
        return result;
    }

    /**
     * List ads
     * Get a list of the ads in the specified &lt;code&gt;ad_account_id&lt;/code&gt;, filtered by the specified options. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param campaignIds List of Campaign Ids to use to filter the results. (optional)
     * @param adGroupIds List of Ad group Ids to use to filter the results. (optional)
     * @param adIds List of Ad Ids to use to filter the results. (optional)
     * @param entityStatuses Entity status (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Pagination&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param order The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @return Paginated
     */
    @ApiOperation(
        value = "List ads",
        nickname = "adsList",
        notes = "Get a list of the ads in the specified <code>ad_account_id</code>, filtered by the specified options. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Analyst, Campaign Manager.",
        response = Paginated.class,
        authorizations = {
            @Authorization(value = "pinterest_oauth2", scopes = {
                @AuthorizationScope(scope = "ads:read", description = "See all of your advertising data, including ads, ad groups, campaigns etc.")
            })
        },
        tags={})
    @ApiResponses(value = {
        @ApiResponse(code = 200, message = "Success", response = Paginated.class),
        @ApiResponse(code = 400, message = "Invalid ad account ads parameters.", response = Error.class),
        @ApiResponse(code = 0, message = "Unexpected error", response = Error.class)})
    @Get(uri="/ad_accounts/{ad_account_id}/ads")
    @Produces(value = {"application/json"})
    @Secured(SecurityRule.IS_AUTHENTICATED)
    public Mono<Paginated> adsList(
        @PathVariable(value="ad_account_id") @NotNull @Pattern(regexp="^\\d+$") String adAccountId, 
        @QueryValue(value="campaign_ids") @Nullable @Size(min=1, max=100) List<String> campaignIds, 
        @QueryValue(value="ad_group_ids") @Nullable @Size(min=1, max=100) List<String> adGroupIds, 
        @QueryValue(value="ad_ids") @Nullable @Size(min=1, max=100) List<String> adIds, 
        @QueryValue(value="entity_statuses") @Nullable List<String> entityStatuses, 
        @QueryValue(value="page_size", defaultValue="25") @Nullable @Min(1) @Max(100) Integer pageSize, 
        @QueryValue(value="order") @Nullable String order, 
        @QueryValue(value="bookmark") @Nullable String bookmark
    ) {
        // TODO implement adsList() body;
        Mono<Paginated> result = Mono.empty();
        return result;
    }

    /**
     * Create async request for an account analytics report
     * This returns a token that you can use to download the report when it is ready. Note that this endpoint requires the parameters to be passed as JSON-formatted in the request body. This endpoint does not support URL query parameters. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param adsAnalyticsCreateAsyncRequest  (required)
     * @return AdsAnalyticsCreateAsyncResponse
     */
    @ApiOperation(
        value = "Create async request for an account analytics report",
        nickname = "analyticsCreateReport",
        notes = "This returns a token that you can use to download the report when it is ready. Note that this endpoint requires the parameters to be passed as JSON-formatted in the request body. This endpoint does not support URL query parameters. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Analyst, Campaign Manager.",
        response = AdsAnalyticsCreateAsyncResponse.class,
        authorizations = {
            @Authorization(value = "pinterest_oauth2", scopes = {
                @AuthorizationScope(scope = "ads:read", description = "See all of your advertising data, including ads, ad groups, campaigns etc.")
            })
        },
        tags={})
    @ApiResponses(value = {
        @ApiResponse(code = 200, message = "Success", response = AdsAnalyticsCreateAsyncResponse.class),
        @ApiResponse(code = 400, message = "Invalid ad account ads analytics parameters.", response = Error.class),
        @ApiResponse(code = 0, message = "Unexpected error", response = Error.class)})
    @Post(uri="/ad_accounts/{ad_account_id}/reports")
    @Produces(value = {"application/json"})
    @Consumes(value = {"application/json"})
    @Secured(SecurityRule.IS_AUTHENTICATED)
    public Mono<AdsAnalyticsCreateAsyncResponse> analyticsCreateReport(
        @PathVariable(value="ad_account_id") @NotNull @Pattern(regexp="^\\d+$") String adAccountId, 
        @Body @NotNull @Valid AdsAnalyticsCreateAsyncRequest adsAnalyticsCreateAsyncRequest
    ) {
        // TODO implement analyticsCreateReport() body;
        Mono<AdsAnalyticsCreateAsyncResponse> result = Mono.empty();
        return result;
    }

    /**
     * Get the account analytics report created by the async call
     * This returns a URL to an analytics report given a token returned from the post request report creation call. You can use the URL to download the report and it&#39;s valid for an hour. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param token Token returned from the post request creation call (required)
     * @return AdsAnalyticsGetAsyncResponse
     */
    @ApiOperation(
        value = "Get the account analytics report created by the async call",
        nickname = "analyticsGetReport",
        notes = "This returns a URL to an analytics report given a token returned from the post request report creation call. You can use the URL to download the report and it's valid for an hour. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Analyst, Campaign Manager.",
        response = AdsAnalyticsGetAsyncResponse.class,
        authorizations = {
            @Authorization(value = "pinterest_oauth2", scopes = {
                @AuthorizationScope(scope = "ads:read", description = "See all of your advertising data, including ads, ad groups, campaigns etc.")
            })
        },
        tags={})
    @ApiResponses(value = {
        @ApiResponse(code = 200, message = "Success", response = AdsAnalyticsGetAsyncResponse.class),
        @ApiResponse(code = 400, message = "Invalid ad account ads analytics parameters.", response = Error.class),
        @ApiResponse(code = 0, message = "Unexpected error", response = Error.class)})
    @Get(uri="/ad_accounts/{ad_account_id}/reports")
    @Produces(value = {"application/json"})
    @Secured(SecurityRule.IS_AUTHENTICATED)
    public Mono<AdsAnalyticsGetAsyncResponse> analyticsGetReport(
        @PathVariable(value="ad_account_id") @NotNull @Pattern(regexp="^\\d+$") String adAccountId, 
        @QueryValue(value="token") @NotNull String token
    ) {
        // TODO implement analyticsGetReport() body;
        Mono<AdsAnalyticsGetAsyncResponse> result = Mono.empty();
        return result;
    }

    /**
     * Get campaign analytics
     * Get analytics for the specified campaigns in the specified &lt;code&gt;ad_account_id&lt;/code&gt;, filtered by the specified options. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param startDate Metric report start date (UTC). Format: YYYY-MM-DD (required)
     * @param endDate Metric report end date (UTC). Format: YYYY-MM-DD (required)
     * @param campaignIds List of Campaign Ids to use to filter the results. (required)
     * @param columns Columns to retrieve. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile&#39;s currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it&#39;s microdollars. Otherwise, it&#39;s in microunits of the advertiser&#39;s currency.&lt;br/&gt;For example, if the advertiser&#39;s currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).&lt;br/&gt;If a column has no value, it may not be returned (required)
     * @param granularity Granularity (required)
     * @param clickWindowDays Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param engagementWindowDays Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param viewWindowDays Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;1&#x60; day. (optional, default to 1)
     * @param conversionReportTime The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event. (optional, default to TIME_OF_AD_ACTION)
     * @return List&lt;Map&lt;String, Object&gt;&gt;
     */
    @ApiOperation(
        value = "Get campaign analytics",
        nickname = "campaignsAnalytics",
        notes = "Get analytics for the specified campaigns in the specified <code>ad_account_id</code>, filtered by the specified options. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Analyst, Campaign Manager.",
        response = Map.class,
        responseContainer = "array",
        authorizations = {
            @Authorization(value = "pinterest_oauth2", scopes = {
                @AuthorizationScope(scope = "ads:read", description = "See all of your advertising data, including ads, ad groups, campaigns etc.")
            })
        },
        tags={})
    @ApiResponses(value = {
        @ApiResponse(code = 200, message = "Success", response = Object.class, responseContainer = "array"),
        @ApiResponse(code = 400, message = "Invalid ad account campaign analytics parameters.", response = Error.class),
        @ApiResponse(code = 0, message = "Unexpected error", response = Error.class)})
    @Get(uri="/ad_accounts/{ad_account_id}/campaigns/analytics")
    @Produces(value = {"application/json"})
    @Secured(SecurityRule.IS_AUTHENTICATED)
    public Mono<List<Map<String, Object>>> campaignsAnalytics(
        @PathVariable(value="ad_account_id") @NotNull @Pattern(regexp="^\\d+$") String adAccountId, 
        @QueryValue(value="start_date") @NotNull @Format("yyyy-MM-dd") LocalDate startDate, 
        @QueryValue(value="end_date") @NotNull @Format("yyyy-MM-dd") LocalDate endDate, 
        @QueryValue(value="campaign_ids") @NotNull @Size(min=1, max=100) List<String> campaignIds, 
        @QueryValue(value="columns") @NotNull List<String> columns, 
        @QueryValue(value="granularity") @NotNull Granularity granularity, 
        @QueryValue(value="click_window_days", defaultValue="30") @Nullable Integer clickWindowDays, 
        @QueryValue(value="engagement_window_days", defaultValue="30") @Nullable Integer engagementWindowDays, 
        @QueryValue(value="view_window_days", defaultValue="1") @Nullable Integer viewWindowDays, 
        @QueryValue(value="conversion_report_time", defaultValue="TIME_OF_AD_ACTION") @Nullable String conversionReportTime
    ) {
        // TODO implement campaignsAnalytics() body;
        Mono<List<Map<String, Object>>> result = Mono.empty();
        return result;
    }

    /**
     * List campaigns
     * Get a list of the campaigns in the specified &lt;code&gt;ad_account_id&lt;/code&gt;, filtered by the specified options. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param campaignIds List of Campaign Ids to use to filter the results. (optional)
     * @param entityStatuses Entity status (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Pagination&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param order The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @return Paginated
     */
    @ApiOperation(
        value = "List campaigns",
        nickname = "campaignsList",
        notes = "Get a list of the campaigns in the specified <code>ad_account_id</code>, filtered by the specified options. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Analyst, Campaign Manager.",
        response = Paginated.class,
        authorizations = {
            @Authorization(value = "pinterest_oauth2", scopes = {
                @AuthorizationScope(scope = "ads:read", description = "See all of your advertising data, including ads, ad groups, campaigns etc.")
            })
        },
        tags={})
    @ApiResponses(value = {
        @ApiResponse(code = 200, message = "Success", response = Paginated.class),
        @ApiResponse(code = 400, message = "Invalid ad account campaign parameters.", response = Error.class),
        @ApiResponse(code = 0, message = "Unexpected error", response = Error.class)})
    @Get(uri="/ad_accounts/{ad_account_id}/campaigns")
    @Produces(value = {"application/json"})
    @Secured(SecurityRule.IS_AUTHENTICATED)
    public Mono<Paginated> campaignsList(
        @PathVariable(value="ad_account_id") @NotNull @Pattern(regexp="^\\d+$") String adAccountId, 
        @QueryValue(value="campaign_ids") @Nullable @Size(min=1, max=100) List<String> campaignIds, 
        @QueryValue(value="entity_statuses") @Nullable List<String> entityStatuses, 
        @QueryValue(value="page_size", defaultValue="25") @Nullable @Min(1) @Max(100) Integer pageSize, 
        @QueryValue(value="order") @Nullable String order, 
        @QueryValue(value="bookmark") @Nullable String bookmark
    ) {
        // TODO implement campaignsList() body;
        Mono<Paginated> result = Mono.empty();
        return result;
    }

    /**
     * Get product group analytics
     * Get analytics for the specified product groups in the specified &lt;code&gt;ad_account_id&lt;/code&gt;, filtered by the specified options. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param startDate Metric report start date (UTC). Format: YYYY-MM-DD (required)
     * @param endDate Metric report end date (UTC). Format: YYYY-MM-DD (required)
     * @param productGroupIds List of Product group Ids to use to filter the results. (required)
     * @param columns Columns to retrieve. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile&#39;s currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it&#39;s microdollars. Otherwise, it&#39;s in microunits of the advertiser&#39;s currency.&lt;br/&gt;For example, if the advertiser&#39;s currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).&lt;br/&gt;If a column has no value, it may not be returned (required)
     * @param granularity Granularity (required)
     * @param clickWindowDays Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param engagementWindowDays Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param viewWindowDays Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;1&#x60; day. (optional, default to 1)
     * @param conversionReportTime The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event. (optional, default to TIME_OF_AD_ACTION)
     * @return List&lt;Map&lt;String, Object&gt;&gt;
     */
    @ApiOperation(
        value = "Get product group analytics",
        nickname = "productGroupsAnalytics",
        notes = "Get analytics for the specified product groups in the specified <code>ad_account_id</code>, filtered by the specified options. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Analyst, Campaign Manager.",
        response = Map.class,
        responseContainer = "array",
        authorizations = {
            @Authorization(value = "pinterest_oauth2", scopes = {
                @AuthorizationScope(scope = "ads:read", description = "See all of your advertising data, including ads, ad groups, campaigns etc.")
            })
        },
        tags={})
    @ApiResponses(value = {
        @ApiResponse(code = 200, message = "Success", response = Object.class, responseContainer = "array"),
        @ApiResponse(code = 400, message = "Invalid ad account ads analytics parameters.", response = Error.class),
        @ApiResponse(code = 0, message = "Unexpected error", response = Error.class)})
    @Get(uri="/ad_accounts/{ad_account_id}/product_groups/analytics")
    @Produces(value = {"application/json"})
    @Secured(SecurityRule.IS_AUTHENTICATED)
    public Mono<List<Map<String, Object>>> productGroupsAnalytics(
        @PathVariable(value="ad_account_id") @NotNull @Pattern(regexp="^\\d+$") String adAccountId, 
        @QueryValue(value="start_date") @NotNull @Format("yyyy-MM-dd") LocalDate startDate, 
        @QueryValue(value="end_date") @NotNull @Format("yyyy-MM-dd") LocalDate endDate, 
        @QueryValue(value="product_group_ids") @NotNull @Size(min=1, max=100) List<String> productGroupIds, 
        @QueryValue(value="columns") @NotNull List<String> columns, 
        @QueryValue(value="granularity") @NotNull Granularity granularity, 
        @QueryValue(value="click_window_days", defaultValue="30") @Nullable Integer clickWindowDays, 
        @QueryValue(value="engagement_window_days", defaultValue="30") @Nullable Integer engagementWindowDays, 
        @QueryValue(value="view_window_days", defaultValue="1") @Nullable Integer viewWindowDays, 
        @QueryValue(value="conversion_report_time", defaultValue="TIME_OF_AD_ACTION") @Nullable String conversionReportTime
    ) {
        // TODO implement productGroupsAnalytics() body;
        Mono<List<Map<String, Object>>> result = Mono.empty();
        return result;
    }
}
