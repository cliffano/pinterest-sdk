/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import org.openapitools.model.Board;
import org.openapitools.model.EntityStatus;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * non-promoted catalog product group entity
 */
@Schema(name = "CatalogProductGroup", description = "non-promoted catalog product group entity")
@JsonPropertyOrder({
  CatalogProductGroup.JSON_PROPERTY_ID,
  CatalogProductGroup.JSON_PROPERTY_MERCHANT_ID,
  CatalogProductGroup.JSON_PROPERTY_NAME,
  CatalogProductGroup.JSON_PROPERTY_FILTERS,
  CatalogProductGroup.JSON_PROPERTY_FILTER_V2,
  CatalogProductGroup.JSON_PROPERTY_TYPE,
  CatalogProductGroup.JSON_PROPERTY_STATUS,
  CatalogProductGroup.JSON_PROPERTY_FEED_PROFILE_ID,
  CatalogProductGroup.JSON_PROPERTY_CREATED_AT,
  CatalogProductGroup.JSON_PROPERTY_LAST_UPDATE,
  CatalogProductGroup.JSON_PROPERTY_PRODUCT_COUNT,
  CatalogProductGroup.JSON_PROPERTY_FEATURED_POSITION
})
@JsonTypeName("CatalogProductGroup")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-03-14T23:02:10.408800522Z[Etc/UTC]", comments = "Generator version: 7.4.0")
@Introspected
public class CatalogProductGroup {
    public static final String JSON_PROPERTY_ID = "id";
    private String id;

    public static final String JSON_PROPERTY_MERCHANT_ID = "merchant_id";
    private String merchantId;

    public static final String JSON_PROPERTY_NAME = "name";
    private String name;

    public static final String JSON_PROPERTY_FILTERS = "filters";
    private Object filters;

    public static final String JSON_PROPERTY_FILTER_V2 = "filter_v2";
    private Object filterV2;

    public static final String JSON_PROPERTY_TYPE = "type";
    private Board type;

    public static final String JSON_PROPERTY_STATUS = "status";
    private EntityStatus status;

    public static final String JSON_PROPERTY_FEED_PROFILE_ID = "feed_profile_id";
    private String feedProfileId;

    public static final String JSON_PROPERTY_CREATED_AT = "created_at";
    private Integer createdAt;

    public static final String JSON_PROPERTY_LAST_UPDATE = "last_update";
    private Integer lastUpdate;

    public static final String JSON_PROPERTY_PRODUCT_COUNT = "product_count";
    private Integer productCount;

    public static final String JSON_PROPERTY_FEATURED_POSITION = "featured_position";
    private Integer featuredPosition;

    public CatalogProductGroup() {
    }

    public CatalogProductGroup id(String id) {
        this.id = id;
        return this;
    }

    /**
     * ID of the catalog product group.
     * @return id
     **/
    @Nullable
    @Schema(name = "id", example = "2680059592705", description = "ID of the catalog product group.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setId(String id) {
        this.id = id;
    }

    public CatalogProductGroup merchantId(String merchantId) {
        this.merchantId = merchantId;
        return this;
    }

    /**
     * Merchant ID pertaining to the owner of the catalog product group.
     * @return merchantId
     **/
    @Nullable
    @Pattern(regexp="^\\d+$")
    @Schema(name = "merchant_id", example = "2680059592705", description = "Merchant ID pertaining to the owner of the catalog product group.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_MERCHANT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getMerchantId() {
        return merchantId;
    }

    @JsonProperty(JSON_PROPERTY_MERCHANT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMerchantId(String merchantId) {
        this.merchantId = merchantId;
    }

    public CatalogProductGroup name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Name of catalog product group
     * @return name
     **/
    @Nullable
    @Schema(name = "name", example = "Most Popular", description = "Name of catalog product group", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getName() {
        return name;
    }

    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setName(String name) {
        this.name = name;
    }

    public CatalogProductGroup filters(Object filters) {
        this.filters = filters;
        return this;
    }

    /**
     * Object holding a list of filters
     * @return filters
     **/
    @Nullable
    @Schema(name = "filters", example = "{\"1\":[\"123chars_title\"]}", description = "Object holding a list of filters", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_FILTERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Object getFilters() {
        return filters;
    }

    @JsonProperty(JSON_PROPERTY_FILTERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFilters(Object filters) {
        this.filters = filters;
    }

    public CatalogProductGroup filterV2(Object filterV2) {
        this.filterV2 = filterV2;
        return this;
    }

    /**
     * Object holding a list of filters
     * @return filterV2
     **/
    @Nullable
    @Schema(name = "filter_v2", example = "{\"1\":[\"123chars_title\"]}", description = "Object holding a list of filters", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_FILTER_V2)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Object getFilterV2() {
        return filterV2;
    }

    @JsonProperty(JSON_PROPERTY_FILTER_V2)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFilterV2(Object filterV2) {
        this.filterV2 = filterV2;
    }

    public CatalogProductGroup type(Board type) {
        this.type = type;
        return this;
    }

    /**
     * Get type
     * @return type
     **/
    @Valid
    @Nullable
    @Schema(name = "type", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Board getType() {
        return type;
    }

    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setType(Board type) {
        this.type = type;
    }

    public CatalogProductGroup status(EntityStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Get status
     * @return status
     **/
    @Nullable
    @Schema(name = "status", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public EntityStatus getStatus() {
        return status;
    }

    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStatus(EntityStatus status) {
        this.status = status;
    }

    public CatalogProductGroup feedProfileId(String feedProfileId) {
        this.feedProfileId = feedProfileId;
        return this;
    }

    /**
     * id of the feed profile belonging to this catalog product group
     * @return feedProfileId
     **/
    @Nullable
    @Pattern(regexp="^\\d+$")
    @Schema(name = "feed_profile_id", description = "id of the feed profile belonging to this catalog product group", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_FEED_PROFILE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getFeedProfileId() {
        return feedProfileId;
    }

    @JsonProperty(JSON_PROPERTY_FEED_PROFILE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFeedProfileId(String feedProfileId) {
        this.feedProfileId = feedProfileId;
    }

    public CatalogProductGroup createdAt(Integer createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Unix timestamp in seconds of when catalog product group was created.
     * @return createdAt
     **/
    @Nullable
    @Schema(name = "created_at", example = "1621350033000", description = "Unix timestamp in seconds of when catalog product group was created.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_CREATED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getCreatedAt() {
        return createdAt;
    }

    @JsonProperty(JSON_PROPERTY_CREATED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCreatedAt(Integer createdAt) {
        this.createdAt = createdAt;
    }

    public CatalogProductGroup lastUpdate(Integer lastUpdate) {
        this.lastUpdate = lastUpdate;
        return this;
    }

    /**
     * Unix timestamp in seconds of last time catalog product group was updated.
     * @return lastUpdate
     **/
    @Nullable
    @Schema(name = "last_update", example = "1622742155000", description = "Unix timestamp in seconds of last time catalog product group was updated.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_LAST_UPDATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getLastUpdate() {
        return lastUpdate;
    }

    @JsonProperty(JSON_PROPERTY_LAST_UPDATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLastUpdate(Integer lastUpdate) {
        this.lastUpdate = lastUpdate;
    }

    public CatalogProductGroup productCount(Integer productCount) {
        this.productCount = productCount;
        return this;
    }

    /**
     * Amount of products in the catalog product group
     * @return productCount
     **/
    @Nullable
    @Schema(name = "product_count", example = "6", description = "Amount of products in the catalog product group", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_PRODUCT_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getProductCount() {
        return productCount;
    }

    @JsonProperty(JSON_PROPERTY_PRODUCT_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProductCount(Integer productCount) {
        this.productCount = productCount;
    }

    public CatalogProductGroup featuredPosition(Integer featuredPosition) {
        this.featuredPosition = featuredPosition;
        return this;
    }

    /**
     * index of the featured position of the catalog product group
     * @return featuredPosition
     **/
    @Nullable
    @Schema(name = "featured_position", example = "2", description = "index of the featured position of the catalog product group", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_FEATURED_POSITION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getFeaturedPosition() {
        return featuredPosition;
    }

    @JsonProperty(JSON_PROPERTY_FEATURED_POSITION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFeaturedPosition(Integer featuredPosition) {
        this.featuredPosition = featuredPosition;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CatalogProductGroup catalogProductGroup = (CatalogProductGroup) o;
        return Objects.equals(this.id, catalogProductGroup.id) &&
            Objects.equals(this.merchantId, catalogProductGroup.merchantId) &&
            Objects.equals(this.name, catalogProductGroup.name) &&
            Objects.equals(this.filters, catalogProductGroup.filters) &&
            Objects.equals(this.filterV2, catalogProductGroup.filterV2) &&
            Objects.equals(this.type, catalogProductGroup.type) &&
            Objects.equals(this.status, catalogProductGroup.status) &&
            Objects.equals(this.feedProfileId, catalogProductGroup.feedProfileId) &&
            Objects.equals(this.createdAt, catalogProductGroup.createdAt) &&
            Objects.equals(this.lastUpdate, catalogProductGroup.lastUpdate) &&
            Objects.equals(this.productCount, catalogProductGroup.productCount) &&
            Objects.equals(this.featuredPosition, catalogProductGroup.featuredPosition);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, merchantId, name, filters, filterV2, type, status, feedProfileId, createdAt, lastUpdate, productCount, featuredPosition);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CatalogProductGroup {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
        sb.append("    filterV2: ").append(toIndentedString(filterV2)).append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    feedProfileId: ").append(toIndentedString(feedProfileId)).append("\n");
        sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
        sb.append("    lastUpdate: ").append(toIndentedString(lastUpdate)).append("\n");
        sb.append("    productCount: ").append(toIndentedString(productCount)).append("\n");
        sb.append("    featuredPosition: ").append(toIndentedString(featuredPosition)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

