/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.controller;

import io.micronaut.http.annotation.*;
import io.micronaut.core.annotation.Nullable;
import io.micronaut.core.convert.format.Format;
import io.micronaut.security.annotation.Secured;
import io.micronaut.security.rules.SecurityRule;
import reactor.core.publisher.Mono;
import org.openapitools.model.Error;
import org.openapitools.model.OauthAccessTokenResponse;
import javax.annotation.Generated;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.annotations.*;

@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2022-07-01T11:59:34.708172Z[Etc/UTC]")
@Controller("${context-path}")
public class OauthController {
    /**
     * Generate OAuth access token
     * Generate an OAuth access token by using an authorization code or a refresh token.  See &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Authentication&#39;&gt;Authentication&lt;/a&gt; for more.
     *
     * @param grantType  (required)
     * @return OauthAccessTokenResponse
     */
    @ApiOperation(
        value = "Generate OAuth access token",
        nickname = "oauthToken",
        notes = "Generate an OAuth access token by using an authorization code or a refresh token.  See <a href='/docs/api/v5/#tag/Authentication'>Authentication</a> for more.",
        response = OauthAccessTokenResponse.class,
        authorizations = {},
        tags={})
    @ApiResponses(value = {
        @ApiResponse(code = 200, message = "response", response = OauthAccessTokenResponse.class),
        @ApiResponse(code = 0, message = "Unexpected error", response = Error.class)})
    @Post(uri="/oauth/token")
    @Produces(value = {"application/json"})
    @Consumes(value = {"application/x-www-form-urlencoded"})
    @Secured(SecurityRule.IS_ANONYMOUS)
    public Mono<OauthAccessTokenResponse> oauthToken(
        @NotNull String grantType
    ) {
        // TODO implement oauthToken() body;
        Mono<OauthAccessTokenResponse> result = Mono.empty();
        return result;
    }
}
