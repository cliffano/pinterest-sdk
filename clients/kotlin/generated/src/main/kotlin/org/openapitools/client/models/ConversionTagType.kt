/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * conversion tag type
 *
 * Values: PAGE_LOAD,UNKNOWN,INITIALIZED,PAGE_VISIT,SIGNUP,CHECKOUT,CUSTOM,VIEW_CATEGORY,SEARCH,ADD_TO_CART,WATCH_VIDEO,LEAD,APP_INSTALL,WEB_SESSION,EXTERNAL_MEASUREMENT
 */

@JsonClass(generateAdapter = false)
enum class ConversionTagType(val value: kotlin.String) {

    @Json(name = "PAGE_LOAD")
    PAGE_LOAD("PAGE_LOAD"),

    @Json(name = "UNKNOWN")
    UNKNOWN("UNKNOWN"),

    @Json(name = "INITIALIZED")
    INITIALIZED("INITIALIZED"),

    @Json(name = "PAGE_VISIT")
    PAGE_VISIT("PAGE_VISIT"),

    @Json(name = "SIGNUP")
    SIGNUP("SIGNUP"),

    @Json(name = "CHECKOUT")
    CHECKOUT("CHECKOUT"),

    @Json(name = "CUSTOM")
    CUSTOM("CUSTOM"),

    @Json(name = "VIEW_CATEGORY")
    VIEW_CATEGORY("VIEW_CATEGORY"),

    @Json(name = "SEARCH")
    SEARCH("SEARCH"),

    @Json(name = "ADD_TO_CART")
    ADD_TO_CART("ADD_TO_CART"),

    @Json(name = "WATCH_VIDEO")
    WATCH_VIDEO("WATCH_VIDEO"),

    @Json(name = "LEAD")
    LEAD("LEAD"),

    @Json(name = "APP_INSTALL")
    APP_INSTALL("APP_INSTALL"),

    @Json(name = "WEB_SESSION")
    WEB_SESSION("WEB_SESSION"),

    @Json(name = "EXTERNAL_MEASUREMENT")
    EXTERNAL_MEASUREMENT("EXTERNAL_MEASUREMENT");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is ConversionTagType) "$data" else null

        /**
         * Returns a valid [ConversionTagType] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): ConversionTagType? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

