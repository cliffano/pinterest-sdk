/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * Values: afMinusZA,arMinusSA,bgMinusBG,bnMinusIN,csMinusCZ,daMinusDK,de,elMinusGR,enMinusAU,enMinusCA,enMinusGB,enMinusIN,enMinusUS,esMinus419,esMinusAR,esMinusES,esMinusMX,fiMinusFI,fr,frMinusCA,heMinusIL,hiMinusIN,hrMinusHR,huMinusHU,idMinusID,`it`,ja,koMinusKR,msMinusMY,nbMinusNO,nl,plMinusPL,ptMinusBR,ptMinusPT,roMinusRO,ruMinusRU,skMinusSK,svMinusSE,teMinusIN,thMinusTH,tlMinusPH,tr,ukMinusUA,viMinusVN,zhMinusCN,zhMinusTW
 */

@JsonClass(generateAdapter = false)
enum class CatalogsLocale(val value: kotlin.String) {

    @Json(name = "af-ZA")
    afMinusZA("af-ZA"),

    @Json(name = "ar-SA")
    arMinusSA("ar-SA"),

    @Json(name = "bg-BG")
    bgMinusBG("bg-BG"),

    @Json(name = "bn-IN")
    bnMinusIN("bn-IN"),

    @Json(name = "cs-CZ")
    csMinusCZ("cs-CZ"),

    @Json(name = "da-DK")
    daMinusDK("da-DK"),

    @Json(name = "de")
    de("de"),

    @Json(name = "el-GR")
    elMinusGR("el-GR"),

    @Json(name = "en-AU")
    enMinusAU("en-AU"),

    @Json(name = "en-CA")
    enMinusCA("en-CA"),

    @Json(name = "en-GB")
    enMinusGB("en-GB"),

    @Json(name = "en-IN")
    enMinusIN("en-IN"),

    @Json(name = "en-US")
    enMinusUS("en-US"),

    @Json(name = "es-419")
    esMinus419("es-419"),

    @Json(name = "es-AR")
    esMinusAR("es-AR"),

    @Json(name = "es-ES")
    esMinusES("es-ES"),

    @Json(name = "es-MX")
    esMinusMX("es-MX"),

    @Json(name = "fi-FI")
    fiMinusFI("fi-FI"),

    @Json(name = "fr")
    fr("fr"),

    @Json(name = "fr-CA")
    frMinusCA("fr-CA"),

    @Json(name = "he-IL")
    heMinusIL("he-IL"),

    @Json(name = "hi-IN")
    hiMinusIN("hi-IN"),

    @Json(name = "hr-HR")
    hrMinusHR("hr-HR"),

    @Json(name = "hu-HU")
    huMinusHU("hu-HU"),

    @Json(name = "id-ID")
    idMinusID("id-ID"),

    @Json(name = "it")
    `it`("it"),

    @Json(name = "ja")
    ja("ja"),

    @Json(name = "ko-KR")
    koMinusKR("ko-KR"),

    @Json(name = "ms-MY")
    msMinusMY("ms-MY"),

    @Json(name = "nb-NO")
    nbMinusNO("nb-NO"),

    @Json(name = "nl")
    nl("nl"),

    @Json(name = "pl-PL")
    plMinusPL("pl-PL"),

    @Json(name = "pt-BR")
    ptMinusBR("pt-BR"),

    @Json(name = "pt-PT")
    ptMinusPT("pt-PT"),

    @Json(name = "ro-RO")
    roMinusRO("ro-RO"),

    @Json(name = "ru-RU")
    ruMinusRU("ru-RU"),

    @Json(name = "sk-SK")
    skMinusSK("sk-SK"),

    @Json(name = "sv-SE")
    svMinusSE("sv-SE"),

    @Json(name = "te-IN")
    teMinusIN("te-IN"),

    @Json(name = "th-TH")
    thMinusTH("th-TH"),

    @Json(name = "tl-PH")
    tlMinusPH("tl-PH"),

    @Json(name = "tr")
    tr("tr"),

    @Json(name = "uk-UA")
    ukMinusUA("uk-UA"),

    @Json(name = "vi-VN")
    viMinusVN("vi-VN"),

    @Json(name = "zh-CN")
    zhMinusCN("zh-CN"),

    @Json(name = "zh-TW")
    zhMinusTW("zh-TW");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is CatalogsLocale) "$data" else null

        /**
         * Returns a valid [CatalogsLocale] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): CatalogsLocale? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

