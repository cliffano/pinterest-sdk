/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.ConversionEventsUserData

class ConversionEventsUserDataTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ConversionEventsUserData
        //val modelInstance = ConversionEventsUserData()

        // to test the property `ph` - Sha256 hashes of user's phone numbers, only digits with country code, area code, and number. Remove any symbols, letters, spaces and leading zeros. We highly recommend this on checkout events at least. It may improve reporting performance such as ROAS/CPA.
        should("test ph") {
            // uncomment below to test the property
            //modelInstance.ph shouldBe ("TODO")
        }

        // to test the property `ge` - Sha256 hashes of user's gender, in lowercase. Either \"f\" or \"m\" or \"n\" for non-binary gender.
        should("test ge") {
            // uncomment below to test the property
            //modelInstance.ge shouldBe ("TODO")
        }

        // to test the property `db` - Sha256 hashes of user's date of birthday, given as year, month, and day.
        should("test db") {
            // uncomment below to test the property
            //modelInstance.db shouldBe ("TODO")
        }

        // to test the property `ln` - Sha256 hashes of user's last name, in lowercase. We highly recommend this on checkout events at least. It may improve reporting performance such as ROAS/CPA.
        should("test ln") {
            // uncomment below to test the property
            //modelInstance.ln shouldBe ("TODO")
        }

        // to test the property `fn` - Sha256 hashes of user's first name, in lowercase. We highly recommend this on checkout events at least. It may improve reporting performance such as ROAS/CPA.
        should("test fn") {
            // uncomment below to test the property
            //modelInstance.fn shouldBe ("TODO")
        }

        // to test the property `ct` - Sha256 hashes of user's city, in lowercase, and without spaces or punctuation. User residency city (mostly billing).
        should("test ct") {
            // uncomment below to test the property
            //modelInstance.ct shouldBe ("TODO")
        }

        // to test the property `st` - Sha256 hashes of user's state, given as a two-letter code in lowercase. User residency state (mostly billing).
        should("test st") {
            // uncomment below to test the property
            //modelInstance.st shouldBe ("TODO")
        }

        // to test the property `zp` - Sha256 hashes of user's zipcode, only digits. User residency zipcode (mostly billing).
        should("test zp") {
            // uncomment below to test the property
            //modelInstance.zp shouldBe ("TODO")
        }

        // to test the property `country` - Sha256 hashes of two-character ISO-3166 country code indicating the user's country, in lowercase.
        should("test country") {
            // uncomment below to test the property
            //modelInstance.country shouldBe ("TODO")
        }

        // to test the property `externalId` - Sha256 hashes of the unique id from the advertiser that identifies a user in their space, e.g. user id, loyalty id, etc. We highly recommend this on all events. It may improve reporting performance such as ROAS/CPA.
        should("test externalId") {
            // uncomment below to test the property
            //modelInstance.externalId shouldBe ("TODO")
        }

        // to test the property `clickId` - The unique identifier stored in _epik cookie on your domain or &epik= query parameter in the URL. We highly recommend this on checkout events at least. It may improve reporting performance such as ROAS/CPA.
        should("test clickId") {
            // uncomment below to test the property
            //modelInstance.clickId shouldBe ("TODO")
        }

        // to test the property `partnerId` - A unique identifier of visitors' information defined by third party partners. e.g RampID
        should("test partnerId") {
            // uncomment below to test the property
            //modelInstance.partnerId shouldBe ("TODO")
        }

    }
}
