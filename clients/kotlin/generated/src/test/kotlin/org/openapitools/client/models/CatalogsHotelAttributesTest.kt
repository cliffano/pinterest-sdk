/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.CatalogsHotelAttributes
import org.openapitools.client.models.CatalogsHotelAddress
import org.openapitools.client.models.CatalogsHotelAttributesAllOfMainImage
import org.openapitools.client.models.CatalogsHotelGuestRatings

class CatalogsHotelAttributesTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of CatalogsHotelAttributes
        //val modelInstance = CatalogsHotelAttributes()

        // to test the property `name` - The hotel's name.
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `link` - Link to the product page
        should("test link") {
            // uncomment below to test the property
            //modelInstance.link shouldBe ("TODO")
        }

        // to test the property `description` - Brief description of the hotel.
        should("test description") {
            // uncomment below to test the property
            //modelInstance.description shouldBe ("TODO")
        }

        // to test the property `brand` - The brand to which this hotel belongs to.
        should("test brand") {
            // uncomment below to test the property
            //modelInstance.brand shouldBe ("TODO")
        }

        // to test the property `latitude` - Latitude of the hotel.
        should("test latitude") {
            // uncomment below to test the property
            //modelInstance.latitude shouldBe ("TODO")
        }

        // to test the property `longitude` - Longitude of the hotel.
        should("test longitude") {
            // uncomment below to test the property
            //modelInstance.longitude shouldBe ("TODO")
        }

        // to test the property `neighborhood` - A list of neighborhoods where the hotel is located
        should("test neighborhood") {
            // uncomment below to test the property
            //modelInstance.neighborhood shouldBe ("TODO")
        }

        // to test the property `address`
        should("test address") {
            // uncomment below to test the property
            //modelInstance.address shouldBe ("TODO")
        }

        // to test the property `customLabel0` - Custom grouping of hotels
        should("test customLabel0") {
            // uncomment below to test the property
            //modelInstance.customLabel0 shouldBe ("TODO")
        }

        // to test the property `customLabel1` - Custom grouping of hotels
        should("test customLabel1") {
            // uncomment below to test the property
            //modelInstance.customLabel1 shouldBe ("TODO")
        }

        // to test the property `customLabel2` - Custom grouping of hotels
        should("test customLabel2") {
            // uncomment below to test the property
            //modelInstance.customLabel2 shouldBe ("TODO")
        }

        // to test the property `customLabel3` - Custom grouping of hotels
        should("test customLabel3") {
            // uncomment below to test the property
            //modelInstance.customLabel3 shouldBe ("TODO")
        }

        // to test the property `customLabel4` - Custom grouping of hotels
        should("test customLabel4") {
            // uncomment below to test the property
            //modelInstance.customLabel4 shouldBe ("TODO")
        }

        // to test the property `category` - The type of property. The category can be any type of internal description desired.
        should("test category") {
            // uncomment below to test the property
            //modelInstance.category shouldBe ("TODO")
        }

        // to test the property `basePrice` - Base price of the hotel room per night followed by the ISO currency code
        should("test basePrice") {
            // uncomment below to test the property
            //modelInstance.basePrice shouldBe ("TODO")
        }

        // to test the property `salePrice` - Sale price of a hotel room per night. Used to advertise discounts off the regular price of the hotel.
        should("test salePrice") {
            // uncomment below to test the property
            //modelInstance.salePrice shouldBe ("TODO")
        }

        // to test the property `guestRatings`
        should("test guestRatings") {
            // uncomment below to test the property
            //modelInstance.guestRatings shouldBe ("TODO")
        }

        // to test the property `mainImage`
        should("test mainImage") {
            // uncomment below to test the property
            //modelInstance.mainImage shouldBe ("TODO")
        }

        // to test the property `additionalImageLink` - <p><= 2000 characters</p> <p>The links to additional images for your hotel. Up to ten additional images can be used to show a hotel from different angles. Must begin with http:// or https://.</p>
        should("test additionalImageLink") {
            // uncomment below to test the property
            //modelInstance.additionalImageLink shouldBe ("TODO")
        }

    }
}
