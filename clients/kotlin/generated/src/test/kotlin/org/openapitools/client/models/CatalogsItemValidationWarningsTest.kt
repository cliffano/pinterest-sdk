/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.CatalogsItemValidationWarnings
import org.openapitools.client.models.CatalogsItemValidationDetails

class CatalogsItemValidationWarningsTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of CatalogsItemValidationWarnings
        //val modelInstance = CatalogsItemValidationWarnings()

        // to test the property `AD_LINK_FORMAT_WARNING`
        should("test AD_LINK_FORMAT_WARNING") {
            // uncomment below to test the property
            //modelInstance.AD_LINK_FORMAT_WARNING shouldBe ("TODO")
        }

        // to test the property `AD_LINK_SAME_AS_LINK`
        should("test AD_LINK_SAME_AS_LINK") {
            // uncomment below to test the property
            //modelInstance.AD_LINK_SAME_AS_LINK shouldBe ("TODO")
        }

        // to test the property `ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG`
        should("test ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG") {
            // uncomment below to test the property
            //modelInstance.ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG shouldBe ("TODO")
        }

        // to test the property `ADDITIONAL_IMAGE_LINK_WARNING`
        should("test ADDITIONAL_IMAGE_LINK_WARNING") {
            // uncomment below to test the property
            //modelInstance.ADDITIONAL_IMAGE_LINK_WARNING shouldBe ("TODO")
        }

        // to test the property `ADWORDS_FORMAT_WARNING`
        should("test ADWORDS_FORMAT_WARNING") {
            // uncomment below to test the property
            //modelInstance.ADWORDS_FORMAT_WARNING shouldBe ("TODO")
        }

        // to test the property `ADWORDS_SAME_AS_LINK`
        should("test ADWORDS_SAME_AS_LINK") {
            // uncomment below to test the property
            //modelInstance.ADWORDS_SAME_AS_LINK shouldBe ("TODO")
        }

        // to test the property `AGE_GROUP_INVALID`
        should("test AGE_GROUP_INVALID") {
            // uncomment below to test the property
            //modelInstance.AGE_GROUP_INVALID shouldBe ("TODO")
        }

        // to test the property `SIZE_SYSTEM_INVALID`
        should("test SIZE_SYSTEM_INVALID") {
            // uncomment below to test the property
            //modelInstance.SIZE_SYSTEM_INVALID shouldBe ("TODO")
        }

        // to test the property `ANDROID_DEEP_LINK_INVALID`
        should("test ANDROID_DEEP_LINK_INVALID") {
            // uncomment below to test the property
            //modelInstance.ANDROID_DEEP_LINK_INVALID shouldBe ("TODO")
        }

        // to test the property `AVAILABILITY_DATE_INVALID`
        should("test AVAILABILITY_DATE_INVALID") {
            // uncomment below to test the property
            //modelInstance.AVAILABILITY_DATE_INVALID shouldBe ("TODO")
        }

        // to test the property `COUNTRY_DOES_NOT_MAP_TO_CURRENCY`
        should("test COUNTRY_DOES_NOT_MAP_TO_CURRENCY") {
            // uncomment below to test the property
            //modelInstance.COUNTRY_DOES_NOT_MAP_TO_CURRENCY shouldBe ("TODO")
        }

        // to test the property `CUSTOM_LABEL_LENGTH_TOO_LONG`
        should("test CUSTOM_LABEL_LENGTH_TOO_LONG") {
            // uncomment below to test the property
            //modelInstance.CUSTOM_LABEL_LENGTH_TOO_LONG shouldBe ("TODO")
        }

        // to test the property `DESCRIPTION_LENGTH_TOO_LONG`
        should("test DESCRIPTION_LENGTH_TOO_LONG") {
            // uncomment below to test the property
            //modelInstance.DESCRIPTION_LENGTH_TOO_LONG shouldBe ("TODO")
        }

        // to test the property `EXPIRATION_DATE_INVALID`
        should("test EXPIRATION_DATE_INVALID") {
            // uncomment below to test the property
            //modelInstance.EXPIRATION_DATE_INVALID shouldBe ("TODO")
        }

        // to test the property `GENDER_INVALID`
        should("test GENDER_INVALID") {
            // uncomment below to test the property
            //modelInstance.GENDER_INVALID shouldBe ("TODO")
        }

        // to test the property `GTIN_INVALID`
        should("test GTIN_INVALID") {
            // uncomment below to test the property
            //modelInstance.GTIN_INVALID shouldBe ("TODO")
        }

        // to test the property `IMAGE_LINK_WARNING`
        should("test IMAGE_LINK_WARNING") {
            // uncomment below to test the property
            //modelInstance.IMAGE_LINK_WARNING shouldBe ("TODO")
        }

        // to test the property `IOS_DEEP_LINK_INVALID`
        should("test IOS_DEEP_LINK_INVALID") {
            // uncomment below to test the property
            //modelInstance.IOS_DEEP_LINK_INVALID shouldBe ("TODO")
        }

        // to test the property `IS_BUNDLE_INVALID`
        should("test IS_BUNDLE_INVALID") {
            // uncomment below to test the property
            //modelInstance.IS_BUNDLE_INVALID shouldBe ("TODO")
        }

        // to test the property `ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE`
        should("test ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE") {
            // uncomment below to test the property
            //modelInstance.ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE shouldBe ("TODO")
        }

        // to test the property `LINK_FORMAT_WARNING`
        should("test LINK_FORMAT_WARNING") {
            // uncomment below to test the property
            //modelInstance.LINK_FORMAT_WARNING shouldBe ("TODO")
        }

        // to test the property `MIN_AD_PRICE_INVALID`
        should("test MIN_AD_PRICE_INVALID") {
            // uncomment below to test the property
            //modelInstance.MIN_AD_PRICE_INVALID shouldBe ("TODO")
        }

        // to test the property `MPN_INVALID`
        should("test MPN_INVALID") {
            // uncomment below to test the property
            //modelInstance.MPN_INVALID shouldBe ("TODO")
        }

        // to test the property `MULTIPACK_INVALID`
        should("test MULTIPACK_INVALID") {
            // uncomment below to test the property
            //modelInstance.MULTIPACK_INVALID shouldBe ("TODO")
        }

        // to test the property `OPTIONAL_CONDITION_INVALID`
        should("test OPTIONAL_CONDITION_INVALID") {
            // uncomment below to test the property
            //modelInstance.OPTIONAL_CONDITION_INVALID shouldBe ("TODO")
        }

        // to test the property `OPTIONAL_CONDITION_MISSING`
        should("test OPTIONAL_CONDITION_MISSING") {
            // uncomment below to test the property
            //modelInstance.OPTIONAL_CONDITION_MISSING shouldBe ("TODO")
        }

        // to test the property `OPTIONAL_PRODUCT_CATEGORY_INVALID`
        should("test OPTIONAL_PRODUCT_CATEGORY_INVALID") {
            // uncomment below to test the property
            //modelInstance.OPTIONAL_PRODUCT_CATEGORY_INVALID shouldBe ("TODO")
        }

        // to test the property `OPTIONAL_PRODUCT_CATEGORY_MISSING`
        should("test OPTIONAL_PRODUCT_CATEGORY_MISSING") {
            // uncomment below to test the property
            //modelInstance.OPTIONAL_PRODUCT_CATEGORY_MISSING shouldBe ("TODO")
        }

        // to test the property `PRODUCT_CATEGORY_DEPTH_WARNING`
        should("test PRODUCT_CATEGORY_DEPTH_WARNING") {
            // uncomment below to test the property
            //modelInstance.PRODUCT_CATEGORY_DEPTH_WARNING shouldBe ("TODO")
        }

        // to test the property `PRODUCT_TYPE_LENGTH_TOO_LONG`
        should("test PRODUCT_TYPE_LENGTH_TOO_LONG") {
            // uncomment below to test the property
            //modelInstance.PRODUCT_TYPE_LENGTH_TOO_LONG shouldBe ("TODO")
        }

        // to test the property `SALES_PRICE_INVALID`
        should("test SALES_PRICE_INVALID") {
            // uncomment below to test the property
            //modelInstance.SALES_PRICE_INVALID shouldBe ("TODO")
        }

        // to test the property `SALES_PRICE_TOO_LOW`
        should("test SALES_PRICE_TOO_LOW") {
            // uncomment below to test the property
            //modelInstance.SALES_PRICE_TOO_LOW shouldBe ("TODO")
        }

        // to test the property `SALES_PRICE_TOO_HIGH`
        should("test SALES_PRICE_TOO_HIGH") {
            // uncomment below to test the property
            //modelInstance.SALES_PRICE_TOO_HIGH shouldBe ("TODO")
        }

        // to test the property `SALE_DATE_INVALID`
        should("test SALE_DATE_INVALID") {
            // uncomment below to test the property
            //modelInstance.SALE_DATE_INVALID shouldBe ("TODO")
        }

        // to test the property `SHIPPING_INVALID`
        should("test SHIPPING_INVALID") {
            // uncomment below to test the property
            //modelInstance.SHIPPING_INVALID shouldBe ("TODO")
        }

        // to test the property `SHIPPING_HEIGHT_INVALID`
        should("test SHIPPING_HEIGHT_INVALID") {
            // uncomment below to test the property
            //modelInstance.SHIPPING_HEIGHT_INVALID shouldBe ("TODO")
        }

        // to test the property `SHIPPING_WEIGHT_INVALID`
        should("test SHIPPING_WEIGHT_INVALID") {
            // uncomment below to test the property
            //modelInstance.SHIPPING_WEIGHT_INVALID shouldBe ("TODO")
        }

        // to test the property `SHIPPING_WIDTH_INVALID`
        should("test SHIPPING_WIDTH_INVALID") {
            // uncomment below to test the property
            //modelInstance.SHIPPING_WIDTH_INVALID shouldBe ("TODO")
        }

        // to test the property `SIZE_TYPE_INVALID`
        should("test SIZE_TYPE_INVALID") {
            // uncomment below to test the property
            //modelInstance.SIZE_TYPE_INVALID shouldBe ("TODO")
        }

        // to test the property `TAX_INVALID`
        should("test TAX_INVALID") {
            // uncomment below to test the property
            //modelInstance.TAX_INVALID shouldBe ("TODO")
        }

        // to test the property `TITLE_LENGTH_TOO_LONG`
        should("test TITLE_LENGTH_TOO_LONG") {
            // uncomment below to test the property
            //modelInstance.TITLE_LENGTH_TOO_LONG shouldBe ("TODO")
        }

        // to test the property `TOO_MANY_ADDITIONAL_IMAGE_LINKS`
        should("test TOO_MANY_ADDITIONAL_IMAGE_LINKS") {
            // uncomment below to test the property
            //modelInstance.TOO_MANY_ADDITIONAL_IMAGE_LINKS shouldBe ("TODO")
        }

        // to test the property `UTM_SOURCE_AUTO_CORRECTED`
        should("test UTM_SOURCE_AUTO_CORRECTED") {
            // uncomment below to test the property
            //modelInstance.UTM_SOURCE_AUTO_CORRECTED shouldBe ("TODO")
        }

        // to test the property `WEIGHT_UNIT_INVALID`
        should("test WEIGHT_UNIT_INVALID") {
            // uncomment below to test the property
            //modelInstance.WEIGHT_UNIT_INVALID shouldBe ("TODO")
        }

    }
}
