# #Pinterest REST API
#
##Pinterest's REST API
#
#The version of the OpenAPI document: 5.3.0
#Contact: pinterest-api@pinterest.com
#Generated by: https://openapi-generator.tech
#OpenAPI Generator version: 5.4.0
#

require "json"
require "time"

module 
  class CatalogsFeedValidationWarnings
    include JSON::Serializable

    # Optional properties
    @[JSON::Field(key: "title_length_too_long", type: Int32?, nillable: true, emit_null: false)]
    property title_length_too_long : Int32?

    @[JSON::Field(key: "description_length_too_long", type: Int32?, nillable: true, emit_null: false)]
    property description_length_too_long : Int32?

    @[JSON::Field(key: "gender_invalid", type: Int32?, nillable: true, emit_null: false)]
    property gender_invalid : Int32?

    @[JSON::Field(key: "age_group_invalid", type: Int32?, nillable: true, emit_null: false)]
    property age_group_invalid : Int32?

    @[JSON::Field(key: "size_type_invalid", type: Int32?, nillable: true, emit_null: false)]
    property size_type_invalid : Int32?

    @[JSON::Field(key: "link_format_warning", type: Int32?, nillable: true, emit_null: false)]
    property link_format_warning : Int32?

    @[JSON::Field(key: "duplicate_products", type: Int32?, nillable: true, emit_null: false)]
    property duplicate_products : Int32?

    @[JSON::Field(key: "duplicate_links", type: Int32?, nillable: true, emit_null: false)]
    property duplicate_links : Int32?

    @[JSON::Field(key: "sales_price_invalid", type: Int32?, nillable: true, emit_null: false)]
    property sales_price_invalid : Int32?

    @[JSON::Field(key: "product_category_depth_warning", type: Int32?, nillable: true, emit_null: false)]
    property product_category_depth_warning : Int32?

    @[JSON::Field(key: "adwords_same_as_link", type: Int32?, nillable: true, emit_null: false)]
    property adwords_same_as_link : Int32?

    @[JSON::Field(key: "duplicate_headers", type: Int32?, nillable: true, emit_null: false)]
    property duplicate_headers : Int32?

    @[JSON::Field(key: "fetch_same_signature", type: Int32?, nillable: true, emit_null: false)]
    property fetch_same_signature : Int32?

    @[JSON::Field(key: "adwords_format_warning", type: Int32?, nillable: true, emit_null: false)]
    property adwords_format_warning : Int32?

    @[JSON::Field(key: "additional_image_link_warning", type: Int32?, nillable: true, emit_null: false)]
    property additional_image_link_warning : Int32?

    @[JSON::Field(key: "image_link_warning", type: Int32?, nillable: true, emit_null: false)]
    property image_link_warning : Int32?

    @[JSON::Field(key: "shipping_invalid", type: Int32?, nillable: true, emit_null: false)]
    property shipping_invalid : Int32?

    @[JSON::Field(key: "tax_invalid", type: Int32?, nillable: true, emit_null: false)]
    property tax_invalid : Int32?

    @[JSON::Field(key: "shipping_weight_invalid", type: Int32?, nillable: true, emit_null: false)]
    property shipping_weight_invalid : Int32?

    @[JSON::Field(key: "expiration_date_invalid", type: Int32?, nillable: true, emit_null: false)]
    property expiration_date_invalid : Int32?

    @[JSON::Field(key: "availability_date_invalid", type: Int32?, nillable: true, emit_null: false)]
    property availability_date_invalid : Int32?

    @[JSON::Field(key: "sale_date_invalid", type: Int32?, nillable: true, emit_null: false)]
    property sale_date_invalid : Int32?

    @[JSON::Field(key: "weight_unit_invalid", type: Int32?, nillable: true, emit_null: false)]
    property weight_unit_invalid : Int32?

    @[JSON::Field(key: "is_bundle_invalid", type: Int32?, nillable: true, emit_null: false)]
    property is_bundle_invalid : Int32?

    @[JSON::Field(key: "updated_time_invalid", type: Int32?, nillable: true, emit_null: false)]
    property updated_time_invalid : Int32?

    @[JSON::Field(key: "custom_label_length_too_long", type: Int32?, nillable: true, emit_null: false)]
    property custom_label_length_too_long : Int32?

    @[JSON::Field(key: "product_type_length_too_long", type: Int32?, nillable: true, emit_null: false)]
    property product_type_length_too_long : Int32?

    @[JSON::Field(key: "too_many_additional_image_links", type: Int32?, nillable: true, emit_null: false)]
    property too_many_additional_image_links : Int32?

    @[JSON::Field(key: "multipack_invalid", type: Int32?, nillable: true, emit_null: false)]
    property multipack_invalid : Int32?

    @[JSON::Field(key: "indexed_product_count_large_delta", type: Int32?, nillable: true, emit_null: false)]
    property indexed_product_count_large_delta : Int32?

    @[JSON::Field(key: "item_additional_image_download_failure", type: Int32?, nillable: true, emit_null: false)]
    property item_additional_image_download_failure : Int32?

    @[JSON::Field(key: "optional_product_category_missing", type: Int32?, nillable: true, emit_null: false)]
    property optional_product_category_missing : Int32?

    @[JSON::Field(key: "optional_product_category_invalid", type: Int32?, nillable: true, emit_null: false)]
    property optional_product_category_invalid : Int32?

    @[JSON::Field(key: "optional_condition_missing", type: Int32?, nillable: true, emit_null: false)]
    property optional_condition_missing : Int32?

    @[JSON::Field(key: "optional_condition_invalid", type: Int32?, nillable: true, emit_null: false)]
    property optional_condition_invalid : Int32?

    @[JSON::Field(key: "ios_deep_link_invalid", type: Int32?, nillable: true, emit_null: false)]
    property ios_deep_link_invalid : Int32?

    @[JSON::Field(key: "android_deep_link_invalid", type: Int32?, nillable: true, emit_null: false)]
    property android_deep_link_invalid : Int32?

    @[JSON::Field(key: "availability_normalized", type: Int32?, nillable: true, emit_null: false)]
    property availability_normalized : Int32?

    @[JSON::Field(key: "condition_normalized", type: Int32?, nillable: true, emit_null: false)]
    property condition_normalized : Int32?

    @[JSON::Field(key: "gender_normalized", type: Int32?, nillable: true, emit_null: false)]
    property gender_normalized : Int32?

    @[JSON::Field(key: "size_type_normalized", type: Int32?, nillable: true, emit_null: false)]
    property size_type_normalized : Int32?

    @[JSON::Field(key: "age_group_normalized", type: Int32?, nillable: true, emit_null: false)]
    property age_group_normalized : Int32?

    @[JSON::Field(key: "utm_source_auto_corrected", type: Int32?, nillable: true, emit_null: false)]
    property utm_source_auto_corrected : Int32?

    @[JSON::Field(key: "country_does_not_map_to_currency", type: Int32?, nillable: true, emit_null: false)]
    property country_does_not_map_to_currency : Int32?

    @[JSON::Field(key: "min_ad_price_invalid", type: Int32?, nillable: true, emit_null: false)]
    property min_ad_price_invalid : Int32?

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(@title_length_too_long : Int32?, @description_length_too_long : Int32?, @gender_invalid : Int32?, @age_group_invalid : Int32?, @size_type_invalid : Int32?, @link_format_warning : Int32?, @duplicate_products : Int32?, @duplicate_links : Int32?, @sales_price_invalid : Int32?, @product_category_depth_warning : Int32?, @adwords_same_as_link : Int32?, @duplicate_headers : Int32?, @fetch_same_signature : Int32?, @adwords_format_warning : Int32?, @additional_image_link_warning : Int32?, @image_link_warning : Int32?, @shipping_invalid : Int32?, @tax_invalid : Int32?, @shipping_weight_invalid : Int32?, @expiration_date_invalid : Int32?, @availability_date_invalid : Int32?, @sale_date_invalid : Int32?, @weight_unit_invalid : Int32?, @is_bundle_invalid : Int32?, @updated_time_invalid : Int32?, @custom_label_length_too_long : Int32?, @product_type_length_too_long : Int32?, @too_many_additional_image_links : Int32?, @multipack_invalid : Int32?, @indexed_product_count_large_delta : Int32?, @item_additional_image_download_failure : Int32?, @optional_product_category_missing : Int32?, @optional_product_category_invalid : Int32?, @optional_condition_missing : Int32?, @optional_condition_invalid : Int32?, @ios_deep_link_invalid : Int32?, @android_deep_link_invalid : Int32?, @availability_normalized : Int32?, @condition_normalized : Int32?, @gender_normalized : Int32?, @size_type_normalized : Int32?, @age_group_normalized : Int32?, @utm_source_auto_corrected : Int32?, @country_does_not_map_to_currency : Int32?, @min_ad_price_invalid : Int32?)
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array(String).new
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      true
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.same?(o)
      self.class == o.class &&
          title_length_too_long == o.title_length_too_long &&
          description_length_too_long == o.description_length_too_long &&
          gender_invalid == o.gender_invalid &&
          age_group_invalid == o.age_group_invalid &&
          size_type_invalid == o.size_type_invalid &&
          link_format_warning == o.link_format_warning &&
          duplicate_products == o.duplicate_products &&
          duplicate_links == o.duplicate_links &&
          sales_price_invalid == o.sales_price_invalid &&
          product_category_depth_warning == o.product_category_depth_warning &&
          adwords_same_as_link == o.adwords_same_as_link &&
          duplicate_headers == o.duplicate_headers &&
          fetch_same_signature == o.fetch_same_signature &&
          adwords_format_warning == o.adwords_format_warning &&
          additional_image_link_warning == o.additional_image_link_warning &&
          image_link_warning == o.image_link_warning &&
          shipping_invalid == o.shipping_invalid &&
          tax_invalid == o.tax_invalid &&
          shipping_weight_invalid == o.shipping_weight_invalid &&
          expiration_date_invalid == o.expiration_date_invalid &&
          availability_date_invalid == o.availability_date_invalid &&
          sale_date_invalid == o.sale_date_invalid &&
          weight_unit_invalid == o.weight_unit_invalid &&
          is_bundle_invalid == o.is_bundle_invalid &&
          updated_time_invalid == o.updated_time_invalid &&
          custom_label_length_too_long == o.custom_label_length_too_long &&
          product_type_length_too_long == o.product_type_length_too_long &&
          too_many_additional_image_links == o.too_many_additional_image_links &&
          multipack_invalid == o.multipack_invalid &&
          indexed_product_count_large_delta == o.indexed_product_count_large_delta &&
          item_additional_image_download_failure == o.item_additional_image_download_failure &&
          optional_product_category_missing == o.optional_product_category_missing &&
          optional_product_category_invalid == o.optional_product_category_invalid &&
          optional_condition_missing == o.optional_condition_missing &&
          optional_condition_invalid == o.optional_condition_invalid &&
          ios_deep_link_invalid == o.ios_deep_link_invalid &&
          android_deep_link_invalid == o.android_deep_link_invalid &&
          availability_normalized == o.availability_normalized &&
          condition_normalized == o.condition_normalized &&
          gender_normalized == o.gender_normalized &&
          size_type_normalized == o.size_type_normalized &&
          age_group_normalized == o.age_group_normalized &&
          utm_source_auto_corrected == o.utm_source_auto_corrected &&
          country_does_not_map_to_currency == o.country_does_not_map_to_currency &&
          min_ad_price_invalid == o.min_ad_price_invalid
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    def hash
      [title_length_too_long, description_length_too_long, gender_invalid, age_group_invalid, size_type_invalid, link_format_warning, duplicate_products, duplicate_links, sales_price_invalid, product_category_depth_warning, adwords_same_as_link, duplicate_headers, fetch_same_signature, adwords_format_warning, additional_image_link_warning, image_link_warning, shipping_invalid, tax_invalid, shipping_weight_invalid, expiration_date_invalid, availability_date_invalid, sale_date_invalid, weight_unit_invalid, is_bundle_invalid, updated_time_invalid, custom_label_length_too_long, product_type_length_too_long, too_many_additional_image_links, multipack_invalid, indexed_product_count_large_delta, item_additional_image_download_failure, optional_product_category_missing, optional_product_category_invalid, optional_condition_missing, optional_condition_invalid, ios_deep_link_invalid, android_deep_link_invalid, availability_normalized, condition_normalized, gender_normalized, size_type_normalized, age_group_normalized, utm_source_auto_corrected, country_does_not_map_to_currency, min_ad_price_invalid].hash
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def self.build_from_hash(attributes)
      new.build_from_hash(attributes)
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def build_from_hash(attributes)
      return nil unless attributes.is_a?(Hash)
      self.class.openapi_types.each_pair do |key, type|
        if !attributes[self.class.attribute_map[key]]? && self.class.openapi_nullable.includes?(key)
          self.send("#{key}=", nil)
        elsif type =~ /\AArray<(.*)>/i
          # check to ensure the input is an array given that the attribute
          # is documented as an array but the input is not
          if attributes[self.class.attribute_map[key]].is_a?(Array)
            self.send("#{key}=", attributes[self.class.attribute_map[key]].map { |v| _deserialize($1, v) })
          end
        elsif !attributes[self.class.attribute_map[key]].nil?
          self.send("#{key}=", _deserialize(type, attributes[self.class.attribute_map[key]]))
        end
      end

      self
    end

    # Deserializes the data based on type
    # @param string type Data type
    # @param string value Value to be deserialized
    # @return [Object] Deserialized data
    def _deserialize(type, value)
      case type.to_sym
      when :Time
        Time.parse(value)
      when :Date
        Date.parse(value)
      when :String
        value.to_s
      when :Integer
        value.to_i
      when :Float
        value.to_f
      when :Boolean
        if value.to_s =~ /\A(true|t|yes|y|1)\z/i
          true
        else
          false
        end
      when :Object
        # generic object (usually a Hash), return directly
        value
      when /\AArray<(?<inner_type>.+)>\z/
        inner_type = Regexp.last_match[:inner_type]
        value.map { |v| _deserialize(inner_type, v) }
      when /\AHash<(?<k_type>.+?), (?<v_type>.+)>\z/
        k_type = Regexp.last_match[:k_type]
        v_type = Regexp.last_match[:v_type]
        ({} of Symbol => String).tap do |hash|
          value.each do |k, v|
            hash[_deserialize(k_type, k)] = _deserialize(v_type, v)
          end
        end
      else # model
        # models (e.g. Pet) or oneOf
        klass = .const_get(type)
        klass.respond_to?(:openapi_one_of) ? klass.build(value) : klass.build_from_hash(value)
      end
    end

    # Returns the string representation of the object
    # @return [String] String presentation of the object
    def to_s
      to_hash.to_s
    end

    # to_body is an alias to to_hash (backward compatibility)
    # @return [Hash] Returns the object in the form of hash
    def to_body
      to_hash
    end

    # Returns the object in the form of hash
    # @return [Hash] Returns the object in the form of hash
    def to_hash
      hash = {} of Symbol => String
      self.class.attribute_map.each_pair do |attr, param|
        value = self.send(attr)
        if value.nil?
          is_nullable = self.class.openapi_nullable.includes?(attr)
          next if !is_nullable || (is_nullable && !instance_variable_defined?(:"@#{attr}"))
        end

        hash[param] = _to_hash(value)
      end
      hash
    end

    # Outputs non-array value in the form of hash
    # For object, use to_hash. Otherwise, just return the value
    # @param [Object] value Any valid value
    # @return [Hash] Returns the value in the form of hash
    def _to_hash(value)
      if value.is_a?(Array)
        value.compact.map { |v| _to_hash(v) }
      elsif value.is_a?(Hash)
        ({} of Symbol => String).tap do |hash|
          value.each { |k, v| hash[k] = _to_hash(v) }
        end
      elsif value.respond_to? :to_hash
        value.to_hash
      else
        value
      end
    end

  end

end
