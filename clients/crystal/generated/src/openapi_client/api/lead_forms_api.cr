# #Pinterest REST API
#
##Pinterest's REST API
#
#The version of the OpenAPI document: 5.12.0
#Contact: blah+oapicf@cliffano.com
#Generated by: https://openapi-generator.tech
#Generator version: 7.4.0
#

require "uri"

module OpenAPIClient
  class LeadFormsApi
    property api_client : ApiClient

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get lead form by id
    # Gets a lead form given it's ID. It must also be associated with the provided ad account ID. Retrieving an advertiser's lead form will only contain results if you're a part of the Lead ads beta. If you're interested in joining the beta, please reach out to your Pinterest account manager.
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @param lead_form_id [String] Unique identifier of a lead form.
    # @return [LeadFormResponse]
    def lead_form_get(ad_account_id : String, lead_form_id : String)
      data, _status_code, _headers = lead_form_get_with_http_info(ad_account_id, lead_form_id)
      data
    end

    # Get lead form by id
    # Gets a lead form given it&#39;s ID. It must also be associated with the provided ad account ID. Retrieving an advertiser&#39;s lead form will only contain results if you&#39;re a part of the Lead ads beta. If you&#39;re interested in joining the beta, please reach out to your Pinterest account manager.
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @param lead_form_id [String] Unique identifier of a lead form.
    # @return [Array<(LeadFormResponse, Integer, Hash)>] LeadFormResponse data, response status code and response headers
    def lead_form_get_with_http_info(ad_account_id : String, lead_form_id : String)
      if @api_client.config.debugging
        Log.debug {"Calling API: LeadFormsApi.lead_form_get ..."}
      end
      # verify the required parameter "ad_account_id" is set
      if @api_client.config.client_side_validation && ad_account_id.nil?
        raise ArgumentError.new("Missing the required parameter 'ad_account_id' when calling LeadFormsApi.lead_form_get")
      end
      if @api_client.config.client_side_validation && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling LeadFormsApi.lead_form_get, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling LeadFormsApi.lead_form_get, must conform to the pattern #{pattern}.")
      end

      # verify the required parameter "lead_form_id" is set
      if @api_client.config.client_side_validation && lead_form_id.nil?
        raise ArgumentError.new("Missing the required parameter 'lead_form_id' when calling LeadFormsApi.lead_form_get")
      end
      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && lead_form_id !~ pattern
        raise ArgumentError.new("invalid value for \"lead_form_id\" when calling LeadFormsApi.lead_form_get, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/ad_accounts/{ad_account_id}/lead_forms/{lead_form_id}".sub("{" + "ad_account_id" + "}", URI.encode_path(ad_account_id.to_s)).sub("{" + "lead_form_id" + "}", URI.encode_path(lead_form_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "LeadFormResponse"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"LeadFormsApi.lead_form_get",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: LeadFormsApi#lead_form_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return LeadFormResponse.from_json(data), status_code, headers
    end

    # Create lead form test data
    # Create lead form test data based on the list of answers provided as part of the body. - List of answers should follow the questions creation order.  <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/new/about-beta-access/'>Learn more</a>.</strong>
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @param lead_form_id [String] Unique identifier of a lead form.
    # @param lead_form_test_request [LeadFormTestRequest] Subscription to create.
    # @return [LeadFormTestResponse]
    def lead_form_test_create(ad_account_id : String, lead_form_id : String, lead_form_test_request : LeadFormTestRequest)
      data, _status_code, _headers = lead_form_test_create_with_http_info(ad_account_id, lead_form_id, lead_form_test_request)
      data
    end

    # Create lead form test data
    # Create lead form test data based on the list of answers provided as part of the body. - List of answers should follow the questions creation order.  &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/new/about-beta-access/&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @param lead_form_id [String] Unique identifier of a lead form.
    # @param lead_form_test_request [LeadFormTestRequest] Subscription to create.
    # @return [Array<(LeadFormTestResponse, Integer, Hash)>] LeadFormTestResponse data, response status code and response headers
    def lead_form_test_create_with_http_info(ad_account_id : String, lead_form_id : String, lead_form_test_request : LeadFormTestRequest)
      if @api_client.config.debugging
        Log.debug {"Calling API: LeadFormsApi.lead_form_test_create ..."}
      end
      # verify the required parameter "ad_account_id" is set
      if @api_client.config.client_side_validation && ad_account_id.nil?
        raise ArgumentError.new("Missing the required parameter 'ad_account_id' when calling LeadFormsApi.lead_form_test_create")
      end
      if @api_client.config.client_side_validation && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling LeadFormsApi.lead_form_test_create, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling LeadFormsApi.lead_form_test_create, must conform to the pattern #{pattern}.")
      end

      # verify the required parameter "lead_form_id" is set
      if @api_client.config.client_side_validation && lead_form_id.nil?
        raise ArgumentError.new("Missing the required parameter 'lead_form_id' when calling LeadFormsApi.lead_form_test_create")
      end
      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && lead_form_id !~ pattern
        raise ArgumentError.new("invalid value for \"lead_form_id\" when calling LeadFormsApi.lead_form_test_create, must conform to the pattern #{pattern}.")
      end

      # verify the required parameter "lead_form_test_request" is set
      if @api_client.config.client_side_validation && lead_form_test_request.nil?
        raise ArgumentError.new("Missing the required parameter 'lead_form_test_request' when calling LeadFormsApi.lead_form_test_create")
      end
      # resource path
      local_var_path = "/ad_accounts/{ad_account_id}/lead_forms/{lead_form_id}/test".sub("{" + "ad_account_id" + "}", URI.encode_path(ad_account_id.to_s)).sub("{" + "lead_form_id" + "}", URI.encode_path(lead_form_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = lead_form_test_request.to_json

      # return_type
      return_type = "LeadFormTestResponse"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:POST,
                                                        local_var_path,
                                                        :"LeadFormsApi.lead_form_test_create",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: LeadFormsApi#lead_form_test_create\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return LeadFormTestResponse.from_json(data), status_code, headers
    end

    # Get lead forms
    # Gets all Lead Forms associated with an ad account ID. Retrieving an advertiser's list of lead forms will only contain results if you're a part of the Lead ads beta.  If you're interested in joining the beta, please reach out to your Pinterest account manager.
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @return [LeadFormsList200Response]
    def lead_forms_list(ad_account_id : String, page_size : Int32?, order : String?, bookmark : String?)
      data, _status_code, _headers = lead_forms_list_with_http_info(ad_account_id, page_size, order, bookmark)
      data
    end

    # Get lead forms
    # Gets all Lead Forms associated with an ad account ID. Retrieving an advertiser&#39;s list of lead forms will only contain results if you&#39;re a part of the Lead ads beta.  If you&#39;re interested in joining the beta, please reach out to your Pinterest account manager.
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @return [Array<(LeadFormsList200Response, Integer, Hash)>] LeadFormsList200Response data, response status code and response headers
    def lead_forms_list_with_http_info(ad_account_id : String, page_size : Int32?, order : String?, bookmark : String?)
      if @api_client.config.debugging
        Log.debug {"Calling API: LeadFormsApi.lead_forms_list ..."}
      end
      # verify the required parameter "ad_account_id" is set
      if @api_client.config.client_side_validation && ad_account_id.nil?
        raise ArgumentError.new("Missing the required parameter 'ad_account_id' when calling LeadFormsApi.lead_forms_list")
      end
      if @api_client.config.client_side_validation && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling LeadFormsApi.lead_forms_list, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling LeadFormsApi.lead_forms_list, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 250
        raise ArgumentError.new("invalid value for \"page_size\" when calling LeadFormsApi.lead_forms_list, must be smaller than or equal to 250.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling LeadFormsApi.lead_forms_list, must be greater than or equal to 1.")
      end

      allowable_values = ["ASCENDING", "DESCENDING"]
      if @api_client.config.client_side_validation && order && !allowable_values.includes?(order)
        raise ArgumentError.new("invalid value for \"order\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/ad_accounts/{ad_account_id}/lead_forms".sub("{" + "ad_account_id" + "}", URI.encode_path(ad_account_id.to_s))

      # query parameters
      query_params = Hash(String, String).new
      query_params["page_size"] = page_size.to_s unless page_size.nil?
      query_params["order"] = order.to_s unless order.nil?
      query_params["bookmark"] = bookmark.to_s unless bookmark.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "LeadFormsList200Response"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"LeadFormsApi.lead_forms_list",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: LeadFormsApi#lead_forms_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return LeadFormsList200Response.from_json(data), status_code, headers
    end
  end
end
