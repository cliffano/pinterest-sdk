#import "OAICatalogsFeedValidationErrors.h"

@implementation OAICatalogsFeedValidationErrors

- (instancetype)init {
  self = [super init];
  if (self) {
    // initialize property's default value, if any
    
  }
  return self;
}


/**
 * Maps json key to property name.
 * This method is used by `JSONModel`.
 */
+ (JSONKeyMapper *)keyMapper {
  return [[JSONKeyMapper alloc] initWithModelToJSONDictionary:@{ @"fETCHERROR": @"FETCH_ERROR", @"fETCHINACTIVEFEEDERROR": @"FETCH_INACTIVE_FEED_ERROR", @"eNCODINGERROR": @"ENCODING_ERROR", @"dELIMITERERROR": @"DELIMITER_ERROR", @"rEQUIREDCOLUMNSMISSING": @"REQUIRED_COLUMNS_MISSING", @"dUPLICATEPRODUCTS": @"DUPLICATE_PRODUCTS", @"iMAGELINKINVALID": @"IMAGE_LINK_INVALID", @"iTEMIDMISSING": @"ITEMID_MISSING", @"tITLEMISSING": @"TITLE_MISSING", @"dESCRIPTIONMISSING": @"DESCRIPTION_MISSING", @"pRODUCTLINKMISSING": @"PRODUCT_LINK_MISSING", @"iMAGELINKMISSING": @"IMAGE_LINK_MISSING", @"aVAILABILITYINVALID": @"AVAILABILITY_INVALID", @"pRODUCTPRICEINVALID": @"PRODUCT_PRICE_INVALID", @"lINKFORMATINVALID": @"LINK_FORMAT_INVALID", @"pARSELINEERROR": @"PARSE_LINE_ERROR", @"aDWORDSFORMATINVALID": @"ADWORDS_FORMAT_INVALID", @"iNTERNALSERVICEERROR": @"INTERNAL_SERVICE_ERROR", @"nOVERIFIEDDOMAIN": @"NO_VERIFIED_DOMAIN", @"aDULTINVALID": @"ADULT_INVALID", @"iMAGELINKLENGTHTOOLONG": @"IMAGE_LINK_LENGTH_TOO_LONG", @"iNVALIDDOMAIN": @"INVALID_DOMAIN", @"fEEDLENGTHTOOLONG": @"FEED_LENGTH_TOO_LONG", @"lINKLENGTHTOOLONG": @"LINK_LENGTH_TOO_LONG", @"mALFORMEDXML": @"MALFORMED_XML", @"pRICEMISSING": @"PRICE_MISSING", @"fEEDTOOSMALL": @"FEED_TOO_SMALL", @"mAXITEMSPERITEMGROUPEXCEEDED": @"MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED", @"iTEMMAINIMAGEDOWNLOADFAILURE": @"ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE", @"pINJOINCONTENTUNSAFE": @"PINJOIN_CONTENT_UNSAFE", @"bLOCKLISTEDIMAGESIGNATURE": @"BLOCKLISTED_IMAGE_SIGNATURE", @"lISTPRICEINVALID": @"LIST_PRICE_INVALID", @"pRICECANNOTBEDETERMINED": @"PRICE_CANNOT_BE_DETERMINED" }];
}

/**
 * Indicates whether the property with the given name is optional.
 * If `propertyName` is optional, then return `YES`, otherwise return `NO`.
 * This method is used by `JSONModel`.
 */
+ (BOOL)propertyIsOptional:(NSString *)propertyName {

  NSArray *optionalProperties = @[@"fETCHERROR", @"fETCHINACTIVEFEEDERROR", @"eNCODINGERROR", @"dELIMITERERROR", @"rEQUIREDCOLUMNSMISSING", @"dUPLICATEPRODUCTS", @"iMAGELINKINVALID", @"iTEMIDMISSING", @"tITLEMISSING", @"dESCRIPTIONMISSING", @"pRODUCTLINKMISSING", @"iMAGELINKMISSING", @"aVAILABILITYINVALID", @"pRODUCTPRICEINVALID", @"lINKFORMATINVALID", @"pARSELINEERROR", @"aDWORDSFORMATINVALID", @"iNTERNALSERVICEERROR", @"nOVERIFIEDDOMAIN", @"aDULTINVALID", @"iMAGELINKLENGTHTOOLONG", @"iNVALIDDOMAIN", @"fEEDLENGTHTOOLONG", @"lINKLENGTHTOOLONG", @"mALFORMEDXML", @"pRICEMISSING", @"fEEDTOOSMALL", @"mAXITEMSPERITEMGROUPEXCEEDED", @"iTEMMAINIMAGEDOWNLOADFAILURE", @"pINJOINCONTENTUNSAFE", @"bLOCKLISTEDIMAGESIGNATURE", @"lISTPRICEINVALID", @"pRICECANNOTBEDETERMINED"];
  return [optionalProperties containsObject:propertyName];
}

@end
