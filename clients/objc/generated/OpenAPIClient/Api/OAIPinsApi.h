#import <Foundation/Foundation.h>
#import "OAIAnalyticsMetricsResponse.h"
#import "OAIError.h"
#import "OAIPin.h"
#import "OAIApi.h"

/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.3.0
* Contact: pinterest-api@pinterest.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/



@interface OAIPinsApi: NSObject <OAIApi>

extern NSString* kOAIPinsApiErrorDomain;
extern NSInteger kOAIPinsApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(OAIApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Get Pin analytics
/// Get analytics for a Pin owned by the \"operation user_account\" - or on a group board that has been shared with this account. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\"https://developers.pinterest.com/docs/api/v5/#operation/ad_accounts/list\">List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account:  - For Pins on public or protected boards: Admin, Analyst. - For Pins on secret boards: Admin.
///
/// @param pinId Unique identifier of a Pin.
/// @param startDate Metric report start date (UTC). Format: YYYY-MM-DD
/// @param endDate Metric report end date (UTC). Format: YYYY-MM-DD
/// @param metricTypes Pin metric types to get data for, default is all.
/// @param appTypes Apps or devices to get data for, default is all. (optional) (default to @"ALL")
/// @param splitField How to split the data into groups. Not including this param means data won&#39;t be split. (optional) (default to @"NO_SPLIT")
/// @param adAccountId Unique identifier of an ad account. (optional)
/// 
///  code:200 message:"response",
///  code:403 message:"Not authorized to access board or Pin.",
///  code:404 message:"Pin not found.",
///  code:0 message:"Unexpected error"
///
/// @return NSDictionary<OAIAnalyticsMetricsResponse>*
-(NSURLSessionTask*) pinsAnalyticsWithPinId: (NSString*) pinId
    startDate: (NSDate*) startDate
    endDate: (NSDate*) endDate
    metricTypes: (NSArray<NSString*>*) metricTypes
    appTypes: (NSString*) appTypes
    splitField: (NSString*) splitField
    adAccountId: (NSString*) adAccountId
    completionHandler: (void (^)(NSDictionary<OAIAnalyticsMetricsResponse>* output, NSError* error)) handler;


/// Create Pin
/// Create a Pin on a board or board section owned by the \"operation user_account\".  Note: If the current \"operation user_account\" (defined by the access token) has access to another user's Ad Accounts via Pinterest Business Access, you can modify your request to make use of the current operation_user_account's permissions to those Ad Accounts by including the ad_account_id in the path parameters for the request (e.g. .../?ad_account_id=12345&...).  - This function is intended solely for publishing new content created by the user. If you are interested in saving content created by others to your Pinterest boards, sometimes called 'curated content', please use our <a href='/docs/add-ons/save-button'>Save button</a> instead. For more tips on creating fresh content for Pinterest, review our <a href='/docs/solutions/content-apps'>Content App Solutions Guide</a>.  <strong><a href='/docs/solutions/content-apps/#creatingvideopins'>Learn more</a></strong> about video Pin creation.
///
/// @param pin Create a new Pin.
/// 
///  code:201 message:"Successful pin creation.",
///  code:400 message:"Invalid Pin parameters response",
///  code:403 message:"The Pin's image is too small, too large or is broken",
///  code:404 message:"Board or section not found",
///  code:429 message:"This request exceeded a rate limit. This can happen if the client exceeds one of the published rate limits or if multiple write operations are applied to an object within a short time window.",
///  code:0 message:"Unexpected error"
///
/// @return OAIPin*
-(NSURLSessionTask*) pinsCreateWithPin: (OAIPin*) pin
    completionHandler: (void (^)(OAIPin* output, NSError* error)) handler;


/// Delete Pin
/// Delete a Pins owned by the \"operation user_account\" - or on a group board that has been shared with this account. - By default, the \"operation user_account\" is the token user_account.
///
/// @param pinId Unique identifier of a Pin.
/// 
///  code:204 message:"Successfully deleted Pin",
///  code:403 message:"Not authorized to access board or Pin.",
///  code:404 message:"Pin not found.",
///  code:0 message:"Unexpected error"
///
/// @return void
-(NSURLSessionTask*) pinsDeleteWithPinId: (NSString*) pinId
    completionHandler: (void (^)(NSError* error)) handler;


/// Get Pin
/// Get a Pin owned by the \"operation user_account\" - or on a group board that has been shared with this account. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account:  - For Pins on public or protected boards: Owner, Admin, Analyst, Campaign Manager. - For Pins on secret boards: Owner, Admin.
///
/// @param pinId Unique identifier of a Pin.
/// @param adAccountId Unique identifier of an ad account. (optional)
/// 
///  code:200 message:"response",
///  code:403 message:"Not authorized to access board or Pin.",
///  code:404 message:"Pin not found.",
///  code:0 message:"Unexpected error"
///
/// @return OAIPin*
-(NSURLSessionTask*) pinsGetWithPinId: (NSString*) pinId
    adAccountId: (NSString*) adAccountId
    completionHandler: (void (^)(OAIPin* output, NSError* error)) handler;



@end
