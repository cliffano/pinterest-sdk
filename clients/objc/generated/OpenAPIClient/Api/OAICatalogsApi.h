#import <Foundation/Foundation.h>
#import "OAICatalogsFeed.h"
#import "OAICatalogsFeedsCreateRequest.h"
#import "OAICatalogsFeedsUpdateRequest.h"
#import "OAICatalogsItems.h"
#import "OAICatalogsItemsBatch.h"
#import "OAICatalogsItemsBatchRequest.h"
#import "OAICatalogsProductGroup.h"
#import "OAICatalogsProductGroupCreateRequest.h"
#import "OAICatalogsProductGroupUpdateRequest.h"
#import "OAIError.h"
#import "OAIPaginated.h"
#import "OAIApi.h"

/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.3.0
* Contact: pinterest-api@pinterest.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/



@interface OAICatalogsApi: NSObject <OAIApi>

extern NSString* kOAICatalogsApiErrorDomain;
extern NSInteger kOAICatalogsApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(OAIApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Create product group
/// <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/api/v5/#tag/Understanding-catalog-management'>Learn more</a>.</strong>  Create product group to use in Catalogs.
///
/// @param catalogsProductGroupCreateRequest Request object used to created a catalogs product group.
/// 
///  code:201 message:"Success",
///  code:400 message:"Invalid body.",
///  code:401 message:"Unauthorized access.",
///  code:403 message:"Forbidden. Account not approved for feed mutations yet.",
///  code:409 message:"Conflict. Can't create this catalogs product group with this value.",
///  code:0 message:"Unexpected error."
///
/// @return NSObject*
-(NSURLSessionTask*) catalogsProductGroupsCreateWithCatalogsProductGroupCreateRequest: (OAICatalogsProductGroupCreateRequest*) catalogsProductGroupCreateRequest
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// Delete product group
/// <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/api/v5/#tag/Understanding-catalog-management'>Learn more</a>.</strong>  Delete a product group from being in use in Catalogs.
///
/// @param productGroupId Unique identifier of a product group
/// 
///  code:204 message:"Catalogs Product Group deleted successfully.",
///  code:400 message:"Invalid catalogs product group id parameters.",
///  code:401 message:"Unauthorized access.",
///  code:403 message:"Forbidden. Account not approved for feed mutations yet.",
///  code:404 message:"Catalogs product group not found.",
///  code:409 message:"Conflict. Can't delete this catalogs product group.",
///  code:0 message:"Unexpected error."
///
/// @return void
-(NSURLSessionTask*) catalogsProductGroupsDeleteWithProductGroupId: (NSString*) productGroupId
    completionHandler: (void (^)(NSError* error)) handler;


/// Get product groups list
/// <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/api/v5/#tag/Understanding-catalog-management'>Learn more</a>.</strong>  Get a list of product groups for a given Catalogs Feed Id.
///
/// @param feedId Unique identifier of a feed
/// @param bookmark Cursor used to fetch the next page of items (optional)
/// @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Pagination&#39;&gt;Pagination&lt;/a&gt; for more information. (optional) (default to @25)
/// 
///  code:200 message:"Success",
///  code:400 message:"Invalid feed parameters.",
///  code:401 message:"Unauthorized access.",
///  code:403 message:"Forbidden. Account not approved for feed mutations yet.",
///  code:404 message:"Data feed not found.",
///  code:409 message:"Conflict. Can't create this catalogs product group with this value.",
///  code:0 message:"Unexpected error."
///
/// @return OAIPaginated*
-(NSURLSessionTask*) catalogsProductGroupsListWithFeedId: (NSString*) feedId
    bookmark: (NSString*) bookmark
    pageSize: (NSNumber*) pageSize
    completionHandler: (void (^)(OAIPaginated* output, NSError* error)) handler;


/// Update product group
/// <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/api/v5/#tag/Understanding-catalog-management'>Learn more</a>.</strong>  Update product group to use in Catalogs.
///
/// @param productGroupId Unique identifier of a product group
/// @param catalogsProductGroupUpdateRequest Request object used to Update a catalogs product group.
/// 
///  code:200 message:"Success",
///  code:400 message:"Invalid parameters.",
///  code:401 message:"Unauthorized access.",
///  code:404 message:"Catalogs product group not found.",
///  code:409 message:"Conflict. Can't update this catalogs product group to this value.",
///  code:0 message:"Unexpected error."
///
/// @return OAICatalogsProductGroup*
-(NSURLSessionTask*) catalogsProductGroupsUpdateWithProductGroupId: (NSString*) productGroupId
    catalogsProductGroupUpdateRequest: (OAICatalogsProductGroupUpdateRequest*) catalogsProductGroupUpdateRequest
    completionHandler: (void (^)(OAICatalogsProductGroup* output, NSError* error)) handler;


/// List processing results for a given feed
/// <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/api/v5/#tag/Understanding-catalog-management'>Learn more</a>.</strong>  Fetch a feed processing results owned by the owner user account.
///
/// @param feedId Unique identifier of a feed
/// @param bookmark Cursor used to fetch the next page of items (optional)
/// @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Pagination&#39;&gt;Pagination&lt;/a&gt; for more information. (optional) (default to @25)
/// 
///  code:200 message:"Success",
///  code:400 message:"Invalid parameters.",
///  code:401 message:"Unauthorized access.",
///  code:404 message:"Feed not found.",
///  code:0 message:"Unexpected error."
///
/// @return OAIPaginated*
-(NSURLSessionTask*) feedProcessingResultsListWithFeedId: (NSString*) feedId
    bookmark: (NSString*) bookmark
    pageSize: (NSNumber*) pageSize
    completionHandler: (void (^)(OAIPaginated* output, NSError* error)) handler;


/// Create feed
/// <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/api/v5/#tag/Understanding-catalog-management'>Learn more</a>.</strong>  Create a new feed owned by the \"operating user_account\".
///
/// @param catalogsFeedsCreateRequest Request object used to created a feed.
/// 
///  code:201 message:"Success",
///  code:400 message:"Invalid feed parameters.",
///  code:401 message:"Unauthorized access.",
///  code:403 message:"Business account required.",
///  code:409 message:"User website required.",
///  code:422 message:"Unique feed name is required.",
///  code:0 message:"Unexpected error"
///
/// @return OAICatalogsFeed*
-(NSURLSessionTask*) feedsCreateWithCatalogsFeedsCreateRequest: (OAICatalogsFeedsCreateRequest*) catalogsFeedsCreateRequest
    completionHandler: (void (^)(OAICatalogsFeed* output, NSError* error)) handler;


/// Delete feed
/// <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/api/v5/#tag/Understanding-catalog-management'>Learn more</a>.</strong>  Delete a feed owned by the \"operating user_account\".
///
/// @param feedId Unique identifier of a feed
/// 
///  code:204 message:"Feed deleted successfully.",
///  code:400 message:"Invalid feed parameters.",
///  code:403 message:"Forbidden. Account not approved for feed mutations yet.",
///  code:404 message:"Data feed not found.",
///  code:409 message:"Conflict. Can't delete a feed with active promotions.",
///  code:0 message:"Unexpected error"
///
/// @return void
-(NSURLSessionTask*) feedsDeleteWithFeedId: (NSString*) feedId
    completionHandler: (void (^)(NSError* error)) handler;


/// Get feed
/// <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/api/v5/#tag/Understanding-catalog-management'>Learn more</a>.</strong>  Get a single feed owned by the \"operating user_account\".
///
/// @param feedId Unique identifier of a feed
/// 
///  code:200 message:"Success",
///  code:400 message:"Invalid feed parameters.",
///  code:401 message:"Unauthorized access.",
///  code:404 message:"Data feed not found.",
///  code:0 message:"Unexpected error."
///
/// @return OAICatalogsFeed*
-(NSURLSessionTask*) feedsGetWithFeedId: (NSString*) feedId
    completionHandler: (void (^)(OAICatalogsFeed* output, NSError* error)) handler;


/// List feeds
/// <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/api/v5/#tag/Understanding-catalog-management'>Learn more</a>.</strong>  Fetch feeds owned by the \"operating user_account\".
///
/// @param bookmark Cursor used to fetch the next page of items (optional)
/// @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Pagination&#39;&gt;Pagination&lt;/a&gt; for more information. (optional) (default to @25)
/// 
///  code:200 message:"Success",
///  code:400 message:"Invalid parameters.",
///  code:401 message:"Unauthorized access.",
///  code:0 message:"Unexpected error."
///
/// @return OAIPaginated*
-(NSURLSessionTask*) feedsListWithBookmark: (NSString*) bookmark
    pageSize: (NSNumber*) pageSize
    completionHandler: (void (^)(OAIPaginated* output, NSError* error)) handler;


/// Update feed
/// <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/api/v5/#tag/Understanding-catalog-management'>Learn more</a>.</strong>  Update a feed owned by the \"operating user_account\".
///
/// @param feedId Unique identifier of a feed
/// @param catalogsFeedsUpdateRequest Request object used to update a feed.
/// 
///  code:200 message:"Success",
///  code:400 message:"Invalid feed parameters.",
///  code:403 message:"Forbidden. Account not approved for feed mutations yet.",
///  code:404 message:"Data feed not found.",
///  code:0 message:"Unexpected error"
///
/// @return OAICatalogsFeed*
-(NSURLSessionTask*) feedsUpdateWithFeedId: (NSString*) feedId
    catalogsFeedsUpdateRequest: (OAICatalogsFeedsUpdateRequest*) catalogsFeedsUpdateRequest
    completionHandler: (void (^)(OAICatalogsFeed* output, NSError* error)) handler;


/// Get catalogs items batch
/// <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/api/v5/#tag/Understanding-catalog-management'>Learn more</a>.</strong>  Get a single catalogs items batch created by the \"operating user_account\".
///
/// @param batchId Id of a catalogs items batch to fetch
/// 
///  code:200 message:"Response containing the requested catalogs items batch",
///  code:401 message:"Not authorized to access catalogs items batch",
///  code:403 message:"Not authorized to access catalogs items batch",
///  code:404 message:"Catalogs items batch not found",
///  code:0 message:"Unexpected error"
///
/// @return OAICatalogsItemsBatch*
-(NSURLSessionTask*) itemsBatchGetWithBatchId: (NSString*) batchId
    completionHandler: (void (^)(OAICatalogsItemsBatch* output, NSError* error)) handler;


/// Perform an operation on an item batch
/// <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/api/v5/#tag/Understanding-catalog-management'>Learn more</a>.</strong>  This endpoint supports multiple operations on a set of one or more catalog items.
///
/// @param catalogsItemsBatchRequest Request object used to create catalogs items in a batch
/// 
///  code:200 message:"Response containing the requested catalogs items batch",
///  code:401 message:"Not authorized to post catalogs items",
///  code:403 message:"Not authorized to post catalogs items",
///  code:0 message:"Unexpected error"
///
/// @return OAICatalogsItemsBatch*
-(NSURLSessionTask*) itemsBatchPostWithCatalogsItemsBatchRequest: (OAICatalogsItemsBatchRequest*) catalogsItemsBatchRequest
    completionHandler: (void (^)(OAICatalogsItemsBatch* output, NSError* error)) handler;


/// Get catalogs items
/// Get the items of the catalog created by the \"operating user_account\"
///
/// @param country Country for the Catalogs Items
/// @param itemIds Catalos Item ids
/// @param language Language for the Catalogs Items
/// 
///  code:200 message:"Response containing the requested catalogs items",
///  code:401 message:"Not authorized to access catalogs items",
///  code:403 message:"Not authorized to access catalogs items",
///  code:0 message:"Unexpected error"
///
/// @return OAICatalogsItems*
-(NSURLSessionTask*) itemsGetWithCountry: (NSString*) country
    itemIds: (NSArray<NSString*>*) itemIds
    language: (NSString*) language
    completionHandler: (void (^)(OAICatalogsItems* output, NSError* error)) handler;



@end
