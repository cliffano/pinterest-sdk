/*
  Pinterest REST API

  Pinterest's REST API

  The version of the OpenAPI document: 5.3.0

  Contact: blah@cliffano.com

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools.services.catalogsservice;

import "google/protobuf/empty.proto";
import public "models/catalogs_feed.proto";
import public "models/catalogs_feeds_create_request.proto";
import public "models/catalogs_feeds_update_request.proto";
import public "models/catalogs_items.proto";
import public "models/catalogs_items_batch.proto";
import public "models/catalogs_items_batch_request.proto";
import public "models/catalogs_product_group.proto";
import public "models/catalogs_product_group_create_request.proto";
import public "models/catalogs_product_group_update_request.proto";
import public "models/error.proto";
import public "models/paginated.proto";
import public "models/todo_object_mapping.proto";

service CatalogsService {
  rpc CatalogsProductGroupsCreate (CatalogsProductGroupsCreateRequest) returns (TODO_OBJECT_MAPPING);

  rpc CatalogsProductGroupsDelete (CatalogsProductGroupsDeleteRequest) returns (google.protobuf.Empty);

  rpc CatalogsProductGroupsList (CatalogsProductGroupsListRequest) returns (Paginated);

  rpc CatalogsProductGroupsUpdate (CatalogsProductGroupsUpdateRequest) returns (CatalogsProductGroup);

  rpc FeedProcessingResultsList (FeedProcessingResultsListRequest) returns (Paginated);

  rpc FeedsCreate (FeedsCreateRequest) returns (CatalogsFeed);

  rpc FeedsDelete (FeedsDeleteRequest) returns (google.protobuf.Empty);

  rpc FeedsGet (FeedsGetRequest) returns (CatalogsFeed);

  rpc FeedsList (FeedsListRequest) returns (Paginated);

  rpc FeedsUpdate (FeedsUpdateRequest) returns (CatalogsFeed);

  rpc ItemsBatchGet (ItemsBatchGetRequest) returns (CatalogsItemsBatch);

  rpc ItemsBatchPost (ItemsBatchPostRequest) returns (CatalogsItemsBatch);

  rpc ItemsGet (ItemsGetRequest) returns (CatalogsItems);

}

message CatalogsProductGroupsCreateRequest {
  // Request object used to created a catalogs product group.
  CatalogsProductGroupCreateRequest catalogsProductGroupCreateRequest = 1;

}

message CatalogsProductGroupsDeleteRequest {
  // Unique identifier of a product group
  string productGroupId = 1;

}

message CatalogsProductGroupsListRequest {
  // Unique identifier of a feed
  string feedId = 1;
  // Cursor used to fetch the next page of items
  string bookmark = 2;
  // Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/api/v5/#tag/Pagination'>Pagination</a> for more information.
  int32 pageSize = 3;

}

message CatalogsProductGroupsUpdateRequest {
  // Unique identifier of a product group
  string productGroupId = 1;
  // Request object used to Update a catalogs product group.
  CatalogsProductGroupUpdateRequest catalogsProductGroupUpdateRequest = 2;

}

message FeedProcessingResultsListRequest {
  // Unique identifier of a feed
  string feedId = 1;
  // Cursor used to fetch the next page of items
  string bookmark = 2;
  // Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/api/v5/#tag/Pagination'>Pagination</a> for more information.
  int32 pageSize = 3;

}

message FeedsCreateRequest {
  // Request object used to created a feed.
  CatalogsFeedsCreateRequest catalogsFeedsCreateRequest = 1;

}

message FeedsDeleteRequest {
  // Unique identifier of a feed
  string feedId = 1;

}

message FeedsGetRequest {
  // Unique identifier of a feed
  string feedId = 1;

}

message FeedsListRequest {
  // Cursor used to fetch the next page of items
  string bookmark = 1;
  // Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/api/v5/#tag/Pagination'>Pagination</a> for more information.
  int32 pageSize = 2;

}

message FeedsUpdateRequest {
  // Unique identifier of a feed
  string feedId = 1;
  // Request object used to update a feed.
  CatalogsFeedsUpdateRequest catalogsFeedsUpdateRequest = 2;

}

message ItemsBatchGetRequest {
  // Id of a catalogs items batch to fetch
  string batchId = 1;

}

message ItemsBatchPostRequest {
  // Request object used to create catalogs items in a batch
  CatalogsItemsBatchRequest catalogsItemsBatchRequest = 1;

}

message ItemsGetRequest {
  // Country for the Catalogs Items
  string country = 1;
  // Catalos Item ids
  repeated string itemIds = 2;
  // Language for the Catalogs Items
  string language = 3;

}

