/*
  Pinterest REST API

  Pinterest's REST API

  The version of the OpenAPI document: 5.3.0

  Contact: blah@cliffano.com

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools.services.boardsservice;

import "google/protobuf/empty.proto";
import public "models/board.proto";
import public "models/board_section.proto";
import public "models/board_update.proto";
import public "models/error.proto";
import public "models/paginated.proto";
import public "models/todo_object_mapping.proto";

service BoardsService {
  rpc BoardSectionsCreate (BoardSectionsCreateRequest) returns (BoardSection);

  rpc BoardSectionsDelete (BoardSectionsDeleteRequest) returns (google.protobuf.Empty);

  rpc BoardSectionsList (BoardSectionsListRequest) returns (Paginated);

  rpc BoardSectionsListPins (BoardSectionsListPinsRequest) returns (Paginated);

  rpc BoardSectionsUpdate (BoardSectionsUpdateRequest) returns (BoardSection);

  rpc BoardsCreate (BoardsCreateRequest) returns (Board);

  rpc BoardsDelete (BoardsDeleteRequest) returns (google.protobuf.Empty);

  rpc BoardsGet (BoardsGetRequest) returns (Board);

  rpc BoardsList (BoardsListRequest) returns (Paginated);

  rpc BoardsListPins (BoardsListPinsRequest) returns (Paginated);

  rpc BoardsUpdate (BoardsUpdateRequest) returns (Board);

}

message BoardSectionsCreateRequest {
  // Unique identifier of a board.
  string boardId = 1;
  // Create a board section.
  BoardSection boardSection = 2;

}

message BoardSectionsDeleteRequest {
  // Unique identifier of a board.
  string boardId = 1;
  // Unique identifier of a board section.
  string sectionId = 2;

}

message BoardSectionsListRequest {
  // Unique identifier of a board.
  string boardId = 1;
  // Cursor used to fetch the next page of items
  string bookmark = 2;
  // Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/api/v5/#tag/Pagination'>Pagination</a> for more information.
  int32 pageSize = 3;

}

message BoardSectionsListPinsRequest {
  // Unique identifier of a board.
  string boardId = 1;
  // Unique identifier of a board section.
  string sectionId = 2;
  // Cursor used to fetch the next page of items
  string bookmark = 3;
  // Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/api/v5/#tag/Pagination'>Pagination</a> for more information.
  int32 pageSize = 4;

}

message BoardSectionsUpdateRequest {
  // Unique identifier of a board.
  string boardId = 1;
  // Unique identifier of a board section.
  string sectionId = 2;
  // Update a board section.
  BoardSection boardSection = 3;

}

message BoardsCreateRequest {
  // Create a board using a single board json object.
  Board board = 1;

}

message BoardsDeleteRequest {
  // Unique identifier of a board.
  string boardId = 1;

}

message BoardsGetRequest {
  // Unique identifier of a board.
  string boardId = 1;

}

message BoardsListRequest {
  // Cursor used to fetch the next page of items
  string bookmark = 1;
  // Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/api/v5/#tag/Pagination'>Pagination</a> for more information.
  int32 pageSize = 2;
  // Privacy setting for a board.
  string privacy = 3;

}

message BoardsListPinsRequest {
  // Unique identifier of a board.
  string boardId = 1;
  // Cursor used to fetch the next page of items
  string bookmark = 2;
  // Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/api/v5/#tag/Pagination'>Pagination</a> for more information.
  int32 pageSize = 3;

}

message BoardsUpdateRequest {
  // Unique identifier of a board.
  string boardId = 1;
  // Update a board.
  BoardUpdate boardUpdate = 2;

}

