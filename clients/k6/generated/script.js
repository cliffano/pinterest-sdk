/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * OpenAPI spec version: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://github.com/OpenAPITools/openapi-generator
 *
 * Generator version: 7.4.0
 */


import http from "k6/http";
import { group, check, sleep } from "k6";

const BASE_URL = "https://api.pinterest.com/v5";
// Sleep duration between successive requests.
// You might want to edit the value of this variable or remove calls to the sleep function on the script.
const SLEEP_DURATION = 0.1;
// Global variables should be initialized.

export default function() {
    group("/ad_accounts/{ad_account_id}/bulk/upsert", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: bulk_upsert/create
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/bulk/upsert`;
            // TODO: edit the parameters of the request body.
            let body = {"create": {"campaigns": "list", "adGroups": "list", "ads": "list", "productGroups": "list", "keywords": "list"}, "update": {"campaigns": "list", "adGroups": "list", "ads": "list", "productGroups": "list", "keywords": "list"}};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/resources/targeting/interests/{interest_id}", () => {
        let interestId = 'TODO_EDIT_THE_INTEREST_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: interest_targeting_options/get
        {
            let url = BASE_URL + `/resources/targeting/interests/${interest_id}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/search/boards", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let query = 'TODO_EDIT_THE_QUERY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: search_user_boards/get
        {
            let url = BASE_URL + `/search/boards?ad_account_id=${ad_account_id}&bookmark=${bookmark}&page_size=${page_size}&query=${query}`;
            let request = http.get(url);

            check(request, {
                "response": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/conversion_tags", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let filterDeleted = 'TODO_EDIT_THE_FILTER_DELETED'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: conversion_tags/list
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/conversion_tags?filter_deleted=${filter_deleted}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2: conversion_tags/create
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/conversion_tags`;
            // TODO: edit the parameters of the request body.
            let body = {"name": "string", "aemEnabled": "boolean", "mdFrequency": "bigdecimal", "aemFnlnEnabled": "boolean", "aemPhEnabled": "boolean", "aemGeEnabled": "boolean", "aemDbEnabled": "boolean", "aemLocEnabled": "boolean"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/resources/targeting/{targeting_type}", () => {
        let clientId = 'TODO_EDIT_THE_CLIENT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let oauthSignature = 'TODO_EDIT_THE_OAUTH_SIGNATURE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let targetingType = 'TODO_EDIT_THE_TARGETING_TYPE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let timestamp = 'TODO_EDIT_THE_TIMESTAMP'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: targeting_options/get
        {
            let url = BASE_URL + `/resources/targeting/${targeting_type}?client_id=${client_id}&oauth_signature=${oauth_signature}&timestamp=${timestamp}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let includeSharedAccounts = 'TODO_EDIT_THE_INCLUDE_SHARED_ACCOUNTS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: ad_accounts/list
        {
            let url = BASE_URL + `/ad_accounts?bookmark=${bookmark}&page_size=${page_size}&include_shared_accounts=${include_shared_accounts}`;
            let request = http.get(url);

            check(request, {
                "response": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2: ad_accounts/create
        {
            let url = BASE_URL + `/ad_accounts`;
            // TODO: edit the parameters of the request body.
            let body = {"country": "country", "name": "string", "ownerUserId": "string"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/catalogs/feeds/{feed_id}/processing_results", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let feedId = 'TODO_EDIT_THE_FEED_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: feed_processing_results/list
        {
            let url = BASE_URL + `/catalogs/feeds/${feed_id}/processing_results?bookmark=${bookmark}&page_size=${page_size}&ad_account_id=${ad_account_id}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error.": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/campaigns/targeting_analytics", () => {
        let viewWindowDays = 'TODO_EDIT_THE_VIEW_WINDOW_DAYS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let engagementWindowDays = 'TODO_EDIT_THE_ENGAGEMENT_WINDOW_DAYS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_END_DATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let columns = 'TODO_EDIT_THE_COLUMNS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let granularity = 'DAY'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let attributionTypes = 'TODO_EDIT_THE_ATTRIBUTION_TYPES'; // specify value as there is no example value for this parameter in OpenAPI spec
        let conversionReportTime = 'TIME_OF_AD_ACTION'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let campaignIds = 'TODO_EDIT_THE_CAMPAIGN_IDS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let targetingTypes = 'TODO_EDIT_THE_TARGETING_TYPES'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_START_DATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let clickWindowDays = '1'; // extracted from 'example' field defined at the parameter level of OpenAPI spec

        // Request No. 1: campaign_targeting_analytics/get
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/campaigns/targeting_analytics?campaign_ids=${campaign_ids}&start_date=${start_date}&end_date=${end_date}&targeting_types=${targeting_types}&columns=${columns}&granularity=${granularity}&click_window_days=${click_window_days}&engagement_window_days=${engagement_window_days}&view_window_days=${view_window_days}&conversion_report_time=${conversion_report_time}&attribution_types=${attribution_types}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/events", () => {
        let test = 'TODO_EDIT_THE_TEST'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: events/create
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/events?test=${test}`;
            // TODO: edit the parameters of the request body.
            let body = {"data": "list"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected errors": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/product_group_promotions/{product_group_promotion_id}", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let productGroupPromotionId = 'TODO_EDIT_THE_PRODUCT_GROUP_PROMOTION_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: product_group_promotions/get
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/product_group_promotions/${product_group_promotion_id}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/audiences/{audience_id}", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let audienceId = 'TODO_EDIT_THE_AUDIENCE_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: audiences/get
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/audiences/${audience_id}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error.": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2: audiences/update
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/audiences/${audience_id}`;
            // TODO: edit the parameters of the request body.
            let body = {"adAccountId": "string", "name": "string", "rule": {"country": "string", "customerListId": "string", "engagementDomain": "list", "engagementType": "string", "event": "string", "eventData": "pinteresttageventdata", "percentage": "integer", "pinId": "list", "prefill": "boolean", "retentionDays": "integer", "seedId": "list", "url": "list", "visitorSourceId": "string", "eventSource": "object", "ingestionSource": "object", "engagerType": "integer", "campaignId": "list", "adId": "list", "objectiveType": "list", "adAccountId": "string"}, "description": "string", "operationType": "audienceupdateoperationtype"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.patch(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/bulk/{bulk_request_id}", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let bulkRequestId = 'TODO_EDIT_THE_BULK_REQUEST_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let includeDetails = 'TODO_EDIT_THE_INCLUDE_DETAILS'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: bulk_request/get
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/bulk/${bulk_request_id}?include_details=${include_details}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/pins/{pin_id}/save", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pinId = 'TODO_EDIT_THE_PIN_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: pins/save
        {
            let url = BASE_URL + `/pins/${pin_id}/save?ad_account_id=${ad_account_id}`;
            // TODO: edit the parameters of the request body.
            let body = {"boardId": "string", "boardSectionId": "string"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Successfully saved pin.": (r) => r.status === 201
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/lead_forms/{lead_form_id}", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let leadFormId = '1234567890123'; // extracted from 'example' field defined at the parameter level of OpenAPI spec

        // Request No. 1: lead_form/get
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/lead_forms/${lead_form_id}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/search/pins", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let query = 'Plants'; // extracted from 'example' field defined at the parameter level of OpenAPI spec

        // Request No. 1: search_user_pins/list
        {
            let url = BASE_URL + `/search/pins?ad_account_id=${ad_account_id}&query=${query}&bookmark=${bookmark}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/campaigns/analytics", () => {
        let viewWindowDays = 'TODO_EDIT_THE_VIEW_WINDOW_DAYS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let engagementWindowDays = 'TODO_EDIT_THE_ENGAGEMENT_WINDOW_DAYS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_END_DATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let columns = 'TODO_EDIT_THE_COLUMNS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let granularity = 'DAY'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let conversionReportTime = 'TIME_OF_AD_ACTION'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let campaignIds = 'TODO_EDIT_THE_CAMPAIGN_IDS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_START_DATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let clickWindowDays = '1'; // extracted from 'example' field defined at the parameter level of OpenAPI spec

        // Request No. 1: campaigns/analytics
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/campaigns/analytics?start_date=${start_date}&end_date=${end_date}&campaign_ids=${campaign_ids}&columns=${columns}&granularity=${granularity}&click_window_days=${click_window_days}&engagement_window_days=${engagement_window_days}&view_window_days=${view_window_days}&conversion_report_time=${conversion_report_time}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/ssio/insertion_orders/status", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: ssio_insertion_orders_status/get_by_ad_account
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/ssio/insertion_orders/status?bookmark=${bookmark}&page_size=${page_size}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/integrations/commerce/{external_business_id}", () => {
        let externalBusinessId = 'TODO_EDIT_THE_EXTERNAL_BUSINESS_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: integrations_commerce/get
        {
            let url = BASE_URL + `/integrations/commerce/${external_business_id}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error.": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2: integrations_commerce/patch
        {
            let url = BASE_URL + `/integrations/commerce/${external_business_id}`;
            // TODO: edit the parameters of the request body.
            let body = {"connectedMerchantId": "string", "connectedAdvertiserId": "string", "connectedLbaId": "string", "connectedTagId": "string", "partnerAccessToken": "string", "partnerRefreshToken": "string", "partnerPrimaryEmail": "string", "partnerAccessTokenExpiry": "bigdecimal", "partnerRefreshTokenExpiry": "bigdecimal", "scopes": "string", "additionalId1": "string", "partnerMetadata": "string"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.patch(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error.": (r) => r.status === 200
            });
        }
    });

    group("/catalogs/feeds", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let catalogId = 'TODO_EDIT_THE_CATALOG_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: feeds/list
        {
            let url = BASE_URL + `/catalogs/feeds?bookmark=${bookmark}&page_size=${page_size}&catalog_id=${catalog_id}&ad_account_id=${ad_account_id}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error.": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2: feeds/create
        {
            let url = BASE_URL + `/catalogs/feeds?ad_account_id=${ad_account_id}`;
            // TODO: edit the parameters of the request body.
            let body = {"defaultCurrency": "nullablecurrency", "name": "string", "format": "catalogsformat", "defaultLocale": {}, "credentials": {"password": "string", "username": "string"}, "location": "string", "preferredProcessingSchedule": {"time": "string", "timezone": "string"}, "catalogType": "catalogstype", "defaultCountry": "country", "defaultAvailability": "productavailabilitytype", "catalogId": "string"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 201
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/integrations/logs", () => {

        // Request No. 1: integrations_logs/post
        {
            let url = BASE_URL + `/integrations/logs`;
            // TODO: edit the parameters of the request body.
            let body = {"logs": "list"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Success.": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/audiences", () => {
        let ownershipType = 'OWNED'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let order = 'TODO_EDIT_THE_ORDER'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: audiences/list
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/audiences?bookmark=${bookmark}&order=${order}&page_size=${page_size}&ownership_type=${ownership_type}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2: audiences/create
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/audiences`;
            // TODO: edit the parameters of the request body.
            let body = {"adAccountId": "string", "name": "string", "rule": {"country": "string", "customerListId": "string", "engagementDomain": "list", "engagementType": "string", "event": "string", "eventData": "pinteresttageventdata", "percentage": "integer", "pinId": "list", "prefill": "boolean", "retentionDays": "integer", "seedId": "list", "url": "list", "visitorSourceId": "string", "eventSource": "object", "ingestionSource": "object", "engagerType": "integer", "campaignId": "list", "adId": "list", "objectiveType": "list", "adAccountId": "string"}, "description": "string", "audienceType": {}};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/sandbox", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: sandbox/delete
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/sandbox`;
            let request = http.del(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/trends/keywords/{region}/top/{trend_type}", () => {
        let normalizeAgainstGroup = 'TODO_EDIT_THE_NORMALIZE_AGAINST_GROUP'; // specify value as there is no example value for this parameter in OpenAPI spec
        let limit = '25'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let ages = '[\"35-44\",\"50-54\"]'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let genders = '[\"female\",\"unknown\"]'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let region = 'TODO_EDIT_THE_REGION'; // specify value as there is no example value for this parameter in OpenAPI spec
        let trendType = 'TODO_EDIT_THE_TREND_TYPE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let interests = '[\"beauty\",\"womens_fashion\"]'; // extracted from 'example' field defined at the parameter level of OpenAPI spec

        // Request No. 1: trending_keywords/list
        {
            let url = BASE_URL + `/trends/keywords/${region}/top/${trend_type}?interests=${interests}&genders=${genders}&ages=${ages}&normalize_against_group=${normalize_against_group}&limit=${limit}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/conversion_tags/{conversion_tag_id}", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let conversionTagId = '2617998078212'; // extracted from 'example' field defined at the parameter level of OpenAPI spec

        // Request No. 1: conversion_tags/get
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/conversion_tags/${conversion_tag_id}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/reports", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let token = 'TODO_EDIT_THE_TOKEN'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: analytics/get_report
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/reports?token=${token}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2: analytics/create_report
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/reports`;
            // TODO: edit the parameters of the request body.
            let body = {"startDate": "string", "endDate": "string", "granularity": "granularity", "clickWindowDays": "conversionattributionwindowdays", "engagementWindowDays": "conversionattributionwindowdays", "viewWindowDays": "conversionattributionwindowdays", "conversionReportTime": "conversionreporttimetype", "attributionTypes": "list", "campaignIds": "list", "campaignStatuses": "list", "campaignObjectiveTypes": "list", "adGroupIds": "list", "adGroupStatuses": "list", "adIds": "list", "adStatuses": "list", "productGroupIds": "list", "productGroupStatuses": "list", "productItemIds": "list", "targetingTypes": "list", "metricsFilters": "list", "columns": "list", "level": "metricsreportinglevel", "reportFormat": "dataoutputformat"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/catalogs/processing_results/{processing_result_id}/item_issues", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let itemValidationIssue = 'TITLE_MISSING'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let itemNumbers = '[1,5]'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let processingResultId = '5224831246441439241'; // extracted from 'example' field defined at the parameter level of OpenAPI spec

        // Request No. 1: items_issues/list
        {
            let url = BASE_URL + `/catalogs/processing_results/${processing_result_id}/item_issues?bookmark=${bookmark}&page_size=${page_size}&item_numbers=${item_numbers}&item_validation_issue=${item_validation_issue}&ad_account_id=${ad_account_id}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error.": (r) => r.status === 200
            });
        }
    });

    group("/user_account/analytics/top_pins", () => {
        let metricTypes = 'TODO_EDIT_THE_METRIC_TYPES'; // specify value as there is no example value for this parameter in OpenAPI spec
        let numOfPins = '25'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let fromClaimedContent = 'TODO_EDIT_THE_FROM_CLAIMED_CONTENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pinFormat = 'TODO_EDIT_THE_PIN_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_END_DATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let createdInLastNDays = '30'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let sortBy = 'TODO_EDIT_THE_SORT_BY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let appTypes = 'TODO_EDIT_THE_APP_TYPES'; // specify value as there is no example value for this parameter in OpenAPI spec
        let source = 'TODO_EDIT_THE_SOURCE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let contentType = 'TODO_EDIT_THE_CONTENT_TYPE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_START_DATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: user_account/analytics/top_pins
        {
            let url = BASE_URL + `/user_account/analytics/top_pins?start_date=${start_date}&end_date=${end_date}&sort_by=${sort_by}&from_claimed_content=${from_claimed_content}&pin_format=${pin_format}&app_types=${app_types}&content_type=${content_type}&source=${source}&metric_types=${metric_types}&num_of_pins=${num_of_pins}&created_in_last_n_days=${created_in_last_n_days}&ad_account_id=${ad_account_id}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/order_lines", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let order = 'TODO_EDIT_THE_ORDER'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: order_lines/list
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/order_lines?page_size=${page_size}&order=${order}&bookmark=${bookmark}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/catalogs/product_groups/{product_group_id}/products", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let productGroupId = 'TODO_EDIT_THE_PRODUCT_GROUP_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: catalogs_product_group_pins/list
        {
            let url = BASE_URL + `/catalogs/product_groups/${product_group_id}/products?bookmark=${bookmark}&page_size=${page_size}&ad_account_id=${ad_account_id}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error.": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/analytics", () => {
        let viewWindowDays = 'TODO_EDIT_THE_VIEW_WINDOW_DAYS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let engagementWindowDays = 'TODO_EDIT_THE_ENGAGEMENT_WINDOW_DAYS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_END_DATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let columns = 'TODO_EDIT_THE_COLUMNS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let granularity = 'DAY'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let conversionReportTime = 'TIME_OF_AD_ACTION'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let startDate = 'TODO_EDIT_THE_START_DATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let clickWindowDays = '1'; // extracted from 'example' field defined at the parameter level of OpenAPI spec

        // Request No. 1: ad_account/analytics
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/analytics?start_date=${start_date}&end_date=${end_date}&columns=${columns}&granularity=${granularity}&click_window_days=${click_window_days}&engagement_window_days=${engagement_window_days}&view_window_days=${view_window_days}&conversion_report_time=${conversion_report_time}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/terms/suggested", () => {
        let limit = '4'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let term = 'sports'; // extracted from 'example' field defined at the parameter level of OpenAPI spec

        // Request No. 1: terms_suggested/list
        {
            let url = BASE_URL + `/terms/suggested?term=${term}&limit=${limit}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/ad_previews", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: ad_previews/create
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/ad_previews`;
            // TODO: edit the parameters of the request body.
            let body = {"imageUrl": "string", "title": "string", "pinId": "string"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Successful ad preview creation.": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/user_account/following/boards", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let explicitFollowing = 'TODO_EDIT_THE_EXPLICIT_FOLLOWING'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: boards_user_follows/list
        {
            let url = BASE_URL + `/user_account/following/boards?bookmark=${bookmark}&page_size=${page_size}&explicit_following=${explicit_following}&ad_account_id=${ad_account_id}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/leads/subscriptions", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: ad_accounts_subscriptions/get_list
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/leads/subscriptions?page_size=${page_size}&bookmark=${bookmark}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error.": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2: ad_accounts_subscriptions/post
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/leads/subscriptions`;
            // TODO: edit the parameters of the request body.
            let body = {"webhookUrl": "string", "leadFormId": "string", "partnerAccessToken": "string", "partnerRefreshToken": "string"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error.": (r) => r.status === 200
            });
        }
    });

    group("/user_account/following", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let feedType = 'TODO_EDIT_THE_FEED_TYPE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let explicitFollowing = 'TODO_EDIT_THE_EXPLICIT_FOLLOWING'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: user_following/get
        {
            let url = BASE_URL + `/user_account/following?bookmark=${bookmark}&page_size=${page_size}&feed_type=${feed_type}&explicit_following=${explicit_following}&ad_account_id=${ad_account_id}`;
            let request = http.get(url);

            check(request, {
                "response": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/user_account/following/{username}", () => {
        let username = 'TODO_EDIT_THE_USERNAME'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: follow_user/update
        {
            let url = BASE_URL + `/user_account/following/${username}`;
            // TODO: edit the parameters of the request body.
            let body = {"autoFollow": "boolean"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/ad_groups/{ad_group_id}", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adGroupId = 'TODO_EDIT_THE_AD_GROUP_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: ad_groups/get
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/ad_groups/${ad_group_id}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/keywords", () => {
        let matchTypes = 'TODO_EDIT_THE_MATCH_TYPES'; // specify value as there is no example value for this parameter in OpenAPI spec
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let campaignId = 'TODO_EDIT_THE_CAMPAIGN_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adGroupId = '123123123'; // extracted from 'example' field defined at the parameter level of OpenAPI spec

        // Request No. 1: keywords/get
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/keywords?campaign_id=${campaign_id}&ad_group_id=${ad_group_id}&match_types=${match_types}&page_size=${page_size}&bookmark=${bookmark}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2: keywords/update
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/keywords`;
            // TODO: edit the parameters of the request body.
            let body = {"keywords": "list"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.patch(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/catalogs/items/batch/{batch_id}", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let batchId = '595953100599279259-66753b9bb65c46c49bd8503b27fecf9e'; // extracted from 'example' field defined at the parameter level of OpenAPI spec

        // Request No. 1: items_batch/get
        {
            let url = BASE_URL + `/catalogs/items/batch/${batch_id}?ad_account_id=${ad_account_id}`;
            let request = http.get(url);

            check(request, {
                "Response containing the requested catalogs items batch": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/product_group_promotions", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let productGroupPromotionIds = 'TODO_EDIT_THE_PRODUCT_GROUP_PROMOTION_IDS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let entityStatuses = 'TODO_EDIT_THE_ENTITY_STATUSES'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adGroupId = '123123123'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let order = 'TODO_EDIT_THE_ORDER'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: product_group_promotions/list
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/product_group_promotions?product_group_promotion_ids=${product_group_promotion_ids}&entity_statuses=${entity_statuses}&ad_group_id=${ad_group_id}&page_size=${page_size}&order=${order}&bookmark=${bookmark}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2: product_group_promotions/update
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/product_group_promotions`;
            // TODO: edit the parameters of the request body.
            let body = {"adGroupId": "string", "productGroupPromotion": "list"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.patch(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/bulk/download", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: bulk_download/create
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/bulk/download`;
            // TODO: edit the parameters of the request body.
            let body = {"entityTypes": "list", "entityIds": "list", "updatedSince": "string", "campaignFilter": {"startTime": "string", "endTime": "string", "name": "string", "campaignStatus": "list", "objectiveType": "list"}, "outputFormat": "bulkoutputformat"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/ssio/insertion_orders/{pin_order_id}/status", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pinOrderId = 'TODO_EDIT_THE_PIN_ORDER_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: ssio_insertion_orders_status/get_by_pin_order_id
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/ssio/insertion_orders/${pin_order_id}/status`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/boards/{board_id}/sections/{section_id}", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let boardId = 'TODO_EDIT_THE_BOARD_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let sectionId = 'TODO_EDIT_THE_SECTION_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: board_sections/delete
        {
            let url = BASE_URL + `/boards/${board_id}/sections/${section_id}?ad_account_id=${ad_account_id}`;
            let request = http.del(url);

            check(request, {
                "Board section deleted successfully": (r) => r.status === 204
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2: board_sections/update
        {
            let url = BASE_URL + `/boards/${board_id}/sections/${section_id}?ad_account_id=${ad_account_id}`;
            // TODO: edit the parameters of the request body.
            let body = {"id": "string", "name": "string"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.patch(url, JSON.stringify(body), params);

            check(request, {
                "response": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/mmm_reports", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let token = 'TODO_EDIT_THE_TOKEN'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: analytics/get_mmm_report
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/mmm_reports?token=${token}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2: analytics/create_mmm_report
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/mmm_reports`;
            // TODO: edit the parameters of the request body.
            let body = {"reportName": "string", "startDate": "string", "endDate": "string", "granularity": "string", "level": "string", "targetingTypes": "list", "columns": "list", "countries": "list"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/user_account/websites", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: user_websites/get
        {
            let url = BASE_URL + `/user_account/websites?bookmark=${bookmark}&page_size=${page_size}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2: unverify_website/delete
        {
            let url = BASE_URL + `/user_account/websites?website=${website}`;
            let request = http.del(url);

            check(request, {
                "Successfully unverified website": (r) => r.status === 204
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/lead_forms/{lead_form_id}/test", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let leadFormId = '1234567890123'; // extracted from 'example' field defined at the parameter level of OpenAPI spec

        // Request No. 1: lead_form_test/create
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/lead_forms/${lead_form_id}/test`;
            // TODO: edit the parameters of the request body.
            let body = {"answers": "list"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/user_account/analytics/top_video_pins", () => {
        let metricTypes = 'TODO_EDIT_THE_METRIC_TYPES'; // specify value as there is no example value for this parameter in OpenAPI spec
        let numOfPins = '25'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let fromClaimedContent = 'TODO_EDIT_THE_FROM_CLAIMED_CONTENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pinFormat = 'TODO_EDIT_THE_PIN_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_END_DATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let createdInLastNDays = '30'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let sortBy = 'TODO_EDIT_THE_SORT_BY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let appTypes = 'TODO_EDIT_THE_APP_TYPES'; // specify value as there is no example value for this parameter in OpenAPI spec
        let source = 'TODO_EDIT_THE_SOURCE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let contentType = 'TODO_EDIT_THE_CONTENT_TYPE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_START_DATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: user_account/analytics/top_video_pins
        {
            let url = BASE_URL + `/user_account/analytics/top_video_pins?start_date=${start_date}&end_date=${end_date}&sort_by=${sort_by}&from_claimed_content=${from_claimed_content}&pin_format=${pin_format}&app_types=${app_types}&content_type=${content_type}&source=${source}&metric_types=${metric_types}&num_of_pins=${num_of_pins}&created_in_last_n_days=${created_in_last_n_days}&ad_account_id=${ad_account_id}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/ads/analytics", () => {
        let adIds = 'TODO_EDIT_THE_AD_IDS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let viewWindowDays = 'TODO_EDIT_THE_VIEW_WINDOW_DAYS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let engagementWindowDays = 'TODO_EDIT_THE_ENGAGEMENT_WINDOW_DAYS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_END_DATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let columns = 'TODO_EDIT_THE_COLUMNS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let granularity = 'DAY'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let conversionReportTime = 'TIME_OF_AD_ACTION'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let startDate = 'TODO_EDIT_THE_START_DATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let clickWindowDays = '1'; // extracted from 'example' field defined at the parameter level of OpenAPI spec

        // Request No. 1: ads/analytics
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/ads/analytics?start_date=${start_date}&end_date=${end_date}&ad_ids=${ad_ids}&columns=${columns}&granularity=${granularity}&click_window_days=${click_window_days}&engagement_window_days=${engagement_window_days}&view_window_days=${view_window_days}&conversion_report_time=${conversion_report_time}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/catalogs/items", () => {
        let country = 'US'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let itemIds = '[\"CR123\"]'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let language = 'EN'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let filters = 'TODO_EDIT_THE_FILTERS'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: items/get
        {
            let url = BASE_URL + `/catalogs/items?ad_account_id=${ad_account_id}&country=${country}&language=${language}&item_ids=${item_ids}&filters=${filters}`;
            let request = http.get(url);

            check(request, {
                "Response containing the requested catalogs items": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/media/{media_id}", () => {
        let mediaId = 'TODO_EDIT_THE_MEDIA_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: media/get
        {
            let url = BASE_URL + `/media/${media_id}`;
            let request = http.get(url);

            check(request, {
                "response": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/ads/{ad_id}", () => {
        let adId = 'TODO_EDIT_THE_AD_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: ads/get
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/ads/${ad_id}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/catalogs/product_groups/{product_group_id}/product_counts", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let productGroupId = 'TODO_EDIT_THE_PRODUCT_GROUP_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: catalogs_product_groups/product_counts_get
        {
            let url = BASE_URL + `/catalogs/product_groups/${product_group_id}/product_counts?ad_account_id=${ad_account_id}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error.": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/product_groups/catalogs", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let feedProfileId = 'TODO_EDIT_THE_FEED_PROFILE_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: ad_accounts_catalogs_product_groups/list
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/product_groups/catalogs?feed_profile_id=${feed_profile_id}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/templates/{template_id}/reports", () => {
        let endDate = 'TODO_EDIT_THE_END_DATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let granularity = 'DAY'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let templateId = 'TODO_EDIT_THE_TEMPLATE_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_START_DATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: analytics/create_template_report
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/templates/${template_id}/reports?start_date=${start_date}&end_date=${end_date}&granularity=${granularity}`;
            let request = http.post(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/billing_profiles", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let isActive = 'TODO_EDIT_THE_IS_ACTIVE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: billing_profiles/get
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/billing_profiles?is_active=${is_active}&bookmark=${bookmark}&page_size=${page_size}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error.": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/ad_groups/audience_sizing", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: ad_groups/audience_sizing
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/ad_groups/audience_sizing`;
            // TODO: edit the parameters of the request body.
            let body = {"autoTargetingEnabled": "boolean", "placementGroup": "placementgrouptype", "creativeTypes": "list", "targetingSpec": {"AGE_BUCKET": "list", "APPTYPE": "list", "AUDIENCE_EXCLUDE": "list", "AUDIENCE_INCLUDE": "list", "GENDER": "list", "GEO": "list", "INTEREST": "list", "LOCALE": "list", "LOCATION": "list", "SHOPPING_RETARGETING": "list", "TARGETING_STRATEGY": "list"}, "productGroupIds": "list", "keywords": "list"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.get(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/media", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: media/list
        {
            let url = BASE_URL + `/media?bookmark=${bookmark}&page_size=${page_size}`;
            let request = http.get(url);

            check(request, {
                "response": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2: media/create
        {
            let url = BASE_URL + `/media`;
            // TODO: edit the parameters of the request body.
            let body = {"mediaType": "mediauploadtype"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "response": (r) => r.status === 201
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/resources/lead_form_questions", () => {

        // Request No. 1: lead_form_questions/get
        {
            let url = BASE_URL + `/resources/lead_form_questions`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/integrations/{id}", () => {
        let id = 'TODO_EDIT_THE_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: integrations/get_by_id
        {
            let url = BASE_URL + `/integrations/${id}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error.": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/campaigns", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let campaignIds = 'TODO_EDIT_THE_CAMPAIGN_IDS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let entityStatuses = 'TODO_EDIT_THE_ENTITY_STATUSES'; // specify value as there is no example value for this parameter in OpenAPI spec
        let order = 'TODO_EDIT_THE_ORDER'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: campaigns/list
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/campaigns?campaign_ids=${campaign_ids}&entity_statuses=${entity_statuses}&page_size=${page_size}&order=${order}&bookmark=${bookmark}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2: campaigns/update
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/campaigns`;
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.patch(url, params);

            check(request, {
                "response": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/keywords/metrics", () => {
        let keywords = 'TODO_EDIT_THE_KEYWORDS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let countryCode = 'US'; // extracted from 'example' field defined at the parameter level of OpenAPI spec

        // Request No. 1: country_keywords_metrics/get
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/keywords/metrics?country_code=${country_code}&keywords=${keywords}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/lead_forms", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let order = 'TODO_EDIT_THE_ORDER'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: lead_forms/list
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/lead_forms?page_size=${page_size}&order=${order}&bookmark=${bookmark}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/resources/ad_account_countries", () => {

        // Request No. 1: ad_account_countries/get
        {
            let url = BASE_URL + `/resources/ad_account_countries`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/audiences/custom", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: audiences/create_custom
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/audiences/custom`;
            // TODO: edit the parameters of the request body.
            let body = {"adAccountId": "string", "name": "string", "rule": {"country": "string", "customerListId": "string", "engagementDomain": "list", "engagementType": "string", "event": "string", "eventData": "pinteresttageventdata", "percentage": "integer", "pinId": "list", "prefill": "boolean", "retentionDays": "integer", "seedId": "list", "url": "list", "visitorSourceId": "string", "eventSource": "object", "ingestionSource": "object", "engagerType": "integer", "campaignId": "list", "adId": "list", "objectiveType": "list", "adAccountId": "string"}, "sharingType": "audiencesharingtype", "dataParty": "audiencedataparty", "category": "string"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/integrations", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: integrations/get_list
        {
            let url = BASE_URL + `/integrations?bookmark=${bookmark}&page_size=${page_size}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error.": (r) => r.status === 200
            });
        }
    });

    group("/resources/metrics_ready_state", () => {
        let date = 'TODO_EDIT_THE_DATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: metrics_ready_state/get
        {
            let url = BASE_URL + `/resources/metrics_ready_state?date=${date}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/terms/related", () => {
        let terms = 'TODO_EDIT_THE_TERMS'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: terms_related/list
        {
            let url = BASE_URL + `/terms/related?terms=${terms}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/ad_groups", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let campaignIds = 'TODO_EDIT_THE_CAMPAIGN_IDS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adGroupIds = 'TODO_EDIT_THE_AD_GROUP_IDS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let entityStatuses = 'TODO_EDIT_THE_ENTITY_STATUSES'; // specify value as there is no example value for this parameter in OpenAPI spec
        let order = 'TODO_EDIT_THE_ORDER'; // specify value as there is no example value for this parameter in OpenAPI spec
        let translateInterestsToNames = 'TODO_EDIT_THE_TRANSLATE_INTERESTS_TO_NAMES'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: ad_groups/list
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/ad_groups?campaign_ids=${campaign_ids}&ad_group_ids=${ad_group_ids}&entity_statuses=${entity_statuses}&page_size=${page_size}&order=${order}&bookmark=${bookmark}&translate_interests_to_names=${translate_interests_to_names}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2: ad_groups/update
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/ad_groups`;
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.patch(url, params);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/boards/{board_id}/sections/{section_id}/pins", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let boardId = 'TODO_EDIT_THE_BOARD_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let sectionId = 'TODO_EDIT_THE_SECTION_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: board_sections/list_pins
        {
            let url = BASE_URL + `/boards/${board_id}/sections/${section_id}/pins?ad_account_id=${ad_account_id}&bookmark=${bookmark}&page_size=${page_size}`;
            let request = http.get(url);

            check(request, {
                "response": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/catalogs/product_groups/{product_group_id}", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let productGroupId = 'TODO_EDIT_THE_PRODUCT_GROUP_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: catalogs_product_groups/get
        {
            let url = BASE_URL + `/catalogs/product_groups/${product_group_id}?ad_account_id=${ad_account_id}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error.": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2: catalogs_product_groups/update
        {
            let url = BASE_URL + `/catalogs/product_groups/${product_group_id}?ad_account_id=${ad_account_id}`;
            // TODO: edit the parameters of the request body.
            let body = {"name": "string", "description": "string", "isFeatured": "boolean", "filters": {"anyOf": "list", "allOf": "list"}, "catalogType": "string"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.patch(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error.": (r) => r.status === 200
            });
        }
    });

    group("/user_account/websites/verification", () => {

        // Request No. 1: website_verification/get
        {
            let url = BASE_URL + `/user_account/websites/verification`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/bid_floor", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: ad_groups_bid_floor/get
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/bid_floor`;
            // TODO: edit the parameters of the request body.
            let body = {"bidFloorSpecs": "list", "targetingSpec": {"AGE_BUCKET": "list", "APPTYPE": "list", "AUDIENCE_EXCLUDE": "list", "AUDIENCE_INCLUDE": "list", "GENDER": "list", "GEO": "list", "INTEREST": "list", "LOCALE": "list", "LOCATION": "list", "SHOPPING_RETARGETING": "list", "TARGETING_STRATEGY": "list"}};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/user_account/analytics", () => {
        let metricTypes = 'TODO_EDIT_THE_METRIC_TYPES'; // specify value as there is no example value for this parameter in OpenAPI spec
        let fromClaimedContent = 'TODO_EDIT_THE_FROM_CLAIMED_CONTENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pinFormat = 'TODO_EDIT_THE_PIN_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_END_DATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let splitField = 'TODO_EDIT_THE_SPLIT_FIELD'; // specify value as there is no example value for this parameter in OpenAPI spec
        let appTypes = 'TODO_EDIT_THE_APP_TYPES'; // specify value as there is no example value for this parameter in OpenAPI spec
        let source = 'TODO_EDIT_THE_SOURCE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let contentType = 'TODO_EDIT_THE_CONTENT_TYPE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_START_DATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: user_account/analytics
        {
            let url = BASE_URL + `/user_account/analytics?start_date=${start_date}&end_date=${end_date}&from_claimed_content=${from_claimed_content}&pin_format=${pin_format}&app_types=${app_types}&content_type=${content_type}&source=${source}&metric_types=${metric_types}&split_field=${split_field}&ad_account_id=${ad_account_id}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/audience_insights", () => {
        let audienceInsightType = 'TODO_EDIT_THE_AUDIENCE_INSIGHT_TYPE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: audience_insights/get
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/audience_insights?audience_insight_type=${audience_insight_type}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/catalogs/products/get_by_product_group_filters", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: products_by_product_group_filter/list
        {
            let url = BASE_URL + `/catalogs/products/get_by_product_group_filters?bookmark=${bookmark}&page_size=${page_size}&ad_account_id=${ad_account_id}`;
            // TODO: edit the parameters of the request body.
            let body = {"feedId": "string", "filters": {"anyOf": "list", "allOf": "list"}};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error.": (r) => r.status === 200
            });
        }
    });

    group("/resources/delivery_metrics", () => {
        let reportType = 'TODO_EDIT_THE_REPORT_TYPE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: delivery_metrics/get
        {
            let url = BASE_URL + `/resources/delivery_metrics?report_type=${report_type}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/ads_credit/discounts", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: ads_credits_discounts/get
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/ads_credit/discounts?bookmark=${bookmark}&page_size=${page_size}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error.": (r) => r.status === 200
            });
        }
    });

    group("/users/{username}/interests/follow", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let username = 'TODO_EDIT_THE_USERNAME'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: user_account/followed_interests
        {
            let url = BASE_URL + `/users/${username}/interests/follow?bookmark=${bookmark}&page_size=${page_size}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/leads/subscriptions/{subscription_id}", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let subscriptionId = 'TODO_EDIT_THE_SUBSCRIPTION_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: ad_accounts_subscriptions/get_by_id
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/leads/subscriptions/${subscription_id}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error.": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2: ad_accounts_subscriptions/del_by_id
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/leads/subscriptions/${subscription_id}`;
            let request = http.del(url);

            check(request, {
                "Subscription deleted successfully": (r) => r.status === 204
            });
            check(request, {
                "Unexpected error.": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/ads_credit/redeem", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: ads_credit/redeem
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/ads_credit/redeem`;
            // TODO: edit the parameters of the request body.
            let body = {"offerCodeHash": "string", "validateOnly": "boolean"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Successfully redeemed ad credits.": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/product_groups/analytics", () => {
        let viewWindowDays = 'TODO_EDIT_THE_VIEW_WINDOW_DAYS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let engagementWindowDays = 'TODO_EDIT_THE_ENGAGEMENT_WINDOW_DAYS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_END_DATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let productGroupIds = 'TODO_EDIT_THE_PRODUCT_GROUP_IDS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let columns = 'TODO_EDIT_THE_COLUMNS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let granularity = 'DAY'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let conversionReportTime = 'TIME_OF_AD_ACTION'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let startDate = 'TODO_EDIT_THE_START_DATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let clickWindowDays = '1'; // extracted from 'example' field defined at the parameter level of OpenAPI spec

        // Request No. 1: product_groups/analytics
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/product_groups/analytics?start_date=${start_date}&end_date=${end_date}&product_group_ids=${product_group_ids}&columns=${columns}&granularity=${granularity}&click_window_days=${click_window_days}&engagement_window_days=${engagement_window_days}&view_window_days=${view_window_days}&conversion_report_time=${conversion_report_time}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/ssio/order_lines", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pinOrderId = 'TODO_EDIT_THE_PIN_ORDER_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: ssio_order_lines/get_by_ad_account
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/ssio/order_lines?bookmark=${bookmark}&page_size=${page_size}&pin_order_id=${pin_order_id}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/user_account", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: user_account/get
        {
            let url = BASE_URL + `/user_account?ad_account_id=${ad_account_id}`;
            let request = http.get(url);

            check(request, {
                "response": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/conversion_tags/ocpm_eligible", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: ocpm_eligible_conversion_tags/get
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/conversion_tags/ocpm_eligible`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected errors": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/customer_lists", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let order = 'TODO_EDIT_THE_ORDER'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: customer_lists/list
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/customer_lists?page_size=${page_size}&order=${order}&bookmark=${bookmark}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2: customer_lists/create
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/customer_lists`;
            // TODO: edit the parameters of the request body.
            let body = {"name": "string", "records": "string", "listType": "userlisttype", "exceptions": "object"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/user_account/businesses", () => {

        // Request No. 1: linked_business_accounts/get
        {
            let url = BASE_URL + `/user_account/businesses`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/user_account/followers", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: followers/list
        {
            let url = BASE_URL + `/user_account/followers?bookmark=${bookmark}&page_size=${page_size}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/insights/audiences", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: audience_insights_scope_and_type/get
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/insights/audiences`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/catalogs/product_groups", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let catalogId = 'TODO_EDIT_THE_CATALOG_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let feedId = 'TODO_EDIT_THE_FEED_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: catalogs_product_groups/list
        {
            let url = BASE_URL + `/catalogs/product_groups?feed_id=${feed_id}&catalog_id=${catalog_id}&bookmark=${bookmark}&page_size=${page_size}&ad_account_id=${ad_account_id}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error.": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2: catalogs_product_groups/create
        {
            let url = BASE_URL + `/catalogs/product_groups?ad_account_id=${ad_account_id}`;
            let body = {"name": "Few Filters using \"all_of\"", "feed_id": "2680059592705", "featured": false, "filters": {"all_of":[{"MIN_PRICE":{"values":999.99,"inclusion":true}},{"CURRENCY":{"values":"USD"}},{"CUSTOM_LABEL_0":{"values":["Luxury Items"]}}]}};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 201
            });
            check(request, {
                "Unexpected error.": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/ssio/insertion_orders", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: ssio_insertion_order/create
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/ssio/insertion_orders`;
            // TODO: edit the parameters of the request body.
            let body = {"startDate": "string", "endDate": "string", "poNumber": "string", "budgetAmount": "bigdecimal", "billingContactFirstname": "string", "billingContactLastname": "string", "billingContactEmail": "string", "mediaContactFirstname": "string", "mediaContactLastname": "string", "mediaContactEmail": "string", "agencyLink": "string", "userEmail": "string", "acceptedTermsTime": "integer", "pmpId": "string", "orderName": "string", "orderLineType": "string", "acceptedTermsId": "string", "billtoCompanyId": "string", "billtoBusinessAddressId": "string", "billtoBillingAddressId": "string", "estimatedMonthlySpend": "bigdecimal", "currencyInfo": "currency"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2: ssio_insertion_order/edit
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/ssio/insertion_orders`;
            // TODO: edit the parameters of the request body.
            let body = {"startDate": "string", "endDate": "string", "poNumber": "string", "budgetAmount": "bigdecimal", "billingContactFirstname": "string", "billingContactLastname": "string", "billingContactEmail": "string", "mediaContactFirstname": "string", "mediaContactLastname": "string", "mediaContactEmail": "string", "agencyLink": "string", "userEmail": "string", "oracleLineId": "string", "salesforceOrderId": "string", "salesforceOrderLineId": "string", "adsManagerOrderLineId": "string"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.patch(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/integrations/commerce", () => {

        // Request No. 1: integrations_commerce/post
        {
            let url = BASE_URL + `/integrations/commerce`;
            // TODO: edit the parameters of the request body.
            let body = {"externalBusinessId": "string", "connectedMerchantId": "string", "connectedAdvertiserId": "string", "connectedLbaId": "string", "connectedTagId": "string", "partnerAccessToken": "string", "partnerRefreshToken": "string", "partnerPrimaryEmail": "string", "partnerAccessTokenExpiry": "integer", "partnerRefreshTokenExpiry": "integer", "scopes": "string", "additionalId1": "string", "partnerMetadata": "string"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error.": (r) => r.status === 200
            });
        }
    });

    group("/catalogs/feeds/{feed_id}", () => {
        let feedId = 'TODO_EDIT_THE_FEED_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: feeds/get
        {
            let url = BASE_URL + `/catalogs/feeds/${feed_id}?ad_account_id=${ad_account_id}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error.": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2: feeds/update
        {
            let url = BASE_URL + `/catalogs/feeds/${feed_id}?ad_account_id=${ad_account_id}`;
            // TODO: edit the parameters of the request body.
            let body = {"defaultCurrency": "nullablecurrency", "name": "string", "format": "catalogsformat", "credentials": {"password": "string", "username": "string"}, "location": "string", "preferredProcessingSchedule": {"time": "string", "timezone": "string"}, "status": "catalogsstatus", "catalogType": "catalogstype", "defaultAvailability": "productavailabilitytype"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.patch(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/order_lines/{order_line_id}", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let orderLineId = 'TODO_EDIT_THE_ORDER_LINE_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: order_lines/get
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/order_lines/${order_line_id}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/oauth/token", () => {

        // Request No. 1: oauth/token
        {
            let url = BASE_URL + `/oauth/token`;
            // TODO: edit the parameters of the request body.
            let body = {"grantType": "string"};
            let params = {headers: {"Content-Type": "application/x-www-form-urlencoded", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "response": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/pins/{pin_id}", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pinId = 'TODO_EDIT_THE_PIN_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pinMetrics = 'TODO_EDIT_THE_PIN_METRICS'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: pins/get
        {
            let url = BASE_URL + `/pins/${pin_id}?pin_metrics=${pin_metrics}&ad_account_id=${ad_account_id}`;
            let request = http.get(url);

            check(request, {
                "response": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2: pins/update
        {
            let url = BASE_URL + `/pins/${pin_id}?ad_account_id=${ad_account_id}`;
            // TODO: edit the parameters of the request body.
            let body = {"altText": "string", "boardId": "string", "boardSectionId": "string", "description": "string", "link": "string", "title": "string", "carouselSlots": "list", "note": "string"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.patch(url, JSON.stringify(body), params);

            check(request, {
                "response": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/ads/targeting_analytics", () => {
        let adIds = 'TODO_EDIT_THE_AD_IDS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let viewWindowDays = 'TODO_EDIT_THE_VIEW_WINDOW_DAYS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let engagementWindowDays = 'TODO_EDIT_THE_ENGAGEMENT_WINDOW_DAYS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_END_DATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let columns = 'TODO_EDIT_THE_COLUMNS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let granularity = 'DAY'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let attributionTypes = 'TODO_EDIT_THE_ATTRIBUTION_TYPES'; // specify value as there is no example value for this parameter in OpenAPI spec
        let conversionReportTime = 'TIME_OF_AD_ACTION'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let targetingTypes = 'TODO_EDIT_THE_TARGETING_TYPES'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_START_DATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let clickWindowDays = '1'; // extracted from 'example' field defined at the parameter level of OpenAPI spec

        // Request No. 1: ad_targeting_analytics/get
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/ads/targeting_analytics?ad_ids=${ad_ids}&start_date=${start_date}&end_date=${end_date}&targeting_types=${targeting_types}&columns=${columns}&granularity=${granularity}&click_window_days=${click_window_days}&engagement_window_days=${engagement_window_days}&view_window_days=${view_window_days}&conversion_report_time=${conversion_report_time}&attribution_types=${attribution_types}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/terms_of_service", () => {
        let includeHtml = 'TODO_EDIT_THE_INCLUDE_HTML'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let tosType = 'TODO_EDIT_THE_TOS_TYPE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: terms_of_service/get
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/terms_of_service?include_html=${include_html}&tos_type=${tos_type}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/ad_groups/targeting_analytics", () => {
        let viewWindowDays = 'TODO_EDIT_THE_VIEW_WINDOW_DAYS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let engagementWindowDays = 'TODO_EDIT_THE_ENGAGEMENT_WINDOW_DAYS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_END_DATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let columns = 'TODO_EDIT_THE_COLUMNS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let granularity = 'DAY'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let attributionTypes = 'TODO_EDIT_THE_ATTRIBUTION_TYPES'; // specify value as there is no example value for this parameter in OpenAPI spec
        let conversionReportTime = 'TIME_OF_AD_ACTION'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let adGroupIds = 'TODO_EDIT_THE_AD_GROUP_IDS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let targetingTypes = 'TODO_EDIT_THE_TARGETING_TYPES'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_START_DATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let clickWindowDays = '1'; // extracted from 'example' field defined at the parameter level of OpenAPI spec

        // Request No. 1: ad_groups_targeting_analytics/get
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/ad_groups/targeting_analytics?ad_group_ids=${ad_group_ids}&start_date=${start_date}&end_date=${end_date}&targeting_types=${targeting_types}&columns=${columns}&granularity=${granularity}&click_window_days=${click_window_days}&engagement_window_days=${engagement_window_days}&view_window_days=${view_window_days}&conversion_report_time=${conversion_report_time}&attribution_types=${attribution_types}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/campaigns/{campaign_id}", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let campaignId = 'TODO_EDIT_THE_CAMPAIGN_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: campaigns/get
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/campaigns/${campaign_id}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/pins", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pinType = 'TODO_EDIT_THE_PIN_TYPE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let includeProtectedPins = 'TODO_EDIT_THE_INCLUDE_PROTECTED_PINS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pinFilter = 'TODO_EDIT_THE_PIN_FILTER'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pinMetrics = 'TODO_EDIT_THE_PIN_METRICS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let creativeTypes = 'TODO_EDIT_THE_CREATIVE_TYPES'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: pins/list
        {
            let url = BASE_URL + `/pins?bookmark=${bookmark}&page_size=${page_size}&pin_filter=${pin_filter}&include_protected_pins=${include_protected_pins}&pin_type=${pin_type}&creative_types=${creative_types}&ad_account_id=${ad_account_id}&pin_metrics=${pin_metrics}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2: pins/create
        {
            let url = BASE_URL + `/pins?ad_account_id=${ad_account_id}`;
            // TODO: edit the parameters of the request body.
            let body = {"id": "string", "createdAt": "date", "link": "string", "title": "string", "description": "string", "dominantColor": "string", "altText": "string", "boardId": "string", "boardSectionId": "string", "boardOwner": {"username": "string"}, "media": {"mediaType": "string"}, "mediaSource": {"sourceType": "string", "contentType": "string", "data": "string", "isStandard": "boolean", "url": "string", "coverImageUrl": "string", "coverImageContentType": "string", "coverImageData": "string", "mediaId": "string", "items": "list", "index": "integer", "isAffiliateLink": "boolean"}, "parentPinId": "string", "note": "string"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Successful pin creation.": (r) => r.status === 201
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/boards/{board_id}/sections", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let boardId = 'TODO_EDIT_THE_BOARD_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: board_sections/list
        {
            let url = BASE_URL + `/boards/${board_id}/sections?ad_account_id=${ad_account_id}&bookmark=${bookmark}&page_size=${page_size}`;
            let request = http.get(url);

            check(request, {
                "response": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2: board_sections/create
        {
            let url = BASE_URL + `/boards/${board_id}/sections?ad_account_id=${ad_account_id}`;
            // TODO: edit the parameters of the request body.
            let body = {"id": "string", "name": "string"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "response": (r) => r.status === 201
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/ad_groups/analytics", () => {
        let viewWindowDays = 'TODO_EDIT_THE_VIEW_WINDOW_DAYS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let engagementWindowDays = 'TODO_EDIT_THE_ENGAGEMENT_WINDOW_DAYS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_END_DATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let columns = 'TODO_EDIT_THE_COLUMNS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let granularity = 'DAY'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let conversionReportTime = 'TIME_OF_AD_ACTION'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let adGroupIds = 'TODO_EDIT_THE_AD_GROUP_IDS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_START_DATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let clickWindowDays = '1'; // extracted from 'example' field defined at the parameter level of OpenAPI spec

        // Request No. 1: ad_groups/analytics
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/ad_groups/analytics?start_date=${start_date}&end_date=${end_date}&ad_group_ids=${ad_group_ids}&columns=${columns}&granularity=${granularity}&click_window_days=${click_window_days}&engagement_window_days=${engagement_window_days}&view_window_days=${view_window_days}&conversion_report_time=${conversion_report_time}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/boards/{board_id}/pins", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let boardId = 'TODO_EDIT_THE_BOARD_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pinMetrics = 'TODO_EDIT_THE_PIN_METRICS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let creativeTypes = 'TODO_EDIT_THE_CREATIVE_TYPES'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: boards/list_pins
        {
            let url = BASE_URL + `/boards/${board_id}/pins?bookmark=${bookmark}&page_size=${page_size}&creative_types=${creative_types}&ad_account_id=${ad_account_id}&pin_metrics=${pin_metrics}`;
            let request = http.get(url);

            check(request, {
                "response": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/pins/{pin_id}/analytics", () => {
        let metricTypes = 'TODO_EDIT_THE_METRIC_TYPES'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_END_DATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let splitField = 'TODO_EDIT_THE_SPLIT_FIELD'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pinId = 'TODO_EDIT_THE_PIN_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let appTypes = 'TODO_EDIT_THE_APP_TYPES'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_START_DATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: pins/analytics
        {
            let url = BASE_URL + `/pins/${pin_id}/analytics?start_date=${start_date}&end_date=${end_date}&app_types=${app_types}&metric_types=${metric_types}&split_field=${split_field}&ad_account_id=${ad_account_id}`;
            let request = http.get(url);

            check(request, {
                "response": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/conversion_tags/page_visit", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let order = 'TODO_EDIT_THE_ORDER'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: page_visit_conversion_tags/get
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/conversion_tags/page_visit?page_size=${page_size}&order=${order}&bookmark=${bookmark}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/catalogs", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: catalogs/list
        {
            let url = BASE_URL + `/catalogs?bookmark=${bookmark}&page_size=${page_size}&ad_account_id=${ad_account_id}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error.": (r) => r.status === 200
            });
        }
    });

    group("/boards", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let privacy = 'TODO_EDIT_THE_PRIVACY'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: boards/list
        {
            let url = BASE_URL + `/boards?ad_account_id=${ad_account_id}&bookmark=${bookmark}&page_size=${page_size}&privacy=${privacy}`;
            let request = http.get(url);

            check(request, {
                "response": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2: boards/create
        {
            let url = BASE_URL + `/boards?ad_account_id=${ad_account_id}`;
            // TODO: edit the parameters of the request body.
            let body = {"id": "string", "createdAt": "date", "boardPinsModifiedAt": "date", "name": "string", "description": "string", "collaboratorCount": "integer", "pinCount": "integer", "followerCount": "integer", "media": {"imageCoverUrl": "string", "pinThumbnailUrls": "list"}, "owner": {"username": "string"}, "privacy": "string"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "response": (r) => r.status === 201
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/customer_lists/{customer_list_id}", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let customerListId = 'TODO_EDIT_THE_CUSTOMER_LIST_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: customer_lists/get
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/customer_lists/${customer_list_id}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2: customer_lists/update
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/customer_lists/${customer_list_id}`;
            // TODO: edit the parameters of the request body.
            let body = {"records": "string", "operationType": "userlistoperationtype", "exceptions": "exception"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.patch(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: ad_accounts/get
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/templates", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let order = 'TODO_EDIT_THE_ORDER'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: templates/list
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/templates?page_size=${page_size}&order=${order}&bookmark=${bookmark}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/ssio/accounts", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: ssio_accounts/get
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/ssio/accounts`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/ads", () => {
        let adIds = 'TODO_EDIT_THE_AD_IDS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let campaignIds = 'TODO_EDIT_THE_CAMPAIGN_IDS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adGroupIds = 'TODO_EDIT_THE_AD_GROUP_IDS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let entityStatuses = 'TODO_EDIT_THE_ENTITY_STATUSES'; // specify value as there is no example value for this parameter in OpenAPI spec
        let order = 'TODO_EDIT_THE_ORDER'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: ads/list
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/ads?campaign_ids=${campaign_ids}&ad_group_ids=${ad_group_ids}&ad_ids=${ad_ids}&entity_statuses=${entity_statuses}&page_size=${page_size}&order=${order}&bookmark=${bookmark}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2: ads/update
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/ads`;
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.patch(url, params);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/ad_accounts/{ad_account_id}/targeting_analytics", () => {
        let viewWindowDays = 'TODO_EDIT_THE_VIEW_WINDOW_DAYS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let engagementWindowDays = 'TODO_EDIT_THE_ENGAGEMENT_WINDOW_DAYS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_END_DATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let columns = 'TODO_EDIT_THE_COLUMNS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let granularity = 'DAY'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let attributionTypes = 'TODO_EDIT_THE_ATTRIBUTION_TYPES'; // specify value as there is no example value for this parameter in OpenAPI spec
        let conversionReportTime = 'TIME_OF_AD_ACTION'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let targetingTypes = 'TODO_EDIT_THE_TARGETING_TYPES'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_START_DATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let clickWindowDays = '1'; // extracted from 'example' field defined at the parameter level of OpenAPI spec

        // Request No. 1: ad_account_targeting_analytics/get
        {
            let url = BASE_URL + `/ad_accounts/${ad_account_id}/targeting_analytics?start_date=${start_date}&end_date=${end_date}&targeting_types=${targeting_types}&columns=${columns}&granularity=${granularity}&click_window_days=${click_window_days}&engagement_window_days=${engagement_window_days}&view_window_days=${view_window_days}&conversion_report_time=${conversion_report_time}&attribution_types=${attribution_types}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/boards/{board_id}", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let boardId = 'TODO_EDIT_THE_BOARD_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: boards/get
        {
            let url = BASE_URL + `/boards/${board_id}?ad_account_id=${ad_account_id}`;
            let request = http.get(url);

            check(request, {
                "response": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2: boards/update
        {
            let url = BASE_URL + `/boards/${board_id}?ad_account_id=${ad_account_id}`;
            // TODO: edit the parameters of the request body.
            let body = {"name": "string", "description": "string", "privacy": "string"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.patch(url, JSON.stringify(body), params);

            check(request, {
                "response": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/catalogs/items/batch", () => {
        let adAccountId = 'TODO_EDIT_THE_AD_ACCOUNT_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: items_batch/post
        {
            let url = BASE_URL + `/catalogs/items/batch?ad_account_id=${ad_account_id}`;
            // TODO: edit the parameters of the request body.
            let body = {"catalogType": "catalogstype", "country": "country", "language": "language", "items": "list", "catalogId": "string", "operation": "batchoperation"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Response containing the requested catalogs items batch": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

    group("/search/partner/pins", () => {
        let bookmark = 'TODO_EDIT_THE_BOOKMARK'; // specify value as there is no example value for this parameter in OpenAPI spec
        let countryCode = 'US'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let limit = '4'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let term = 'TODO_EDIT_THE_TERM'; // specify value as there is no example value for this parameter in OpenAPI spec
        let locale = 'TODO_EDIT_THE_LOCALE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: search_partner_pins
        {
            let url = BASE_URL + `/search/partner/pins?term=${term}&country_code=${country_code}&bookmark=${bookmark}&locale=${locale}&limit=${limit}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
            check(request, {
                "Unexpected error": (r) => r.status === 200
            });
        }
    });

}
