<?php
/**
 * ItemProcessingRecord
 *
 * PHP version 7.1.3
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: blah@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ItemProcessingRecord model.
 *
 * Object describing an item processing record
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class ItemProcessingRecord 
{
        /**
     * The catalog item id in the merchant namespace
     *
     * @var string|null
     * @SerializedName("item_id")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $itemId;

    /**
     * Array with the validation errors for the item processing record. A non empty errors list causes the item processing to fail.
     *
     * @var OpenAPI\Server\Model\ItemValidationEvent[]|null
     * @SerializedName("errors")
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\ItemValidationEvent")
     * })
     * @Type("array<OpenAPI\Server\Model\ItemValidationEvent>")
     */
    protected $errors;

    /**
     * Array with the validation warnings for the item processing record
     *
     * @var OpenAPI\Server\Model\ItemValidationEvent[]|null
     * @SerializedName("warnings")
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\ItemValidationEvent")
     * })
     * @Type("array<OpenAPI\Server\Model\ItemValidationEvent>")
     */
    protected $warnings;

    /**
     * @var OpenAPI\Server\Model\ItemProcessingStatus|null
     * @SerializedName("status")
     * @Assert\Type("OpenAPI\Server\Model\ItemProcessingStatus")
     * @Type("OpenAPI\Server\Model\ItemProcessingStatus")
     */
    protected $status;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->itemId = isset($data['itemId']) ? $data['itemId'] : null;
        $this->errors = isset($data['errors']) ? $data['errors'] : null;
        $this->warnings = isset($data['warnings']) ? $data['warnings'] : null;
        $this->status = isset($data['status']) ? $data['status'] : null;
    }

    /**
     * Gets itemId.
     *
     * @return string|null
     */
    public function getItemId()
    {
        return $this->itemId;
    }

    /**
     * Sets itemId.
     *
     * @param string|null $itemId  The catalog item id in the merchant namespace
     *
     * @return $this
     */
    public function setItemId($itemId = null)
    {
        $this->itemId = $itemId;

        return $this;
    }

    /**
     * Gets errors.
     *
     * @return OpenAPI\Server\Model\ItemValidationEvent[]|null
     */
    public function getErrors(): ?array
    {
        return $this->errors;
    }

    /**
     * Sets errors.
     *
     * @param OpenAPI\Server\Model\ItemValidationEvent[]|null $errors  Array with the validation errors for the item processing record. A non empty errors list causes the item processing to fail.
     *
     * @return $this
     */
    public function setErrors(array $errors = null)
    {
        $this->errors = $errors;

        return $this;
    }

    /**
     * Gets warnings.
     *
     * @return OpenAPI\Server\Model\ItemValidationEvent[]|null
     */
    public function getWarnings(): ?array
    {
        return $this->warnings;
    }

    /**
     * Sets warnings.
     *
     * @param OpenAPI\Server\Model\ItemValidationEvent[]|null $warnings  Array with the validation warnings for the item processing record
     *
     * @return $this
     */
    public function setWarnings(array $warnings = null)
    {
        $this->warnings = $warnings;

        return $this;
    }

    /**
     * Gets status.
     *
     * @return OpenAPI\Server\Model\ItemProcessingStatus|null
     */
    public function getStatus(): ?ItemProcessingStatus
    {
        return $this->status;
    }

    /**
     * Sets status.
     *
     * @param OpenAPI\Server\Model\ItemProcessingStatus|null $status
     *
     * @return $this
     */
    public function setStatus(ItemProcessingStatus $status = null)
    {
        $this->status = $status;

        return $this;
    }
}


