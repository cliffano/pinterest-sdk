<?php
/**
 * LeadFormCommon
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the LeadFormCommon model.
 *
 * Creation fields
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class LeadFormCommon 
{
        /**
     * Internal name of the lead form.
     *
     * @var string|null
     * @SerializedName("name")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $name = null;

    /**
     * A link to the advertiser&#39;s privacy policy. This will be included in the lead form&#39;s disclosure language.
     *
     * @var string|null
     * @SerializedName("privacy_policy_link")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $privacyPolicyLink = null;

    /**
     * Whether the advertiser has accepted Pinterest&#39;s terms of service for creating a lead ad.
     *
     * @var bool|null
     * @SerializedName("has_accepted_terms")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected ?bool $hasAcceptedTerms = null;

    /**
     * A message for people who complete the form to let them know what happens next.
     *
     * @var string|null
     * @SerializedName("completion_message")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $completionMessage = null;

    /**
     * @var LeadFormStatus|null
     * @SerializedName("status")
        * @Accessor(getter="getSerializedStatus")
        * @Type("string")
     */
    protected ?LeadFormStatus $status = null;

    /**
     * Additional disclosure language to be included in the lead form.
     *
     * @var string|null
     * @SerializedName("disclosure_language")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $disclosureLanguage = null;

    /**
     * List of questions to be displayed on the lead form.
     *
     * @var LeadFormQuestion[]|null
     * @SerializedName("questions")
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\LeadFormQuestion")
     * })
     * @Type("array<OpenAPI\Server\Model\LeadFormQuestion>")
     * @Assert\Count(
     *   max = 10
     * )
     * @Assert\Count(
     *   min = 0
     * )
     */
    protected ?array $questions = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->name = array_key_exists('name', $data) ? $data['name'] : $this->name;
            $this->privacyPolicyLink = array_key_exists('privacyPolicyLink', $data) ? $data['privacyPolicyLink'] : $this->privacyPolicyLink;
            $this->hasAcceptedTerms = array_key_exists('hasAcceptedTerms', $data) ? $data['hasAcceptedTerms'] : $this->hasAcceptedTerms;
            $this->completionMessage = array_key_exists('completionMessage', $data) ? $data['completionMessage'] : $this->completionMessage;
            $this->status = array_key_exists('status', $data) ? $data['status'] : $this->status;
            $this->disclosureLanguage = array_key_exists('disclosureLanguage', $data) ? $data['disclosureLanguage'] : $this->disclosureLanguage;
            $this->questions = array_key_exists('questions', $data) ? $data['questions'] : $this->questions;
        }
    }

    /**
     * Gets name.
     *
     * @return string|null
     */
    public function getName(): ?string
    {
        return $this->name;
    }



    /**
     * Sets name.
     *
     * @param string|null $name  Internal name of the lead form.
     *
     * @return $this
     */
    public function setName(?string $name = null): self
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Gets privacyPolicyLink.
     *
     * @return string|null
     */
    public function getPrivacyPolicyLink(): ?string
    {
        return $this->privacyPolicyLink;
    }



    /**
     * Sets privacyPolicyLink.
     *
     * @param string|null $privacyPolicyLink  A link to the advertiser's privacy policy. This will be included in the lead form's disclosure language.
     *
     * @return $this
     */
    public function setPrivacyPolicyLink(?string $privacyPolicyLink = null): self
    {
        $this->privacyPolicyLink = $privacyPolicyLink;

        return $this;
    }

    /**
     * Gets hasAcceptedTerms.
     *
     * @return bool|null
     */
    public function isHasAcceptedTerms(): ?bool
    {
        return $this->hasAcceptedTerms;
    }



    /**
     * Sets hasAcceptedTerms.
     *
     * @param bool|null $hasAcceptedTerms  Whether the advertiser has accepted Pinterest's terms of service for creating a lead ad.
     *
     * @return $this
     */
    public function setHasAcceptedTerms(?bool $hasAcceptedTerms = null): self
    {
        $this->hasAcceptedTerms = $hasAcceptedTerms;

        return $this;
    }

    /**
     * Gets completionMessage.
     *
     * @return string|null
     */
    public function getCompletionMessage(): ?string
    {
        return $this->completionMessage;
    }



    /**
     * Sets completionMessage.
     *
     * @param string|null $completionMessage  A message for people who complete the form to let them know what happens next.
     *
     * @return $this
     */
    public function setCompletionMessage(?string $completionMessage = null): self
    {
        $this->completionMessage = $completionMessage;

        return $this;
    }

    /**
     * Gets status.
     *
     * @return LeadFormStatus|null
     */
    public function getStatus(): ?LeadFormStatus
    {
        return $this->status;
    }

    /**
    * Gets status for serialization.
    *
    * @return string|null
    */
    public function getSerializedStatus(): string|null
    {
        return $this->status?->value ? (string) $this->status->value : null;
    }


    /**
     * Sets status.
     *
     * @param LeadFormStatus|null $status
     *
     * @return $this
     */
    public function setStatus(?LeadFormStatus $status = null): self
    {
        $this->status = $status;

        return $this;
    }

    /**
     * Gets disclosureLanguage.
     *
     * @return string|null
     */
    public function getDisclosureLanguage(): ?string
    {
        return $this->disclosureLanguage;
    }



    /**
     * Sets disclosureLanguage.
     *
     * @param string|null $disclosureLanguage  Additional disclosure language to be included in the lead form.
     *
     * @return $this
     */
    public function setDisclosureLanguage(?string $disclosureLanguage = null): self
    {
        $this->disclosureLanguage = $disclosureLanguage;

        return $this;
    }

    /**
     * Gets questions.
     *
     * @return LeadFormQuestion[]|null
     */
    public function getQuestions(): ?array
    {
        return $this->questions;
    }



    /**
     * Sets questions.
     *
     * @param LeadFormQuestion[]|null $questions  List of questions to be displayed on the lead form.
     *
     * @return $this
     */
    public function setQuestions(?array $questions = null): self
    {
        $this->questions = $questions;

        return $this;
    }
}


