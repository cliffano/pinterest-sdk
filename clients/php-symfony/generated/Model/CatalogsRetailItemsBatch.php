<?php
/**
 * CatalogsRetailItemsBatch
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the CatalogsRetailItemsBatch model.
 *
 * Object describing the catalogs retail items batch
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class CatalogsRetailItemsBatch 
{
        /**
     * Id of the catalogs items batch
     *
     * @var string|null
     * @SerializedName("batch_id")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $batchId = null;

    /**
     * Time of the batch creation: YYYY-MM-DD&#39;T&#39;hh:mm:ssTZD
     *
     * @var \DateTime|null
     * @SerializedName("created_time")
     * @Assert\Type("\DateTime"))
     * @Type("DateTime")
     */
    protected ?\DateTime $createdTime = null;

    /**
     * Time of the batch completion: YYYY-MM-DD&#39;T&#39;hh:mm:ssTZD
     *
     * @var \DateTime|null
     * @SerializedName("completed_time")
     * @Assert\Type("\DateTime"))
     * @Type("DateTime")
     */
    protected ?\DateTime $completedTime = null;

    /**
     * @var BatchOperationStatus|null
     * @SerializedName("status")
        * @Accessor(getter="getSerializedStatus")
        * @Type("string")
     */
    protected ?BatchOperationStatus $status = null;

    /**
     * @var CatalogsType|null
     * @SerializedName("catalog_type")
     * @Assert\NotNull()
     * @Assert\Valid()
        * @Accessor(getter="getSerializedCatalogType")
        * @Type("string")
     */
    protected ?CatalogsType $catalogType = null;

    /**
     * Array with the catalogs items processing records part of the catalogs items batch
     *
     * @var ItemProcessingRecord[]|null
     * @SerializedName("items")
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\ItemProcessingRecord")
     * })
     * @Type("array<OpenAPI\Server\Model\ItemProcessingRecord>")
     */
    protected ?array $items = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->batchId = array_key_exists('batchId', $data) ? $data['batchId'] : $this->batchId;
            $this->createdTime = array_key_exists('createdTime', $data) ? $data['createdTime'] : $this->createdTime;
            $this->completedTime = array_key_exists('completedTime', $data) ? $data['completedTime'] : $this->completedTime;
            $this->status = array_key_exists('status', $data) ? $data['status'] : $this->status;
            $this->catalogType = array_key_exists('catalogType', $data) ? $data['catalogType'] : $this->catalogType;
            $this->items = array_key_exists('items', $data) ? $data['items'] : $this->items;
        }
    }

    /**
     * Gets batchId.
     *
     * @return string|null
     */
    public function getBatchId(): ?string
    {
        return $this->batchId;
    }



    /**
     * Sets batchId.
     *
     * @param string|null $batchId  Id of the catalogs items batch
     *
     * @return $this
     */
    public function setBatchId(?string $batchId = null): self
    {
        $this->batchId = $batchId;

        return $this;
    }

    /**
     * Gets createdTime.
     *
     * @return \DateTime|null
     */
    public function getCreatedTime(): ?\DateTime
    {
        return $this->createdTime;
    }



    /**
     * Sets createdTime.
     *
     * @param \DateTime|null $createdTime  Time of the batch creation: YYYY-MM-DD'T'hh:mm:ssTZD
     *
     * @return $this
     */
    public function setCreatedTime(?\DateTime $createdTime = null): self
    {
        $this->createdTime = $createdTime;

        return $this;
    }

    /**
     * Gets completedTime.
     *
     * @return \DateTime|null
     */
    public function getCompletedTime(): ?\DateTime
    {
        return $this->completedTime;
    }



    /**
     * Sets completedTime.
     *
     * @param \DateTime|null $completedTime  Time of the batch completion: YYYY-MM-DD'T'hh:mm:ssTZD
     *
     * @return $this
     */
    public function setCompletedTime(?\DateTime $completedTime = null): self
    {
        $this->completedTime = $completedTime;

        return $this;
    }

    /**
     * Gets status.
     *
     * @return BatchOperationStatus|null
     */
    public function getStatus(): ?BatchOperationStatus
    {
        return $this->status;
    }

    /**
    * Gets status for serialization.
    *
    * @return string|null
    */
    public function getSerializedStatus(): string|null
    {
        return $this->status?->value ? (string) $this->status->value : null;
    }


    /**
     * Sets status.
     *
     * @param BatchOperationStatus|null $status
     *
     * @return $this
     */
    public function setStatus(?BatchOperationStatus $status = null): self
    {
        $this->status = $status;

        return $this;
    }

    /**
     * Gets catalogType.
     *
     * @return CatalogsType|null
     */
    public function getCatalogType(): ?CatalogsType
    {
        return $this->catalogType;
    }

    /**
    * Gets catalogType for serialization.
    *
    * @return string|null
    */
    public function getSerializedCatalogType(): string|null
    {
        return $this->catalogType?->value ? (string) $this->catalogType->value : null;
    }


    /**
     * Sets catalogType.
     *
     * @param CatalogsType|null $catalogType
     *
     * @return $this
     */
    public function setCatalogType(?CatalogsType $catalogType): self
    {
        $this->catalogType = $catalogType;

        return $this;
    }

    /**
     * Gets items.
     *
     * @return ItemProcessingRecord[]|null
     */
    public function getItems(): ?array
    {
        return $this->items;
    }



    /**
     * Sets items.
     *
     * @param ItemProcessingRecord[]|null $items  Array with the catalogs items processing records part of the catalogs items batch
     *
     * @return $this
     */
    public function setItems(?array $items = null): self
    {
        $this->items = $items;

        return $this;
    }
}


