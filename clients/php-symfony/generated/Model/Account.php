<?php
/**
 * Account
 *
 * PHP version 7.1.3
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: pinterest-api@pinterest.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the Account model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class Account 
{
        /**
     * Type of account
     *
     * @var string|null
     * @SerializedName("account_type")
     * @Assert\Choice({ "PINNER", "BUSINESS" })
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $accountType;

    /**
     * @var string|null
     * @SerializedName("profile_image")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $profileImage;

    /**
     * @var string|null
     * @SerializedName("website_url")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $websiteUrl;

    /**
     * @var string|null
     * @SerializedName("username")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $username;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->accountType = isset($data['accountType']) ? $data['accountType'] : null;
        $this->profileImage = isset($data['profileImage']) ? $data['profileImage'] : null;
        $this->websiteUrl = isset($data['websiteUrl']) ? $data['websiteUrl'] : null;
        $this->username = isset($data['username']) ? $data['username'] : null;
    }

    /**
     * Gets accountType.
     *
     * @return string|null
     */
    public function getAccountType()
    {
        return $this->accountType;
    }

    /**
     * Sets accountType.
     *
     * @param string|null $accountType  Type of account
     *
     * @return $this
     */
    public function setAccountType($accountType = null)
    {
        $this->accountType = $accountType;

        return $this;
    }

    /**
     * Gets profileImage.
     *
     * @return string|null
     */
    public function getProfileImage()
    {
        return $this->profileImage;
    }

    /**
     * Sets profileImage.
     *
     * @param string|null $profileImage
     *
     * @return $this
     */
    public function setProfileImage($profileImage = null)
    {
        $this->profileImage = $profileImage;

        return $this;
    }

    /**
     * Gets websiteUrl.
     *
     * @return string|null
     */
    public function getWebsiteUrl()
    {
        return $this->websiteUrl;
    }

    /**
     * Sets websiteUrl.
     *
     * @param string|null $websiteUrl
     *
     * @return $this
     */
    public function setWebsiteUrl($websiteUrl = null)
    {
        $this->websiteUrl = $websiteUrl;

        return $this;
    }

    /**
     * Gets username.
     *
     * @return string|null
     */
    public function getUsername()
    {
        return $this->username;
    }

    /**
     * Sets username.
     *
     * @param string|null $username
     *
     * @return $this
     */
    public function setUsername($username = null)
    {
        $this->username = $username;

        return $this;
    }
}


