<?php
/**
 * AnalyticsMetricsResponseDailyMetrics
 *
 * PHP version 7.1.3
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: pinterest-api@pinterest.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the AnalyticsMetricsResponseDailyMetrics model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class AnalyticsMetricsResponseDailyMetrics 
{
        /**
     * Metrics availablity, e.g., \&quot;READY\&quot;.
     *
     * @var string|null
     * @SerializedName("data_status")
     * @Assert\Choice({ "PROCESSING", "READY", "ESTIMATE", "BEFORE_BUSINESS_CREATED", "BEFORE_DATA_RETENTION_PERIOD", "BEFORE_PIN_DATA_RETENTION_PERIOD", "BEFORE_METRIC_START_DATE", "BEFORE_CORE_METRIC_START_DATE", "BEFORE_PIN_FORMAT_METRIC_START_DATE", "BEFORE_AUDIENCE_METRIC_START_DATE", "BEFORE_AUDIENCE_MONTHLY_METRIC_START_DATE", "BEFORE_VIDEO_METRIC_START_DATE", "BEFORE_CONVERSION_METRIC_START_DATE", "PURCHASERS_METRIC_SMALLER_THAN_THRESHOLD", "IN_BAD_TAG_DATE", "BEFORE_PUBLISHED_METRIC_START_DATE", "BEFORE_ASSIST_METRIC_START_DATE", "BEFORE_PIN_CREATED", "BEFORE_ACCOUNT_CLAIMED", "BEFORE_DEMOGRAPHIC_FILTERS_START_DATE", "AUDIENCE_SEGMENT_SMALLER_THAN_THRESHOLD", "AUDIENCE_TOTAL_SMALLER_THAN_THRESHOLD", "BEFORE_PRODUCT_GROUP_FILTER_START_DATE" })
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $dataStatus;

    /**
     * Metrics date (UTC): YYYY-MM-DD.
     *
     * @var string|null
     * @SerializedName("date")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $date;

    /**
     * The metric name and daily value for each requested metric
     *
     * @var float[]|null
     * @SerializedName("metrics")
     * @Assert\All({
     *   @Assert\Type("float")
     * })
     * @Type("array<string, float>")
     */
    protected $metrics;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->dataStatus = isset($data['dataStatus']) ? $data['dataStatus'] : null;
        $this->date = isset($data['date']) ? $data['date'] : null;
        $this->metrics = isset($data['metrics']) ? $data['metrics'] : null;
    }

    /**
     * Gets dataStatus.
     *
     * @return string|null
     */
    public function getDataStatus()
    {
        return $this->dataStatus;
    }

    /**
     * Sets dataStatus.
     *
     * @param string|null $dataStatus  Metrics availablity, e.g., \"READY\".
     *
     * @return $this
     */
    public function setDataStatus($dataStatus = null)
    {
        $this->dataStatus = $dataStatus;

        return $this;
    }

    /**
     * Gets date.
     *
     * @return string|null
     */
    public function getDate()
    {
        return $this->date;
    }

    /**
     * Sets date.
     *
     * @param string|null $date  Metrics date (UTC): YYYY-MM-DD.
     *
     * @return $this
     */
    public function setDate($date = null)
    {
        $this->date = $date;

        return $this;
    }

    /**
     * Gets metrics.
     *
     * @return float[]|null
     */
    public function getMetrics(): ?array
    {
        return $this->metrics;
    }

    /**
     * Sets metrics.
     *
     * @param float[]|null $metrics  The metric name and daily value for each requested metric
     *
     * @return $this
     */
    public function setMetrics(array $metrics = null)
    {
        $this->metrics = $metrics;

        return $this;
    }
}


