<?php
/**
 * CatalogProductGroup
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the CatalogProductGroup model.
 *
 * non-promoted catalog product group entity
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class CatalogProductGroup 
{
        /**
     * ID of the catalog product group.
     *
     * @var string|null
     * @SerializedName("id")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $id = null;

    /**
     * Merchant ID pertaining to the owner of the catalog product group.
     *
     * @var string|null
     * @SerializedName("merchant_id")
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Regex("/^\\d+$/")
     */
    protected ?string $merchantId = null;

    /**
     * Name of catalog product group
     *
     * @var string|null
     * @SerializedName("name")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $name = null;

    /**
     * Object holding a list of filters
     *
     * @var array|null
     * @SerializedName("filters")
     * @Assert\Type("array")
     * @Type("array")
     */
    protected ?array $filters = null;

    /**
     * Object holding a list of filters
     *
     * @var array|null
     * @SerializedName("filter_v2")
     * @Assert\Type("array")
     * @Type("array")
     */
    protected ?array $filterV2 = null;

    /**
     * @var Board|null
     * @SerializedName("type")
     * @Assert\Type("OpenAPI\Server\Model\Board")
     * @Type("OpenAPI\Server\Model\Board")
     */
    protected ?Board $type = null;

    /**
     * @var EntityStatus|null
     * @SerializedName("status")
        * @Accessor(getter="getSerializedStatus")
        * @Type("string")
     */
    protected ?EntityStatus $status = null;

    /**
     * id of the feed profile belonging to this catalog product group
     *
     * @var string|null
     * @SerializedName("feed_profile_id")
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Regex("/^\\d+$/")
     */
    protected ?string $feedProfileId = null;

    /**
     * Unix timestamp in seconds of when catalog product group was created.
     *
     * @var int|null
     * @SerializedName("created_at")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected ?int $createdAt = null;

    /**
     * Unix timestamp in seconds of last time catalog product group was updated.
     *
     * @var int|null
     * @SerializedName("last_update")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected ?int $lastUpdate = null;

    /**
     * Amount of products in the catalog product group
     *
     * @var int|null
     * @SerializedName("product_count")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected ?int $productCount = null;

    /**
     * index of the featured position of the catalog product group
     *
     * @var int|null
     * @SerializedName("featured_position")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected ?int $featuredPosition = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->id = array_key_exists('id', $data) ? $data['id'] : $this->id;
            $this->merchantId = array_key_exists('merchantId', $data) ? $data['merchantId'] : $this->merchantId;
            $this->name = array_key_exists('name', $data) ? $data['name'] : $this->name;
            $this->filters = array_key_exists('filters', $data) ? $data['filters'] : $this->filters;
            $this->filterV2 = array_key_exists('filterV2', $data) ? $data['filterV2'] : $this->filterV2;
            $this->type = array_key_exists('type', $data) ? $data['type'] : $this->type;
            $this->status = array_key_exists('status', $data) ? $data['status'] : $this->status;
            $this->feedProfileId = array_key_exists('feedProfileId', $data) ? $data['feedProfileId'] : $this->feedProfileId;
            $this->createdAt = array_key_exists('createdAt', $data) ? $data['createdAt'] : $this->createdAt;
            $this->lastUpdate = array_key_exists('lastUpdate', $data) ? $data['lastUpdate'] : $this->lastUpdate;
            $this->productCount = array_key_exists('productCount', $data) ? $data['productCount'] : $this->productCount;
            $this->featuredPosition = array_key_exists('featuredPosition', $data) ? $data['featuredPosition'] : $this->featuredPosition;
        }
    }

    /**
     * Gets id.
     *
     * @return string|null
     */
    public function getId(): ?string
    {
        return $this->id;
    }



    /**
     * Sets id.
     *
     * @param string|null $id  ID of the catalog product group.
     *
     * @return $this
     */
    public function setId(?string $id = null): self
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets merchantId.
     *
     * @return string|null
     */
    public function getMerchantId(): ?string
    {
        return $this->merchantId;
    }



    /**
     * Sets merchantId.
     *
     * @param string|null $merchantId  Merchant ID pertaining to the owner of the catalog product group.
     *
     * @return $this
     */
    public function setMerchantId(?string $merchantId = null): self
    {
        $this->merchantId = $merchantId;

        return $this;
    }

    /**
     * Gets name.
     *
     * @return string|null
     */
    public function getName(): ?string
    {
        return $this->name;
    }



    /**
     * Sets name.
     *
     * @param string|null $name  Name of catalog product group
     *
     * @return $this
     */
    public function setName(?string $name = null): self
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Gets filters.
     *
     * @return array|null
     */
    public function getFilters(): ?array
    {
        return $this->filters;
    }



    /**
     * Sets filters.
     *
     * @param array|null $filters  Object holding a list of filters
     *
     * @return $this
     */
    public function setFilters(?array $filters = null): self
    {
        $this->filters = $filters;

        return $this;
    }

    /**
     * Gets filterV2.
     *
     * @return array|null
     */
    public function getFilterV2(): ?array
    {
        return $this->filterV2;
    }



    /**
     * Sets filterV2.
     *
     * @param array|null $filterV2  Object holding a list of filters
     *
     * @return $this
     */
    public function setFilterV2(?array $filterV2 = null): self
    {
        $this->filterV2 = $filterV2;

        return $this;
    }

    /**
     * Gets type.
     *
     * @return Board|null
     */
    public function getType(): ?Board
    {
        return $this->type;
    }



    /**
     * Sets type.
     *
     * @param Board|null $type
     *
     * @return $this
     */
    public function setType(?Board $type = null): self
    {
        $this->type = $type;

        return $this;
    }

    /**
     * Gets status.
     *
     * @return EntityStatus|null
     */
    public function getStatus(): ?EntityStatus
    {
        return $this->status;
    }

    /**
    * Gets status for serialization.
    *
    * @return string|null
    */
    public function getSerializedStatus(): string|null
    {
        return $this->status?->value ? (string) $this->status->value : null;
    }


    /**
     * Sets status.
     *
     * @param EntityStatus|null $status
     *
     * @return $this
     */
    public function setStatus(?EntityStatus $status = null): self
    {
        $this->status = $status;

        return $this;
    }

    /**
     * Gets feedProfileId.
     *
     * @return string|null
     */
    public function getFeedProfileId(): ?string
    {
        return $this->feedProfileId;
    }



    /**
     * Sets feedProfileId.
     *
     * @param string|null $feedProfileId  id of the feed profile belonging to this catalog product group
     *
     * @return $this
     */
    public function setFeedProfileId(?string $feedProfileId = null): self
    {
        $this->feedProfileId = $feedProfileId;

        return $this;
    }

    /**
     * Gets createdAt.
     *
     * @return int|null
     */
    public function getCreatedAt(): ?int
    {
        return $this->createdAt;
    }



    /**
     * Sets createdAt.
     *
     * @param int|null $createdAt  Unix timestamp in seconds of when catalog product group was created.
     *
     * @return $this
     */
    public function setCreatedAt(?int $createdAt = null): self
    {
        $this->createdAt = $createdAt;

        return $this;
    }

    /**
     * Gets lastUpdate.
     *
     * @return int|null
     */
    public function getLastUpdate(): ?int
    {
        return $this->lastUpdate;
    }



    /**
     * Sets lastUpdate.
     *
     * @param int|null $lastUpdate  Unix timestamp in seconds of last time catalog product group was updated.
     *
     * @return $this
     */
    public function setLastUpdate(?int $lastUpdate = null): self
    {
        $this->lastUpdate = $lastUpdate;

        return $this;
    }

    /**
     * Gets productCount.
     *
     * @return int|null
     */
    public function getProductCount(): ?int
    {
        return $this->productCount;
    }



    /**
     * Sets productCount.
     *
     * @param int|null $productCount  Amount of products in the catalog product group
     *
     * @return $this
     */
    public function setProductCount(?int $productCount = null): self
    {
        $this->productCount = $productCount;

        return $this;
    }

    /**
     * Gets featuredPosition.
     *
     * @return int|null
     */
    public function getFeaturedPosition(): ?int
    {
        return $this->featuredPosition;
    }



    /**
     * Sets featuredPosition.
     *
     * @param int|null $featuredPosition  index of the featured position of the catalog product group
     *
     * @return $this
     */
    public function setFeaturedPosition(?int $featuredPosition = null): self
    {
        $this->featuredPosition = $featuredPosition;

        return $this;
    }
}


