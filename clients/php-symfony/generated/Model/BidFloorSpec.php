<?php
/**
 * BidFloorSpec
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the BidFloorSpec model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class BidFloorSpec 
{
        /**
     * @var Country[]|null
     * @SerializedName("countries")
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\Country")
     * })
     * @Accessor(getter="getSerializedCountries")
     * @Type("array<string>")
     */
    protected ?array $countries = null;

    /**
     * @var Currency|null
     * @SerializedName("currency")
     * @Assert\NotNull()
     * @Assert\Valid()
        * @Accessor(getter="getSerializedCurrency")
        * @Type("string")
     */
    protected ?Currency $currency = null;

    /**
     * @var ObjectiveType|null
     * @SerializedName("objective_type")
        * @Accessor(getter="getSerializedObjectiveType")
        * @Type("string")
     */
    protected ?ObjectiveType $objectiveType = null;

    /**
     * @var ActionType|null
     * @SerializedName("billable_event")
     * @Assert\NotNull()
     * @Assert\Valid()
        * @Accessor(getter="getSerializedBillableEvent")
        * @Type("string")
     */
    protected ?ActionType $billableEvent = null;

    /**
     * @var OptimizationGoalMetadata|null
     * @SerializedName("optimization_goal_metadata")
     * @Assert\Type("OpenAPI\Server\Model\OptimizationGoalMetadata")
     * @Type("OpenAPI\Server\Model\OptimizationGoalMetadata")
     */
    protected ?OptimizationGoalMetadata $optimizationGoalMetadata = null;

    /**
     * @var CreativeType|null
     * @SerializedName("creative_type")
        * @Accessor(getter="getSerializedCreativeType")
        * @Type("string")
     */
    protected ?CreativeType $creativeType = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->countries = array_key_exists('countries', $data) ? $data['countries'] : $this->countries;
            $this->currency = array_key_exists('currency', $data) ? $data['currency'] : $this->currency;
            $this->objectiveType = array_key_exists('objectiveType', $data) ? $data['objectiveType'] : $this->objectiveType;
            $this->billableEvent = array_key_exists('billableEvent', $data) ? $data['billableEvent'] : $this->billableEvent;
            $this->optimizationGoalMetadata = array_key_exists('optimizationGoalMetadata', $data) ? $data['optimizationGoalMetadata'] : $this->optimizationGoalMetadata;
            $this->creativeType = array_key_exists('creativeType', $data) ? $data['creativeType'] : $this->creativeType;
        }
    }

    /**
     * Gets countries.
     *
     * @return Country[]|null
     */
    public function getCountries(): ?array
    {
        return $this->countries;
    }


    /**
    * Gets countries for serialization.
    *
    * @return array
    */
    public function getSerializedCountries(): array
    {
        return array_map(
            static fn ($value) => (string) $value->value,
            $this->test ?? []
        );
    }

    /**
     * Sets countries.
     *
     * @param Country[]|null $countries
     *
     * @return $this
     */
    public function setCountries(?array $countries = null): self
    {
        $this->countries = $countries;

        return $this;
    }

    /**
     * Gets currency.
     *
     * @return Currency|null
     */
    public function getCurrency(): ?Currency
    {
        return $this->currency;
    }

    /**
    * Gets currency for serialization.
    *
    * @return string|null
    */
    public function getSerializedCurrency(): string|null
    {
        return $this->currency?->value ? (string) $this->currency->value : null;
    }


    /**
     * Sets currency.
     *
     * @param Currency|null $currency
     *
     * @return $this
     */
    public function setCurrency(?Currency $currency): self
    {
        $this->currency = $currency;

        return $this;
    }

    /**
     * Gets objectiveType.
     *
     * @return ObjectiveType|null
     */
    public function getObjectiveType(): ?ObjectiveType
    {
        return $this->objectiveType;
    }

    /**
    * Gets objectiveType for serialization.
    *
    * @return string|null
    */
    public function getSerializedObjectiveType(): string|null
    {
        return $this->objectiveType?->value ? (string) $this->objectiveType->value : null;
    }


    /**
     * Sets objectiveType.
     *
     * @param ObjectiveType|null $objectiveType
     *
     * @return $this
     */
    public function setObjectiveType(?ObjectiveType $objectiveType = null): self
    {
        $this->objectiveType = $objectiveType;

        return $this;
    }

    /**
     * Gets billableEvent.
     *
     * @return ActionType|null
     */
    public function getBillableEvent(): ?ActionType
    {
        return $this->billableEvent;
    }

    /**
    * Gets billableEvent for serialization.
    *
    * @return string|null
    */
    public function getSerializedBillableEvent(): string|null
    {
        return $this->billableEvent?->value ? (string) $this->billableEvent->value : null;
    }


    /**
     * Sets billableEvent.
     *
     * @param ActionType|null $billableEvent
     *
     * @return $this
     */
    public function setBillableEvent(?ActionType $billableEvent): self
    {
        $this->billableEvent = $billableEvent;

        return $this;
    }

    /**
     * Gets optimizationGoalMetadata.
     *
     * @return OptimizationGoalMetadata|null
     */
    public function getOptimizationGoalMetadata(): ?OptimizationGoalMetadata
    {
        return $this->optimizationGoalMetadata;
    }



    /**
     * Sets optimizationGoalMetadata.
     *
     * @param OptimizationGoalMetadata|null $optimizationGoalMetadata
     *
     * @return $this
     */
    public function setOptimizationGoalMetadata(?OptimizationGoalMetadata $optimizationGoalMetadata = null): self
    {
        $this->optimizationGoalMetadata = $optimizationGoalMetadata;

        return $this;
    }

    /**
     * Gets creativeType.
     *
     * @return CreativeType|null
     */
    public function getCreativeType(): ?CreativeType
    {
        return $this->creativeType;
    }

    /**
    * Gets creativeType for serialization.
    *
    * @return string|null
    */
    public function getSerializedCreativeType(): string|null
    {
        return $this->creativeType?->value ? (string) $this->creativeType->value : null;
    }


    /**
     * Sets creativeType.
     *
     * @param CreativeType|null $creativeType
     *
     * @return $this
     */
    public function setCreativeType(?CreativeType $creativeType = null): self
    {
        $this->creativeType = $creativeType;

        return $this;
    }
}


