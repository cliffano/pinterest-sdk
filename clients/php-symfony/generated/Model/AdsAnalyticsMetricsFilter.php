<?php
/**
 * AdsAnalyticsMetricsFilter
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the AdsAnalyticsMetricsFilter model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class AdsAnalyticsMetricsFilter 
{
        /**
     * @var AdsAnalyticsFilterColumn|null
     * @SerializedName("field")
     * @Assert\NotNull()
     * @Assert\Valid()
        * @Accessor(getter="getSerializedField")
        * @Type("string")
     */
    protected ?AdsAnalyticsFilterColumn $field = null;

    /**
     * @var AdsAnalyticsFilterOperator|null
     * @SerializedName("operator")
     * @Assert\NotNull()
     * @Assert\Valid()
        * @Accessor(getter="getSerializedOperator")
        * @Type("string")
     */
    protected ?AdsAnalyticsFilterOperator $operator = null;

    /**
     * List of values for filtering
     *
     * @var float[]|null
     * @SerializedName("values")
     * @Assert\NotNull()
     * @Assert\All({
     *   @Assert\Type("float")
     * })
     * @Type("array<float>")
     * @Assert\Count(
     *   min = 1
     * )
     */
    protected ?array $values = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->field = array_key_exists('field', $data) ? $data['field'] : $this->field;
            $this->operator = array_key_exists('operator', $data) ? $data['operator'] : $this->operator;
            $this->values = array_key_exists('values', $data) ? $data['values'] : $this->values;
        }
    }

    /**
     * Gets field.
     *
     * @return AdsAnalyticsFilterColumn|null
     */
    public function getField(): ?AdsAnalyticsFilterColumn
    {
        return $this->field;
    }

    /**
    * Gets field for serialization.
    *
    * @return string|null
    */
    public function getSerializedField(): string|null
    {
        return $this->field?->value ? (string) $this->field->value : null;
    }


    /**
     * Sets field.
     *
     * @param AdsAnalyticsFilterColumn|null $field
     *
     * @return $this
     */
    public function setField(?AdsAnalyticsFilterColumn $field): self
    {
        $this->field = $field;

        return $this;
    }

    /**
     * Gets operator.
     *
     * @return AdsAnalyticsFilterOperator|null
     */
    public function getOperator(): ?AdsAnalyticsFilterOperator
    {
        return $this->operator;
    }

    /**
    * Gets operator for serialization.
    *
    * @return string|null
    */
    public function getSerializedOperator(): string|null
    {
        return $this->operator?->value ? (string) $this->operator->value : null;
    }


    /**
     * Sets operator.
     *
     * @param AdsAnalyticsFilterOperator|null $operator
     *
     * @return $this
     */
    public function setOperator(?AdsAnalyticsFilterOperator $operator): self
    {
        $this->operator = $operator;

        return $this;
    }

    /**
     * Gets values.
     *
     * @return float[]|null
     */
    public function getValues(): ?array
    {
        return $this->values;
    }



    /**
     * Sets values.
     *
     * @param float[]|null $values  List of values for filtering
     *
     * @return $this
     */
    public function setValues(?array $values): self
    {
        $this->values = $values;

        return $this;
    }
}


