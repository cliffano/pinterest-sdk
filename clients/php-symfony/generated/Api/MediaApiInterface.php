<?php
/**
 * MediaApiInterface
 * PHP version 7.1.3
 *
 * @category Class
 * @package  OpenAPI\Server
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: pinterest-api@pinterest.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Api;

use Symfony\Component\HttpFoundation\File\UploadedFile;
use OpenAPI\Server\Model\Error;
use OpenAPI\Server\Model\MediaUpload;
use OpenAPI\Server\Model\MediaUploadDetails;
use OpenAPI\Server\Model\MediaUploadRequest;
use OpenAPI\Server\Model\Paginated;

/**
 * MediaApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  OpenAPI\Server\Api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */
interface MediaApiInterface
{

    /**
     * Sets authentication method pinterest_oauth2
     *
     * @param string $value Value of the pinterest_oauth2 authentication method.
     *
     * @return void
     */
    public function setpinterest_oauth2($value);

    /**
     * Sets authentication method pinterest_oauth2
     *
     * @param string $value Value of the pinterest_oauth2 authentication method.
     *
     * @return void
     */
    public function setpinterest_oauth2($value);

    /**
     * Operation mediaCreate
     *
     * Register media upload
     *
     * @param  \OpenAPI\Server\Model\MediaUploadRequest $mediaUploadRequest  Create a media upload request (required)
     * @param  \int $responseCode     The HTTP response code to return
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\MediaUpload
     */
    public function mediaCreate(MediaUploadRequest $mediaUploadRequest, &$responseCode, array &$responseHeaders);

    /**
     * Operation mediaGet
     *
     * Get media upload details
     *
     * @param  \string $mediaId  Media identifier (required)
     * @param  \int $responseCode     The HTTP response code to return
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\MediaUploadDetails
     */
    public function mediaGet($mediaId, &$responseCode, array &$responseHeaders);

    /**
     * Operation mediaList
     *
     * List media uploads
     *
     * @param  \string $bookmark  Cursor used to fetch the next page of items (optional)
     * @param  \int $pageSize  Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Pagination&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param  \int $responseCode     The HTTP response code to return
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \Paginated
     */
    public function mediaList($bookmark = null, $pageSize = 25, &$responseCode, array &$responseHeaders);
}
