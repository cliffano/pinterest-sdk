<?php
/**
 * BoardsApiInterface
 * PHP version 7.1.3
 *
 * @category Class
 * @package  OpenAPI\Server
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: pinterest-api@pinterest.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Api;

use Symfony\Component\HttpFoundation\File\UploadedFile;
use OpenAPI\Server\Model\Board;
use OpenAPI\Server\Model\BoardSection;
use OpenAPI\Server\Model\BoardUpdate;
use OpenAPI\Server\Model\Error;
use OpenAPI\Server\Model\Paginated;

/**
 * BoardsApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  OpenAPI\Server\Api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */
interface BoardsApiInterface
{

    /**
     * Sets authentication method pinterest_oauth2
     *
     * @param string $value Value of the pinterest_oauth2 authentication method.
     *
     * @return void
     */
    public function setpinterest_oauth2($value);

    /**
     * Sets authentication method pinterest_oauth2
     *
     * @param string $value Value of the pinterest_oauth2 authentication method.
     *
     * @return void
     */
    public function setpinterest_oauth2($value);

    /**
     * Sets authentication method pinterest_oauth2
     *
     * @param string $value Value of the pinterest_oauth2 authentication method.
     *
     * @return void
     */
    public function setpinterest_oauth2($value);

    /**
     * Operation boardSectionsCreate
     *
     * Create board section
     *
     * @param  \string $boardId  Unique identifier of a board. (required)
     * @param  \OpenAPI\Server\Model\BoardSection $boardSection  Create a board section. (required)
     * @param  \int $responseCode     The HTTP response code to return
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\BoardSection
     */
    public function boardSectionsCreate($boardId, BoardSection $boardSection, &$responseCode, array &$responseHeaders);

    /**
     * Operation boardSectionsDelete
     *
     * Delete board section
     *
     * @param  \string $boardId  Unique identifier of a board. (required)
     * @param  \string $sectionId  Unique identifier of a board section. (required)
     * @param  \int $responseCode     The HTTP response code to return
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function boardSectionsDelete($boardId, $sectionId, &$responseCode, array &$responseHeaders);

    /**
     * Operation boardSectionsList
     *
     * List board sections
     *
     * @param  \string $boardId  Unique identifier of a board. (required)
     * @param  \string $bookmark  Cursor used to fetch the next page of items (optional)
     * @param  \int $pageSize  Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Pagination&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param  \int $responseCode     The HTTP response code to return
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \Paginated
     */
    public function boardSectionsList($boardId, $bookmark = null, $pageSize = 25, &$responseCode, array &$responseHeaders);

    /**
     * Operation boardSectionsListPins
     *
     * List Pins on board section
     *
     * @param  \string $boardId  Unique identifier of a board. (required)
     * @param  \string $sectionId  Unique identifier of a board section. (required)
     * @param  \string $bookmark  Cursor used to fetch the next page of items (optional)
     * @param  \int $pageSize  Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Pagination&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param  \int $responseCode     The HTTP response code to return
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \Paginated
     */
    public function boardSectionsListPins($boardId, $sectionId, $bookmark = null, $pageSize = 25, &$responseCode, array &$responseHeaders);

    /**
     * Operation boardSectionsUpdate
     *
     * Update board section
     *
     * @param  \string $boardId  Unique identifier of a board. (required)
     * @param  \string $sectionId  Unique identifier of a board section. (required)
     * @param  \OpenAPI\Server\Model\BoardSection $boardSection  Update a board section. (required)
     * @param  \int $responseCode     The HTTP response code to return
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\BoardSection
     */
    public function boardSectionsUpdate($boardId, $sectionId, BoardSection $boardSection, &$responseCode, array &$responseHeaders);

    /**
     * Operation boardsCreate
     *
     * Create board
     *
     * @param  \OpenAPI\Server\Model\Board $board  Create a board using a single board json object. (required)
     * @param  \int $responseCode     The HTTP response code to return
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\Board
     */
    public function boardsCreate(Board $board, &$responseCode, array &$responseHeaders);

    /**
     * Operation boardsDelete
     *
     * Delete board
     *
     * @param  \string $boardId  Unique identifier of a board. (required)
     * @param  \int $responseCode     The HTTP response code to return
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function boardsDelete($boardId, &$responseCode, array &$responseHeaders);

    /**
     * Operation boardsGet
     *
     * Get board
     *
     * @param  \string $boardId  Unique identifier of a board. (required)
     * @param  \int $responseCode     The HTTP response code to return
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\Board
     */
    public function boardsGet($boardId, &$responseCode, array &$responseHeaders);

    /**
     * Operation boardsList
     *
     * List boards
     *
     * @param  \string $bookmark  Cursor used to fetch the next page of items (optional)
     * @param  \int $pageSize  Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Pagination&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param  \string $privacy  Privacy setting for a board. (optional)
     * @param  \int $responseCode     The HTTP response code to return
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \Paginated
     */
    public function boardsList($bookmark = null, $pageSize = 25, $privacy = null, &$responseCode, array &$responseHeaders);

    /**
     * Operation boardsListPins
     *
     * List Pins on board
     *
     * @param  \string $boardId  Unique identifier of a board. (required)
     * @param  \string $bookmark  Cursor used to fetch the next page of items (optional)
     * @param  \int $pageSize  Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Pagination&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param  \int $responseCode     The HTTP response code to return
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \Paginated
     */
    public function boardsListPins($boardId, $bookmark = null, $pageSize = 25, &$responseCode, array &$responseHeaders);

    /**
     * Operation boardsUpdate
     *
     * Update board
     *
     * @param  \string $boardId  Unique identifier of a board. (required)
     * @param  \OpenAPI\Server\Model\BoardUpdate $boardUpdate  Update a board. (required)
     * @param  \int $responseCode     The HTTP response code to return
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\Board
     */
    public function boardsUpdate($boardId, BoardUpdate $boardUpdate, &$responseCode, array &$responseHeaders);
}
