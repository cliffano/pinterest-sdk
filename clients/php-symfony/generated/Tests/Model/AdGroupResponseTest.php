<?php
/**
 * AdGroupResponseTest
 *
 * PHP version 7.1.3
 *
 * @category Class
 * @package  OpenAPI\Server\Tests\Model
 * @author   openapi-generator contributors
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: blah@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Server\Model;

use PHPUnit\Framework\TestCase;

/**
 * AdGroupResponseTest Class Doc Comment
 *
 * @category    Class */
// * @description AdGroupResponse
/**
 * @package     OpenAPI\Server\Tests\Model
 * @author      openapi-generator contributors
 * @link        https://github.com/openapitools/openapi-generator
 */
class AdGroupResponseTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "AdGroupResponse"
     */
    public function testAdGroupResponse()
    {
        $testAdGroupResponse = new AdGroupResponse();
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
    }

    /**
     * Test attribute "status"
     */
    public function testPropertyStatus()
    {
    }

    /**
     * Test attribute "budgetInMicroCurrency"
     */
    public function testPropertyBudgetInMicroCurrency()
    {
    }

    /**
     * Test attribute "bidInMicroCurrency"
     */
    public function testPropertyBidInMicroCurrency()
    {
    }

    /**
     * Test attribute "budgetType"
     */
    public function testPropertyBudgetType()
    {
    }

    /**
     * Test attribute "startTime"
     */
    public function testPropertyStartTime()
    {
    }

    /**
     * Test attribute "endTime"
     */
    public function testPropertyEndTime()
    {
    }

    /**
     * Test attribute "targetingSpec"
     */
    public function testPropertyTargetingSpec()
    {
    }

    /**
     * Test attribute "lifetimeFrequencyCap"
     */
    public function testPropertyLifetimeFrequencyCap()
    {
    }

    /**
     * Test attribute "trackingUrls"
     */
    public function testPropertyTrackingUrls()
    {
    }

    /**
     * Test attribute "autoTargetingEnabled"
     */
    public function testPropertyAutoTargetingEnabled()
    {
    }

    /**
     * Test attribute "placementGroup"
     */
    public function testPropertyPlacementGroup()
    {
    }

    /**
     * Test attribute "pacingDeliveryType"
     */
    public function testPropertyPacingDeliveryType()
    {
    }

    /**
     * Test attribute "conversionLearningModeType"
     */
    public function testPropertyConversionLearningModeType()
    {
    }

    /**
     * Test attribute "summaryStatus"
     */
    public function testPropertySummaryStatus()
    {
    }

    /**
     * Test attribute "feedProfileId"
     */
    public function testPropertyFeedProfileId()
    {
    }

    /**
     * Test attribute "campaignId"
     */
    public function testPropertyCampaignId()
    {
    }

    /**
     * Test attribute "billableEvent"
     */
    public function testPropertyBillableEvent()
    {
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
    }

    /**
     * Test attribute "type"
     */
    public function testPropertyType()
    {
    }

    /**
     * Test attribute "adAccountId"
     */
    public function testPropertyAdAccountId()
    {
    }

    /**
     * Test attribute "createdTime"
     */
    public function testPropertyCreatedTime()
    {
    }

    /**
     * Test attribute "updatedTime"
     */
    public function testPropertyUpdatedTime()
    {
    }
}
