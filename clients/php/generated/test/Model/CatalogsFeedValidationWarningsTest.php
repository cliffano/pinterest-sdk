<?php
/**
 * CatalogsFeedValidationWarningsTest
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: blah@cliffano.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * CatalogsFeedValidationWarningsTest Class Doc Comment
 *
 * @category    Class
 * @description CatalogsFeedValidationWarnings
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class CatalogsFeedValidationWarningsTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "CatalogsFeedValidationWarnings"
     */
    public function testCatalogsFeedValidationWarnings()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "title_length_too_long"
     */
    public function testPropertyTitleLengthTooLong()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "description_length_too_long"
     */
    public function testPropertyDescriptionLengthTooLong()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gender_invalid"
     */
    public function testPropertyGenderInvalid()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "age_group_invalid"
     */
    public function testPropertyAgeGroupInvalid()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "size_type_invalid"
     */
    public function testPropertySizeTypeInvalid()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "link_format_warning"
     */
    public function testPropertyLinkFormatWarning()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "duplicate_products"
     */
    public function testPropertyDuplicateProducts()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "duplicate_links"
     */
    public function testPropertyDuplicateLinks()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sales_price_invalid"
     */
    public function testPropertySalesPriceInvalid()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_category_depth_warning"
     */
    public function testPropertyProductCategoryDepthWarning()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "adwords_same_as_link"
     */
    public function testPropertyAdwordsSameAsLink()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "duplicate_headers"
     */
    public function testPropertyDuplicateHeaders()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "fetch_same_signature"
     */
    public function testPropertyFetchSameSignature()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "adwords_format_warning"
     */
    public function testPropertyAdwordsFormatWarning()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "additional_image_link_warning"
     */
    public function testPropertyAdditionalImageLinkWarning()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "image_link_warning"
     */
    public function testPropertyImageLinkWarning()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "shipping_invalid"
     */
    public function testPropertyShippingInvalid()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tax_invalid"
     */
    public function testPropertyTaxInvalid()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "shipping_weight_invalid"
     */
    public function testPropertyShippingWeightInvalid()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "expiration_date_invalid"
     */
    public function testPropertyExpirationDateInvalid()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "availability_date_invalid"
     */
    public function testPropertyAvailabilityDateInvalid()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sale_date_invalid"
     */
    public function testPropertySaleDateInvalid()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "weight_unit_invalid"
     */
    public function testPropertyWeightUnitInvalid()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_bundle_invalid"
     */
    public function testPropertyIsBundleInvalid()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "updated_time_invalid"
     */
    public function testPropertyUpdatedTimeInvalid()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "custom_label_length_too_long"
     */
    public function testPropertyCustomLabelLengthTooLong()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_type_length_too_long"
     */
    public function testPropertyProductTypeLengthTooLong()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "too_many_additional_image_links"
     */
    public function testPropertyTooManyAdditionalImageLinks()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "multipack_invalid"
     */
    public function testPropertyMultipackInvalid()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "indexed_product_count_large_delta"
     */
    public function testPropertyIndexedProductCountLargeDelta()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_additional_image_download_failure"
     */
    public function testPropertyItemAdditionalImageDownloadFailure()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "optional_product_category_missing"
     */
    public function testPropertyOptionalProductCategoryMissing()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "optional_product_category_invalid"
     */
    public function testPropertyOptionalProductCategoryInvalid()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "optional_condition_missing"
     */
    public function testPropertyOptionalConditionMissing()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "optional_condition_invalid"
     */
    public function testPropertyOptionalConditionInvalid()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ios_deep_link_invalid"
     */
    public function testPropertyIosDeepLinkInvalid()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "android_deep_link_invalid"
     */
    public function testPropertyAndroidDeepLinkInvalid()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "availability_normalized"
     */
    public function testPropertyAvailabilityNormalized()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "condition_normalized"
     */
    public function testPropertyConditionNormalized()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gender_normalized"
     */
    public function testPropertyGenderNormalized()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "size_type_normalized"
     */
    public function testPropertySizeTypeNormalized()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "age_group_normalized"
     */
    public function testPropertyAgeGroupNormalized()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "utm_source_auto_corrected"
     */
    public function testPropertyUtmSourceAutoCorrected()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "country_does_not_map_to_currency"
     */
    public function testPropertyCountryDoesNotMapToCurrency()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "min_ad_price_invalid"
     */
    public function testPropertyMinAdPriceInvalid()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
