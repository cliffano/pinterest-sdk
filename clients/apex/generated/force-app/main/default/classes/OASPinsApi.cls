/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: pinterest-api@pinterest.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASPinsApi {
    OASClient client;

    public OASPinsApi(OASClient client) {
        this.client = client;
    }

    public OASPinsApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Get Pin analytics
     * Get analytics for a Pin owned by the &quot;operation user_account&quot; - or on a group board that has been shared with this account.\n- By default, the &quot;operation user_account&quot; is the token user_account.\n\nOptional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&quot;https://developers.pinterest.com/docs/api/v5/#operation/ad_accounts/list&quot;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the &quot;operation user_account&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account:\n\n- For Pins on public or protected boards: Admin, Analyst.\n- For Pins on secret boards: Admin.
     * @param pinId Unique identifier of a Pin. (required)
     * @param startDate Metric report start date (UTC). Format: YYYY-MM-DD (required)
     * @param endDate Metric report end date (UTC). Format: YYYY-MM-DD (required)
     * @param metricTypes Pin metric types to get data for, default is all. (required)
     * @param appTypes Apps or devices to get data for, default is all. (optional, default to ALL)
     * @param splitField How to split the data into groups. Not including this param means data won\&#39;t be split. (optional, default to NO_SPLIT)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return Map<String, OASAnalyticsMetricsResponse>
     * @throws OAS.ApiException if fails to make API call
     */
    public Map<String, OASAnalyticsMetricsResponse> pinsAnalytics(Map<String, Object> params) {
        client.assertNotNull(params.get('pinId'), 'pinId');
        client.assertNotNull(params.get('startDate'), 'startDate');
        client.assertNotNull(params.get('endDate'), 'endDate');
        client.assertNotNull(params.get('metricTypes'), 'metricTypes');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('start_date', (Date) params.get('startDate')));
        query.addAll(client.makeParam('end_date', (Date) params.get('endDate')));
        query.addAll(client.makeParam('app_types', (String) params.get('appTypes')));
        query.addAll(client.makeParam('metric_types', (List<String>) params.get('metricTypes'), 'csv'));
        query.addAll(client.makeParam('split_field', (String) params.get('splitField')));
        query.addAll(client.makeParam('ad_account_id', (String) params.get('adAccountId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (Map<String, OASAnalyticsMetricsResponse>) client.invoke(
            'GET', '/pins/{pin_id}/analytics', '',
            query, form,
            new Map<String, Object>{
                'pin_id' => (String) params.get('pinId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            Map<String, OASAnalyticsMetricsResponse>.class
        );
    }
    /**
     * Create Pin
     * Create a Pin on a board or board section owned by the &quot;operation user_account&quot;.\n\nNote: If the current &quot;operation user_account&quot; (defined by the access token) has access to another user\&#39;s Ad Accounts via Pinterest Business Access, you can modify your request to make use of the current operation_user_account\&#39;s permissions to those Ad Accounts by including the ad_account_id in the path parameters for the request (e.g. .../?ad_account_id&#x3D;12345&amp;...).\n\n- This function is intended solely for publishing new content created by the user. If you are interested in saving content created by others to your Pinterest boards, sometimes called \&#39;curated content\&#39;, please use our &lt;a href&#x3D;\&#39;/docs/add-ons/save-button\&#39;&gt;Save button&lt;/a&gt; instead. For more tips on creating fresh content for Pinterest, review our &lt;a href&#x3D;\&#39;/docs/solutions/content-apps\&#39;&gt;Content App Solutions Guide&lt;/a&gt;.\n\n&lt;strong&gt;&lt;a href&#x3D;\&#39;/docs/solutions/content-apps/#creatingvideopins\&#39;&gt;Learn more&lt;/a&gt;&lt;/strong&gt; about video Pin creation.
     * @param oaSPin Create a new Pin. (required)
     * @return OASPin
     * @throws OAS.ApiException if fails to make API call
     */
    public OASPin pinsCreate(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSPin'), 'oaSPin');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASPin) client.invoke(
            'POST', '/pins',
            (OASPin) params.get('oaSPin'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASPin.class
        );
    }
    /**
     * Delete Pin
     * Delete a Pins owned by the &quot;operation user_account&quot; - or on a group board that has been shared with this account.\n- By default, the &quot;operation user_account&quot; is the token user_account.
     * @param pinId Unique identifier of a Pin. (required)
     * @throws OAS.ApiException if fails to make API call
     */
    public void pinsDelete(Map<String, Object> params) {
        client.assertNotNull(params.get('pinId'), 'pinId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'DELETE', '/pins/{pin_id}', '',
            query, form,
            new Map<String, Object>{
                'pin_id' => (String) params.get('pinId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            null
        );
    }
    /**
     * Get Pin
     * Get a Pin owned by the &quot;operation user_account&quot; - or on a group board that has been shared with this account.\n- By default, the &quot;operation user_account&quot; is the token user_account.\n\nOptional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the &quot;operation user_account&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account:\n\n- For Pins on public or protected boards: Owner, Admin, Analyst, Campaign Manager.\n- For Pins on secret boards: Owner, Admin.
     * @param pinId Unique identifier of a Pin. (required)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return OASPin
     * @throws OAS.ApiException if fails to make API call
     */
    public OASPin pinsGet(Map<String, Object> params) {
        client.assertNotNull(params.get('pinId'), 'pinId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('ad_account_id', (String) params.get('adAccountId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASPin) client.invoke(
            'GET', '/pins/{pin_id}', '',
            query, form,
            new Map<String, Object>{
                'pin_id' => (String) params.get('pinId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASPin.class
        );
    }
}
