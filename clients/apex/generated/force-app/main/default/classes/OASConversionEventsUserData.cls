/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Object containing customer information data. Note, It is required at least one of 1) em, 2) hashed_maids or 3) pair client_ip_address + client_user_agent.
 */
public class OASConversionEventsUserData implements OAS.MappedProperties {
    /**
     * Sha256 hashes of user\'s phone numbers, only digits with country code, area code, and number. Remove any symbols, letters, spaces and leading zeros. We highly recommend this on checkout events at least. It may improve reporting performance such as ROAS/CPA.
     * @return ph
     */
    public List<String> ph { get; set; }

    /**
     * Sha256 hashes of user\'s gender, in lowercase. Either "f" or "m" or "n" for non-binary gender.
     * @return ge
     */
    public List<String> ge { get; set; }

    /**
     * Sha256 hashes of user\'s date of birthday, given as year, month, and day.
     * @return db
     */
    public List<String> db { get; set; }

    /**
     * Sha256 hashes of user\'s last name, in lowercase. We highly recommend this on checkout events at least. It may improve reporting performance such as ROAS/CPA.
     * @return ln
     */
    public List<String> ln { get; set; }

    /**
     * Sha256 hashes of user\'s first name, in lowercase. We highly recommend this on checkout events at least. It may improve reporting performance such as ROAS/CPA.
     * @return fn
     */
    public List<String> fn { get; set; }

    /**
     * Sha256 hashes of user\'s city, in lowercase, and without spaces or punctuation. User residency city (mostly billing).
     * @return ct
     */
    public List<String> ct { get; set; }

    /**
     * Sha256 hashes of user\'s state, given as a two-letter code in lowercase. User residency state (mostly billing).
     * @return st
     */
    public List<String> st { get; set; }

    /**
     * Sha256 hashes of user\'s zipcode, only digits. User residency zipcode (mostly billing).
     * @return zp
     */
    public List<String> zp { get; set; }

    /**
     * Sha256 hashes of two-character ISO-3166 country code indicating the user\'s country, in lowercase.
     * @return country
     */
    public List<String> country { get; set; }

    /**
     * Sha256 hashes of the unique id from the advertiser that identifies a user in their space, e.g. user id, loyalty id, etc. We highly recommend this on all events. It may improve reporting performance such as ROAS/CPA.
     * @return externalId
     */
    public List<String> externalId { get; set; }

    /**
     * The unique identifier stored in _epik cookie on your domain or &epik= query parameter in the URL. We highly recommend this on checkout events at least. It may improve reporting performance such as ROAS/CPA.
     * @return clickId
     */
    public String clickId { get; set; }

    /**
     * A unique identifier of visitors\' information defined by third party partners. e.g RampID
     * @return partnerId
     */
    public String partnerId { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'external_id' => 'externalId',
        'click_id' => 'clickId',
        'partner_id' => 'partnerId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'external_id' => 'externalId',
        'click_id' => 'clickId',
        'partner_id' => 'partnerId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'external_id' => 'externalId',
        'click_id' => 'clickId',
        'partner_id' => 'partnerId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASConversionEventsUserData() {
        ph = new List<String>();
        ge = new List<String>();
        db = new List<String>();
        ln = new List<String>();
        fn = new List<String>();
        ct = new List<String>();
        st = new List<String>();
        zp = new List<String>();
        country = new List<String>();
        externalId = new List<String>();
    }

    public static OASConversionEventsUserData getExample() {
        OASConversionEventsUserData conversionEventsUserData = new OASConversionEventsUserData();
          conversionEventsUserData.ph = new List<String>{''};
          conversionEventsUserData.ge = new List<String>{''};
          conversionEventsUserData.db = new List<String>{''};
          conversionEventsUserData.ln = new List<String>{''};
          conversionEventsUserData.fn = new List<String>{''};
          conversionEventsUserData.ct = new List<String>{''};
          conversionEventsUserData.st = new List<String>{''};
          conversionEventsUserData.zp = new List<String>{''};
          conversionEventsUserData.country = new List<String>{''};
          conversionEventsUserData.externalId = new List<String>{''};
          conversionEventsUserData.clickId = 'dj0yJnU9b2JDcFFHekV4SHJNcmVrbFBkUEdqakh0akdUT1VjVVUmcD0yJm49cnNBQ3F2Q2dOVDBXWWhkWklrUGxBUSZ0PUFBQUFBR1BaY3Bv';
          conversionEventsUserData.partnerId = 'BUJrTlRRzGJmWhRXFZdkioV6wKPBve7Lom__GU9J74hq2NIQj4O3nOZJrp3mcUr5MptkXsI14juMOIM9mNZnM4zEUFT2JLVaFhcOfuuWz3IWEDtBf6I0DPc';
        return conversionEventsUserData;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASConversionEventsUserData) {           
            OASConversionEventsUserData conversionEventsUserData = (OASConversionEventsUserData) obj;
            return this.ph == conversionEventsUserData.ph
                && this.ge == conversionEventsUserData.ge
                && this.db == conversionEventsUserData.db
                && this.ln == conversionEventsUserData.ln
                && this.fn == conversionEventsUserData.fn
                && this.ct == conversionEventsUserData.ct
                && this.st == conversionEventsUserData.st
                && this.zp == conversionEventsUserData.zp
                && this.country == conversionEventsUserData.country
                && this.externalId == conversionEventsUserData.externalId
                && this.clickId == conversionEventsUserData.clickId
                && this.partnerId == conversionEventsUserData.partnerId;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (ph == null ? 0 : System.hashCode(ph));
        hashCode = (17 * hashCode) + (ge == null ? 0 : System.hashCode(ge));
        hashCode = (17 * hashCode) + (db == null ? 0 : System.hashCode(db));
        hashCode = (17 * hashCode) + (ln == null ? 0 : System.hashCode(ln));
        hashCode = (17 * hashCode) + (fn == null ? 0 : System.hashCode(fn));
        hashCode = (17 * hashCode) + (ct == null ? 0 : System.hashCode(ct));
        hashCode = (17 * hashCode) + (st == null ? 0 : System.hashCode(st));
        hashCode = (17 * hashCode) + (zp == null ? 0 : System.hashCode(zp));
        hashCode = (17 * hashCode) + (country == null ? 0 : System.hashCode(country));
        hashCode = (17 * hashCode) + (externalId == null ? 0 : System.hashCode(externalId));
        hashCode = (17 * hashCode) + (clickId == null ? 0 : System.hashCode(clickId));
        hashCode = (17 * hashCode) + (partnerId == null ? 0 : System.hashCode(partnerId));
        return hashCode;
    }
}

