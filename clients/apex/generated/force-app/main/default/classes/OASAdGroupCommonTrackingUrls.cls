/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Third-party tracking URLs.&lt;br&gt; JSON object with the format: {&quot;&lt;a href&#x3D;&quot;https://developers.pinterest.com/docs/redoc/#section/Tracking-URL-event&quot;&gt;Tracking event enum&lt;/a&gt;&quot;:[URL string array],...}&lt;br&gt; For example: {&quot;impression&quot;: [&quot;URL1&quot;, &quot;URL2&quot;], &quot;click&quot;: [&quot;URL1&quot;, &quot;URL2&quot;, &quot;URL3&quot;]}.&lt;br&gt;Up to three tracking URLs are supported for each event type. Tracking URLs set at the ad group or ad level can override those set at the campaign level. May be null. Pass in an empty object - {} - to remove tracking URLs.&lt;br&gt;&lt;br&gt; For more information, see &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/third-party-and-dynamic-tracking&quot; target&#x3D;&quot;_blank&quot;&gt;Third-party and dynamic tracking&lt;/a&gt;.
 */
public class OASAdGroupCommonTrackingUrls implements OASTrackingUrls, OAS.MappedProperties {
    /**
     * Get impression
     * @return impression
     */
    public List<String> impression { get; set; }

    /**
     * Get click
     * @return click
     */
    public List<String> click { get; set; }

    /**
     * Get engagement
     * @return engagement
     */
    public List<String> engagement { get; set; }

    /**
     * Get buyableButton
     * @return buyableButton
     */
    public List<String> buyableButton { get; set; }

    /**
     * Get audienceVerification
     * @return audienceVerification
     */
    public List<String> audienceVerification { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'buyable_button' => 'buyableButton',
        'audience_verification' => 'audienceVerification'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'buyable_button' => 'buyableButton',
        'audience_verification' => 'audienceVerification'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASAdGroupCommonTrackingUrls() {
        impression = new List<String>();
        click = new List<String>();
        engagement = new List<String>();
        buyableButton = new List<String>();
        audienceVerification = new List<String>();
    }

    public static OASAdGroupCommonTrackingUrls getExample() {
        OASAdGroupCommonTrackingUrls adGroupCommonTrackingUrls = new OASAdGroupCommonTrackingUrls();
          adGroupCommonTrackingUrls.impression = new List<String>{''};
          adGroupCommonTrackingUrls.click = new List<String>{''};
          adGroupCommonTrackingUrls.engagement = new List<String>{''};
          adGroupCommonTrackingUrls.buyableButton = new List<String>{''};
          adGroupCommonTrackingUrls.audienceVerification = new List<String>{''};
        return adGroupCommonTrackingUrls;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASAdGroupCommonTrackingUrls) {           
            OASAdGroupCommonTrackingUrls adGroupCommonTrackingUrls = (OASAdGroupCommonTrackingUrls) obj;
            return this.impression == adGroupCommonTrackingUrls.impression
                && this.click == adGroupCommonTrackingUrls.click
                && this.engagement == adGroupCommonTrackingUrls.engagement
                && this.buyableButton == adGroupCommonTrackingUrls.buyableButton
                && this.audienceVerification == adGroupCommonTrackingUrls.audienceVerification;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (impression == null ? 0 : System.hashCode(impression));
        hashCode = (17 * hashCode) + (click == null ? 0 : System.hashCode(click));
        hashCode = (17 * hashCode) + (engagement == null ? 0 : System.hashCode(engagement));
        hashCode = (17 * hashCode) + (buyableButton == null ? 0 : System.hashCode(buyableButton));
        hashCode = (17 * hashCode) + (audienceVerification == null ? 0 : System.hashCode(audienceVerification));
        return hashCode;
    }
}

