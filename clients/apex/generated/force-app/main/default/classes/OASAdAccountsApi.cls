/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: pinterest-api@pinterest.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASAdAccountsApi {
    OASClient client;

    public OASAdAccountsApi(OASClient client) {
        this.client = client;
    }

    public OASAdAccountsApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Get ad account analytics
     * Get analytics for the specified &lt;code&gt;ad_account_id&lt;/code&gt;, filtered by the specified options.\n- The token\&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager.
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param startDate Metric report start date (UTC). Format: YYYY-MM-DD (required)
     * @param endDate Metric report end date (UTC). Format: YYYY-MM-DD (required)
     * @param columns Columns to retrieve. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile\&#39;s currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it\&#39;s microdollars. Otherwise, it\&#39;s in microunits of the advertiser\&#39;s currency.&lt;br/&gt;For example, if the advertiser\&#39;s currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).&lt;br/&gt;If a column has no value, it may not be returned (required)
     * @param granularity Granularity (required)
     * @param clickWindowDays Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param engagementWindowDays Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param viewWindowDays Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;1&#x60; day. (optional, default to 1)
     * @param conversionReportTime The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event. (optional, default to TIME_OF_AD_ACTION)
     * @return List<Map<String, Object>>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<Map<String, Object>> adAccountAnalytics(Map<String, Object> params) {
        client.assertNotNull(params.get('adAccountId'), 'adAccountId');
        client.assertNotNull(params.get('startDate'), 'startDate');
        client.assertNotNull(params.get('endDate'), 'endDate');
        client.assertNotNull(params.get('columns'), 'columns');
        client.assertNotNull(params.get('granularity'), 'granularity');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('start_date', (Date) params.get('startDate')));
        query.addAll(client.makeParam('end_date', (Date) params.get('endDate')));
        query.addAll(client.makeParam('columns', (List<String>) params.get('columns'), 'csv'));
        query.addAll(client.makeParam('granularity', (OASGranularity) params.get('granularity')));
        query.addAll(client.makeParam('click_window_days', (Integer) params.get('clickWindowDays')));
        query.addAll(client.makeParam('engagement_window_days', (Integer) params.get('engagementWindowDays')));
        query.addAll(client.makeParam('view_window_days', (Integer) params.get('viewWindowDays')));
        query.addAll(client.makeParam('conversion_report_time', (String) params.get('conversionReportTime')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<Map<String, Object>>) client.invoke(
            'GET', '/ad_accounts/{ad_account_id}/analytics', '',
            query, form,
            new Map<String, Object>{
                'ad_account_id' => (String) params.get('adAccountId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            List<Map<String, Object>>.class
        );
    }
    /**
     * List ad accounts
     * Get a list of the ad_accounts that the &quot;operation user_account&quot; has access to.\n- This includes ad_accounts they own and ad_accounts that are owned by others who have granted them &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt;.
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/api/v5/#tag/Pagination\&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param includeSharedAccounts Include shared ad accounts (optional, default to true)
     * @return OASPaginated
     * @throws OAS.ApiException if fails to make API call
     */
    public OASPaginated adAccountsList(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('bookmark', (String) params.get('bookmark')));
        query.addAll(client.makeParam('page_size', (Integer) params.get('pageSize')));
        query.addAll(client.makeParam('include_shared_accounts', (Boolean) params.get('includeSharedAccounts')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASPaginated) client.invoke(
            'GET', '/ad_accounts', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASPaginated.class
        );
    }
    /**
     * Get ad group analytics
     * Get analytics for the specified ad groups in the specified &lt;code&gt;ad_account_id&lt;/code&gt;, filtered by the specified options.\n- The token\&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager.
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param startDate Metric report start date (UTC). Format: YYYY-MM-DD (required)
     * @param endDate Metric report end date (UTC). Format: YYYY-MM-DD (required)
     * @param adGroupIds List of Ad group Ids to use to filter the results. (required)
     * @param columns Columns to retrieve. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile\&#39;s currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it\&#39;s microdollars. Otherwise, it\&#39;s in microunits of the advertiser\&#39;s currency.&lt;br/&gt;For example, if the advertiser\&#39;s currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).&lt;br/&gt;If a column has no value, it may not be returned (required)
     * @param granularity Granularity (required)
     * @param clickWindowDays Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param engagementWindowDays Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param viewWindowDays Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;1&#x60; day. (optional, default to 1)
     * @param conversionReportTime The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event. (optional, default to TIME_OF_AD_ACTION)
     * @return List<Map<String, Object>>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<Map<String, Object>> adGroupsAnalytics(Map<String, Object> params) {
        client.assertNotNull(params.get('adAccountId'), 'adAccountId');
        client.assertNotNull(params.get('startDate'), 'startDate');
        client.assertNotNull(params.get('endDate'), 'endDate');
        client.assertNotNull(params.get('adGroupIds'), 'adGroupIds');
        client.assertNotNull(params.get('columns'), 'columns');
        client.assertNotNull(params.get('granularity'), 'granularity');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('start_date', (Date) params.get('startDate')));
        query.addAll(client.makeParam('end_date', (Date) params.get('endDate')));
        query.addAll(client.makeParams('ad_group_ids', (List<String>) params.get('adGroupIds')));
        query.addAll(client.makeParam('columns', (List<String>) params.get('columns'), 'csv'));
        query.addAll(client.makeParam('granularity', (OASGranularity) params.get('granularity')));
        query.addAll(client.makeParam('click_window_days', (Integer) params.get('clickWindowDays')));
        query.addAll(client.makeParam('engagement_window_days', (Integer) params.get('engagementWindowDays')));
        query.addAll(client.makeParam('view_window_days', (Integer) params.get('viewWindowDays')));
        query.addAll(client.makeParam('conversion_report_time', (String) params.get('conversionReportTime')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<Map<String, Object>>) client.invoke(
            'GET', '/ad_accounts/{ad_account_id}/ad_groups/analytics', '',
            query, form,
            new Map<String, Object>{
                'ad_account_id' => (String) params.get('adAccountId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            List<Map<String, Object>>.class
        );
    }
    /**
     * List ad groups
     * Get a list of the ad groups in the specified &lt;code&gt;ad_account_id&lt;/code&gt;, filtered by the specified options.\n- The token\&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager.
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param campaignIds List of Campaign Ids to use to filter the results. (optional, default to new List<String>())
     * @param adGroupIds List of Ad group Ids to use to filter the results. (optional, default to new List<String>())
     * @param entityStatuses Entity status (optional, default to new List<String>())
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/api/v5/#tag/Pagination\&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param order The order in which to sort the items returned: “ASCENDING” or “DESCENDING”\nby ID. Note that higher-value IDs are associated with more-recently added\nitems. (optional)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param translateInterestsToNames Return interests as text names (if value is true) rather than topic IDs. (optional, default to false)
     * @return OASPaginated
     * @throws OAS.ApiException if fails to make API call
     */
    public OASPaginated adGroupsList(Map<String, Object> params) {
        client.assertNotNull(params.get('adAccountId'), 'adAccountId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParams('campaign_ids', (List<String>) params.get('campaignIds')));
        query.addAll(client.makeParams('ad_group_ids', (List<String>) params.get('adGroupIds')));
        query.addAll(client.makeParams('entity_statuses', (List<String>) params.get('entityStatuses')));
        query.addAll(client.makeParam('page_size', (Integer) params.get('pageSize')));
        query.addAll(client.makeParam('order', (String) params.get('order')));
        query.addAll(client.makeParam('bookmark', (String) params.get('bookmark')));
        query.addAll(client.makeParam('translate_interests_to_names', (Boolean) params.get('translateInterestsToNames')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASPaginated) client.invoke(
            'GET', '/ad_accounts/{ad_account_id}/ad_groups', '',
            query, form,
            new Map<String, Object>{
                'ad_account_id' => (String) params.get('adAccountId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASPaginated.class
        );
    }
    /**
     * Get ad analytics
     * Get analytics for the specified ads in the specified &lt;code&gt;ad_account_id&lt;/code&gt;, filtered by the specified options.\n- The token\&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager.
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param startDate Metric report start date (UTC). Format: YYYY-MM-DD (required)
     * @param endDate Metric report end date (UTC). Format: YYYY-MM-DD (required)
     * @param adIds List of Ad Ids to use to filter the results. (required)
     * @param columns Columns to retrieve. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile\&#39;s currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it\&#39;s microdollars. Otherwise, it\&#39;s in microunits of the advertiser\&#39;s currency.&lt;br/&gt;For example, if the advertiser\&#39;s currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).&lt;br/&gt;If a column has no value, it may not be returned (required)
     * @param granularity Granularity (required)
     * @param clickWindowDays Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param engagementWindowDays Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param viewWindowDays Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;1&#x60; day. (optional, default to 1)
     * @param conversionReportTime The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event. (optional, default to TIME_OF_AD_ACTION)
     * @return List<Map<String, Object>>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<Map<String, Object>> adsAnalytics(Map<String, Object> params) {
        client.assertNotNull(params.get('adAccountId'), 'adAccountId');
        client.assertNotNull(params.get('startDate'), 'startDate');
        client.assertNotNull(params.get('endDate'), 'endDate');
        client.assertNotNull(params.get('adIds'), 'adIds');
        client.assertNotNull(params.get('columns'), 'columns');
        client.assertNotNull(params.get('granularity'), 'granularity');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('start_date', (Date) params.get('startDate')));
        query.addAll(client.makeParam('end_date', (Date) params.get('endDate')));
        query.addAll(client.makeParams('ad_ids', (List<String>) params.get('adIds')));
        query.addAll(client.makeParam('columns', (List<String>) params.get('columns'), 'csv'));
        query.addAll(client.makeParam('granularity', (OASGranularity) params.get('granularity')));
        query.addAll(client.makeParam('click_window_days', (Integer) params.get('clickWindowDays')));
        query.addAll(client.makeParam('engagement_window_days', (Integer) params.get('engagementWindowDays')));
        query.addAll(client.makeParam('view_window_days', (Integer) params.get('viewWindowDays')));
        query.addAll(client.makeParam('conversion_report_time', (String) params.get('conversionReportTime')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<Map<String, Object>>) client.invoke(
            'GET', '/ad_accounts/{ad_account_id}/ads/analytics', '',
            query, form,
            new Map<String, Object>{
                'ad_account_id' => (String) params.get('adAccountId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            List<Map<String, Object>>.class
        );
    }
    /**
     * List ads
     * Get a list of the ads in the specified &lt;code&gt;ad_account_id&lt;/code&gt;, filtered by the specified options.\n- The token\&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager.
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param campaignIds List of Campaign Ids to use to filter the results. (optional, default to new List<String>())
     * @param adGroupIds List of Ad group Ids to use to filter the results. (optional, default to new List<String>())
     * @param adIds List of Ad Ids to use to filter the results. (optional, default to new List<String>())
     * @param entityStatuses Entity status (optional, default to new List<String>())
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/api/v5/#tag/Pagination\&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param order The order in which to sort the items returned: “ASCENDING” or “DESCENDING”\nby ID. Note that higher-value IDs are associated with more-recently added\nitems. (optional)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @return OASPaginated
     * @throws OAS.ApiException if fails to make API call
     */
    public OASPaginated adsList(Map<String, Object> params) {
        client.assertNotNull(params.get('adAccountId'), 'adAccountId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParams('campaign_ids', (List<String>) params.get('campaignIds')));
        query.addAll(client.makeParams('ad_group_ids', (List<String>) params.get('adGroupIds')));
        query.addAll(client.makeParams('ad_ids', (List<String>) params.get('adIds')));
        query.addAll(client.makeParams('entity_statuses', (List<String>) params.get('entityStatuses')));
        query.addAll(client.makeParam('page_size', (Integer) params.get('pageSize')));
        query.addAll(client.makeParam('order', (String) params.get('order')));
        query.addAll(client.makeParam('bookmark', (String) params.get('bookmark')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASPaginated) client.invoke(
            'GET', '/ad_accounts/{ad_account_id}/ads', '',
            query, form,
            new Map<String, Object>{
                'ad_account_id' => (String) params.get('adAccountId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASPaginated.class
        );
    }
    /**
     * Create async request for an account analytics report
     * This returns a token that you can use to download the report when it is ready. Note that this endpoint requires the parameters to be passed as JSON-formatted in the request body. This endpoint does not support URL query parameters.\n- The token\&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager.
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param oaSAdsAnalyticsCreateAsyncRequest  (required)
     * @return OASAdsAnalyticsCreateAsyncResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASAdsAnalyticsCreateAsyncResponse analyticsCreateReport(Map<String, Object> params) {
        client.assertNotNull(params.get('adAccountId'), 'adAccountId');
        client.assertNotNull(params.get('oaSAdsAnalyticsCreateAsyncRequest'), 'oaSAdsAnalyticsCreateAsyncRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASAdsAnalyticsCreateAsyncResponse) client.invoke(
            'POST', '/ad_accounts/{ad_account_id}/reports',
            (OASAdsAnalyticsCreateAsyncRequest) params.get('oaSAdsAnalyticsCreateAsyncRequest'),
            query, form,
            new Map<String, Object>{
                'ad_account_id' => (String) params.get('adAccountId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASAdsAnalyticsCreateAsyncResponse.class
        );
    }
    /**
     * Get the account analytics report created by the async call
     * This returns a URL to an analytics report given a token returned from the post request report creation call. You can use the URL to download the report and it\&#39;s valid for an hour.\n- The token\&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager.
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param token Token returned from the post request creation call (required)
     * @return OASAdsAnalyticsGetAsyncResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASAdsAnalyticsGetAsyncResponse analyticsGetReport(Map<String, Object> params) {
        client.assertNotNull(params.get('adAccountId'), 'adAccountId');
        client.assertNotNull(params.get('token'), 'token');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('token', (String) params.get('token')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASAdsAnalyticsGetAsyncResponse) client.invoke(
            'GET', '/ad_accounts/{ad_account_id}/reports', '',
            query, form,
            new Map<String, Object>{
                'ad_account_id' => (String) params.get('adAccountId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASAdsAnalyticsGetAsyncResponse.class
        );
    }
    /**
     * Get campaign analytics
     * Get analytics for the specified campaigns in the specified &lt;code&gt;ad_account_id&lt;/code&gt;, filtered by the specified options.\n- The token\&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager.
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param startDate Metric report start date (UTC). Format: YYYY-MM-DD (required)
     * @param endDate Metric report end date (UTC). Format: YYYY-MM-DD (required)
     * @param campaignIds List of Campaign Ids to use to filter the results. (required)
     * @param columns Columns to retrieve. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile\&#39;s currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it\&#39;s microdollars. Otherwise, it\&#39;s in microunits of the advertiser\&#39;s currency.&lt;br/&gt;For example, if the advertiser\&#39;s currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).&lt;br/&gt;If a column has no value, it may not be returned (required)
     * @param granularity Granularity (required)
     * @param clickWindowDays Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param engagementWindowDays Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param viewWindowDays Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;1&#x60; day. (optional, default to 1)
     * @param conversionReportTime The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event. (optional, default to TIME_OF_AD_ACTION)
     * @return List<Map<String, Object>>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<Map<String, Object>> campaignsAnalytics(Map<String, Object> params) {
        client.assertNotNull(params.get('adAccountId'), 'adAccountId');
        client.assertNotNull(params.get('startDate'), 'startDate');
        client.assertNotNull(params.get('endDate'), 'endDate');
        client.assertNotNull(params.get('campaignIds'), 'campaignIds');
        client.assertNotNull(params.get('columns'), 'columns');
        client.assertNotNull(params.get('granularity'), 'granularity');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('start_date', (Date) params.get('startDate')));
        query.addAll(client.makeParam('end_date', (Date) params.get('endDate')));
        query.addAll(client.makeParams('campaign_ids', (List<String>) params.get('campaignIds')));
        query.addAll(client.makeParam('columns', (List<String>) params.get('columns'), 'csv'));
        query.addAll(client.makeParam('granularity', (OASGranularity) params.get('granularity')));
        query.addAll(client.makeParam('click_window_days', (Integer) params.get('clickWindowDays')));
        query.addAll(client.makeParam('engagement_window_days', (Integer) params.get('engagementWindowDays')));
        query.addAll(client.makeParam('view_window_days', (Integer) params.get('viewWindowDays')));
        query.addAll(client.makeParam('conversion_report_time', (String) params.get('conversionReportTime')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<Map<String, Object>>) client.invoke(
            'GET', '/ad_accounts/{ad_account_id}/campaigns/analytics', '',
            query, form,
            new Map<String, Object>{
                'ad_account_id' => (String) params.get('adAccountId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            List<Map<String, Object>>.class
        );
    }
    /**
     * List campaigns
     * Get a list of the campaigns in the specified &lt;code&gt;ad_account_id&lt;/code&gt;, filtered by the specified options.\n- The token\&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager.
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param campaignIds List of Campaign Ids to use to filter the results. (optional, default to new List<String>())
     * @param entityStatuses Entity status (optional, default to new List<String>())
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/api/v5/#tag/Pagination\&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param order The order in which to sort the items returned: “ASCENDING” or “DESCENDING”\nby ID. Note that higher-value IDs are associated with more-recently added\nitems. (optional)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @return OASPaginated
     * @throws OAS.ApiException if fails to make API call
     */
    public OASPaginated campaignsList(Map<String, Object> params) {
        client.assertNotNull(params.get('adAccountId'), 'adAccountId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParams('campaign_ids', (List<String>) params.get('campaignIds')));
        query.addAll(client.makeParams('entity_statuses', (List<String>) params.get('entityStatuses')));
        query.addAll(client.makeParam('page_size', (Integer) params.get('pageSize')));
        query.addAll(client.makeParam('order', (String) params.get('order')));
        query.addAll(client.makeParam('bookmark', (String) params.get('bookmark')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASPaginated) client.invoke(
            'GET', '/ad_accounts/{ad_account_id}/campaigns', '',
            query, form,
            new Map<String, Object>{
                'ad_account_id' => (String) params.get('adAccountId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASPaginated.class
        );
    }
    /**
     * Get product group analytics
     * Get analytics for the specified product groups in the specified &lt;code&gt;ad_account_id&lt;/code&gt;, filtered by the specified options.\n- The token\&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager.
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param startDate Metric report start date (UTC). Format: YYYY-MM-DD (required)
     * @param endDate Metric report end date (UTC). Format: YYYY-MM-DD (required)
     * @param productGroupIds List of Product group Ids to use to filter the results. (required)
     * @param columns Columns to retrieve. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile\&#39;s currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it\&#39;s microdollars. Otherwise, it\&#39;s in microunits of the advertiser\&#39;s currency.&lt;br/&gt;For example, if the advertiser\&#39;s currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).&lt;br/&gt;If a column has no value, it may not be returned (required)
     * @param granularity Granularity (required)
     * @param clickWindowDays Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param engagementWindowDays Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param viewWindowDays Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;1&#x60; day. (optional, default to 1)
     * @param conversionReportTime The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event. (optional, default to TIME_OF_AD_ACTION)
     * @return List<Map<String, Object>>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<Map<String, Object>> productGroupsAnalytics(Map<String, Object> params) {
        client.assertNotNull(params.get('adAccountId'), 'adAccountId');
        client.assertNotNull(params.get('startDate'), 'startDate');
        client.assertNotNull(params.get('endDate'), 'endDate');
        client.assertNotNull(params.get('productGroupIds'), 'productGroupIds');
        client.assertNotNull(params.get('columns'), 'columns');
        client.assertNotNull(params.get('granularity'), 'granularity');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('start_date', (Date) params.get('startDate')));
        query.addAll(client.makeParam('end_date', (Date) params.get('endDate')));
        query.addAll(client.makeParams('product_group_ids', (List<String>) params.get('productGroupIds')));
        query.addAll(client.makeParam('columns', (List<String>) params.get('columns'), 'csv'));
        query.addAll(client.makeParam('granularity', (OASGranularity) params.get('granularity')));
        query.addAll(client.makeParam('click_window_days', (Integer) params.get('clickWindowDays')));
        query.addAll(client.makeParam('engagement_window_days', (Integer) params.get('engagementWindowDays')));
        query.addAll(client.makeParam('view_window_days', (Integer) params.get('viewWindowDays')));
        query.addAll(client.makeParam('conversion_report_time', (String) params.get('conversionReportTime')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<Map<String, Object>>) client.invoke(
            'GET', '/ad_accounts/{ad_account_id}/product_groups/analytics', '',
            query, form,
            new Map<String, Object>{
                'ad_account_id' => (String) params.get('adAccountId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            List<Map<String, Object>>.class
        );
    }
}
