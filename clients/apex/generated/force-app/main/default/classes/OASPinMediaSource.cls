/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Pin media source.
 */
public class OASPinMediaSource implements OASPinMediaSourceImageBase64, OASPinMediaSourceImageURL, OASPinMediaSourceVideoID, OAS.MappedProperties {
    /**
     * Gets or Sets sourceType
     */
    public enum SourceTypeEnum {
        VIDEO_ID
    }

    /**
     * Get sourceType
     * @return sourceType
     */
    public SourceTypeEnum sourceType { get; set; }

    /**
     * Gets or Sets contentType
     */
    public enum ContentTypeEnum {
        JPEG,
        PNG
    }

    /**
     * Get contentType
     * @return contentType
     */
    public ContentTypeEnum contentType { get; set; }

    /**
     * Get data
     * @return data
     */
    public String data { get; set; }

    /**
     * Get url
     * @return url
     */
    public String url { get; set; }

    /**
     * Get coverImageUrl
     * @return coverImageUrl
     */
    public String coverImageUrl { get; set; }

    /**
     * Get mediaId
     * @return mediaId
     */
    public String mediaId { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'source_type' => 'sourceType',
        'content_type' => 'contentType',
        'cover_image_url' => 'coverImageUrl',
        'media_id' => 'mediaId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'source_type' => 'sourceType',
        'content_type' => 'contentType',
        'cover_image_url' => 'coverImageUrl',
        'media_id' => 'mediaId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'source_type' => 'sourceType',
        'content_type' => 'contentType',
        'cover_image_url' => 'coverImageUrl',
        'media_id' => 'mediaId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'source_type' => 'sourceType',
        'content_type' => 'contentType',
        'cover_image_url' => 'coverImageUrl',
        'media_id' => 'mediaId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASPinMediaSource getExample() {
        OASPinMediaSource pinMediaSource = new OASPinMediaSource();
          pinMediaSource.sourceType = SourceTypeEnum.VIDEO_ID;
          pinMediaSource.contentType = ContentTypeEnum.IMAGE_JPEG;
          pinMediaSource.data = '';
          pinMediaSource.url = '';
          pinMediaSource.coverImageUrl = '';
          pinMediaSource.mediaId = '';
        return pinMediaSource;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASPinMediaSource) {           
            OASPinMediaSource pinMediaSource = (OASPinMediaSource) obj;
            return this.sourceType == pinMediaSource.sourceType
                && this.contentType == pinMediaSource.contentType
                && this.data == pinMediaSource.data
                && this.url == pinMediaSource.url
                && this.coverImageUrl == pinMediaSource.coverImageUrl
                && this.mediaId == pinMediaSource.mediaId;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (sourceType == null ? 0 : System.hashCode(sourceType));
        hashCode = (17 * hashCode) + (contentType == null ? 0 : System.hashCode(contentType));
        hashCode = (17 * hashCode) + (data == null ? 0 : System.hashCode(data));
        hashCode = (17 * hashCode) + (url == null ? 0 : System.hashCode(url));
        hashCode = (17 * hashCode) + (coverImageUrl == null ? 0 : System.hashCode(coverImageUrl));
        hashCode = (17 * hashCode) + (mediaId == null ? 0 : System.hashCode(mediaId));
        return hashCode;
    }
}

