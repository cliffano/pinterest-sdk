/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASCatalogsProductGroupsCreateReques
 */
public class OASCatalogsProductGroupsCreateReques implements OASCatalogsProductGroupCreateRequest, OASCatalogsVerticalProductGroupCreat, OAS.MappedProperties {
    /**
     * Get name
     * @return name
     */
    public String name { get; set; }

    /**
     * Get description
     * @return description
     */
    public String description { get; set; }

    /**
     * boolean indicator of whether the product group is being featured or not
     * @return isFeatured
     */
    public Boolean isFeatured { get; set; }

    /**
     * Get filters
     * @return filters
     */
    public OASCatalogsHotelProductGroupFilters filters { get; set; }

    /**
     * Catalog Feed id pertaining to the catalog product group.
     * @return feedId
     */
    public String feedId { get; set; }

    /**
     * Gets or Sets catalogType
     */
    public enum CatalogTypeEnum {
        HOTEL
    }

    /**
     * Get catalogType
     * @return catalogType
     */
    public CatalogTypeEnum catalogType { get; set; }

    /**
     * Catalog id pertaining to the hotel product group.
     * @return catalogId
     */
    public String catalogId { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'is_featured' => 'isFeatured',
        'feed_id' => 'feedId',
        'catalog_type' => 'catalogType',
        'catalog_id' => 'catalogId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'is_featured' => 'isFeatured',
        'feed_id' => 'feedId',
        'catalog_type' => 'catalogType',
        'catalog_id' => 'catalogId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'is_featured' => 'isFeatured',
        'feed_id' => 'feedId',
        'catalog_type' => 'catalogType',
        'catalog_id' => 'catalogId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'is_featured' => 'isFeatured',
        'feed_id' => 'feedId',
        'catalog_type' => 'catalogType',
        'catalog_id' => 'catalogId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASCatalogsProductGroupsCreateReques() {
        isFeatured = false;
    }

    public static OASCatalogsProductGroupsCreateReques getExample() {
        OASCatalogsProductGroupsCreateReques catalogsProductGroupsCreateRequest = new OASCatalogsProductGroupsCreateReques();
          catalogsProductGroupsCreateRequest.name = '';
          catalogsProductGroupsCreateRequest.description = '';
          catalogsProductGroupsCreateRequest.isFeatured = true;
          catalogsProductGroupsCreateRequest.filters = OASCatalogsHotelProductGroupFilters.getExample();
          catalogsProductGroupsCreateRequest.feedId = '2680059592705';
          catalogsProductGroupsCreateRequest.catalogType = CatalogTypeEnum.HOTEL;
          catalogsProductGroupsCreateRequest.catalogId = '2680059592705';
        return catalogsProductGroupsCreateRequest;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASCatalogsProductGroupsCreateReques) {           
            OASCatalogsProductGroupsCreateReques catalogsProductGroupsCreateRequest = (OASCatalogsProductGroupsCreateReques) obj;
            return this.name == catalogsProductGroupsCreateRequest.name
                && this.description == catalogsProductGroupsCreateRequest.description
                && this.isFeatured == catalogsProductGroupsCreateRequest.isFeatured
                && this.filters == catalogsProductGroupsCreateRequest.filters
                && this.feedId == catalogsProductGroupsCreateRequest.feedId
                && this.catalogType == catalogsProductGroupsCreateRequest.catalogType
                && this.catalogId == catalogsProductGroupsCreateRequest.catalogId;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (description == null ? 0 : System.hashCode(description));
        hashCode = (17 * hashCode) + (isFeatured == null ? 0 : System.hashCode(isFeatured));
        hashCode = (17 * hashCode) + (filters == null ? 0 : System.hashCode(filters));
        hashCode = (17 * hashCode) + (feedId == null ? 0 : System.hashCode(feedId));
        hashCode = (17 * hashCode) + (catalogType == null ? 0 : System.hashCode(catalogType));
        hashCode = (17 * hashCode) + (catalogId == null ? 0 : System.hashCode(catalogId));
        return hashCode;
    }
}

