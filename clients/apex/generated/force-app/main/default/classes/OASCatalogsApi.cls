/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASCatalogsApi {
    OASClient client;

    public OASCatalogsApi(OASClient client) {
        this.client = client;
    }

    public OASCatalogsApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * List catalogs
     * Fetch catalogs owned by the &quot;operation user_account&quot;.\n- By default, the &quot;operation user_account&quot; is the token user_account.\n\nOptional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the &quot;operation user_account&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n&lt;a href&#x3D;\&#39;/docs/shopping/catalog/\&#39;&gt;Learn more&lt;/a&gt;
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/getting-started/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return OASCatalogsList200Response
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCatalogsList200Response catalogsList(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('bookmark', (String) params.get('bookmark')));
        query.addAll(client.makeParam('page_size', (Integer) params.get('pageSize')));
        query.addAll(client.makeParam('ad_account_id', (String) params.get('adAccountId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCatalogsList200Response) client.invoke(
            'GET', '/catalogs', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASCatalogsList200Response.class
        );
    }
    /**
     * List products for a Product Group
     * Get a list of product pins for a given Catalogs Product Group Id owned by the &quot;operation user_account&quot;.\n- By default, the &quot;operation user_account&quot; is the token user_account.\n\nOptional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the &quot;operation user_account&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n&lt;a href&#x3D;\&#39;/docs/shopping/catalog/\&#39;&gt;Learn more&lt;/a&gt;
     * @param productGroupId Unique identifier of a product group (required)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/getting-started/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return OASCatalogsProductGroupPinsList200Re
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCatalogsProductGroupPinsList200Re catalogsProductGroupPinsList(Map<String, Object> params) {
        client.assertNotNull(params.get('productGroupId'), 'productGroupId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('bookmark', (String) params.get('bookmark')));
        query.addAll(client.makeParam('page_size', (Integer) params.get('pageSize')));
        query.addAll(client.makeParam('ad_account_id', (String) params.get('adAccountId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCatalogsProductGroupPinsList200Re) client.invoke(
            'GET', '/catalogs/product_groups/{product_group_id}/products', '',
            query, form,
            new Map<String, Object>{
                'product_group_id' => (String) params.get('productGroupId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASCatalogsProductGroupPinsList200Re.class
        );
    }
    /**
     * Create product group
     * Create product group to use in Catalogs owned by the &quot;operation user_account&quot;.\n- By default, the &quot;operation user_account&quot; is the token user_account.\n\nOptional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the &quot;operation user_account&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n&lt;a href&#x3D;\&#39;/docs/shopping/catalog/\&#39;&gt;Learn more&lt;/a&gt;
     * @param oaSCatalogsProductGroupsCreateReques Request object used to created a catalogs product group. (required)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return OASCatalogsProductGroupsCreate201Res
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCatalogsProductGroupsCreate201Res catalogsProductGroupsCreate(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSCatalogsProductGroupsCreateReques'), 'oaSCatalogsProductGroupsCreateReques');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('ad_account_id', (String) params.get('adAccountId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCatalogsProductGroupsCreate201Res) client.invoke(
            'POST', '/catalogs/product_groups',
            (OASCatalogsProductGroupsCreateReques) params.get('oaSCatalogsProductGroupsCreateReques'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASCatalogsProductGroupsCreate201Res.class
        );
    }
    /**
     * Delete product group
     * Delete a product group owned by the &quot;operation user_account&quot; from being in use in Catalogs.\n- By default, the &quot;operation user_account&quot; is the token user_account.\n\nOptional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the &quot;operation user_account&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n&lt;a href&#x3D;\&#39;/docs/shopping/catalog/\&#39;&gt;Learn more&lt;/a&gt;
     * @param productGroupId Unique identifier of a product group (required)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void catalogsProductGroupsDelete(Map<String, Object> params) {
        client.assertNotNull(params.get('productGroupId'), 'productGroupId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('ad_account_id', (String) params.get('adAccountId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'DELETE', '/catalogs/product_groups/{product_group_id}', '',
            query, form,
            new Map<String, Object>{
                'product_group_id' => (String) params.get('productGroupId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            null
        );
    }
    /**
     * Get product group
     * Get a singe product group for a given Catalogs Product Group Id owned by the &quot;operation user_account&quot;.\n- By default, the &quot;operation user_account&quot; is the token user_account.\n\nOptional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the &quot;operation user_account&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n&lt;a href&#x3D;\&#39;/docs/shopping/catalog/\&#39;&gt;Learn more&lt;/a&gt;
     * @param productGroupId Unique identifier of a product group (required)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return OASCatalogsProductGroupsCreate201Res
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCatalogsProductGroupsCreate201Res catalogsProductGroupsGet(Map<String, Object> params) {
        client.assertNotNull(params.get('productGroupId'), 'productGroupId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('ad_account_id', (String) params.get('adAccountId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCatalogsProductGroupsCreate201Res) client.invoke(
            'GET', '/catalogs/product_groups/{product_group_id}', '',
            query, form,
            new Map<String, Object>{
                'product_group_id' => (String) params.get('productGroupId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASCatalogsProductGroupsCreate201Res.class
        );
    }
    /**
     * List product groups
     * Get a list of product groups for a given Catalogs Feed Id owned by the &quot;operation user_account&quot;.\n- By default, the &quot;operation user_account&quot; is the token user_account.\n\nOptional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the &quot;operation user_account&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n&lt;a href&#x3D;\&#39;/docs/shopping/catalog/\&#39;&gt;Learn more&lt;/a&gt;
     * @param feedId Filter entities for a given feed_id. If not given, all feeds are considered. (optional)
     * @param catalogId Filter entities for a given catalog_id. If not given, all catalogs are considered. (optional)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/getting-started/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return OASCatalogsProductGroupsList200Respo
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCatalogsProductGroupsList200Respo catalogsProductGroupsList(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('feed_id', (String) params.get('feedId')));
        query.addAll(client.makeParam('catalog_id', (String) params.get('catalogId')));
        query.addAll(client.makeParam('bookmark', (String) params.get('bookmark')));
        query.addAll(client.makeParam('page_size', (Integer) params.get('pageSize')));
        query.addAll(client.makeParam('ad_account_id', (String) params.get('adAccountId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCatalogsProductGroupsList200Respo) client.invoke(
            'GET', '/catalogs/product_groups', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASCatalogsProductGroupsList200Respo.class
        );
    }
    /**
     * Get product counts for a Product Group
     * Get a product counts for a given Catalogs Product Group owned by the &quot;operation user_account&quot;.\n- By default, the &quot;operation user_account&quot; is the token user_account.\n\nOptional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the &quot;operation user_account&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n&lt;a href&#x3D;\&#39;/docs/shopping/catalog/\&#39;&gt;Learn more&lt;/a&gt;
     * @param productGroupId Unique identifier of a product group (required)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return OASCatalogsProductGroupProductCounts
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCatalogsProductGroupProductCounts catalogsProductGroupsProductCountsGet(Map<String, Object> params) {
        client.assertNotNull(params.get('productGroupId'), 'productGroupId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('ad_account_id', (String) params.get('adAccountId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCatalogsProductGroupProductCounts) client.invoke(
            'GET', '/catalogs/product_groups/{product_group_id}/product_counts', '',
            query, form,
            new Map<String, Object>{
                'product_group_id' => (String) params.get('productGroupId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASCatalogsProductGroupProductCounts.class
        );
    }
    /**
     * Update product group
     * Update product group owned by the &quot;operation user_account&quot; to use in Catalogs.\n- By default, the &quot;operation user_account&quot; is the token user_account.\n\nOptional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the &quot;operation user_account&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n&lt;a href&#x3D;\&#39;/docs/shopping/catalog/\&#39;&gt;Learn more&lt;/a&gt;
     * @param productGroupId Unique identifier of a product group (required)
     * @param oaSCatalogsProductGroupsUpdateReques Request object used to Update a catalogs product group. (required)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return OASCatalogsProductGroupsCreate201Res
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCatalogsProductGroupsCreate201Res catalogsProductGroupsUpdate(Map<String, Object> params) {
        client.assertNotNull(params.get('productGroupId'), 'productGroupId');
        client.assertNotNull(params.get('oaSCatalogsProductGroupsUpdateReques'), 'oaSCatalogsProductGroupsUpdateReques');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('ad_account_id', (String) params.get('adAccountId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCatalogsProductGroupsCreate201Res) client.invoke(
            'PATCH', '/catalogs/product_groups/{product_group_id}',
            (OASCatalogsProductGroupsUpdateReques) params.get('oaSCatalogsProductGroupsUpdateReques'),
            query, form,
            new Map<String, Object>{
                'product_group_id' => (String) params.get('productGroupId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASCatalogsProductGroupsCreate201Res.class
        );
    }
    /**
     * List processing results for a given feed
     * Fetch a feed processing results owned by the &quot;operation user_account&quot;. Please note that for now the bookmark parameter is not functional and only the first page will be available until it is implemented in some release in the near future.\n- By default, the &quot;operation user_account&quot; is the token user_account.\n\nOptional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the &quot;operation user_account&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n&lt;a href&#x3D;\&#39;/docs/shopping/catalog/\&#39;&gt;Learn more&lt;/a&gt;
     * @param feedId Unique identifier of a feed (required)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/getting-started/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return OASFeedProcessingResultsList200Respo
     * @throws OAS.ApiException if fails to make API call
     */
    public OASFeedProcessingResultsList200Respo feedProcessingResultsList(Map<String, Object> params) {
        client.assertNotNull(params.get('feedId'), 'feedId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('bookmark', (String) params.get('bookmark')));
        query.addAll(client.makeParam('page_size', (Integer) params.get('pageSize')));
        query.addAll(client.makeParam('ad_account_id', (String) params.get('adAccountId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASFeedProcessingResultsList200Respo) client.invoke(
            'GET', '/catalogs/feeds/{feed_id}/processing_results', '',
            query, form,
            new Map<String, Object>{
                'feed_id' => (String) params.get('feedId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASFeedProcessingResultsList200Respo.class
        );
    }
    /**
     * Create feed
     * Create a new feed owned by the &quot;operation user_account&quot;.\n- By default, the &quot;operation user_account&quot; is the token user_account.\n\nPlease, be aware that &quot;default_country&quot;\nand &quot;default_locale&quot; are not required in the spec for forward compatibility\nbut for now the API will not accept requests without those fields.\n\nOptional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the &quot;operation user_account&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.\n\nFor Retail partners, refer to &lt;a href&#x3D;\&#39;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\&#39;&gt;Before you get started with Catalogs&lt;/a&gt;. For Hotel parterns, refer to &lt;a href&#x3D;\&#39;/docs/shopping/catalog/\&#39;&gt;Pinterest API for shopping&lt;/a&gt;.
     * @param oaSFeedsCreateRequest Request object used to created a feed. (required)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return OASCatalogsFeed
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCatalogsFeed feedsCreate(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSFeedsCreateRequest'), 'oaSFeedsCreateRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('ad_account_id', (String) params.get('adAccountId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCatalogsFeed) client.invoke(
            'POST', '/catalogs/feeds',
            (OASFeedsCreateRequest) params.get('oaSFeedsCreateRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASCatalogsFeed.class
        );
    }
    /**
     * Delete feed
     * Delete a feed owned by the &quot;operating user_account&quot;.\n- By default, the &quot;operation user_account&quot; is the token user_account.\n\nOptional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the &quot;operation user_account&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.\n\nFor Retail partners, refer to &lt;a href&#x3D;\&#39;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\&#39;&gt;Before you get started with Catalogs&lt;/a&gt;. For Hotel parterns, refer to &lt;a href&#x3D;\&#39;/docs/shopping/catalog/\&#39;&gt;Pinterest API for shopping&lt;/a&gt;.
     * @param feedId Unique identifier of a feed (required)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void feedsDelete(Map<String, Object> params) {
        client.assertNotNull(params.get('feedId'), 'feedId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('ad_account_id', (String) params.get('adAccountId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'DELETE', '/catalogs/feeds/{feed_id}', '',
            query, form,
            new Map<String, Object>{
                'feed_id' => (String) params.get('feedId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            null
        );
    }
    /**
     * Get feed
     * Get a single feed owned by the &quot;operation user_account&quot;.\n- By default, the &quot;operation user_account&quot; is the token user_account.\n\nOptional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the &quot;operation user_account&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.\n\nFor Retail partners, refer to &lt;a href&#x3D;\&#39;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\&#39;&gt;Before you get started with Catalogs&lt;/a&gt;. For Hotel parterns, refer to &lt;a href&#x3D;\&#39;/docs/shopping/catalog/\&#39;&gt;Pinterest API for shopping&lt;/a&gt;.
     * @param feedId Unique identifier of a feed (required)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return OASCatalogsFeed
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCatalogsFeed feedsGet(Map<String, Object> params) {
        client.assertNotNull(params.get('feedId'), 'feedId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('ad_account_id', (String) params.get('adAccountId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCatalogsFeed) client.invoke(
            'GET', '/catalogs/feeds/{feed_id}', '',
            query, form,
            new Map<String, Object>{
                'feed_id' => (String) params.get('feedId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASCatalogsFeed.class
        );
    }
    /**
     * List feeds
     * Fetch feeds owned by the &quot;operation user_account&quot;.\n- By default, the &quot;operation user_account&quot; is the token user_account.\n\nOptional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the &quot;operation user_account&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.\n\nFor Retail partners, refer to &lt;a href&#x3D;\&#39;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\&#39;&gt;Before you get started with Catalogs&lt;/a&gt;. For Hotel parterns, refer to &lt;a href&#x3D;\&#39;/docs/shopping/catalog/\&#39;&gt;Pinterest API for shopping&lt;/a&gt;.
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/getting-started/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param catalogId Filter entities for a given catalog_id. If not given, all catalogs are considered. (optional)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return OASFeedsList200Response
     * @throws OAS.ApiException if fails to make API call
     */
    public OASFeedsList200Response feedsList(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('bookmark', (String) params.get('bookmark')));
        query.addAll(client.makeParam('page_size', (Integer) params.get('pageSize')));
        query.addAll(client.makeParam('catalog_id', (String) params.get('catalogId')));
        query.addAll(client.makeParam('ad_account_id', (String) params.get('adAccountId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASFeedsList200Response) client.invoke(
            'GET', '/catalogs/feeds', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASFeedsList200Response.class
        );
    }
    /**
     * Update feed
     * Update a feed owned by the &quot;operation user_account&quot;.\n- By default, the &quot;operation user_account&quot; is the token user_account.\n\nOptional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the &quot;operation user_account&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.\n\nFor Retail partners, refer to &lt;a href&#x3D;\&#39;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\&#39;&gt;Before you get started with Catalogs&lt;/a&gt;. For Hotel parterns, refer to &lt;a href&#x3D;\&#39;/docs/shopping/catalog/\&#39;&gt;Pinterest API for shopping&lt;/a&gt;.
     * @param feedId Unique identifier of a feed (required)
     * @param oaSFeedsUpdateRequest Request object used to update a feed. (required)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return OASCatalogsFeed
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCatalogsFeed feedsUpdate(Map<String, Object> params) {
        client.assertNotNull(params.get('feedId'), 'feedId');
        client.assertNotNull(params.get('oaSFeedsUpdateRequest'), 'oaSFeedsUpdateRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('ad_account_id', (String) params.get('adAccountId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCatalogsFeed) client.invoke(
            'PATCH', '/catalogs/feeds/{feed_id}',
            (OASFeedsUpdateRequest) params.get('oaSFeedsUpdateRequest'),
            query, form,
            new Map<String, Object>{
                'feed_id' => (String) params.get('feedId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASCatalogsFeed.class
        );
    }
    /**
     * Get catalogs item batch status
     * Get a single catalogs items batch owned by the &quot;operating user_account&quot;. &lt;a href&#x3D;&quot;/docs/shopping/catalog/#Update%20items%20in%20batch&quot; target&#x3D;&quot;_blank&quot;&gt;See detailed documentation here.&lt;/a&gt;\n- By default, the &quot;operation user_account&quot; is the token user_account.\n\nOptional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the &quot;operation user_account&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.
     * @param batchId Id of a catalogs items batch to fetch (required)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return OASCatalogsItemsBatch
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCatalogsItemsBatch itemsBatchGet(Map<String, Object> params) {
        client.assertNotNull(params.get('batchId'), 'batchId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('ad_account_id', (String) params.get('adAccountId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCatalogsItemsBatch) client.invoke(
            'GET', '/catalogs/items/batch/{batch_id}', '',
            query, form,
            new Map<String, Object>{
                'batch_id' => (String) params.get('batchId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASCatalogsItemsBatch.class
        );
    }
    /**
     * Operate on item batch
     * This endpoint supports multiple operations on a set of one or more catalog items owned by the &quot;operation user_account&quot;. &lt;a href&#x3D;&quot;/docs/shopping/catalog/#Update%20items%20in%20batch&quot; target&#x3D;&quot;_blank&quot;&gt;See detailed documentation here.&lt;/a&gt;\n- By default, the &quot;operation user_account&quot; is the token user_account.\n\nOptional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the &quot;operation user_account&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.
     * @param oaSItemsBatchPostRequest Request object used to create catalogs items in a batch (required)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return OASCatalogsItemsBatch
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCatalogsItemsBatch itemsBatchPost(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSItemsBatchPostRequest'), 'oaSItemsBatchPostRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('ad_account_id', (String) params.get('adAccountId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCatalogsItemsBatch) client.invoke(
            'POST', '/catalogs/items/batch',
            (OASItemsBatchPostRequest) params.get('oaSItemsBatchPostRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASCatalogsItemsBatch.class
        );
    }
    /**
     * Get catalogs items
     * Get the items of the catalog owned by the &quot;operation user_account&quot;. &lt;a href&#x3D;&quot;/docs/shopping/catalog/#Update%20items%20in%20batch&quot; target&#x3D;&quot;_blank&quot;&gt;See detailed documentation here.&lt;/a&gt;\n- By default, the &quot;operation user_account&quot; is the token user_account.\n\nOptional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the &quot;operation user_account&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.
     * @param country Country for the Catalogs Items (required)
     * @param language Language for the Catalogs Items (required)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @param itemIds This parameter is deprecated. Use filters instead. (optional, default to new List<String>())
     * @param filters Identifies items to be retrieved. This is a required parameter. (optional)
     * @return OASCatalogsItems
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCatalogsItems itemsGet(Map<String, Object> params) {
        client.assertNotNull(params.get('country'), 'country');
        client.assertNotNull(params.get('language'), 'language');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('ad_account_id', (String) params.get('adAccountId')));
        query.addAll(client.makeParam('country', (String) params.get('country')));
        query.addAll(client.makeParam('language', (String) params.get('language')));
        query.addAll(client.makeParams('item_ids', (List<String>) params.get('itemIds')));
        query.addAll(client.makeParam('filters', (OASCatalogsItemsFilters) params.get('filters')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCatalogsItems) client.invoke(
            'GET', '/catalogs/items', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASCatalogsItems.class
        );
    }
    /**
     * List item issues for a given processing result
     * List item validation issues for a given feed processing result owned by the &quot;operation user_account&quot;. Up to 20 random samples of affected items are returned for each error and warning code. Please note that for now query parameters \&#39;item_numbers\&#39; and \&#39;item_validation_issue\&#39; cannot be used simultaneously until it is implemented in some release in the future.\n- By default, the &quot;operation user_account&quot; is the token user_account.\n\nOptional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the &quot;operation user_account&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n&lt;a href&#x3D;\&#39;/docs/shopping/catalog/\&#39;&gt;Learn more&lt;/a&gt;
     * @param processingResultId Unique identifier of a feed processing result. It can be acquired from the &quot;id&quot; field of the &quot;items&quot; array within the response of the [List processing results for a given feed](https://developers.pinterest.com/docs/api/v5/#operation/feed_processing_results/list). (required)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/getting-started/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param itemNumbers Item number based on order of appearance in the Catalogs Feed. For example, \&#39;0\&#39; refers to first item found in a feed that was downloaded from a \&#39;location\&#39; specified during feed creation. (optional, default to new List<Integer>())
     * @param itemValidationIssue Filter item validation issues that have a given type of item validation issue. (optional)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return OASItemsIssuesList200Response
     * @throws OAS.ApiException if fails to make API call
     */
    public OASItemsIssuesList200Response itemsIssuesList(Map<String, Object> params) {
        client.assertNotNull(params.get('processingResultId'), 'processingResultId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('bookmark', (String) params.get('bookmark')));
        query.addAll(client.makeParam('page_size', (Integer) params.get('pageSize')));
        query.addAll(client.makeParams('item_numbers', (List<Integer>) params.get('itemNumbers')));
        query.addAll(client.makeParam('item_validation_issue', (OASCatalogsItemValidationIssue) params.get('itemValidationIssue')));
        query.addAll(client.makeParam('ad_account_id', (String) params.get('adAccountId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASItemsIssuesList200Response) client.invoke(
            'GET', '/catalogs/processing_results/{processing_result_id}/item_issues', '',
            query, form,
            new Map<String, Object>{
                'processing_result_id' => (String) params.get('processingResultId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASItemsIssuesList200Response.class
        );
    }
    /**
     * List filtered products
     * List products Pins owned by the &quot;operation user_account&quot; that meet the criteria specified in the Catalogs Product Group Filter given in the request.\n- This endpoint has been implemented in POST to allow for complex filters. This specific POST endpoint is designed to be idempotent.\n- By default, the &quot;operation user_account&quot; is the token user_account.\n\nOptional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the &quot;operation user_account&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n&lt;a href&#x3D;\&#39;/docs/shopping/catalog/\&#39;&gt;Learn more&lt;/a&gt;
     * @param oaSCatalogsListProductsByFilterReque Object holding a group of filters for a catalog product group (required)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/getting-started/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return OASCatalogsProductGroupPinsList200Re
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCatalogsProductGroupPinsList200Re productsByProductGroupFilterList(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSCatalogsListProductsByFilterReque'), 'oaSCatalogsListProductsByFilterReque');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('bookmark', (String) params.get('bookmark')));
        query.addAll(client.makeParam('page_size', (Integer) params.get('pageSize')));
        query.addAll(client.makeParam('ad_account_id', (String) params.get('adAccountId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCatalogsProductGroupPinsList200Re) client.invoke(
            'POST', '/catalogs/products/get_by_product_group_filters',
            (OASCatalogsListProductsByFilterReque) params.get('oaSCatalogsListProductsByFilterReque'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASCatalogsProductGroupPinsList200Re.class
        );
    }
}
