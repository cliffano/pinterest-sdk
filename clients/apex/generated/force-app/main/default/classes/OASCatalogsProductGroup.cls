/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * catalog product group entity
 */
public class OASCatalogsProductGroup implements OAS.MappedProperties {
    /**
     * ID of the catalog product group.
     * @return id
     */
    public String id { get; set; }

    /**
     * Name of catalog product group
     * @return name
     */
    public String name { get; set; }

    /**
     * Get description
     * @return description
     */
    public String description { get; set; }

    /**
     * Get filters
     * @return filters
     */
    public OASCatalogsProductGroupFilters filters { get; set; }

    /**
     * boolean indicator of whether the product group is being featured or not
     * @return isFeatured
     */
    public Boolean isFeatured { get; set; }

    /**
     * Get type
     * @return type
     */
    public OASCatalogsProductGroupType type { get; set; }

    /**
     * Get status
     * @return status
     */
    public OASCatalogsProductGroupStatus status { get; set; }

    /**
     * Unix timestamp in seconds of when catalog product group was created.
     * @return createdAt
     */
    public Integer createdAt { get; set; }

    /**
     * Unix timestamp in seconds of last time catalog product group was updated.
     * @return updatedAt
     */
    public Integer updatedAt { get; set; }

    /**
     * id of the catalogs feed belonging to this catalog product group
     * @return feedId
     */
    public String feedId { get; set; }

    /**
     * Gets or Sets catalogType
     */
    public enum CatalogTypeEnum {
        RETAIL
    }

    /**
     * Get catalogType
     * @return catalogType
     */
    public CatalogTypeEnum catalogType { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'is_featured' => 'isFeatured',
        'created_at' => 'createdAt',
        'updated_at' => 'updatedAt',
        'feed_id' => 'feedId',
        'catalog_type' => 'catalogType'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'is_featured' => 'isFeatured',
        'created_at' => 'createdAt',
        'updated_at' => 'updatedAt',
        'feed_id' => 'feedId',
        'catalog_type' => 'catalogType'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'is_featured' => 'isFeatured',
        'created_at' => 'createdAt',
        'updated_at' => 'updatedAt',
        'feed_id' => 'feedId',
        'catalog_type' => 'catalogType'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'is_featured' => 'isFeatured',
        'created_at' => 'createdAt',
        'updated_at' => 'updatedAt',
        'feed_id' => 'feedId',
        'catalog_type' => 'catalogType'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'is_featured' => 'isFeatured',
        'created_at' => 'createdAt',
        'updated_at' => 'updatedAt',
        'feed_id' => 'feedId',
        'catalog_type' => 'catalogType'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASCatalogsProductGroup getExample() {
        OASCatalogsProductGroup catalogsProductGroup = new OASCatalogsProductGroup();
          catalogsProductGroup.id = '443727193917';
          catalogsProductGroup.name = 'Most Popular';
          catalogsProductGroup.description = '';
          catalogsProductGroup.filters = OASCatalogsProductGroupFilters.getExample();
          catalogsProductGroup.isFeatured = true;
          catalogsProductGroup.type = OASCatalogsProductGroupType.getExample();
          catalogsProductGroup.status = OASCatalogsProductGroupStatus.getExample();
          catalogsProductGroup.createdAt = 1621350033000;
          catalogsProductGroup.updatedAt = 1622742155000;
          catalogsProductGroup.feedId = '2680059592705';
          catalogsProductGroup.catalogType = CatalogTypeEnum.RETAIL;
        return catalogsProductGroup;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASCatalogsProductGroup) {           
            OASCatalogsProductGroup catalogsProductGroup = (OASCatalogsProductGroup) obj;
            return this.id == catalogsProductGroup.id
                && this.name == catalogsProductGroup.name
                && this.description == catalogsProductGroup.description
                && this.filters == catalogsProductGroup.filters
                && this.isFeatured == catalogsProductGroup.isFeatured
                && this.type == catalogsProductGroup.type
                && this.status == catalogsProductGroup.status
                && this.createdAt == catalogsProductGroup.createdAt
                && this.updatedAt == catalogsProductGroup.updatedAt
                && this.feedId == catalogsProductGroup.feedId
                && this.catalogType == catalogsProductGroup.catalogType;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (description == null ? 0 : System.hashCode(description));
        hashCode = (17 * hashCode) + (filters == null ? 0 : System.hashCode(filters));
        hashCode = (17 * hashCode) + (isFeatured == null ? 0 : System.hashCode(isFeatured));
        hashCode = (17 * hashCode) + (type == null ? 0 : System.hashCode(type));
        hashCode = (17 * hashCode) + (status == null ? 0 : System.hashCode(status));
        hashCode = (17 * hashCode) + (createdAt == null ? 0 : System.hashCode(createdAt));
        hashCode = (17 * hashCode) + (updatedAt == null ? 0 : System.hashCode(updatedAt));
        hashCode = (17 * hashCode) + (feedId == null ? 0 : System.hashCode(feedId));
        hashCode = (17 * hashCode) + (catalogType == null ? 0 : System.hashCode(catalogType));
        return hashCode;
    }
}

