/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASOauthAccessTokenResponseCodeAllOf
 */
public class OASOauthAccessTokenResponseCodeAllOf implements OAS.MappedProperties {
    /**
     * Get refreshToken
     * @return refreshToken
     */
    public String refreshToken { get; set; }

    /**
     * Get refreshTokenExpiresIn
     * @return refreshTokenExpiresIn
     */
    public Integer refreshTokenExpiresIn { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'refresh_token' => 'refreshToken',
        'refresh_token_expires_in' => 'refreshTokenExpiresIn'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'refresh_token' => 'refreshToken',
        'refresh_token_expires_in' => 'refreshTokenExpiresIn'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASOauthAccessTokenResponseCodeAllOf getExample() {
        OASOauthAccessTokenResponseCodeAllOf oauthAccessTokenResponseCodeAllOf = new OASOauthAccessTokenResponseCodeAllOf();
          oauthAccessTokenResponseCodeAllOf.refreshToken = '';
          oauthAccessTokenResponseCodeAllOf.refreshTokenExpiresIn = 0;
        return oauthAccessTokenResponseCodeAllOf;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASOauthAccessTokenResponseCodeAllOf) {           
            OASOauthAccessTokenResponseCodeAllOf oauthAccessTokenResponseCodeAllOf = (OASOauthAccessTokenResponseCodeAllOf) obj;
            return this.refreshToken == oauthAccessTokenResponseCodeAllOf.refreshToken
                && this.refreshTokenExpiresIn == oauthAccessTokenResponseCodeAllOf.refreshTokenExpiresIn;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (refreshToken == null ? 0 : System.hashCode(refreshToken));
        hashCode = (17 * hashCode) + (refreshTokenExpiresIn == null ? 0 : System.hashCode(refreshTokenExpiresIn));
        return hashCode;
    }
}

