/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.3.0
 * Contact: blah@cliffano.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// PinMediaSourceImageBase64 - Base64-encoded image media source
type PinMediaSourceImageBase64 struct {

	SourceType string `json:"source_type"`

	ContentType string `json:"content_type"`

	Data string `json:"data"`
}

// AssertPinMediaSourceImageBase64Required checks if the required fields are not zero-ed
func AssertPinMediaSourceImageBase64Required(obj PinMediaSourceImageBase64) error {
	elements := map[string]interface{}{
		"source_type": obj.SourceType,
		"content_type": obj.ContentType,
		"data": obj.Data,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecursePinMediaSourceImageBase64Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of PinMediaSourceImageBase64 (e.g. [][]PinMediaSourceImageBase64), otherwise ErrTypeAssertionError is thrown.
func AssertRecursePinMediaSourceImageBase64Required(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aPinMediaSourceImageBase64, ok := obj.(PinMediaSourceImageBase64)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertPinMediaSourceImageBase64Required(aPinMediaSourceImageBase64)
	})
}
