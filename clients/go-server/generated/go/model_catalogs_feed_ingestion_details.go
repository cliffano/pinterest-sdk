/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.3.0
 * Contact: pinterest-api@pinterest.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type CatalogsFeedIngestionDetails struct {

	Errors CatalogsFeedIngestionErrors `json:"errors"`

	Info CatalogsFeedIngestionInfo `json:"info"`
}

// AssertCatalogsFeedIngestionDetailsRequired checks if the required fields are not zero-ed
func AssertCatalogsFeedIngestionDetailsRequired(obj CatalogsFeedIngestionDetails) error {
	elements := map[string]interface{}{
		"errors": obj.Errors,
		"info": obj.Info,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertCatalogsFeedIngestionErrorsRequired(obj.Errors); err != nil {
		return err
	}
	if err := AssertCatalogsFeedIngestionInfoRequired(obj.Info); err != nil {
		return err
	}
	return nil
}

// AssertRecurseCatalogsFeedIngestionDetailsRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of CatalogsFeedIngestionDetails (e.g. [][]CatalogsFeedIngestionDetails), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseCatalogsFeedIngestionDetailsRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aCatalogsFeedIngestionDetails, ok := obj.(CatalogsFeedIngestionDetails)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertCatalogsFeedIngestionDetailsRequired(aCatalogsFeedIngestionDetails)
	})
}
