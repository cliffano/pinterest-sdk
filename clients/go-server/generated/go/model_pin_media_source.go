/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.3.0
 * Contact: blah@cliffano.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// PinMediaSource - Pin media source.
type PinMediaSource struct {

	SourceType string `json:"source_type"`

	ContentType string `json:"content_type"`

	Data string `json:"data"`

	Url string `json:"url"`

	CoverImageUrl string `json:"cover_image_url"`

	MediaId string `json:"media_id"`
}

// AssertPinMediaSourceRequired checks if the required fields are not zero-ed
func AssertPinMediaSourceRequired(obj PinMediaSource) error {
	elements := map[string]interface{}{
		"source_type": obj.SourceType,
		"content_type": obj.ContentType,
		"data": obj.Data,
		"url": obj.Url,
		"cover_image_url": obj.CoverImageUrl,
		"media_id": obj.MediaId,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecursePinMediaSourceRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of PinMediaSource (e.g. [][]PinMediaSource), otherwise ErrTypeAssertionError is thrown.
func AssertRecursePinMediaSourceRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aPinMediaSource, ok := obj.(PinMediaSource)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertPinMediaSourceRequired(aPinMediaSource)
	})
}
