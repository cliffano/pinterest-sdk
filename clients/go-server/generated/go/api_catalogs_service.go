/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.3.0
 * Contact: blah@cliffano.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// CatalogsApiService is a service that implements the logic for the CatalogsApiServicer
// This service should implement the business logic for every endpoint for the CatalogsApi API.
// Include any external packages or services that will be required by this service.
type CatalogsApiService struct {
}

// NewCatalogsApiService creates a default api service
func NewCatalogsApiService() CatalogsApiServicer {
	return &CatalogsApiService{}
}

// CatalogsProductGroupsCreate - Create product group
func (s *CatalogsApiService) CatalogsProductGroupsCreate(ctx context.Context, catalogsProductGroupCreateRequest CatalogsProductGroupCreateRequest) (ImplResponse, error) {
	// TODO - update CatalogsProductGroupsCreate with the required logic for this service method.
	// Add api_catalogs_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, interface{}{}) or use other options such as http.Ok ...
	//return Response(201, interface{}{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	//return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CatalogsProductGroupsCreate method not implemented")
}

// CatalogsProductGroupsDelete - Delete product group
func (s *CatalogsApiService) CatalogsProductGroupsDelete(ctx context.Context, productGroupId string) (ImplResponse, error) {
	// TODO - update CatalogsProductGroupsDelete with the required logic for this service method.
	// Add api_catalogs_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	//return Response(204, nil),nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	//return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CatalogsProductGroupsDelete method not implemented")
}

// CatalogsProductGroupsList - Get product groups list
func (s *CatalogsApiService) CatalogsProductGroupsList(ctx context.Context, feedId string, bookmark string, pageSize int32) (ImplResponse, error) {
	// TODO - update CatalogsProductGroupsList with the required logic for this service method.
	// Add api_catalogs_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Paginated{}) or use other options such as http.Ok ...
	//return Response(200, Paginated{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	//return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CatalogsProductGroupsList method not implemented")
}

// CatalogsProductGroupsUpdate - Update product group
func (s *CatalogsApiService) CatalogsProductGroupsUpdate(ctx context.Context, productGroupId string, catalogsProductGroupUpdateRequest CatalogsProductGroupUpdateRequest) (ImplResponse, error) {
	// TODO - update CatalogsProductGroupsUpdate with the required logic for this service method.
	// Add api_catalogs_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, CatalogsProductGroup{}) or use other options such as http.Ok ...
	//return Response(200, CatalogsProductGroup{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	//return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CatalogsProductGroupsUpdate method not implemented")
}

// FeedProcessingResultsList - List processing results for a given feed
func (s *CatalogsApiService) FeedProcessingResultsList(ctx context.Context, feedId string, bookmark string, pageSize int32) (ImplResponse, error) {
	// TODO - update FeedProcessingResultsList with the required logic for this service method.
	// Add api_catalogs_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Paginated{}) or use other options such as http.Ok ...
	//return Response(200, Paginated{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	//return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("FeedProcessingResultsList method not implemented")
}

// FeedsCreate - Create feed
func (s *CatalogsApiService) FeedsCreate(ctx context.Context, catalogsFeedsCreateRequest CatalogsFeedsCreateRequest) (ImplResponse, error) {
	// TODO - update FeedsCreate with the required logic for this service method.
	// Add api_catalogs_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, CatalogsFeed{}) or use other options such as http.Ok ...
	//return Response(201, CatalogsFeed{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(422, Error{}) or use other options such as http.Ok ...
	//return Response(422, Error{}), nil

	//TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	//return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("FeedsCreate method not implemented")
}

// FeedsDelete - Delete feed
func (s *CatalogsApiService) FeedsDelete(ctx context.Context, feedId string) (ImplResponse, error) {
	// TODO - update FeedsDelete with the required logic for this service method.
	// Add api_catalogs_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	//return Response(204, nil),nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	//return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("FeedsDelete method not implemented")
}

// FeedsGet - Get feed
func (s *CatalogsApiService) FeedsGet(ctx context.Context, feedId string) (ImplResponse, error) {
	// TODO - update FeedsGet with the required logic for this service method.
	// Add api_catalogs_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, CatalogsFeed{}) or use other options such as http.Ok ...
	//return Response(200, CatalogsFeed{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	//return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("FeedsGet method not implemented")
}

// FeedsList - List feeds
func (s *CatalogsApiService) FeedsList(ctx context.Context, bookmark string, pageSize int32) (ImplResponse, error) {
	// TODO - update FeedsList with the required logic for this service method.
	// Add api_catalogs_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Paginated{}) or use other options such as http.Ok ...
	//return Response(200, Paginated{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	//return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("FeedsList method not implemented")
}

// FeedsUpdate - Update feed
func (s *CatalogsApiService) FeedsUpdate(ctx context.Context, feedId string, catalogsFeedsUpdateRequest CatalogsFeedsUpdateRequest) (ImplResponse, error) {
	// TODO - update FeedsUpdate with the required logic for this service method.
	// Add api_catalogs_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, CatalogsFeed{}) or use other options such as http.Ok ...
	//return Response(200, CatalogsFeed{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	//return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("FeedsUpdate method not implemented")
}

// ItemsBatchGet - Get catalogs items batch
func (s *CatalogsApiService) ItemsBatchGet(ctx context.Context, batchId string) (ImplResponse, error) {
	// TODO - update ItemsBatchGet with the required logic for this service method.
	// Add api_catalogs_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, CatalogsItemsBatch{}) or use other options such as http.Ok ...
	//return Response(200, CatalogsItemsBatch{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	//return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ItemsBatchGet method not implemented")
}

// ItemsBatchPost - Perform an operation on an item batch
func (s *CatalogsApiService) ItemsBatchPost(ctx context.Context, catalogsItemsBatchRequest CatalogsItemsBatchRequest) (ImplResponse, error) {
	// TODO - update ItemsBatchPost with the required logic for this service method.
	// Add api_catalogs_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, CatalogsItemsBatch{}) or use other options such as http.Ok ...
	//return Response(200, CatalogsItemsBatch{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	//return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ItemsBatchPost method not implemented")
}

// ItemsGet - Get catalogs items
func (s *CatalogsApiService) ItemsGet(ctx context.Context, country string, itemIds []string, language string) (ImplResponse, error) {
	// TODO - update ItemsGet with the required logic for this service method.
	// Add api_catalogs_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, CatalogsItems{}) or use other options such as http.Ok ...
	//return Response(200, CatalogsItems{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	//return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ItemsGet method not implemented")
}
