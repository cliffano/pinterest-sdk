/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.3.0
 * Contact: blah@cliffano.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// MediaUploadRequest - Media upload request
type MediaUploadRequest struct {

	MediaType MediaUploadType `json:"media_type"`
}

// AssertMediaUploadRequestRequired checks if the required fields are not zero-ed
func AssertMediaUploadRequestRequired(obj MediaUploadRequest) error {
	elements := map[string]interface{}{
		"media_type": obj.MediaType,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertMediaUploadTypeRequired(obj.MediaType); err != nil {
		return err
	}
	return nil
}

// AssertRecurseMediaUploadRequestRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of MediaUploadRequest (e.g. [][]MediaUploadRequest), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseMediaUploadRequestRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aMediaUploadRequest, ok := obj.(MediaUploadRequest)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertMediaUploadRequestRequired(aMediaUploadRequest)
	})
}
