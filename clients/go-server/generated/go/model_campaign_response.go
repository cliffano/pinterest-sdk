/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.3.0
 * Contact: pinterest-api@pinterest.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type CampaignResponse struct {

	// Campaign ID.
	Id string `json:"id"`

	// Campaign's Advertiser ID.
	AdAccountId string `json:"ad_account_id"`

	// Campaign name.
	Name string `json:"name,omitempty"`

	Status EntityStatus `json:"status,omitempty"`

	// Campaign total spending cap.
	LifetimeSpendCap *int32 `json:"lifetime_spend_cap,omitempty"`

	// Campaign daily spending cap.
	DailySpendCap *int32 `json:"daily_spend_cap,omitempty"`

	// Order line ID that appears on the invoice.
	OrderLineId *string `json:"order_line_id,omitempty"`

	TrackingUrls *TrackingUrls `json:"tracking_urls,omitempty"`

	// Campaign start time. Unix timestamp in seconds. Only used for Campaign Budget Optimization (CBO) campaigns.
	StartTime *int32 `json:"start_time,omitempty"`

	// Campaign end time. Unix timestamp in seconds. Only used for Campaign Budget Optimization (CBO) campaigns.
	EndTime *int32 `json:"end_time,omitempty"`

	ObjectiveType ObjectiveType `json:"objective_type,omitempty"`

	// Campaign creation time. Unix timestamp in seconds.
	CreatedTime int32 `json:"created_time,omitempty"`

	// UTC timestamp. Last update time.
	UpdatedTime int32 `json:"updated_time,omitempty"`

	// Always \"campaign\".
	Type string `json:"type,omitempty"`
}

// AssertCampaignResponseRequired checks if the required fields are not zero-ed
func AssertCampaignResponseRequired(obj CampaignResponse) error {
	elements := map[string]interface{}{
		"id": obj.Id,
		"ad_account_id": obj.AdAccountId,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertEntityStatusRequired(obj.Status); err != nil {
		return err
	}
	if obj.TrackingUrls != nil {
		if err := AssertTrackingUrlsRequired(*obj.TrackingUrls); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseCampaignResponseRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of CampaignResponse (e.g. [][]CampaignResponse), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseCampaignResponseRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aCampaignResponse, ok := obj.(CampaignResponse)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertCampaignResponseRequired(aCampaignResponse)
	})
}
