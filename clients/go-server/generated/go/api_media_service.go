/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.3.0
 * Contact: blah@cliffano.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// MediaApiService is a service that implements the logic for the MediaApiServicer
// This service should implement the business logic for every endpoint for the MediaApi API.
// Include any external packages or services that will be required by this service.
type MediaApiService struct {
}

// NewMediaApiService creates a default api service
func NewMediaApiService() MediaApiServicer {
	return &MediaApiService{}
}

// MediaCreate - Register media upload
func (s *MediaApiService) MediaCreate(ctx context.Context, mediaUploadRequest MediaUploadRequest) (ImplResponse, error) {
	// TODO - update MediaCreate with the required logic for this service method.
	// Add api_media_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, MediaUpload{}) or use other options such as http.Ok ...
	//return Response(201, MediaUpload{}), nil

	//TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	//return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("MediaCreate method not implemented")
}

// MediaGet - Get media upload details
func (s *MediaApiService) MediaGet(ctx context.Context, mediaId string) (ImplResponse, error) {
	// TODO - update MediaGet with the required logic for this service method.
	// Add api_media_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, MediaUploadDetails{}) or use other options such as http.Ok ...
	//return Response(200, MediaUploadDetails{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	//return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("MediaGet method not implemented")
}

// MediaList - List media uploads
func (s *MediaApiService) MediaList(ctx context.Context, bookmark string, pageSize int32) (ImplResponse, error) {
	// TODO - update MediaList with the required logic for this service method.
	// Add api_media_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Paginated{}) or use other options such as http.Ok ...
	//return Response(200, Paginated{}), nil

	//TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	//return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("MediaList method not implemented")
}
