/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.4.1
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAICatalogsApiHandler_H
#define OAI_OAICatalogsApiHandler_H

#include <QObject>

#include "OAICatalogsFeed.h"
#include "OAICatalogsFeedsCreateRequest.h"
#include "OAICatalogsFeedsUpdateRequest.h"
#include "OAICatalogsItemValidationIssue.h"
#include "OAICatalogsItems.h"
#include "OAICatalogsItemsBatch.h"
#include "OAICatalogsItemsBatchRequest.h"
#include "OAICatalogsListProductsByFilterRequest.h"
#include "OAICatalogsProductGroup.h"
#include "OAICatalogsProductGroupCreateRequest.h"
#include "OAICatalogsProductGroupProductCounts.h"
#include "OAICatalogsProductGroupUpdateRequest.h"
#include "OAICatalogs_product_groups_list_200_response.h"
#include "OAIError.h"
#include "OAIFeed_processing_results_list_200_response.h"
#include "OAIFeeds_list_200_response.h"
#include "OAIItems_issues_list_200_response.h"
#include "OAIProducts_by_product_group_filter_list_200_response.h"
#include <QString>

namespace OpenAPI {

class OAICatalogsApiHandler : public QObject
{
    Q_OBJECT

public:
    OAICatalogsApiHandler();
    virtual ~OAICatalogsApiHandler();


public slots:
    virtual void catalogsProductGroupPins_list(QString product_group_id, QString bookmark, qint32 page_size);
    virtual void catalogsProductGroups_create(OAICatalogsProductGroupCreateRequest oai_catalogs_product_group_create_request);
    virtual void catalogsProductGroups_delete(QString product_group_id);
    virtual void catalogsProductGroups_get(QString product_group_id);
    virtual void catalogsProductGroups_list(QString feed_id, QString bookmark, qint32 page_size);
    virtual void catalogsProductGroups_productCountsGet(QString product_group_id);
    virtual void catalogsProductGroups_update(QString product_group_id, OAICatalogsProductGroupUpdateRequest oai_catalogs_product_group_update_request);
    virtual void feedProcessingResults_list(QString feed_id, QString bookmark, qint32 page_size);
    virtual void feeds_create(OAICatalogsFeedsCreateRequest oai_catalogs_feeds_create_request);
    virtual void feeds_delete(QString feed_id);
    virtual void feeds_get(QString feed_id);
    virtual void feeds_list(QString bookmark, qint32 page_size);
    virtual void feeds_update(QString feed_id, OAICatalogsFeedsUpdateRequest oai_catalogs_feeds_update_request);
    virtual void itemsBatch_get(QString batch_id);
    virtual void itemsBatch_post(OAICatalogsItemsBatchRequest oai_catalogs_items_batch_request);
    virtual void itemsIssues_list(QString processing_result_id, QString bookmark, qint32 page_size, QList<qint32> item_numbers, OAICatalogsItemValidationIssue item_validation_issue);
    virtual void items_get(QString country, QList<QString> item_ids, QString language);
    virtual void productsByProductGroupFilter_list(OAICatalogsListProductsByFilterRequest oai_catalogs_list_products_by_filter_request, QString bookmark, qint32 page_size);
    

};

}

#endif // OAI_OAICatalogsApiHandler_H
