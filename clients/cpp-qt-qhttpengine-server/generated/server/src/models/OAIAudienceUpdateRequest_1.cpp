/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.6.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAudienceUpdateRequest_1.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAudienceUpdateRequest_1::OAIAudienceUpdateRequest_1(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAudienceUpdateRequest_1::OAIAudienceUpdateRequest_1() {
    this->initializeModel();
}

OAIAudienceUpdateRequest_1::~OAIAudienceUpdateRequest_1() {}

void OAIAudienceUpdateRequest_1::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_operation_type_isSet = false;
    m_operation_type_isValid = false;
}

void OAIAudienceUpdateRequest_1::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAudienceUpdateRequest_1::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_operation_type_isValid = ::OpenAPI::fromJsonValue(operation_type, json[QString("operation_type")]);
    m_operation_type_isSet = !json[QString("operation_type")].isNull() && m_operation_type_isValid;
}

QString OAIAudienceUpdateRequest_1::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAudienceUpdateRequest_1::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(description));
    }
    if (operation_type.isSet()) {
        obj.insert(QString("operation_type"), ::OpenAPI::toJsonValue(operation_type));
    }
    return obj;
}

QString OAIAudienceUpdateRequest_1::getDescription() const {
    return description;
}
void OAIAudienceUpdateRequest_1::setDescription(const QString &description) {
    this->description = description;
    this->m_description_isSet = true;
}

bool OAIAudienceUpdateRequest_1::is_description_Set() const{
    return m_description_isSet;
}

bool OAIAudienceUpdateRequest_1::is_description_Valid() const{
    return m_description_isValid;
}

OAIAudienceUpdateOperationType OAIAudienceUpdateRequest_1::getOperationType() const {
    return operation_type;
}
void OAIAudienceUpdateRequest_1::setOperationType(const OAIAudienceUpdateOperationType &operation_type) {
    this->operation_type = operation_type;
    this->m_operation_type_isSet = true;
}

bool OAIAudienceUpdateRequest_1::is_operation_type_Set() const{
    return m_operation_type_isSet;
}

bool OAIAudienceUpdateRequest_1::is_operation_type_Valid() const{
    return m_operation_type_isValid;
}

bool OAIAudienceUpdateRequest_1::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (operation_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAudienceUpdateRequest_1::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
