/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAdGroupCommon_tracking_urls.h
 *
 * Third-party tracking URLs.&lt;br&gt; JSON object with the format: {\&quot;&lt;a href&#x3D;\&quot;https://developers.pinterest.com/docs/redoc/#section/Tracking-URL-event\&quot;&gt;Tracking event enum&lt;/a&gt;\&quot;:[URL string array],...}&lt;br&gt; For example: {\&quot;impression\&quot;: [\&quot;URL1\&quot;, \&quot;URL2\&quot;], \&quot;click\&quot;: [\&quot;URL1\&quot;, \&quot;URL2\&quot;, \&quot;URL3\&quot;]}.&lt;br&gt;Up to three tracking URLs are supported for each event type. Tracking URLs set at the ad group or ad level can override those set at the campaign level. May be null. Pass in an empty object - {} - to remove tracking URLs.&lt;br&gt;&lt;br&gt; For more information, see &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/third-party-and-dynamic-tracking\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Third-party and dynamic tracking&lt;/a&gt;.
 */

#ifndef OAIAdGroupCommon_tracking_urls_H
#define OAIAdGroupCommon_tracking_urls_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAdGroupCommon_tracking_urls : public OAIObject {
public:
    OAIAdGroupCommon_tracking_urls();
    OAIAdGroupCommon_tracking_urls(QString json);
    ~OAIAdGroupCommon_tracking_urls() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getImpression() const;
    void setImpression(const QList<QString> &impression);
    bool is_impression_Set() const;
    bool is_impression_Valid() const;

    QList<QString> getClick() const;
    void setClick(const QList<QString> &click);
    bool is_click_Set() const;
    bool is_click_Valid() const;

    QList<QString> getEngagement() const;
    void setEngagement(const QList<QString> &engagement);
    bool is_engagement_Set() const;
    bool is_engagement_Valid() const;

    QList<QString> getBuyableButton() const;
    void setBuyableButton(const QList<QString> &buyable_button);
    bool is_buyable_button_Set() const;
    bool is_buyable_button_Valid() const;

    QList<QString> getAudienceVerification() const;
    void setAudienceVerification(const QList<QString> &audience_verification);
    bool is_audience_verification_Set() const;
    bool is_audience_verification_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> impression;
    bool m_impression_isSet;
    bool m_impression_isValid;

    QList<QString> click;
    bool m_click_isSet;
    bool m_click_isValid;

    QList<QString> engagement;
    bool m_engagement_isSet;
    bool m_engagement_isValid;

    QList<QString> buyable_button;
    bool m_buyable_button_isSet;
    bool m_buyable_button_isValid;

    QList<QString> audience_verification;
    bool m_audience_verification_isSet;
    bool m_audience_verification_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAdGroupCommon_tracking_urls)

#endif // OAIAdGroupCommon_tracking_urls_H
