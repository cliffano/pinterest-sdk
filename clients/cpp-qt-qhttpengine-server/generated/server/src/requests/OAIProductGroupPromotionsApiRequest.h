/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.4.1
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAIProductGroupPromotionsApiRequest_H
#define OAI_OAIProductGroupPromotionsApiRequest_H

#include <QObject>
#include <QStringList>
#include <QMultiMap>
#include <QNetworkReply>
#include <QSharedPointer>

#include <qhttpengine/socket.h>
#include "OAIError.h"
#include "OAIProductGroupPromotion.h"
#include "OAIProductGroupPromotionArrayElement.h"
#include "OAIProductGroupPromotionCreateRequest.h"
#include "OAIProductGroupPromotionUpdateRequest.h"
#include "OAIProductGroupPromotionUpdateResponseItem.h"
#include <QString>
#include "OAIProductGroupPromotionsApiHandler.h"

namespace OpenAPI {

class OAIProductGroupPromotionsApiRequest : public QObject
{
    Q_OBJECT

public:
    OAIProductGroupPromotionsApiRequest(QHttpEngine::Socket *s, QSharedPointer<OAIProductGroupPromotionsApiHandler> handler);
    virtual ~OAIProductGroupPromotionsApiRequest();

    void productGroupPromotion_getRequest(const QString& ad_account_id, const QString& product_group_promotion_id);
    void productGroupPromotions_createRequest(const QString& ad_account_id);
    void productGroupPromotions_updateRequest(const QString& ad_account_id);
    

    void productGroupPromotion_getResponse(const OAIProductGroupPromotion& res);
    void productGroupPromotions_createResponse(const QList<OAIProductGroupPromotionArrayElement>& res);
    void productGroupPromotions_updateResponse(const QList<OAIProductGroupPromotionUpdateResponseItem>& res);
    

    void productGroupPromotion_getError(const OAIProductGroupPromotion& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void productGroupPromotions_createError(const QList<OAIProductGroupPromotionArrayElement>& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void productGroupPromotions_updateError(const QList<OAIProductGroupPromotionUpdateResponseItem>& res, QNetworkReply::NetworkError error_type, QString& error_str);
    

    void sendCustomResponse(QByteArray & res, QNetworkReply::NetworkError error_type);

    void sendCustomResponse(QIODevice *res, QNetworkReply::NetworkError error_type);

    QMap<QString, QString> getRequestHeaders() const;

    QHttpEngine::Socket* getRawSocket();

    void setResponseHeaders(const QMultiMap<QString,QString>& headers);

signals:
    void productGroupPromotion_get(QString ad_account_id, QString product_group_promotion_id);
    void productGroupPromotions_create(QString ad_account_id, OAIProductGroupPromotionCreateRequest oai_product_group_promotion_create_request);
    void productGroupPromotions_update(QString ad_account_id, OAIProductGroupPromotionUpdateRequest oai_product_group_promotion_update_request);
    

private:
    QMap<QString, QString> requestHeaders;
    QMap<QString, QString> responseHeaders;
    QHttpEngine::Socket  *socket;
    QSharedPointer<OAIProductGroupPromotionsApiHandler> handler;

    inline void setSocketResponseHeaders(){
        QHttpEngine::Socket::HeaderMap resHeaders;
        for(auto itr = responseHeaders.begin(); itr != responseHeaders.end(); ++itr) {
            resHeaders.insert(itr.key().toUtf8(), itr.value().toUtf8());
        }
        socket->setHeaders(resHeaders);
    }
};

}

#endif // OAI_OAIProductGroupPromotionsApiRequest_H
