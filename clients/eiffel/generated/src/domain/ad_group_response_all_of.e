note
 description:"[
		Pinterest REST API
 		Pinterest's REST API
  		The version of the OpenAPI document: 5.3.0
 	    Contact: blah@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class AD_GROUP_RESPONSE_ALL_OF




feature --Access

    name: detachable STRING_32
      -- Ad group name.
    status: detachable ENTITY_STATUS
      -- Ad group/entity status.
 	budget_in_micro_currency: INTEGER_32
    	 -- Budget in micro currency. This field is **REQUIRED** for non-CBO (campaign budget optimization) campaigns.  A CBO campaign automatically generates ad group budgets from its campaign budget to maximize campaign outcome. A CBO campaign is limited to 70 or less ad groups.
 	bid_in_micro_currency: INTEGER_32
    	 -- Bid price in micro currency. This field is **REQUIRED** for the following campaign objective_type/billable_event combinations: AWARENESS/IMPRESSION, CONSIDERATION/CLICKTHROUGH, CATALOG_SALES/CLICKTHROUGH, VIDEO_VIEW/VIDEO_V_50_MRC.
    budget_type: detachable STRING_32
      -- Budget type. If DAILY, an ad group's daily spend will not exceed the budget parameter value. If LIFETIME, the end_time parameter is **REQUIRED**, and the ad group spend is spread evenly between the ad group `start_time` and `end_time` range. A CBO campaign automatically generates ad group budgets from its campaign budget to maximize campaign outcome.
 	start_time: INTEGER_32
    	 -- Ad group start time. Unix timestamp in seconds. Defaults to current time.
 	end_time: INTEGER_32
    	 -- Ad group end time. Unix timestamp in seconds.
    targeting_spec: detachable STRING_TABLE [LIST [STRING_32]]
      -- Ad group targeting specification defining the ad group target audience. For example, '{\"APPTYPE\":[\"iphone\"], \"GENDER\":[\"male\"], \"LOCALE\":[\"en-US\"], \"LOCATION\":[\"501\"], \"AGE_BUCKET\":[\"25-34\"]}'
 	lifetime_frequency_cap: INTEGER_32
    	 -- Set a limit to the number of times a promoted pin from this campaign can be impressed by a pinner within the past rolling 30 days. Only available for CPM (cost per mille (1000 impressions))  ad groups. A CPM ad group has an IMPRESSION <a href=\\\"/docs/redoc/#section/Billable-event\\\">billable_event</a> value. This field **REQUIRES** the `end_time` field.
    tracking_urls: detachable TRACKING_URLS
      -- Third-party tracking URLs.<br> JSON object with the format: {\"<a href=\"https://developers.pinterest.com/docs/redoc/#section/Tracking-URL-event\">Tracking event enum</a>\":[URL string array],...}<br> For example: {\"impression\": [\"URL1\", \"URL2\"], \"click\": [\"URL1\", \"URL2\", \"URL3\"]}.<br>Up to three tracking URLs are supported for each event type. Tracking URLs set at the ad group or ad level can override those set at the campaign level. May be null. Pass in an empty object - {} - to remove tracking URLs.<br><br> For more information, see <a href=\"https://help.pinterest.com/en/business/article/third-party-and-dynamic-tracking\" target=\"_blank\">Third-party and dynamic tracking</a>.
 	auto_targeting_enabled: BOOLEAN
    	 -- Enable auto-targeting for ad group. Also known as <a href=\"https://help.pinterest.com/en/business/article/expanded-targeting\" target=\"_blank\">\"expanded targeting\"</a>.
    placement_group: detachable PLACEMENT_GROUP_TYPE
      -- <a href=\\\"/docs/redoc/#section/Placement-group\\\">Placement group</a>.
    pacing_delivery_type: detachable PACING_DELIVERY_TYPE
      -- Pacing delivery type. With ACCELERATED, an ad group budget is spent as fast as possible. With STANDARD, an ad group budget is spent smoothly over a day.
    conversion_learning_mode_type: detachable STRING_32
      -- oCPM learn mode
    summary_status: detachable AD_GROUP_SUMMARY_STATUS
      -- Ad group summary status.
    feed_profile_id: detachable STRING_32
      -- Feed Profile ID associated to the adgroup.

feature -- Change Element

    set_name (a_name: like name)
        -- Set 'name' with 'a_name'.
      do
        name := a_name
      ensure
        name_set: name = a_name
      end

    set_status (a_name: like status)
        -- Set 'status' with 'a_name'.
      do
        status := a_name
      ensure
        status_set: status = a_name
      end

    set_budget_in_micro_currency (a_name: like budget_in_micro_currency)
        -- Set 'budget_in_micro_currency' with 'a_name'.
      do
        budget_in_micro_currency := a_name
      ensure
        budget_in_micro_currency_set: budget_in_micro_currency = a_name
      end

    set_bid_in_micro_currency (a_name: like bid_in_micro_currency)
        -- Set 'bid_in_micro_currency' with 'a_name'.
      do
        bid_in_micro_currency := a_name
      ensure
        bid_in_micro_currency_set: bid_in_micro_currency = a_name
      end

    set_budget_type (a_name: like budget_type)
        -- Set 'budget_type' with 'a_name'.
      do
        budget_type := a_name
      ensure
        budget_type_set: budget_type = a_name
      end

    set_start_time (a_name: like start_time)
        -- Set 'start_time' with 'a_name'.
      do
        start_time := a_name
      ensure
        start_time_set: start_time = a_name
      end

    set_end_time (a_name: like end_time)
        -- Set 'end_time' with 'a_name'.
      do
        end_time := a_name
      ensure
        end_time_set: end_time = a_name
      end

    set_targeting_spec (a_name: like targeting_spec)
        -- Set 'targeting_spec' with 'a_name'.
      do
        targeting_spec := a_name
      ensure
        targeting_spec_set: targeting_spec = a_name
      end

    set_lifetime_frequency_cap (a_name: like lifetime_frequency_cap)
        -- Set 'lifetime_frequency_cap' with 'a_name'.
      do
        lifetime_frequency_cap := a_name
      ensure
        lifetime_frequency_cap_set: lifetime_frequency_cap = a_name
      end

    set_tracking_urls (a_name: like tracking_urls)
        -- Set 'tracking_urls' with 'a_name'.
      do
        tracking_urls := a_name
      ensure
        tracking_urls_set: tracking_urls = a_name
      end

    set_auto_targeting_enabled (a_name: like auto_targeting_enabled)
        -- Set 'auto_targeting_enabled' with 'a_name'.
      do
        auto_targeting_enabled := a_name
      ensure
        auto_targeting_enabled_set: auto_targeting_enabled = a_name
      end

    set_placement_group (a_name: like placement_group)
        -- Set 'placement_group' with 'a_name'.
      do
        placement_group := a_name
      ensure
        placement_group_set: placement_group = a_name
      end

    set_pacing_delivery_type (a_name: like pacing_delivery_type)
        -- Set 'pacing_delivery_type' with 'a_name'.
      do
        pacing_delivery_type := a_name
      ensure
        pacing_delivery_type_set: pacing_delivery_type = a_name
      end

    set_conversion_learning_mode_type (a_name: like conversion_learning_mode_type)
        -- Set 'conversion_learning_mode_type' with 'a_name'.
      do
        conversion_learning_mode_type := a_name
      ensure
        conversion_learning_mode_type_set: conversion_learning_mode_type = a_name
      end

    set_summary_status (a_name: like summary_status)
        -- Set 'summary_status' with 'a_name'.
      do
        summary_status := a_name
      ensure
        summary_status_set: summary_status = a_name
      end

    set_feed_profile_id (a_name: like feed_profile_id)
        -- Set 'feed_profile_id' with 'a_name'.
      do
        feed_profile_id := a_name
      ensure
        feed_profile_id_set: feed_profile_id = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass AD_GROUP_RESPONSE_ALL_OF%N")
        if attached name as l_name then
          Result.append ("%Nname:")
          Result.append (l_name.out)
          Result.append ("%N")
        end
        if attached status as l_status then
          Result.append ("%Nstatus:")
          Result.append (l_status.out)
          Result.append ("%N")
        end
        if attached budget_in_micro_currency as l_budget_in_micro_currency then
          Result.append ("%Nbudget_in_micro_currency:")
          Result.append (l_budget_in_micro_currency.out)
          Result.append ("%N")
        end
        if attached bid_in_micro_currency as l_bid_in_micro_currency then
          Result.append ("%Nbid_in_micro_currency:")
          Result.append (l_bid_in_micro_currency.out)
          Result.append ("%N")
        end
        if attached budget_type as l_budget_type then
          Result.append ("%Nbudget_type:")
          Result.append (l_budget_type.out)
          Result.append ("%N")
        end
        if attached start_time as l_start_time then
          Result.append ("%Nstart_time:")
          Result.append (l_start_time.out)
          Result.append ("%N")
        end
        if attached end_time as l_end_time then
          Result.append ("%Nend_time:")
          Result.append (l_end_time.out)
          Result.append ("%N")
        end
        if attached targeting_spec as l_targeting_spec then
          Result.append ("%Ntargeting_spec:")
          across l_targeting_spec as ic loop
            Result.append ("%N")
            Result.append ("key:")
            Result.append (ic.key.out)
            Result.append (" - ")
            Result.append ("val:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached lifetime_frequency_cap as l_lifetime_frequency_cap then
          Result.append ("%Nlifetime_frequency_cap:")
          Result.append (l_lifetime_frequency_cap.out)
          Result.append ("%N")
        end
        if attached tracking_urls as l_tracking_urls then
          Result.append ("%Ntracking_urls:")
          across l_tracking_urls as ic loop
            Result.append ("%N")
            Result.append ("key:")
            Result.append (ic.key.out)
            Result.append (" - ")
            Result.append ("val:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached tracking_urls as l_tracking_urls then
          Result.append ("%Ntracking_urls:")
          Result.append (l_tracking_urls.out)
          Result.append ("%N")
        end
        if attached auto_targeting_enabled as l_auto_targeting_enabled then
          Result.append ("%Nauto_targeting_enabled:")
          Result.append (l_auto_targeting_enabled.out)
          Result.append ("%N")
        end
        if attached placement_group as l_placement_group then
          Result.append ("%Nplacement_group:")
          Result.append (l_placement_group.out)
          Result.append ("%N")
        end
        if attached pacing_delivery_type as l_pacing_delivery_type then
          Result.append ("%Npacing_delivery_type:")
          Result.append (l_pacing_delivery_type.out)
          Result.append ("%N")
        end
        if attached conversion_learning_mode_type as l_conversion_learning_mode_type then
          Result.append ("%Nconversion_learning_mode_type:")
          Result.append (l_conversion_learning_mode_type.out)
          Result.append ("%N")
        end
        if attached summary_status as l_summary_status then
          Result.append ("%Nsummary_status:")
          Result.append (l_summary_status.out)
          Result.append ("%N")
        end
        if attached feed_profile_id as l_feed_profile_id then
          Result.append ("%Nfeed_profile_id:")
          Result.append (l_feed_profile_id.out)
          Result.append ("%N")
        end
      end
end

