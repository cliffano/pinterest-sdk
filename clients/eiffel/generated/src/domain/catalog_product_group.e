note
 description:"[
		Pinterest REST API
 		Pinterest's REST API
  		The version of the OpenAPI document: 5.12.0
 	    Contact: blah+oapicf@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class CATALOG_PRODUCT_GROUP




feature --Access

    id: detachable STRING_32
      -- ID of the catalog product group.
    merchant_id: detachable STRING_32
      -- Merchant ID pertaining to the owner of the catalog product group.
    name: detachable STRING_32
      -- Name of catalog product group
    filters: detachable ANY
      -- Object holding a list of filters
    filter_v2: detachable ANY
      -- Object holding a list of filters
    type: detachable BOARD
      
    status: detachable ENTITY_STATUS
      
    feed_profile_id: detachable STRING_32
      -- id of the feed profile belonging to this catalog product group
    created_at: INTEGER_32
      -- Unix timestamp in seconds of when catalog product group was created.
    last_update: INTEGER_32
      -- Unix timestamp in seconds of last time catalog product group was updated.
    product_count: INTEGER_32
      -- Amount of products in the catalog product group
    featured_position: INTEGER_32
      -- index of the featured position of the catalog product group

feature -- Change Element

    set_id (a_name: like id)
        -- Set 'id' with 'a_name'.
      do
        id := a_name
      ensure
        id_set: id = a_name
      end

    set_merchant_id (a_name: like merchant_id)
        -- Set 'merchant_id' with 'a_name'.
      do
        merchant_id := a_name
      ensure
        merchant_id_set: merchant_id = a_name
      end

    set_name (a_name: like name)
        -- Set 'name' with 'a_name'.
      do
        name := a_name
      ensure
        name_set: name = a_name
      end

    set_filters (a_name: like filters)
        -- Set 'filters' with 'a_name'.
      do
        filters := a_name
      ensure
        filters_set: filters = a_name
      end

    set_filter_v2 (a_name: like filter_v2)
        -- Set 'filter_v2' with 'a_name'.
      do
        filter_v2 := a_name
      ensure
        filter_v2_set: filter_v2 = a_name
      end

    set_type (a_name: like type)
        -- Set 'type' with 'a_name'.
      do
        type := a_name
      ensure
        type_set: type = a_name
      end

    set_status (a_name: like status)
        -- Set 'status' with 'a_name'.
      do
        status := a_name
      ensure
        status_set: status = a_name
      end

    set_feed_profile_id (a_name: like feed_profile_id)
        -- Set 'feed_profile_id' with 'a_name'.
      do
        feed_profile_id := a_name
      ensure
        feed_profile_id_set: feed_profile_id = a_name
      end

    set_created_at (a_name: like created_at)
        -- Set 'created_at' with 'a_name'.
      do
        created_at := a_name
      ensure
        created_at_set: created_at = a_name
      end

    set_last_update (a_name: like last_update)
        -- Set 'last_update' with 'a_name'.
      do
        last_update := a_name
      ensure
        last_update_set: last_update = a_name
      end

    set_product_count (a_name: like product_count)
        -- Set 'product_count' with 'a_name'.
      do
        product_count := a_name
      ensure
        product_count_set: product_count = a_name
      end

    set_featured_position (a_name: like featured_position)
        -- Set 'featured_position' with 'a_name'.
      do
        featured_position := a_name
      ensure
        featured_position_set: featured_position = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass CATALOG_PRODUCT_GROUP%N")
        if attached id as l_id then
          Result.append ("%Nid:")
          Result.append (l_id.out)
          Result.append ("%N")
        end
        if attached merchant_id as l_merchant_id then
          Result.append ("%Nmerchant_id:")
          Result.append (l_merchant_id.out)
          Result.append ("%N")
        end
        if attached name as l_name then
          Result.append ("%Nname:")
          Result.append (l_name.out)
          Result.append ("%N")
        end
        if attached filters as l_filters then
          Result.append ("%Nfilters:")
          Result.append (l_filters.out)
          Result.append ("%N")
        end
        if attached filter_v2 as l_filter_v2 then
          Result.append ("%Nfilter_v2:")
          Result.append (l_filter_v2.out)
          Result.append ("%N")
        end
        if attached type as l_type then
          Result.append ("%Ntype:")
          Result.append (l_type.out)
          Result.append ("%N")
        end
        if attached status as l_status then
          Result.append ("%Nstatus:")
          Result.append (l_status.out)
          Result.append ("%N")
        end
        if attached feed_profile_id as l_feed_profile_id then
          Result.append ("%Nfeed_profile_id:")
          Result.append (l_feed_profile_id.out)
          Result.append ("%N")
        end
        if attached created_at as l_created_at then
          Result.append ("%Ncreated_at:")
          Result.append (l_created_at.out)
          Result.append ("%N")
        end
        if attached last_update as l_last_update then
          Result.append ("%Nlast_update:")
          Result.append (l_last_update.out)
          Result.append ("%N")
        end
        if attached product_count as l_product_count then
          Result.append ("%Nproduct_count:")
          Result.append (l_product_count.out)
          Result.append ("%N")
        end
        if attached featured_position as l_featured_position then
          Result.append ("%Nfeatured_position:")
          Result.append (l_featured_position.out)
          Result.append ("%N")
        end
      end
end

