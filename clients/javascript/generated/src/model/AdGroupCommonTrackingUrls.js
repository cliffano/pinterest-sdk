/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TrackingUrls from './TrackingUrls';

/**
 * The AdGroupCommonTrackingUrls model module.
 * @module model/AdGroupCommonTrackingUrls
 * @version 1.1.1-pre.0
 */
class AdGroupCommonTrackingUrls {
    /**
     * Constructs a new <code>AdGroupCommonTrackingUrls</code>.
     * Third-party tracking URLs.&lt;br&gt; JSON object with the format: {\&quot;&lt;a href&#x3D;\&quot;https://developers.pinterest.com/docs/redoc/#section/Tracking-URL-event\&quot;&gt;Tracking event enum&lt;/a&gt;\&quot;:[URL string array],...}&lt;br&gt; For example: {\&quot;impression\&quot;: [\&quot;URL1\&quot;, \&quot;URL2\&quot;], \&quot;click\&quot;: [\&quot;URL1\&quot;, \&quot;URL2\&quot;, \&quot;URL3\&quot;]}.&lt;br&gt;Up to three tracking URLs are supported for each event type. Tracking URLs set at the ad group or ad level can override those set at the campaign level. May be null. Pass in an empty object - {} - to remove tracking URLs.&lt;br&gt;&lt;br&gt; For more information, see &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/third-party-and-dynamic-tracking\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Third-party and dynamic tracking&lt;/a&gt;.
     * @alias module:model/AdGroupCommonTrackingUrls
     * @implements module:model/TrackingUrls
     */
    constructor() { 
        TrackingUrls.initialize(this);
        AdGroupCommonTrackingUrls.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AdGroupCommonTrackingUrls</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdGroupCommonTrackingUrls} obj Optional instance to populate.
     * @return {module:model/AdGroupCommonTrackingUrls} The populated <code>AdGroupCommonTrackingUrls</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdGroupCommonTrackingUrls();
            TrackingUrls.constructFromObject(data, obj);

            if (data.hasOwnProperty('impression')) {
                obj['impression'] = ApiClient.convertToType(data['impression'], ['String']);
            }
            if (data.hasOwnProperty('click')) {
                obj['click'] = ApiClient.convertToType(data['click'], ['String']);
            }
            if (data.hasOwnProperty('engagement')) {
                obj['engagement'] = ApiClient.convertToType(data['engagement'], ['String']);
            }
            if (data.hasOwnProperty('buyable_button')) {
                obj['buyable_button'] = ApiClient.convertToType(data['buyable_button'], ['String']);
            }
            if (data.hasOwnProperty('audience_verification')) {
                obj['audience_verification'] = ApiClient.convertToType(data['audience_verification'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdGroupCommonTrackingUrls</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdGroupCommonTrackingUrls</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['impression'])) {
            throw new Error("Expected the field `impression` to be an array in the JSON data but got " + data['impression']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['click'])) {
            throw new Error("Expected the field `click` to be an array in the JSON data but got " + data['click']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['engagement'])) {
            throw new Error("Expected the field `engagement` to be an array in the JSON data but got " + data['engagement']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['buyable_button'])) {
            throw new Error("Expected the field `buyable_button` to be an array in the JSON data but got " + data['buyable_button']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['audience_verification'])) {
            throw new Error("Expected the field `audience_verification` to be an array in the JSON data but got " + data['audience_verification']);
        }

        return true;
    }


}



/**
 * @member {Array.<String>} impression
 */
AdGroupCommonTrackingUrls.prototype['impression'] = undefined;

/**
 * @member {Array.<String>} click
 */
AdGroupCommonTrackingUrls.prototype['click'] = undefined;

/**
 * @member {Array.<String>} engagement
 */
AdGroupCommonTrackingUrls.prototype['engagement'] = undefined;

/**
 * @member {Array.<String>} buyable_button
 */
AdGroupCommonTrackingUrls.prototype['buyable_button'] = undefined;

/**
 * @member {Array.<String>} audience_verification
 */
AdGroupCommonTrackingUrls.prototype['audience_verification'] = undefined;


// Implement TrackingUrls interface:
/**
 * @member {Array.<String>} impression
 */
TrackingUrls.prototype['impression'] = undefined;
/**
 * @member {Array.<String>} click
 */
TrackingUrls.prototype['click'] = undefined;
/**
 * @member {Array.<String>} engagement
 */
TrackingUrls.prototype['engagement'] = undefined;
/**
 * @member {Array.<String>} buyable_button
 */
TrackingUrls.prototype['buyable_button'] = undefined;
/**
 * @member {Array.<String>} audience_verification
 */
TrackingUrls.prototype['audience_verification'] = undefined;




export default AdGroupCommonTrackingUrls;

