/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConversionAttributionWindowDays from './ConversionAttributionWindowDays';
import ConversionReportAttributionType from './ConversionReportAttributionType';
import ConversionReportTimeType from './ConversionReportTimeType';
import Granularity from './Granularity';

/**
 * The AdsAnalyticsCreateAsyncRequestAllOf model module.
 * @module model/AdsAnalyticsCreateAsyncRequestAllOf
 * @version 1.0.1-pre.0
 */
class AdsAnalyticsCreateAsyncRequestAllOf {
    /**
     * Constructs a new <code>AdsAnalyticsCreateAsyncRequestAllOf</code>.
     * @alias module:model/AdsAnalyticsCreateAsyncRequestAllOf
     * @param startDate {String} Metric report start date (UTC). Format: YYYY-MM-DD
     * @param endDate {String} Metric report end date (UTC). Format: YYYY-MM-DD
     * @param granularity {module:model/Granularity} TOTAL - metrics are aggregated over the specified date range.<br> DAY - metrics are broken down daily.<br> HOUR - metrics are broken down hourly.<br>WEEKLY - metrics are broken down weekly.<br>MONTHLY - metrics are broken down monthly
     */
    constructor(startDate, endDate, granularity) { 
        
        AdsAnalyticsCreateAsyncRequestAllOf.initialize(this, startDate, endDate, granularity);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, startDate, endDate, granularity) { 
        obj['start_date'] = startDate;
        obj['end_date'] = endDate;
        obj['granularity'] = granularity;
    }

    /**
     * Constructs a <code>AdsAnalyticsCreateAsyncRequestAllOf</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdsAnalyticsCreateAsyncRequestAllOf} obj Optional instance to populate.
     * @return {module:model/AdsAnalyticsCreateAsyncRequestAllOf} The populated <code>AdsAnalyticsCreateAsyncRequestAllOf</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdsAnalyticsCreateAsyncRequestAllOf();

            if (data.hasOwnProperty('start_date')) {
                obj['start_date'] = ApiClient.convertToType(data['start_date'], 'String');
            }
            if (data.hasOwnProperty('end_date')) {
                obj['end_date'] = ApiClient.convertToType(data['end_date'], 'String');
            }
            if (data.hasOwnProperty('granularity')) {
                obj['granularity'] = ApiClient.convertToType(data['granularity'], Granularity);
            }
            if (data.hasOwnProperty('click_window_days')) {
                obj['click_window_days'] = ApiClient.convertToType(data['click_window_days'], ConversionAttributionWindowDays);
            }
            if (data.hasOwnProperty('engagement_window_days')) {
                obj['engagement_window_days'] = ApiClient.convertToType(data['engagement_window_days'], ConversionAttributionWindowDays);
            }
            if (data.hasOwnProperty('view_window_days')) {
                obj['view_window_days'] = ApiClient.convertToType(data['view_window_days'], ConversionAttributionWindowDays);
            }
            if (data.hasOwnProperty('conversion_report_time')) {
                obj['conversion_report_time'] = ApiClient.convertToType(data['conversion_report_time'], ConversionReportTimeType);
            }
            if (data.hasOwnProperty('attribution_types')) {
                obj['attribution_types'] = ApiClient.convertToType(data['attribution_types'], [ConversionReportAttributionType]);
            }
        }
        return obj;
    }


}

/**
 * Metric report start date (UTC). Format: YYYY-MM-DD
 * @member {String} start_date
 */
AdsAnalyticsCreateAsyncRequestAllOf.prototype['start_date'] = undefined;

/**
 * Metric report end date (UTC). Format: YYYY-MM-DD
 * @member {String} end_date
 */
AdsAnalyticsCreateAsyncRequestAllOf.prototype['end_date'] = undefined;

/**
 * TOTAL - metrics are aggregated over the specified date range.<br> DAY - metrics are broken down daily.<br> HOUR - metrics are broken down hourly.<br>WEEKLY - metrics are broken down weekly.<br>MONTHLY - metrics are broken down monthly
 * @member {module:model/Granularity} granularity
 */
AdsAnalyticsCreateAsyncRequestAllOf.prototype['granularity'] = undefined;

/**
 * Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.
 * @member {module:model/ConversionAttributionWindowDays} click_window_days
 * @default 30
 */
AdsAnalyticsCreateAsyncRequestAllOf.prototype['click_window_days'] = 30;

/**
 * Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.
 * @member {module:model/ConversionAttributionWindowDays} engagement_window_days
 * @default 30
 */
AdsAnalyticsCreateAsyncRequestAllOf.prototype['engagement_window_days'] = 30;

/**
 * Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `1` day.
 * @member {module:model/ConversionAttributionWindowDays} view_window_days
 * @default 1
 */
AdsAnalyticsCreateAsyncRequestAllOf.prototype['view_window_days'] = 1;

/**
 * The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event.
 * @member {module:model/ConversionReportTimeType} conversion_report_time
 * @default 'TIME_OF_AD_ACTION'
 */
AdsAnalyticsCreateAsyncRequestAllOf.prototype['conversion_report_time'] = 'TIME_OF_AD_ACTION';

/**
 * List of types of attribution for the conversion report
 * @member {Array.<module:model/ConversionReportAttributionType>} attribution_types
 */
AdsAnalyticsCreateAsyncRequestAllOf.prototype['attribution_types'] = undefined;






export default AdsAnalyticsCreateAsyncRequestAllOf;

