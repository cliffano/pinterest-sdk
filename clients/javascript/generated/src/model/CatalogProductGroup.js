/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Board from './Board';
import EntityStatus from './EntityStatus';

/**
 * The CatalogProductGroup model module.
 * @module model/CatalogProductGroup
 * @version 1.1.1-pre.0
 */
class CatalogProductGroup {
    /**
     * Constructs a new <code>CatalogProductGroup</code>.
     * non-promoted catalog product group entity
     * @alias module:model/CatalogProductGroup
     */
    constructor() { 
        
        CatalogProductGroup.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CatalogProductGroup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogProductGroup} obj Optional instance to populate.
     * @return {module:model/CatalogProductGroup} The populated <code>CatalogProductGroup</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CatalogProductGroup();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('merchant_id')) {
                obj['merchant_id'] = ApiClient.convertToType(data['merchant_id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('filters')) {
                obj['filters'] = ApiClient.convertToType(data['filters'], Object);
            }
            if (data.hasOwnProperty('filter_v2')) {
                obj['filter_v2'] = ApiClient.convertToType(data['filter_v2'], Object);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = Board.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = EntityStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('feed_profile_id')) {
                obj['feed_profile_id'] = ApiClient.convertToType(data['feed_profile_id'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Number');
            }
            if (data.hasOwnProperty('last_update')) {
                obj['last_update'] = ApiClient.convertToType(data['last_update'], 'Number');
            }
            if (data.hasOwnProperty('product_count')) {
                obj['product_count'] = ApiClient.convertToType(data['product_count'], 'Number');
            }
            if (data.hasOwnProperty('featured_position')) {
                obj['featured_position'] = ApiClient.convertToType(data['featured_position'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CatalogProductGroup</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CatalogProductGroup</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['merchant_id'] && !(typeof data['merchant_id'] === 'string' || data['merchant_id'] instanceof String)) {
            throw new Error("Expected the field `merchant_id` to be a primitive type in the JSON string but got " + data['merchant_id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `type`
        if (data['type']) { // data not null
          Board.validateJSON(data['type']);
        }
        // ensure the json data is a string
        if (data['feed_profile_id'] && !(typeof data['feed_profile_id'] === 'string' || data['feed_profile_id'] instanceof String)) {
            throw new Error("Expected the field `feed_profile_id` to be a primitive type in the JSON string but got " + data['feed_profile_id']);
        }

        return true;
    }


}



/**
 * ID of the catalog product group.
 * @member {String} id
 */
CatalogProductGroup.prototype['id'] = undefined;

/**
 * Merchant ID pertaining to the owner of the catalog product group.
 * @member {String} merchant_id
 */
CatalogProductGroup.prototype['merchant_id'] = undefined;

/**
 * Name of catalog product group
 * @member {String} name
 */
CatalogProductGroup.prototype['name'] = undefined;

/**
 * Object holding a list of filters
 * @member {Object} filters
 */
CatalogProductGroup.prototype['filters'] = undefined;

/**
 * Object holding a list of filters
 * @member {Object} filter_v2
 */
CatalogProductGroup.prototype['filter_v2'] = undefined;

/**
 * @member {module:model/Board} type
 */
CatalogProductGroup.prototype['type'] = undefined;

/**
 * @member {module:model/EntityStatus} status
 */
CatalogProductGroup.prototype['status'] = undefined;

/**
 * id of the feed profile belonging to this catalog product group
 * @member {String} feed_profile_id
 */
CatalogProductGroup.prototype['feed_profile_id'] = undefined;

/**
 * Unix timestamp in seconds of when catalog product group was created.
 * @member {Number} created_at
 */
CatalogProductGroup.prototype['created_at'] = undefined;

/**
 * Unix timestamp in seconds of last time catalog product group was updated.
 * @member {Number} last_update
 */
CatalogProductGroup.prototype['last_update'] = undefined;

/**
 * Amount of products in the catalog product group
 * @member {Number} product_count
 */
CatalogProductGroup.prototype['product_count'] = undefined;

/**
 * index of the featured position of the catalog product group
 * @member {Number} featured_position
 */
CatalogProductGroup.prototype['featured_position'] = undefined;






export default CatalogProductGroup;

