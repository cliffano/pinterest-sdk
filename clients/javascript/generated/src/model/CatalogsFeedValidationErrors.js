/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CatalogsFeedValidationErrors model module.
 * @module model/CatalogsFeedValidationErrors
 * @version 1.0.1-pre.0
 */
class CatalogsFeedValidationErrors {
    /**
     * Constructs a new <code>CatalogsFeedValidationErrors</code>.
     * @alias module:model/CatalogsFeedValidationErrors
     */
    constructor() { 
        
        CatalogsFeedValidationErrors.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CatalogsFeedValidationErrors</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogsFeedValidationErrors} obj Optional instance to populate.
     * @return {module:model/CatalogsFeedValidationErrors} The populated <code>CatalogsFeedValidationErrors</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CatalogsFeedValidationErrors();

            if (data.hasOwnProperty('fetch_error')) {
                obj['fetch_error'] = ApiClient.convertToType(data['fetch_error'], 'Number');
            }
            if (data.hasOwnProperty('fetch_inactive_feed_error')) {
                obj['fetch_inactive_feed_error'] = ApiClient.convertToType(data['fetch_inactive_feed_error'], 'Number');
            }
            if (data.hasOwnProperty('encoding_error')) {
                obj['encoding_error'] = ApiClient.convertToType(data['encoding_error'], 'Number');
            }
            if (data.hasOwnProperty('delimiter_error')) {
                obj['delimiter_error'] = ApiClient.convertToType(data['delimiter_error'], 'Number');
            }
            if (data.hasOwnProperty('required_columns_missing')) {
                obj['required_columns_missing'] = ApiClient.convertToType(data['required_columns_missing'], 'Number');
            }
            if (data.hasOwnProperty('image_link_invalid')) {
                obj['image_link_invalid'] = ApiClient.convertToType(data['image_link_invalid'], 'Number');
            }
            if (data.hasOwnProperty('itemid_missing')) {
                obj['itemid_missing'] = ApiClient.convertToType(data['itemid_missing'], 'Number');
            }
            if (data.hasOwnProperty('title_missing')) {
                obj['title_missing'] = ApiClient.convertToType(data['title_missing'], 'Number');
            }
            if (data.hasOwnProperty('description_missing')) {
                obj['description_missing'] = ApiClient.convertToType(data['description_missing'], 'Number');
            }
            if (data.hasOwnProperty('product_category_invalid')) {
                obj['product_category_invalid'] = ApiClient.convertToType(data['product_category_invalid'], 'Number');
            }
            if (data.hasOwnProperty('product_link_missing')) {
                obj['product_link_missing'] = ApiClient.convertToType(data['product_link_missing'], 'Number');
            }
            if (data.hasOwnProperty('image_link_missing')) {
                obj['image_link_missing'] = ApiClient.convertToType(data['image_link_missing'], 'Number');
            }
            if (data.hasOwnProperty('availability_invalid')) {
                obj['availability_invalid'] = ApiClient.convertToType(data['availability_invalid'], 'Number');
            }
            if (data.hasOwnProperty('product_price_invalid')) {
                obj['product_price_invalid'] = ApiClient.convertToType(data['product_price_invalid'], 'Number');
            }
            if (data.hasOwnProperty('link_format_invalid')) {
                obj['link_format_invalid'] = ApiClient.convertToType(data['link_format_invalid'], 'Number');
            }
            if (data.hasOwnProperty('parse_line_error')) {
                obj['parse_line_error'] = ApiClient.convertToType(data['parse_line_error'], 'Number');
            }
            if (data.hasOwnProperty('adwords_format_invalid')) {
                obj['adwords_format_invalid'] = ApiClient.convertToType(data['adwords_format_invalid'], 'Number');
            }
            if (data.hasOwnProperty('product_category_missing')) {
                obj['product_category_missing'] = ApiClient.convertToType(data['product_category_missing'], 'Number');
            }
            if (data.hasOwnProperty('internal_service_error')) {
                obj['internal_service_error'] = ApiClient.convertToType(data['internal_service_error'], 'Number');
            }
            if (data.hasOwnProperty('no_verified_domain')) {
                obj['no_verified_domain'] = ApiClient.convertToType(data['no_verified_domain'], 'Number');
            }
            if (data.hasOwnProperty('adult_invalid')) {
                obj['adult_invalid'] = ApiClient.convertToType(data['adult_invalid'], 'Number');
            }
            if (data.hasOwnProperty('invalid_domain')) {
                obj['invalid_domain'] = ApiClient.convertToType(data['invalid_domain'], 'Number');
            }
            if (data.hasOwnProperty('feed_length_too_long')) {
                obj['feed_length_too_long'] = ApiClient.convertToType(data['feed_length_too_long'], 'Number');
            }
            if (data.hasOwnProperty('link_length_too_long')) {
                obj['link_length_too_long'] = ApiClient.convertToType(data['link_length_too_long'], 'Number');
            }
            if (data.hasOwnProperty('malformed_xml')) {
                obj['malformed_xml'] = ApiClient.convertToType(data['malformed_xml'], 'Number');
            }
            if (data.hasOwnProperty('redirect_invalid')) {
                obj['redirect_invalid'] = ApiClient.convertToType(data['redirect_invalid'], 'Number');
            }
            if (data.hasOwnProperty('price_missing')) {
                obj['price_missing'] = ApiClient.convertToType(data['price_missing'], 'Number');
            }
            if (data.hasOwnProperty('feed_too_small')) {
                obj['feed_too_small'] = ApiClient.convertToType(data['feed_too_small'], 'Number');
            }
            if (data.hasOwnProperty('condition_invalid')) {
                obj['condition_invalid'] = ApiClient.convertToType(data['condition_invalid'], 'Number');
            }
            if (data.hasOwnProperty('shopify_no_products')) {
                obj['shopify_no_products'] = ApiClient.convertToType(data['shopify_no_products'], 'Number');
            }
            if (data.hasOwnProperty('max_items_per_item_group_exceeded')) {
                obj['max_items_per_item_group_exceeded'] = ApiClient.convertToType(data['max_items_per_item_group_exceeded'], 'Number');
            }
            if (data.hasOwnProperty('item_main_image_download_failure')) {
                obj['item_main_image_download_failure'] = ApiClient.convertToType(data['item_main_image_download_failure'], 'Number');
            }
            if (data.hasOwnProperty('pinjoin_content_unsafe')) {
                obj['pinjoin_content_unsafe'] = ApiClient.convertToType(data['pinjoin_content_unsafe'], 'Number');
            }
            if (data.hasOwnProperty('blocklisted_image_signature')) {
                obj['blocklisted_image_signature'] = ApiClient.convertToType(data['blocklisted_image_signature'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} fetch_error
 */
CatalogsFeedValidationErrors.prototype['fetch_error'] = undefined;

/**
 * @member {Number} fetch_inactive_feed_error
 */
CatalogsFeedValidationErrors.prototype['fetch_inactive_feed_error'] = undefined;

/**
 * @member {Number} encoding_error
 */
CatalogsFeedValidationErrors.prototype['encoding_error'] = undefined;

/**
 * @member {Number} delimiter_error
 */
CatalogsFeedValidationErrors.prototype['delimiter_error'] = undefined;

/**
 * @member {Number} required_columns_missing
 */
CatalogsFeedValidationErrors.prototype['required_columns_missing'] = undefined;

/**
 * @member {Number} image_link_invalid
 */
CatalogsFeedValidationErrors.prototype['image_link_invalid'] = undefined;

/**
 * @member {Number} itemid_missing
 */
CatalogsFeedValidationErrors.prototype['itemid_missing'] = undefined;

/**
 * @member {Number} title_missing
 */
CatalogsFeedValidationErrors.prototype['title_missing'] = undefined;

/**
 * @member {Number} description_missing
 */
CatalogsFeedValidationErrors.prototype['description_missing'] = undefined;

/**
 * @member {Number} product_category_invalid
 */
CatalogsFeedValidationErrors.prototype['product_category_invalid'] = undefined;

/**
 * @member {Number} product_link_missing
 */
CatalogsFeedValidationErrors.prototype['product_link_missing'] = undefined;

/**
 * @member {Number} image_link_missing
 */
CatalogsFeedValidationErrors.prototype['image_link_missing'] = undefined;

/**
 * @member {Number} availability_invalid
 */
CatalogsFeedValidationErrors.prototype['availability_invalid'] = undefined;

/**
 * @member {Number} product_price_invalid
 */
CatalogsFeedValidationErrors.prototype['product_price_invalid'] = undefined;

/**
 * @member {Number} link_format_invalid
 */
CatalogsFeedValidationErrors.prototype['link_format_invalid'] = undefined;

/**
 * @member {Number} parse_line_error
 */
CatalogsFeedValidationErrors.prototype['parse_line_error'] = undefined;

/**
 * @member {Number} adwords_format_invalid
 */
CatalogsFeedValidationErrors.prototype['adwords_format_invalid'] = undefined;

/**
 * @member {Number} product_category_missing
 */
CatalogsFeedValidationErrors.prototype['product_category_missing'] = undefined;

/**
 * @member {Number} internal_service_error
 */
CatalogsFeedValidationErrors.prototype['internal_service_error'] = undefined;

/**
 * @member {Number} no_verified_domain
 */
CatalogsFeedValidationErrors.prototype['no_verified_domain'] = undefined;

/**
 * @member {Number} adult_invalid
 */
CatalogsFeedValidationErrors.prototype['adult_invalid'] = undefined;

/**
 * @member {Number} invalid_domain
 */
CatalogsFeedValidationErrors.prototype['invalid_domain'] = undefined;

/**
 * @member {Number} feed_length_too_long
 */
CatalogsFeedValidationErrors.prototype['feed_length_too_long'] = undefined;

/**
 * @member {Number} link_length_too_long
 */
CatalogsFeedValidationErrors.prototype['link_length_too_long'] = undefined;

/**
 * @member {Number} malformed_xml
 */
CatalogsFeedValidationErrors.prototype['malformed_xml'] = undefined;

/**
 * @member {Number} redirect_invalid
 */
CatalogsFeedValidationErrors.prototype['redirect_invalid'] = undefined;

/**
 * @member {Number} price_missing
 */
CatalogsFeedValidationErrors.prototype['price_missing'] = undefined;

/**
 * @member {Number} feed_too_small
 */
CatalogsFeedValidationErrors.prototype['feed_too_small'] = undefined;

/**
 * @member {Number} condition_invalid
 */
CatalogsFeedValidationErrors.prototype['condition_invalid'] = undefined;

/**
 * @member {Number} shopify_no_products
 */
CatalogsFeedValidationErrors.prototype['shopify_no_products'] = undefined;

/**
 * @member {Number} max_items_per_item_group_exceeded
 */
CatalogsFeedValidationErrors.prototype['max_items_per_item_group_exceeded'] = undefined;

/**
 * @member {Number} item_main_image_download_failure
 */
CatalogsFeedValidationErrors.prototype['item_main_image_download_failure'] = undefined;

/**
 * @member {Number} pinjoin_content_unsafe
 */
CatalogsFeedValidationErrors.prototype['pinjoin_content_unsafe'] = undefined;

/**
 * @member {Number} blocklisted_image_signature
 */
CatalogsFeedValidationErrors.prototype['blocklisted_image_signature'] = undefined;






export default CatalogsFeedValidationErrors;

