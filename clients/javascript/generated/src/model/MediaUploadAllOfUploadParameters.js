/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: pinterest-api@pinterest.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MediaUploadAllOfUploadParameters model module.
 * @module model/MediaUploadAllOfUploadParameters
 * @version 1.0.0-pre.0
 */
class MediaUploadAllOfUploadParameters {
    /**
     * Constructs a new <code>MediaUploadAllOfUploadParameters</code>.
     * The list of parameter key/value pairs you will need to send with your POST request to upload your media file.
     * @alias module:model/MediaUploadAllOfUploadParameters
     */
    constructor() { 
        
        MediaUploadAllOfUploadParameters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MediaUploadAllOfUploadParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MediaUploadAllOfUploadParameters} obj Optional instance to populate.
     * @return {module:model/MediaUploadAllOfUploadParameters} The populated <code>MediaUploadAllOfUploadParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MediaUploadAllOfUploadParameters();

            if (data.hasOwnProperty('x-amz-date')) {
                obj['x-amz-date'] = ApiClient.convertToType(data['x-amz-date'], 'String');
            }
            if (data.hasOwnProperty('x-amz-signature')) {
                obj['x-amz-signature'] = ApiClient.convertToType(data['x-amz-signature'], 'String');
            }
            if (data.hasOwnProperty('x-amz-security-token')) {
                obj['x-amz-security-token'] = ApiClient.convertToType(data['x-amz-security-token'], 'String');
            }
            if (data.hasOwnProperty('x-amz-algorithm')) {
                obj['x-amz-algorithm'] = ApiClient.convertToType(data['x-amz-algorithm'], 'String');
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('policy')) {
                obj['policy'] = ApiClient.convertToType(data['policy'], 'String');
            }
            if (data.hasOwnProperty('x-amz-credential')) {
                obj['x-amz-credential'] = ApiClient.convertToType(data['x-amz-credential'], 'String');
            }
            if (data.hasOwnProperty('Content-Type')) {
                obj['Content-Type'] = ApiClient.convertToType(data['Content-Type'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} x-amz-date
 */
MediaUploadAllOfUploadParameters.prototype['x-amz-date'] = undefined;

/**
 * @member {String} x-amz-signature
 */
MediaUploadAllOfUploadParameters.prototype['x-amz-signature'] = undefined;

/**
 * @member {String} x-amz-security-token
 */
MediaUploadAllOfUploadParameters.prototype['x-amz-security-token'] = undefined;

/**
 * @member {String} x-amz-algorithm
 */
MediaUploadAllOfUploadParameters.prototype['x-amz-algorithm'] = undefined;

/**
 * @member {String} key
 */
MediaUploadAllOfUploadParameters.prototype['key'] = undefined;

/**
 * @member {String} policy
 */
MediaUploadAllOfUploadParameters.prototype['policy'] = undefined;

/**
 * @member {String} x-amz-credential
 */
MediaUploadAllOfUploadParameters.prototype['x-amz-credential'] = undefined;

/**
 * @member {String} Content-Type
 */
MediaUploadAllOfUploadParameters.prototype['Content-Type'] = undefined;






export default MediaUploadAllOfUploadParameters;

