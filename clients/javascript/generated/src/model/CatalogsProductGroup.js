/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CatalogsProductGroupFilters from './CatalogsProductGroupFilters';
import CatalogsProductGroupStatus from './CatalogsProductGroupStatus';
import CatalogsProductGroupType from './CatalogsProductGroupType';

/**
 * The CatalogsProductGroup model module.
 * @module model/CatalogsProductGroup
 * @version 1.0.1-pre.0
 */
class CatalogsProductGroup {
    /**
     * Constructs a new <code>CatalogsProductGroup</code>.
     * catalog product group entity
     * @alias module:model/CatalogsProductGroup
     * @param id {String} ID of the catalog product group.
     * @param filters {module:model/CatalogsProductGroupFilters} 
     */
    constructor(id, filters) { 
        
        CatalogsProductGroup.initialize(this, id, filters);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, filters) { 
        obj['id'] = id;
        obj['filters'] = filters;
    }

    /**
     * Constructs a <code>CatalogsProductGroup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogsProductGroup} obj Optional instance to populate.
     * @return {module:model/CatalogsProductGroup} The populated <code>CatalogsProductGroup</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CatalogsProductGroup();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('filters')) {
                obj['filters'] = CatalogsProductGroupFilters.constructFromObject(data['filters']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = CatalogsProductGroupType.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = CatalogsProductGroupStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('feed_id')) {
                obj['feed_id'] = ApiClient.convertToType(data['feed_id'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Number');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * ID of the catalog product group.
 * @member {String} id
 */
CatalogsProductGroup.prototype['id'] = undefined;

/**
 * Name of catalog product group
 * @member {String} name
 */
CatalogsProductGroup.prototype['name'] = undefined;

/**
 * @member {String} description
 */
CatalogsProductGroup.prototype['description'] = undefined;

/**
 * @member {module:model/CatalogsProductGroupFilters} filters
 */
CatalogsProductGroup.prototype['filters'] = undefined;

/**
 * @member {module:model/CatalogsProductGroupType} type
 */
CatalogsProductGroup.prototype['type'] = undefined;

/**
 * @member {module:model/CatalogsProductGroupStatus} status
 */
CatalogsProductGroup.prototype['status'] = undefined;

/**
 * id of the catalogs feed belonging to this catalog product group
 * @member {String} feed_id
 */
CatalogsProductGroup.prototype['feed_id'] = undefined;

/**
 * Unix timestamp in seconds of when catalog product group was created.
 * @member {Number} created_at
 */
CatalogsProductGroup.prototype['created_at'] = undefined;

/**
 * Unix timestamp in seconds of last time catalog product group was updated.
 * @member {Number} updated_at
 */
CatalogsProductGroup.prototype['updated_at'] = undefined;






export default CatalogsProductGroup;

