/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AnalyticsMetricsResponse from '../model/AnalyticsMetricsResponse';
import Error from '../model/Error';
import Pin from '../model/Pin';

/**
* Pins service.
* @module api/PinsApi
* @version 1.0.1-pre.0
*/
export default class PinsApi {

    /**
    * Constructs a new PinsApi. 
    * @alias module:api/PinsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the pinsAnalytics operation.
     * @callback module:api/PinsApi~pinsAnalyticsCallback
     * @param {String} error Error message, if any.
     * @param {Object.<String, module:model/{String: AnalyticsMetricsResponse}>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Pin analytics
     * Get analytics for a Pin owned by the \"operation user_account\" - or on a group board that has been shared with this account. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\"https://developers.pinterest.com/docs/api/v5/#operation/ad_accounts/list\">List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account:  - For Pins on public or protected boards: Admin, Analyst. - For Pins on secret boards: Admin.
     * @param {String} pinId Unique identifier of a Pin.
     * @param {Date} startDate Metric report start date (UTC). Format: YYYY-MM-DD
     * @param {Date} endDate Metric report end date (UTC). Format: YYYY-MM-DD
     * @param {Array.<module:model/String>} metricTypes Pin metric types to get data for, default is all.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.appTypes Apps or devices to get data for, default is all. (default to 'ALL')
     * @param {module:model/String} opts.splitField How to split the data into groups. Not including this param means data won't be split. (default to 'NO_SPLIT')
     * @param {String} opts.adAccountId Unique identifier of an ad account.
     * @param {module:api/PinsApi~pinsAnalyticsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object.<String, module:model/{String: AnalyticsMetricsResponse}>}
     */
    pinsAnalytics(pinId, startDate, endDate, metricTypes, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pinId' is set
      if (pinId === undefined || pinId === null) {
        throw new Error("Missing the required parameter 'pinId' when calling pinsAnalytics");
      }
      // verify the required parameter 'startDate' is set
      if (startDate === undefined || startDate === null) {
        throw new Error("Missing the required parameter 'startDate' when calling pinsAnalytics");
      }
      // verify the required parameter 'endDate' is set
      if (endDate === undefined || endDate === null) {
        throw new Error("Missing the required parameter 'endDate' when calling pinsAnalytics");
      }
      // verify the required parameter 'metricTypes' is set
      if (metricTypes === undefined || metricTypes === null) {
        throw new Error("Missing the required parameter 'metricTypes' when calling pinsAnalytics");
      }

      let pathParams = {
        'pin_id': pinId
      };
      let queryParams = {
        'start_date': startDate,
        'end_date': endDate,
        'app_types': opts['appTypes'],
        'metric_types': this.apiClient.buildCollectionParam(metricTypes, 'csv'),
        'split_field': opts['splitField'],
        'ad_account_id': opts['adAccountId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = {'String': AnalyticsMetricsResponse};
      return this.apiClient.callApi(
        '/pins/{pin_id}/analytics', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pinsCreate operation.
     * @callback module:api/PinsApi~pinsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Pin} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Pin
     * Create a Pin on a board or board section owned by the \"operation user_account\".  Note: If the current \"operation user_account\" (defined by the access token) has access to another user's Ad Accounts via Pinterest Business Access, you can modify your request to make use of the current operation_user_account's permissions to those Ad Accounts by including the ad_account_id in the path parameters for the request (e.g. .../?ad_account_id=12345&...).  - This function is intended solely for publishing new content created by the user. If you are interested in saving content created by others to your Pinterest boards, sometimes called 'curated content', please use our <a href='/docs/add-ons/save-button'>Save button</a> instead. For more tips on creating fresh content for Pinterest, review our <a href='/docs/solutions/content-apps'>Content App Solutions Guide</a>.  <strong><a href='/docs/solutions/content-apps/#creatingvideopins'>Learn more</a></strong> about video Pin creation.
     * @param {module:model/Pin} pin Create a new Pin.
     * @param {module:api/PinsApi~pinsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Pin}
     */
    pinsCreate(pin, callback) {
      let postBody = pin;
      // verify the required parameter 'pin' is set
      if (pin === undefined || pin === null) {
        throw new Error("Missing the required parameter 'pin' when calling pinsCreate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Pin;
      return this.apiClient.callApi(
        '/pins', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pinsDelete operation.
     * @callback module:api/PinsApi~pinsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Pin
     * Delete a Pins owned by the \"operation user_account\" - or on a group board that has been shared with this account. - By default, the \"operation user_account\" is the token user_account.
     * @param {String} pinId Unique identifier of a Pin.
     * @param {module:api/PinsApi~pinsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    pinsDelete(pinId, callback) {
      let postBody = null;
      // verify the required parameter 'pinId' is set
      if (pinId === undefined || pinId === null) {
        throw new Error("Missing the required parameter 'pinId' when calling pinsDelete");
      }

      let pathParams = {
        'pin_id': pinId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/pins/{pin_id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pinsGet operation.
     * @callback module:api/PinsApi~pinsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Pin} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Pin
     * Get a Pin owned by the \"operation user_account\" - or on a group board that has been shared with this account. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account:  - For Pins on public or protected boards: Owner, Admin, Analyst, Campaign Manager. - For Pins on secret boards: Owner, Admin.
     * @param {String} pinId Unique identifier of a Pin.
     * @param {Object} opts Optional parameters
     * @param {String} opts.adAccountId Unique identifier of an ad account.
     * @param {module:api/PinsApi~pinsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Pin}
     */
    pinsGet(pinId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pinId' is set
      if (pinId === undefined || pinId === null) {
        throw new Error("Missing the required parameter 'pinId' when calling pinsGet");
      }

      let pathParams = {
        'pin_id': pinId
      };
      let queryParams = {
        'ad_account_id': opts['adAccountId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Pin;
      return this.apiClient.callApi(
        '/pins/{pin_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
