/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.6.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CatalogsFeed,
  CatalogsFeedsCreateRequest,
  CatalogsFeedsUpdateRequest,
  CatalogsItemValidationIssue,
  CatalogsItems,
  CatalogsItemsBatch,
  CatalogsItemsBatchRequest,
  CatalogsListProductsByFilterRequest,
  CatalogsProductGroup,
  CatalogsProductGroupCreateRequest,
  CatalogsProductGroupProductCounts,
  CatalogsProductGroupUpdateRequest,
  CatalogsProductGroupsList200Response,
  FeedProcessingResultsList200Response,
  FeedsList200Response,
  ItemsIssuesList200Response,
  ProductsByProductGroupFilterList200Response,
} from '../models/index';
import {
    CatalogsFeedFromJSON,
    CatalogsFeedToJSON,
    CatalogsFeedsCreateRequestFromJSON,
    CatalogsFeedsCreateRequestToJSON,
    CatalogsFeedsUpdateRequestFromJSON,
    CatalogsFeedsUpdateRequestToJSON,
    CatalogsItemValidationIssueFromJSON,
    CatalogsItemValidationIssueToJSON,
    CatalogsItemsFromJSON,
    CatalogsItemsToJSON,
    CatalogsItemsBatchFromJSON,
    CatalogsItemsBatchToJSON,
    CatalogsItemsBatchRequestFromJSON,
    CatalogsItemsBatchRequestToJSON,
    CatalogsListProductsByFilterRequestFromJSON,
    CatalogsListProductsByFilterRequestToJSON,
    CatalogsProductGroupFromJSON,
    CatalogsProductGroupToJSON,
    CatalogsProductGroupCreateRequestFromJSON,
    CatalogsProductGroupCreateRequestToJSON,
    CatalogsProductGroupProductCountsFromJSON,
    CatalogsProductGroupProductCountsToJSON,
    CatalogsProductGroupUpdateRequestFromJSON,
    CatalogsProductGroupUpdateRequestToJSON,
    CatalogsProductGroupsList200ResponseFromJSON,
    CatalogsProductGroupsList200ResponseToJSON,
    FeedProcessingResultsList200ResponseFromJSON,
    FeedProcessingResultsList200ResponseToJSON,
    FeedsList200ResponseFromJSON,
    FeedsList200ResponseToJSON,
    ItemsIssuesList200ResponseFromJSON,
    ItemsIssuesList200ResponseToJSON,
    ProductsByProductGroupFilterList200ResponseFromJSON,
    ProductsByProductGroupFilterList200ResponseToJSON,
} from '../models/index';

export interface CatalogsProductGroupPinsListRequest {
    productGroupId: string;
    bookmark?: string;
    pageSize?: number;
    adAccountId?: string;
}

export interface CatalogsProductGroupsCreateRequest {
    catalogsProductGroupCreateRequest: CatalogsProductGroupCreateRequest;
    adAccountId?: string;
}

export interface CatalogsProductGroupsDeleteRequest {
    productGroupId: string;
    adAccountId?: string;
}

export interface CatalogsProductGroupsGetRequest {
    productGroupId: string;
    adAccountId?: string;
}

export interface CatalogsProductGroupsListRequest {
    feedId: string;
    bookmark?: string;
    pageSize?: number;
    adAccountId?: string;
}

export interface CatalogsProductGroupsProductCountsGetRequest {
    productGroupId: string;
    adAccountId?: string;
}

export interface CatalogsProductGroupsUpdateRequest {
    productGroupId: string;
    catalogsProductGroupUpdateRequest: CatalogsProductGroupUpdateRequest;
    adAccountId?: string;
}

export interface FeedProcessingResultsListRequest {
    feedId: string;
    bookmark?: string;
    pageSize?: number;
    adAccountId?: string;
}

export interface FeedsCreateRequest {
    catalogsFeedsCreateRequest: CatalogsFeedsCreateRequest;
    adAccountId?: string;
}

export interface FeedsDeleteRequest {
    feedId: string;
    adAccountId?: string;
}

export interface FeedsGetRequest {
    feedId: string;
    adAccountId?: string;
}

export interface FeedsListRequest {
    bookmark?: string;
    pageSize?: number;
    adAccountId?: string;
}

export interface FeedsUpdateRequest {
    feedId: string;
    catalogsFeedsUpdateRequest: CatalogsFeedsUpdateRequest;
    adAccountId?: string;
}

export interface ItemsBatchGetRequest {
    batchId: string;
    adAccountId?: string;
}

export interface ItemsBatchPostRequest {
    catalogsItemsBatchRequest: CatalogsItemsBatchRequest;
    adAccountId?: string;
}

export interface ItemsGetRequest {
    country: string;
    itemIds: Array<string>;
    language: string;
    adAccountId?: string;
}

export interface ItemsIssuesListRequest {
    processingResultId: string;
    bookmark?: string;
    pageSize?: number;
    itemNumbers?: Array<number>;
    itemValidationIssue?: CatalogsItemValidationIssue;
    adAccountId?: string;
}

export interface ProductsByProductGroupFilterListRequest {
    catalogsListProductsByFilterRequest: CatalogsListProductsByFilterRequest;
    bookmark?: string;
    pageSize?: number;
    adAccountId?: string;
}

/**
 * 
 */
export class CatalogsApi extends runtime.BaseAPI {

    /**
     * Get a list of product pins for a given Catalogs Product Group Id owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/shopping/catalog/\'>Learn more</a>
     * List products
     */
    async catalogsProductGroupPinsListRaw(requestParameters: CatalogsProductGroupPinsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProductsByProductGroupFilterList200Response>> {
        if (requestParameters['productGroupId'] == null) {
            throw new runtime.RequiredError(
                'productGroupId',
                'Required parameter "productGroupId" was null or undefined when calling catalogsProductGroupPinsList().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['bookmark'] != null) {
            queryParameters['bookmark'] = requestParameters['bookmark'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['page_size'] = requestParameters['pageSize'];
        }

        if (requestParameters['adAccountId'] != null) {
            queryParameters['ad_account_id'] = requestParameters['adAccountId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["boards:read", "catalogs:read", "pins:read"]);
        }

        const response = await this.request({
            path: `/catalogs/product_groups/{product_group_id}/products`.replace(`{${"product_group_id"}}`, encodeURIComponent(String(requestParameters['productGroupId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ProductsByProductGroupFilterList200ResponseFromJSON(jsonValue));
    }

    /**
     * Get a list of product pins for a given Catalogs Product Group Id owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/shopping/catalog/\'>Learn more</a>
     * List products
     */
    async catalogsProductGroupPinsList(requestParameters: CatalogsProductGroupPinsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProductsByProductGroupFilterList200Response> {
        const response = await this.catalogsProductGroupPinsListRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Create product group to use in Catalogs owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/shopping/catalog/\'>Learn more</a>
     * Create product group
     */
    async catalogsProductGroupsCreateRaw(requestParameters: CatalogsProductGroupsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CatalogsProductGroup>> {
        if (requestParameters['catalogsProductGroupCreateRequest'] == null) {
            throw new runtime.RequiredError(
                'catalogsProductGroupCreateRequest',
                'Required parameter "catalogsProductGroupCreateRequest" was null or undefined when calling catalogsProductGroupsCreate().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['adAccountId'] != null) {
            queryParameters['ad_account_id'] = requestParameters['adAccountId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["catalogs:write"]);
        }

        const response = await this.request({
            path: `/catalogs/product_groups`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CatalogsProductGroupCreateRequestToJSON(requestParameters['catalogsProductGroupCreateRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CatalogsProductGroupFromJSON(jsonValue));
    }

    /**
     * Create product group to use in Catalogs owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/shopping/catalog/\'>Learn more</a>
     * Create product group
     */
    async catalogsProductGroupsCreate(requestParameters: CatalogsProductGroupsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CatalogsProductGroup> {
        const response = await this.catalogsProductGroupsCreateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Delete a product group owned by the \"operation user_account\" from being in use in Catalogs. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/shopping/catalog/\'>Learn more</a>
     * Delete product group
     */
    async catalogsProductGroupsDeleteRaw(requestParameters: CatalogsProductGroupsDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['productGroupId'] == null) {
            throw new runtime.RequiredError(
                'productGroupId',
                'Required parameter "productGroupId" was null or undefined when calling catalogsProductGroupsDelete().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['adAccountId'] != null) {
            queryParameters['ad_account_id'] = requestParameters['adAccountId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["catalogs:write"]);
        }

        const response = await this.request({
            path: `/catalogs/product_groups/{product_group_id}`.replace(`{${"product_group_id"}}`, encodeURIComponent(String(requestParameters['productGroupId']))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Delete a product group owned by the \"operation user_account\" from being in use in Catalogs. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/shopping/catalog/\'>Learn more</a>
     * Delete product group
     */
    async catalogsProductGroupsDelete(requestParameters: CatalogsProductGroupsDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.catalogsProductGroupsDeleteRaw(requestParameters, initOverrides);
    }

    /**
     * Get a singe product group for a given Catalogs Product Group Id owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/shopping/catalog/\'>Learn more</a>
     * Get product group
     */
    async catalogsProductGroupsGetRaw(requestParameters: CatalogsProductGroupsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CatalogsProductGroup>> {
        if (requestParameters['productGroupId'] == null) {
            throw new runtime.RequiredError(
                'productGroupId',
                'Required parameter "productGroupId" was null or undefined when calling catalogsProductGroupsGet().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['adAccountId'] != null) {
            queryParameters['ad_account_id'] = requestParameters['adAccountId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["catalogs:read"]);
        }

        const response = await this.request({
            path: `/catalogs/product_groups/{product_group_id}`.replace(`{${"product_group_id"}}`, encodeURIComponent(String(requestParameters['productGroupId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CatalogsProductGroupFromJSON(jsonValue));
    }

    /**
     * Get a singe product group for a given Catalogs Product Group Id owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/shopping/catalog/\'>Learn more</a>
     * Get product group
     */
    async catalogsProductGroupsGet(requestParameters: CatalogsProductGroupsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CatalogsProductGroup> {
        const response = await this.catalogsProductGroupsGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get a list of product groups for a given Catalogs Feed Id owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/shopping/catalog/\'>Learn more</a>
     * List product groups
     */
    async catalogsProductGroupsListRaw(requestParameters: CatalogsProductGroupsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CatalogsProductGroupsList200Response>> {
        if (requestParameters['feedId'] == null) {
            throw new runtime.RequiredError(
                'feedId',
                'Required parameter "feedId" was null or undefined when calling catalogsProductGroupsList().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['feedId'] != null) {
            queryParameters['feed_id'] = requestParameters['feedId'];
        }

        if (requestParameters['bookmark'] != null) {
            queryParameters['bookmark'] = requestParameters['bookmark'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['page_size'] = requestParameters['pageSize'];
        }

        if (requestParameters['adAccountId'] != null) {
            queryParameters['ad_account_id'] = requestParameters['adAccountId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["catalogs:read"]);
        }

        const response = await this.request({
            path: `/catalogs/product_groups`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CatalogsProductGroupsList200ResponseFromJSON(jsonValue));
    }

    /**
     * Get a list of product groups for a given Catalogs Feed Id owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/shopping/catalog/\'>Learn more</a>
     * List product groups
     */
    async catalogsProductGroupsList(requestParameters: CatalogsProductGroupsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CatalogsProductGroupsList200Response> {
        const response = await this.catalogsProductGroupsListRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get a product counts for a given Catalogs Product Group owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/shopping/catalog/\'>Learn more</a>
     * Get product counts
     */
    async catalogsProductGroupsProductCountsGetRaw(requestParameters: CatalogsProductGroupsProductCountsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CatalogsProductGroupProductCounts>> {
        if (requestParameters['productGroupId'] == null) {
            throw new runtime.RequiredError(
                'productGroupId',
                'Required parameter "productGroupId" was null or undefined when calling catalogsProductGroupsProductCountsGet().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['adAccountId'] != null) {
            queryParameters['ad_account_id'] = requestParameters['adAccountId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["catalogs:read"]);
        }

        const response = await this.request({
            path: `/catalogs/product_groups/{product_group_id}/product_counts`.replace(`{${"product_group_id"}}`, encodeURIComponent(String(requestParameters['productGroupId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CatalogsProductGroupProductCountsFromJSON(jsonValue));
    }

    /**
     * Get a product counts for a given Catalogs Product Group owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/shopping/catalog/\'>Learn more</a>
     * Get product counts
     */
    async catalogsProductGroupsProductCountsGet(requestParameters: CatalogsProductGroupsProductCountsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CatalogsProductGroupProductCounts> {
        const response = await this.catalogsProductGroupsProductCountsGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Update product group owned by the \"operation user_account\" to use in Catalogs. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/shopping/catalog/\'>Learn more</a>
     * Update product group
     */
    async catalogsProductGroupsUpdateRaw(requestParameters: CatalogsProductGroupsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CatalogsProductGroup>> {
        if (requestParameters['productGroupId'] == null) {
            throw new runtime.RequiredError(
                'productGroupId',
                'Required parameter "productGroupId" was null or undefined when calling catalogsProductGroupsUpdate().'
            );
        }

        if (requestParameters['catalogsProductGroupUpdateRequest'] == null) {
            throw new runtime.RequiredError(
                'catalogsProductGroupUpdateRequest',
                'Required parameter "catalogsProductGroupUpdateRequest" was null or undefined when calling catalogsProductGroupsUpdate().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['adAccountId'] != null) {
            queryParameters['ad_account_id'] = requestParameters['adAccountId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["catalogs:write"]);
        }

        const response = await this.request({
            path: `/catalogs/product_groups/{product_group_id}`.replace(`{${"product_group_id"}}`, encodeURIComponent(String(requestParameters['productGroupId']))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: CatalogsProductGroupUpdateRequestToJSON(requestParameters['catalogsProductGroupUpdateRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CatalogsProductGroupFromJSON(jsonValue));
    }

    /**
     * Update product group owned by the \"operation user_account\" to use in Catalogs. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/shopping/catalog/\'>Learn more</a>
     * Update product group
     */
    async catalogsProductGroupsUpdate(requestParameters: CatalogsProductGroupsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CatalogsProductGroup> {
        const response = await this.catalogsProductGroupsUpdateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Fetch a feed processing results owned by the \"operation user_account\". Please note that for now the bookmark parameter is not functional and only the first page will be available until it is implemented in some release in the near future. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/shopping/catalog/\'>Learn more</a>
     * List processing results for a given feed
     */
    async feedProcessingResultsListRaw(requestParameters: FeedProcessingResultsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FeedProcessingResultsList200Response>> {
        if (requestParameters['feedId'] == null) {
            throw new runtime.RequiredError(
                'feedId',
                'Required parameter "feedId" was null or undefined when calling feedProcessingResultsList().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['bookmark'] != null) {
            queryParameters['bookmark'] = requestParameters['bookmark'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['page_size'] = requestParameters['pageSize'];
        }

        if (requestParameters['adAccountId'] != null) {
            queryParameters['ad_account_id'] = requestParameters['adAccountId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["catalogs:read"]);
        }

        const response = await this.request({
            path: `/catalogs/feeds/{feed_id}/processing_results`.replace(`{${"feed_id"}}`, encodeURIComponent(String(requestParameters['feedId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => FeedProcessingResultsList200ResponseFromJSON(jsonValue));
    }

    /**
     * Fetch a feed processing results owned by the \"operation user_account\". Please note that for now the bookmark parameter is not functional and only the first page will be available until it is implemented in some release in the near future. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/shopping/catalog/\'>Learn more</a>
     * List processing results for a given feed
     */
    async feedProcessingResultsList(requestParameters: FeedProcessingResultsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FeedProcessingResultsList200Response> {
        const response = await this.feedProcessingResultsListRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Create a new feed owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/shopping/catalog/\'>Learn more</a>
     * Create feed
     */
    async feedsCreateRaw(requestParameters: FeedsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CatalogsFeed>> {
        if (requestParameters['catalogsFeedsCreateRequest'] == null) {
            throw new runtime.RequiredError(
                'catalogsFeedsCreateRequest',
                'Required parameter "catalogsFeedsCreateRequest" was null or undefined when calling feedsCreate().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['adAccountId'] != null) {
            queryParameters['ad_account_id'] = requestParameters['adAccountId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["catalogs:read", "catalogs:write"]);
        }

        const response = await this.request({
            path: `/catalogs/feeds`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CatalogsFeedsCreateRequestToJSON(requestParameters['catalogsFeedsCreateRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CatalogsFeedFromJSON(jsonValue));
    }

    /**
     * Create a new feed owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/shopping/catalog/\'>Learn more</a>
     * Create feed
     */
    async feedsCreate(requestParameters: FeedsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CatalogsFeed> {
        const response = await this.feedsCreateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Delete a feed owned by the \"operating user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/shopping/catalog/\'>Learn more</a>
     * Delete feed
     */
    async feedsDeleteRaw(requestParameters: FeedsDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['feedId'] == null) {
            throw new runtime.RequiredError(
                'feedId',
                'Required parameter "feedId" was null or undefined when calling feedsDelete().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['adAccountId'] != null) {
            queryParameters['ad_account_id'] = requestParameters['adAccountId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["catalogs:read", "catalogs:write"]);
        }

        const response = await this.request({
            path: `/catalogs/feeds/{feed_id}`.replace(`{${"feed_id"}}`, encodeURIComponent(String(requestParameters['feedId']))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Delete a feed owned by the \"operating user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/shopping/catalog/\'>Learn more</a>
     * Delete feed
     */
    async feedsDelete(requestParameters: FeedsDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.feedsDeleteRaw(requestParameters, initOverrides);
    }

    /**
     * Get a single feed owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/shopping/catalog/\'>Learn more</a>
     * Get feed
     */
    async feedsGetRaw(requestParameters: FeedsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CatalogsFeed>> {
        if (requestParameters['feedId'] == null) {
            throw new runtime.RequiredError(
                'feedId',
                'Required parameter "feedId" was null or undefined when calling feedsGet().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['adAccountId'] != null) {
            queryParameters['ad_account_id'] = requestParameters['adAccountId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["catalogs:read"]);
        }

        const response = await this.request({
            path: `/catalogs/feeds/{feed_id}`.replace(`{${"feed_id"}}`, encodeURIComponent(String(requestParameters['feedId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CatalogsFeedFromJSON(jsonValue));
    }

    /**
     * Get a single feed owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/shopping/catalog/\'>Learn more</a>
     * Get feed
     */
    async feedsGet(requestParameters: FeedsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CatalogsFeed> {
        const response = await this.feedsGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Fetch feeds owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/shopping/catalog/\'>Learn more</a>
     * List feeds
     */
    async feedsListRaw(requestParameters: FeedsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FeedsList200Response>> {
        const queryParameters: any = {};

        if (requestParameters['bookmark'] != null) {
            queryParameters['bookmark'] = requestParameters['bookmark'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['page_size'] = requestParameters['pageSize'];
        }

        if (requestParameters['adAccountId'] != null) {
            queryParameters['ad_account_id'] = requestParameters['adAccountId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["catalogs:read"]);
        }

        const response = await this.request({
            path: `/catalogs/feeds`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => FeedsList200ResponseFromJSON(jsonValue));
    }

    /**
     * Fetch feeds owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/shopping/catalog/\'>Learn more</a>
     * List feeds
     */
    async feedsList(requestParameters: FeedsListRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FeedsList200Response> {
        const response = await this.feedsListRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Update a feed owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/shopping/catalog/\'>Learn more</a>
     * Update feed
     */
    async feedsUpdateRaw(requestParameters: FeedsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CatalogsFeed>> {
        if (requestParameters['feedId'] == null) {
            throw new runtime.RequiredError(
                'feedId',
                'Required parameter "feedId" was null or undefined when calling feedsUpdate().'
            );
        }

        if (requestParameters['catalogsFeedsUpdateRequest'] == null) {
            throw new runtime.RequiredError(
                'catalogsFeedsUpdateRequest',
                'Required parameter "catalogsFeedsUpdateRequest" was null or undefined when calling feedsUpdate().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['adAccountId'] != null) {
            queryParameters['ad_account_id'] = requestParameters['adAccountId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["catalogs:read", "catalogs:write"]);
        }

        const response = await this.request({
            path: `/catalogs/feeds/{feed_id}`.replace(`{${"feed_id"}}`, encodeURIComponent(String(requestParameters['feedId']))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: CatalogsFeedsUpdateRequestToJSON(requestParameters['catalogsFeedsUpdateRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CatalogsFeedFromJSON(jsonValue));
    }

    /**
     * Update a feed owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/shopping/catalog/\'>Learn more</a>
     * Update feed
     */
    async feedsUpdate(requestParameters: FeedsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CatalogsFeed> {
        const response = await this.feedsUpdateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get a single catalogs items batch owned by the \"operating user_account\". <a href=\"/docs/shopping/catalog/#Update%20items%20in%20batch\" target=\"_blank\">See detailed documentation here.</a> - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.
     * Get catalogs items batch
     */
    async itemsBatchGetRaw(requestParameters: ItemsBatchGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CatalogsItemsBatch>> {
        if (requestParameters['batchId'] == null) {
            throw new runtime.RequiredError(
                'batchId',
                'Required parameter "batchId" was null or undefined when calling itemsBatchGet().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['adAccountId'] != null) {
            queryParameters['ad_account_id'] = requestParameters['adAccountId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["catalogs:read"]);
        }

        const response = await this.request({
            path: `/catalogs/items/batch/{batch_id}`.replace(`{${"batch_id"}}`, encodeURIComponent(String(requestParameters['batchId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CatalogsItemsBatchFromJSON(jsonValue));
    }

    /**
     * Get a single catalogs items batch owned by the \"operating user_account\". <a href=\"/docs/shopping/catalog/#Update%20items%20in%20batch\" target=\"_blank\">See detailed documentation here.</a> - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.
     * Get catalogs items batch
     */
    async itemsBatchGet(requestParameters: ItemsBatchGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CatalogsItemsBatch> {
        const response = await this.itemsBatchGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * This endpoint supports multiple operations on a set of one or more catalog items owned by the \"operation user_account\". <a href=\"/docs/shopping/catalog/#Update%20items%20in%20batch\" target=\"_blank\">See detailed documentation here.</a> - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.
     * Operate on item batch
     */
    async itemsBatchPostRaw(requestParameters: ItemsBatchPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CatalogsItemsBatch>> {
        if (requestParameters['catalogsItemsBatchRequest'] == null) {
            throw new runtime.RequiredError(
                'catalogsItemsBatchRequest',
                'Required parameter "catalogsItemsBatchRequest" was null or undefined when calling itemsBatchPost().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['adAccountId'] != null) {
            queryParameters['ad_account_id'] = requestParameters['adAccountId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["catalogs:read", "catalogs:write"]);
        }

        const response = await this.request({
            path: `/catalogs/items/batch`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CatalogsItemsBatchRequestToJSON(requestParameters['catalogsItemsBatchRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CatalogsItemsBatchFromJSON(jsonValue));
    }

    /**
     * This endpoint supports multiple operations on a set of one or more catalog items owned by the \"operation user_account\". <a href=\"/docs/shopping/catalog/#Update%20items%20in%20batch\" target=\"_blank\">See detailed documentation here.</a> - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.
     * Operate on item batch
     */
    async itemsBatchPost(requestParameters: ItemsBatchPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CatalogsItemsBatch> {
        const response = await this.itemsBatchPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get the items of the catalog owned by the \"operation user_account\". <a href=\"/docs/shopping/catalog/#Update%20items%20in%20batch\" target=\"_blank\">See detailed documentation here.</a> - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.
     * Get catalogs items
     */
    async itemsGetRaw(requestParameters: ItemsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CatalogsItems>> {
        if (requestParameters['country'] == null) {
            throw new runtime.RequiredError(
                'country',
                'Required parameter "country" was null or undefined when calling itemsGet().'
            );
        }

        if (requestParameters['itemIds'] == null) {
            throw new runtime.RequiredError(
                'itemIds',
                'Required parameter "itemIds" was null or undefined when calling itemsGet().'
            );
        }

        if (requestParameters['language'] == null) {
            throw new runtime.RequiredError(
                'language',
                'Required parameter "language" was null or undefined when calling itemsGet().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['country'] != null) {
            queryParameters['country'] = requestParameters['country'];
        }

        if (requestParameters['itemIds'] != null) {
            queryParameters['item_ids'] = requestParameters['itemIds'];
        }

        if (requestParameters['language'] != null) {
            queryParameters['language'] = requestParameters['language'];
        }

        if (requestParameters['adAccountId'] != null) {
            queryParameters['ad_account_id'] = requestParameters['adAccountId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["catalogs:read"]);
        }

        const response = await this.request({
            path: `/catalogs/items`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CatalogsItemsFromJSON(jsonValue));
    }

    /**
     * Get the items of the catalog owned by the \"operation user_account\". <a href=\"/docs/shopping/catalog/#Update%20items%20in%20batch\" target=\"_blank\">See detailed documentation here.</a> - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.
     * Get catalogs items
     */
    async itemsGet(requestParameters: ItemsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CatalogsItems> {
        const response = await this.itemsGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * List item validation issues for a given feed processing result owned by the \"operation user_account\". Please note that for now query parameters \'item_numbers\' and \'item_validation_issue\' cannot be used simultaneously until it is implemented in some release in the future. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/shopping/catalog/\'>Learn more</a>
     * List item issues for a given processing result
     */
    async itemsIssuesListRaw(requestParameters: ItemsIssuesListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ItemsIssuesList200Response>> {
        if (requestParameters['processingResultId'] == null) {
            throw new runtime.RequiredError(
                'processingResultId',
                'Required parameter "processingResultId" was null or undefined when calling itemsIssuesList().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['bookmark'] != null) {
            queryParameters['bookmark'] = requestParameters['bookmark'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['page_size'] = requestParameters['pageSize'];
        }

        if (requestParameters['itemNumbers'] != null) {
            queryParameters['item_numbers'] = requestParameters['itemNumbers'];
        }

        if (requestParameters['itemValidationIssue'] != null) {
            queryParameters['item_validation_issue'] = requestParameters['itemValidationIssue'];
        }

        if (requestParameters['adAccountId'] != null) {
            queryParameters['ad_account_id'] = requestParameters['adAccountId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["catalogs:read"]);
        }

        const response = await this.request({
            path: `/catalogs/processing_results/{processing_result_id}/item_issues`.replace(`{${"processing_result_id"}}`, encodeURIComponent(String(requestParameters['processingResultId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ItemsIssuesList200ResponseFromJSON(jsonValue));
    }

    /**
     * List item validation issues for a given feed processing result owned by the \"operation user_account\". Please note that for now query parameters \'item_numbers\' and \'item_validation_issue\' cannot be used simultaneously until it is implemented in some release in the future. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/shopping/catalog/\'>Learn more</a>
     * List item issues for a given processing result
     */
    async itemsIssuesList(requestParameters: ItemsIssuesListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ItemsIssuesList200Response> {
        const response = await this.itemsIssuesListRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * List products Pins owned by the \"operation user_account\" that meet the criteria specified in the Catalogs Product Group Filter given in the request. - This endpoint has been implemented in POST to allow for complex filters. This specific POST endpoint is designed to be idempotent. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/shopping/catalog/\'>Learn more</a>
     * List filtered products
     */
    async productsByProductGroupFilterListRaw(requestParameters: ProductsByProductGroupFilterListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProductsByProductGroupFilterList200Response>> {
        if (requestParameters['catalogsListProductsByFilterRequest'] == null) {
            throw new runtime.RequiredError(
                'catalogsListProductsByFilterRequest',
                'Required parameter "catalogsListProductsByFilterRequest" was null or undefined when calling productsByProductGroupFilterList().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['bookmark'] != null) {
            queryParameters['bookmark'] = requestParameters['bookmark'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['page_size'] = requestParameters['pageSize'];
        }

        if (requestParameters['adAccountId'] != null) {
            queryParameters['ad_account_id'] = requestParameters['adAccountId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["boards:read", "catalogs:read", "pins:read"]);
        }

        const response = await this.request({
            path: `/catalogs/products/get_by_product_group_filters`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CatalogsListProductsByFilterRequestToJSON(requestParameters['catalogsListProductsByFilterRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ProductsByProductGroupFilterList200ResponseFromJSON(jsonValue));
    }

    /**
     * List products Pins owned by the \"operation user_account\" that meet the criteria specified in the Catalogs Product Group Filter given in the request. - This endpoint has been implemented in POST to allow for complex filters. This specific POST endpoint is designed to be idempotent. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/shopping/catalog/\'>Learn more</a>
     * List filtered products
     */
    async productsByProductGroupFilterList(requestParameters: ProductsByProductGroupFilterListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProductsByProductGroupFilterList200Response> {
        const response = await this.productsByProductGroupFilterListRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
