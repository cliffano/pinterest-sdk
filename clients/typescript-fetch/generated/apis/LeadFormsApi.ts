/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  LeadFormResponse,
  LeadFormTestRequest,
  LeadFormTestResponse,
  LeadFormsList200Response,
} from '../models/index';
import {
    LeadFormResponseFromJSON,
    LeadFormResponseToJSON,
    LeadFormTestRequestFromJSON,
    LeadFormTestRequestToJSON,
    LeadFormTestResponseFromJSON,
    LeadFormTestResponseToJSON,
    LeadFormsList200ResponseFromJSON,
    LeadFormsList200ResponseToJSON,
} from '../models/index';

export interface LeadFormGetRequest {
    adAccountId: string;
    leadFormId: string;
}

export interface LeadFormTestCreateRequest {
    adAccountId: string;
    leadFormId: string;
    leadFormTestRequest: LeadFormTestRequest;
}

export interface LeadFormsListRequest {
    adAccountId: string;
    pageSize?: number;
    order?: LeadFormsListOrderEnum;
    bookmark?: string;
}

/**
 * 
 */
export class LeadFormsApi extends runtime.BaseAPI {

    /**
     * Gets a lead form given it\'s ID. It must also be associated with the provided ad account ID. Retrieving an advertiser\'s lead form will only contain results if you\'re a part of the Lead ads beta. If you\'re interested in joining the beta, please reach out to your Pinterest account manager.
     * Get lead form by id
     */
    async leadFormGetRaw(requestParameters: LeadFormGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<LeadFormResponse>> {
        if (requestParameters['adAccountId'] == null) {
            throw new runtime.RequiredError(
                'adAccountId',
                'Required parameter "adAccountId" was null or undefined when calling leadFormGet().'
            );
        }

        if (requestParameters['leadFormId'] == null) {
            throw new runtime.RequiredError(
                'leadFormId',
                'Required parameter "leadFormId" was null or undefined when calling leadFormGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["ads:read"]);
        }

        const response = await this.request({
            path: `/ad_accounts/{ad_account_id}/lead_forms/{lead_form_id}`.replace(`{${"ad_account_id"}}`, encodeURIComponent(String(requestParameters['adAccountId']))).replace(`{${"lead_form_id"}}`, encodeURIComponent(String(requestParameters['leadFormId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => LeadFormResponseFromJSON(jsonValue));
    }

    /**
     * Gets a lead form given it\'s ID. It must also be associated with the provided ad account ID. Retrieving an advertiser\'s lead form will only contain results if you\'re a part of the Lead ads beta. If you\'re interested in joining the beta, please reach out to your Pinterest account manager.
     * Get lead form by id
     */
    async leadFormGet(requestParameters: LeadFormGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<LeadFormResponse> {
        const response = await this.leadFormGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Create lead form test data based on the list of answers provided as part of the body. - List of answers should follow the questions creation order.  <strong>This endpoint is currently in beta and not available to all apps. <a href=\'/docs/new/about-beta-access/\'>Learn more</a>.</strong>
     * Create lead form test data
     */
    async leadFormTestCreateRaw(requestParameters: LeadFormTestCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<LeadFormTestResponse>> {
        if (requestParameters['adAccountId'] == null) {
            throw new runtime.RequiredError(
                'adAccountId',
                'Required parameter "adAccountId" was null or undefined when calling leadFormTestCreate().'
            );
        }

        if (requestParameters['leadFormId'] == null) {
            throw new runtime.RequiredError(
                'leadFormId',
                'Required parameter "leadFormId" was null or undefined when calling leadFormTestCreate().'
            );
        }

        if (requestParameters['leadFormTestRequest'] == null) {
            throw new runtime.RequiredError(
                'leadFormTestRequest',
                'Required parameter "leadFormTestRequest" was null or undefined when calling leadFormTestCreate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["ads:write"]);
        }

        const response = await this.request({
            path: `/ad_accounts/{ad_account_id}/lead_forms/{lead_form_id}/test`.replace(`{${"ad_account_id"}}`, encodeURIComponent(String(requestParameters['adAccountId']))).replace(`{${"lead_form_id"}}`, encodeURIComponent(String(requestParameters['leadFormId']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: LeadFormTestRequestToJSON(requestParameters['leadFormTestRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => LeadFormTestResponseFromJSON(jsonValue));
    }

    /**
     * Create lead form test data based on the list of answers provided as part of the body. - List of answers should follow the questions creation order.  <strong>This endpoint is currently in beta and not available to all apps. <a href=\'/docs/new/about-beta-access/\'>Learn more</a>.</strong>
     * Create lead form test data
     */
    async leadFormTestCreate(requestParameters: LeadFormTestCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<LeadFormTestResponse> {
        const response = await this.leadFormTestCreateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Gets all Lead Forms associated with an ad account ID. Retrieving an advertiser\'s list of lead forms will only contain results if you\'re a part of the Lead ads beta.  If you\'re interested in joining the beta, please reach out to your Pinterest account manager.
     * Get lead forms
     */
    async leadFormsListRaw(requestParameters: LeadFormsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<LeadFormsList200Response>> {
        if (requestParameters['adAccountId'] == null) {
            throw new runtime.RequiredError(
                'adAccountId',
                'Required parameter "adAccountId" was null or undefined when calling leadFormsList().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['pageSize'] != null) {
            queryParameters['page_size'] = requestParameters['pageSize'];
        }

        if (requestParameters['order'] != null) {
            queryParameters['order'] = requestParameters['order'];
        }

        if (requestParameters['bookmark'] != null) {
            queryParameters['bookmark'] = requestParameters['bookmark'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["ads:read"]);
        }

        const response = await this.request({
            path: `/ad_accounts/{ad_account_id}/lead_forms`.replace(`{${"ad_account_id"}}`, encodeURIComponent(String(requestParameters['adAccountId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => LeadFormsList200ResponseFromJSON(jsonValue));
    }

    /**
     * Gets all Lead Forms associated with an ad account ID. Retrieving an advertiser\'s list of lead forms will only contain results if you\'re a part of the Lead ads beta.  If you\'re interested in joining the beta, please reach out to your Pinterest account manager.
     * Get lead forms
     */
    async leadFormsList(requestParameters: LeadFormsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<LeadFormsList200Response> {
        const response = await this.leadFormsListRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const LeadFormsListOrderEnum = {
    Ascending: 'ASCENDING',
    Descending: 'DESCENDING'
} as const;
export type LeadFormsListOrderEnum = typeof LeadFormsListOrderEnum[keyof typeof LeadFormsListOrderEnum];
