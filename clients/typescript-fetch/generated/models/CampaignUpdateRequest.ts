/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AdCommonTrackingUrls } from './AdCommonTrackingUrls';
import {
    AdCommonTrackingUrlsFromJSON,
    AdCommonTrackingUrlsFromJSONTyped,
    AdCommonTrackingUrlsToJSON,
} from './AdCommonTrackingUrls';
import type { CampaignSummaryStatus } from './CampaignSummaryStatus';
import {
    CampaignSummaryStatusFromJSON,
    CampaignSummaryStatusFromJSONTyped,
    CampaignSummaryStatusToJSON,
} from './CampaignSummaryStatus';
import type { EntityStatus } from './EntityStatus';
import {
    EntityStatusFromJSON,
    EntityStatusFromJSONTyped,
    EntityStatusToJSON,
} from './EntityStatus';
import type { ObjectiveType } from './ObjectiveType';
import {
    ObjectiveTypeFromJSON,
    ObjectiveTypeFromJSONTyped,
    ObjectiveTypeToJSON,
} from './ObjectiveType';

/**
 * 
 * @export
 * @interface CampaignUpdateRequest
 */
export interface CampaignUpdateRequest {
    /**
     * Campaign ID.
     * @type {string}
     * @memberof CampaignUpdateRequest
     */
    id: string;
    /**
     * Campaign's Advertiser ID. If you want to create a campaign in a Business Account shared account you need to specify the Business Access advertiser ID in both the query path param as well as the request body schema.
     * @type {string}
     * @memberof CampaignUpdateRequest
     */
    adAccountId: string;
    /**
     * Campaign name.
     * @type {string}
     * @memberof CampaignUpdateRequest
     */
    name?: string;
    /**
     * 
     * @type {EntityStatus}
     * @memberof CampaignUpdateRequest
     */
    status?: EntityStatus;
    /**
     * Campaign total spending cap. Required for Campaign Budget Optimization (CBO) campaigns. This and "daily_spend_cap" cannot be set at the same time.
     * @type {number}
     * @memberof CampaignUpdateRequest
     */
    lifetimeSpendCap?: number;
    /**
     * Campaign daily spending cap. Required for Campaign Budget Optimization (CBO) campaigns. This and "lifetime_spend_cap" cannot be set at the same time.
     * @type {number}
     * @memberof CampaignUpdateRequest
     */
    dailySpendCap?: number;
    /**
     * Order line ID that appears on the invoice.
     * @type {string}
     * @memberof CampaignUpdateRequest
     */
    orderLineId?: string;
    /**
     * 
     * @type {AdCommonTrackingUrls}
     * @memberof CampaignUpdateRequest
     */
    trackingUrls?: AdCommonTrackingUrls;
    /**
     * Campaign start time. Unix timestamp in seconds. Only used for Campaign Budget Optimization (CBO) campaigns.
     * @type {number}
     * @memberof CampaignUpdateRequest
     */
    startTime?: number;
    /**
     * Campaign end time. Unix timestamp in seconds. Only used for Campaign Budget Optimization (CBO) campaigns.
     * @type {number}
     * @memberof CampaignUpdateRequest
     */
    endTime?: number;
    /**
     * 
     * @type {CampaignSummaryStatus}
     * @memberof CampaignUpdateRequest
     */
    summaryStatus?: CampaignSummaryStatus;
    /**
     * Determine if a campaign has flexible daily budgets setup.
     * @type {boolean}
     * @memberof CampaignUpdateRequest
     */
    isFlexibleDailyBudgets?: boolean;
    /**
     * When transitioning from campaign budget optimization to non-campaign budget optimization, the default_ad_group_budget_in_micro_currency will propagate to each child ad groups daily budget. Unit is micro currency of the associated advertiser account.
     * @type {number}
     * @memberof CampaignUpdateRequest
     */
    defaultAdGroupBudgetInMicroCurrency?: number;
    /**
     * Specifies whether the campaign was created in the automated campaign flow
     * @type {boolean}
     * @memberof CampaignUpdateRequest
     */
    isAutomatedCampaign?: boolean;
    /**
     * Determines if a campaign automatically generate ad-group level budgets given a campaign budget to maximize campaign outcome. When transitioning from non-cbo to cbo, all previous child ad group budget will be cleared.
     * @type {boolean}
     * @memberof CampaignUpdateRequest
     */
    isCampaignBudgetOptimization?: boolean;
    /**
     * 
     * @type {ObjectiveType}
     * @memberof CampaignUpdateRequest
     */
    objectiveType?: ObjectiveType;
}

/**
 * Check if a given object implements the CampaignUpdateRequest interface.
 */
export function instanceOfCampaignUpdateRequest(value: object): boolean {
    if (!('id' in value)) return false;
    if (!('adAccountId' in value)) return false;
    return true;
}

export function CampaignUpdateRequestFromJSON(json: any): CampaignUpdateRequest {
    return CampaignUpdateRequestFromJSONTyped(json, false);
}

export function CampaignUpdateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CampaignUpdateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'adAccountId': json['ad_account_id'],
        'name': json['name'] == null ? undefined : json['name'],
        'status': json['status'] == null ? undefined : EntityStatusFromJSON(json['status']),
        'lifetimeSpendCap': json['lifetime_spend_cap'] == null ? undefined : json['lifetime_spend_cap'],
        'dailySpendCap': json['daily_spend_cap'] == null ? undefined : json['daily_spend_cap'],
        'orderLineId': json['order_line_id'] == null ? undefined : json['order_line_id'],
        'trackingUrls': json['tracking_urls'] == null ? undefined : AdCommonTrackingUrlsFromJSON(json['tracking_urls']),
        'startTime': json['start_time'] == null ? undefined : json['start_time'],
        'endTime': json['end_time'] == null ? undefined : json['end_time'],
        'summaryStatus': json['summary_status'] == null ? undefined : CampaignSummaryStatusFromJSON(json['summary_status']),
        'isFlexibleDailyBudgets': json['is_flexible_daily_budgets'] == null ? undefined : json['is_flexible_daily_budgets'],
        'defaultAdGroupBudgetInMicroCurrency': json['default_ad_group_budget_in_micro_currency'] == null ? undefined : json['default_ad_group_budget_in_micro_currency'],
        'isAutomatedCampaign': json['is_automated_campaign'] == null ? undefined : json['is_automated_campaign'],
        'isCampaignBudgetOptimization': json['is_campaign_budget_optimization'] == null ? undefined : json['is_campaign_budget_optimization'],
        'objectiveType': json['objective_type'] == null ? undefined : ObjectiveTypeFromJSON(json['objective_type']),
    };
}

export function CampaignUpdateRequestToJSON(value?: CampaignUpdateRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'ad_account_id': value['adAccountId'],
        'name': value['name'],
        'status': EntityStatusToJSON(value['status']),
        'lifetime_spend_cap': value['lifetimeSpendCap'],
        'daily_spend_cap': value['dailySpendCap'],
        'order_line_id': value['orderLineId'],
        'tracking_urls': AdCommonTrackingUrlsToJSON(value['trackingUrls']),
        'start_time': value['startTime'],
        'end_time': value['endTime'],
        'summary_status': CampaignSummaryStatusToJSON(value['summaryStatus']),
        'is_flexible_daily_budgets': value['isFlexibleDailyBudgets'],
        'default_ad_group_budget_in_micro_currency': value['defaultAdGroupBudgetInMicroCurrency'],
        'is_automated_campaign': value['isAutomatedCampaign'],
        'is_campaign_budget_optimization': value['isCampaignBudgetOptimization'],
        'objective_type': ObjectiveTypeToJSON(value['objectiveType']),
    };
}

