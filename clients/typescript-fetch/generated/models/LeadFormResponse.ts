/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LeadFormQuestion } from './LeadFormQuestion';
import {
    LeadFormQuestionFromJSON,
    LeadFormQuestionFromJSONTyped,
    LeadFormQuestionToJSON,
} from './LeadFormQuestion';
import type { LeadFormStatus } from './LeadFormStatus';
import {
    LeadFormStatusFromJSON,
    LeadFormStatusFromJSONTyped,
    LeadFormStatusToJSON,
} from './LeadFormStatus';

/**
 * 
 * @export
 * @interface LeadFormResponse
 */
export interface LeadFormResponse {
    /**
     * Internal name of the lead form.
     * @type {string}
     * @memberof LeadFormResponse
     */
    name?: string;
    /**
     * A link to the advertiser's privacy policy. This will be included in the lead form's disclosure language.
     * @type {string}
     * @memberof LeadFormResponse
     */
    privacyPolicyLink?: string;
    /**
     * Whether the advertiser has accepted Pinterest's terms of service for creating a lead ad.
     * @type {boolean}
     * @memberof LeadFormResponse
     */
    hasAcceptedTerms?: boolean;
    /**
     * A message for people who complete the form to let them know what happens next.
     * @type {string}
     * @memberof LeadFormResponse
     */
    completionMessage?: string;
    /**
     * 
     * @type {LeadFormStatus}
     * @memberof LeadFormResponse
     */
    status?: LeadFormStatus;
    /**
     * Additional disclosure language to be included in the lead form.
     * @type {string}
     * @memberof LeadFormResponse
     */
    disclosureLanguage?: string;
    /**
     * List of questions to be displayed on the lead form.
     * @type {Array<LeadFormQuestion>}
     * @memberof LeadFormResponse
     */
    questions?: Array<LeadFormQuestion>;
    /**
     * The ID of this lead form
     * @type {string}
     * @memberof LeadFormResponse
     */
    id?: string;
    /**
     * The Ad Account ID that this lead form belongs to.
     * @type {string}
     * @memberof LeadFormResponse
     */
    adAccountId?: string;
    /**
     * Lead form creation time. Unix timestamp in seconds.
     * @type {number}
     * @memberof LeadFormResponse
     */
    createdTime?: number;
    /**
     * Last update time. Unix timestamp in seconds.
     * @type {number}
     * @memberof LeadFormResponse
     */
    updatedTime?: number;
}

/**
 * Check if a given object implements the LeadFormResponse interface.
 */
export function instanceOfLeadFormResponse(value: object): boolean {
    return true;
}

export function LeadFormResponseFromJSON(json: any): LeadFormResponse {
    return LeadFormResponseFromJSONTyped(json, false);
}

export function LeadFormResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LeadFormResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'privacyPolicyLink': json['privacy_policy_link'] == null ? undefined : json['privacy_policy_link'],
        'hasAcceptedTerms': json['has_accepted_terms'] == null ? undefined : json['has_accepted_terms'],
        'completionMessage': json['completion_message'] == null ? undefined : json['completion_message'],
        'status': json['status'] == null ? undefined : LeadFormStatusFromJSON(json['status']),
        'disclosureLanguage': json['disclosure_language'] == null ? undefined : json['disclosure_language'],
        'questions': json['questions'] == null ? undefined : ((json['questions'] as Array<any>).map(LeadFormQuestionFromJSON)),
        'id': json['id'] == null ? undefined : json['id'],
        'adAccountId': json['ad_account_id'] == null ? undefined : json['ad_account_id'],
        'createdTime': json['created_time'] == null ? undefined : json['created_time'],
        'updatedTime': json['updated_time'] == null ? undefined : json['updated_time'],
    };
}

export function LeadFormResponseToJSON(value?: LeadFormResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'privacy_policy_link': value['privacyPolicyLink'],
        'has_accepted_terms': value['hasAcceptedTerms'],
        'completion_message': value['completionMessage'],
        'status': LeadFormStatusToJSON(value['status']),
        'disclosure_language': value['disclosureLanguage'],
        'questions': value['questions'] == null ? undefined : ((value['questions'] as Array<any>).map(LeadFormQuestionToJSON)),
        'id': value['id'],
        'ad_account_id': value['adAccountId'],
        'created_time': value['createdTime'],
        'updated_time': value['updatedTime'],
    };
}

