/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BatchOperation } from './BatchOperation';
import {
    BatchOperationFromJSON,
    BatchOperationFromJSONTyped,
    BatchOperationToJSON,
} from './BatchOperation';
import type { Country } from './Country';
import {
    CountryFromJSON,
    CountryFromJSONTyped,
    CountryToJSON,
} from './Country';
import type { ItemDeleteBatchRecord } from './ItemDeleteBatchRecord';
import {
    ItemDeleteBatchRecordFromJSON,
    ItemDeleteBatchRecordFromJSONTyped,
    ItemDeleteBatchRecordToJSON,
} from './ItemDeleteBatchRecord';
import type { Language } from './Language';
import {
    LanguageFromJSON,
    LanguageFromJSONTyped,
    LanguageToJSON,
} from './Language';

/**
 * Request object to delete catalogs items
 * @export
 * @interface CatalogsItemsDeleteBatchRequest
 */
export interface CatalogsItemsDeleteBatchRequest {
    /**
     * 
     * @type {Country}
     * @memberof CatalogsItemsDeleteBatchRequest
     */
    country: Country;
    /**
     * 
     * @type {Language}
     * @memberof CatalogsItemsDeleteBatchRequest
     */
    language: Language;
    /**
     * 
     * @type {BatchOperation}
     * @memberof CatalogsItemsDeleteBatchRequest
     */
    operation: BatchOperation;
    /**
     * Array with catalogs items
     * @type {Array<ItemDeleteBatchRecord>}
     * @memberof CatalogsItemsDeleteBatchRequest
     */
    items: Array<ItemDeleteBatchRecord>;
}

/**
 * Check if a given object implements the CatalogsItemsDeleteBatchRequest interface.
 */
export function instanceOfCatalogsItemsDeleteBatchRequest(value: object): boolean {
    if (!('country' in value)) return false;
    if (!('language' in value)) return false;
    if (!('operation' in value)) return false;
    if (!('items' in value)) return false;
    return true;
}

export function CatalogsItemsDeleteBatchRequestFromJSON(json: any): CatalogsItemsDeleteBatchRequest {
    return CatalogsItemsDeleteBatchRequestFromJSONTyped(json, false);
}

export function CatalogsItemsDeleteBatchRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsItemsDeleteBatchRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'country': CountryFromJSON(json['country']),
        'language': LanguageFromJSON(json['language']),
        'operation': BatchOperationFromJSON(json['operation']),
        'items': ((json['items'] as Array<any>).map(ItemDeleteBatchRecordFromJSON)),
    };
}

export function CatalogsItemsDeleteBatchRequestToJSON(value?: CatalogsItemsDeleteBatchRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'country': CountryToJSON(value['country']),
        'language': LanguageToJSON(value['language']),
        'operation': BatchOperationToJSON(value['operation']),
        'items': ((value['items'] as Array<any>).map(ItemDeleteBatchRecordToJSON)),
    };
}

