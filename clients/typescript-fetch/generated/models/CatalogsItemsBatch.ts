/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.6.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BatchOperationStatus } from './BatchOperationStatus';
import {
    BatchOperationStatusFromJSON,
    BatchOperationStatusFromJSONTyped,
    BatchOperationStatusToJSON,
} from './BatchOperationStatus';
import type { ItemProcessingRecord } from './ItemProcessingRecord';
import {
    ItemProcessingRecordFromJSON,
    ItemProcessingRecordFromJSONTyped,
    ItemProcessingRecordToJSON,
} from './ItemProcessingRecord';

/**
 * Object describing the catalogs items batch
 * @export
 * @interface CatalogsItemsBatch
 */
export interface CatalogsItemsBatch {
    /**
     * Array with the catalogs items processing records part of the catalogs items batch
     * @type {Array<ItemProcessingRecord>}
     * @memberof CatalogsItemsBatch
     */
    items?: Array<ItemProcessingRecord>;
    /**
     * Id of the catalogs items batch
     * @type {string}
     * @memberof CatalogsItemsBatch
     */
    batchId?: string;
    /**
     * Time of the batch creation: YYYY-MM-DD'T'hh:mm:ssTZD
     * @type {Date}
     * @memberof CatalogsItemsBatch
     */
    readonly createdTime?: Date;
    /**
     * Time of the batch completion: YYYY-MM-DD'T'hh:mm:ssTZD
     * @type {Date}
     * @memberof CatalogsItemsBatch
     */
    readonly completedTime?: Date;
    /**
     * 
     * @type {BatchOperationStatus}
     * @memberof CatalogsItemsBatch
     */
    status?: BatchOperationStatus;
}

/**
 * Check if a given object implements the CatalogsItemsBatch interface.
 */
export function instanceOfCatalogsItemsBatch(value: object): boolean {
    return true;
}

export function CatalogsItemsBatchFromJSON(json: any): CatalogsItemsBatch {
    return CatalogsItemsBatchFromJSONTyped(json, false);
}

export function CatalogsItemsBatchFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsItemsBatch {
    if (json == null) {
        return json;
    }
    return {
        
        'items': json['items'] == null ? undefined : ((json['items'] as Array<any>).map(ItemProcessingRecordFromJSON)),
        'batchId': json['batch_id'] == null ? undefined : json['batch_id'],
        'createdTime': json['created_time'] == null ? undefined : (new Date(json['created_time'])),
        'completedTime': json['completed_time'] == null ? undefined : (new Date(json['completed_time'])),
        'status': json['status'] == null ? undefined : BatchOperationStatusFromJSON(json['status']),
    };
}

export function CatalogsItemsBatchToJSON(value?: CatalogsItemsBatch | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'items': value['items'] == null ? undefined : ((value['items'] as Array<any>).map(ItemProcessingRecordToJSON)),
        'batch_id': value['batchId'],
        'status': BatchOperationStatusToJSON(value['status']),
    };
}

