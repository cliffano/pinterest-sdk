/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: pinterest-api@pinterest.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CatalogsFeedIngestionInfo
 */
export interface CatalogsFeedIngestionInfo {
    /**
     * 
     * @type {number}
     * @memberof CatalogsFeedIngestionInfo
     */
    inStock?: number;
    /**
     * 
     * @type {number}
     * @memberof CatalogsFeedIngestionInfo
     */
    outOfStock?: number;
    /**
     * 
     * @type {number}
     * @memberof CatalogsFeedIngestionInfo
     */
    preorder?: number;
}

export function CatalogsFeedIngestionInfoFromJSON(json: any): CatalogsFeedIngestionInfo {
    return CatalogsFeedIngestionInfoFromJSONTyped(json, false);
}

export function CatalogsFeedIngestionInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsFeedIngestionInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'inStock': !exists(json, 'in_stock') ? undefined : json['in_stock'],
        'outOfStock': !exists(json, 'out_of_stock') ? undefined : json['out_of_stock'],
        'preorder': !exists(json, 'preorder') ? undefined : json['preorder'],
    };
}

export function CatalogsFeedIngestionInfoToJSON(value?: CatalogsFeedIngestionInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'in_stock': value.inStock,
        'out_of_stock': value.outOfStock,
        'preorder': value.preorder,
    };
}

