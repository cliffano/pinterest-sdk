/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.6.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import {
     OauthAccessTokenResponseCodeFromJSONTyped,
     OauthAccessTokenResponseRefreshFromJSONTyped
} from './index';

/**
 * A successful OAuth access token response.
 * @export
 * @interface OauthAccessTokenResponse
 */
export interface OauthAccessTokenResponse {
    /**
     * 
     * @type {string}
     * @memberof OauthAccessTokenResponse
     */
    responseType?: OauthAccessTokenResponseResponseTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof OauthAccessTokenResponse
     */
    accessToken: string;
    /**
     * 
     * @type {string}
     * @memberof OauthAccessTokenResponse
     */
    tokenType: string;
    /**
     * 
     * @type {number}
     * @memberof OauthAccessTokenResponse
     */
    expiresIn: number;
    /**
     * 
     * @type {string}
     * @memberof OauthAccessTokenResponse
     */
    scope: string;
}


/**
 * @export
 */
export const OauthAccessTokenResponseResponseTypeEnum = {
    AuthorizationCode: 'authorization_code',
    RefreshToken: 'refresh_token'
} as const;
export type OauthAccessTokenResponseResponseTypeEnum = typeof OauthAccessTokenResponseResponseTypeEnum[keyof typeof OauthAccessTokenResponseResponseTypeEnum];


/**
 * Check if a given object implements the OauthAccessTokenResponse interface.
 */
export function instanceOfOauthAccessTokenResponse(value: object): boolean {
    if (!('accessToken' in value)) return false;
    if (!('tokenType' in value)) return false;
    if (!('expiresIn' in value)) return false;
    if (!('scope' in value)) return false;
    return true;
}

export function OauthAccessTokenResponseFromJSON(json: any): OauthAccessTokenResponse {
    return OauthAccessTokenResponseFromJSONTyped(json, false);
}

export function OauthAccessTokenResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): OauthAccessTokenResponse {
    if (json == null) {
        return json;
    }
    if (!ignoreDiscriminator) {
        if (json['response_type'] === 'authorization_code') {
            return OauthAccessTokenResponseCodeFromJSONTyped(json, true);
        }
        if (json['response_type'] === 'refresh_token') {
            return OauthAccessTokenResponseRefreshFromJSONTyped(json, true);
        }
    }
    return {
        
        'responseType': json['response_type'] == null ? undefined : json['response_type'],
        'accessToken': json['access_token'],
        'tokenType': json['token_type'],
        'expiresIn': json['expires_in'],
        'scope': json['scope'],
    };
}

export function OauthAccessTokenResponseToJSON(value?: OauthAccessTokenResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'response_type': value['responseType'],
        'access_token': value['accessToken'],
        'token_type': value['tokenType'],
        'expires_in': value['expiresIn'],
        'scope': value['scope'],
    };
}

