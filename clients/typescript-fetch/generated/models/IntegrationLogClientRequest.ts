/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * HTTP request details included in the log sent by the client.
 * @export
 * @interface IntegrationLogClientRequest
 */
export interface IntegrationLogClientRequest {
    /**
     * 
     * @type {string}
     * @memberof IntegrationLogClientRequest
     */
    method: IntegrationLogClientRequestMethodEnum;
    /**
     * HTTP request host from host header.
     * @type {string}
     * @memberof IntegrationLogClientRequest
     */
    host: string;
    /**
     * HTTP request path.
     * @type {string}
     * @memberof IntegrationLogClientRequest
     */
    path: string;
    /**
     * HTTP request headers as key-value pairs.
     * @type {{ [key: string]: string; }}
     * @memberof IntegrationLogClientRequest
     */
    requestHeaders?: { [key: string]: string; };
    /**
     * HTTP response headers as key-value pairs.
     * @type {{ [key: string]: string; }}
     * @memberof IntegrationLogClientRequest
     */
    responseHeaders?: { [key: string]: string; };
    /**
     * 
     * @type {number}
     * @memberof IntegrationLogClientRequest
     */
    responseStatusCode?: number;
}


/**
 * @export
 */
export const IntegrationLogClientRequestMethodEnum = {
    Get: 'GET',
    Head: 'HEAD',
    Post: 'POST',
    Put: 'PUT',
    Delete: 'DELETE',
    Connect: 'CONNECT',
    Options: 'OPTIONS',
    Trace: 'TRACE',
    Patch: 'PATCH'
} as const;
export type IntegrationLogClientRequestMethodEnum = typeof IntegrationLogClientRequestMethodEnum[keyof typeof IntegrationLogClientRequestMethodEnum];


/**
 * Check if a given object implements the IntegrationLogClientRequest interface.
 */
export function instanceOfIntegrationLogClientRequest(value: object): boolean {
    if (!('method' in value)) return false;
    if (!('host' in value)) return false;
    if (!('path' in value)) return false;
    return true;
}

export function IntegrationLogClientRequestFromJSON(json: any): IntegrationLogClientRequest {
    return IntegrationLogClientRequestFromJSONTyped(json, false);
}

export function IntegrationLogClientRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): IntegrationLogClientRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'method': json['method'],
        'host': json['host'],
        'path': json['path'],
        'requestHeaders': json['request_headers'] == null ? undefined : json['request_headers'],
        'responseHeaders': json['response_headers'] == null ? undefined : json['response_headers'],
        'responseStatusCode': json['response_status_code'] == null ? undefined : json['response_status_code'],
    };
}

export function IntegrationLogClientRequestToJSON(value?: IntegrationLogClientRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'method': value['method'],
        'host': value['host'],
        'path': value['path'],
        'request_headers': value['requestHeaders'],
        'response_headers': value['responseHeaders'],
        'response_status_code': value['responseStatusCode'],
    };
}

