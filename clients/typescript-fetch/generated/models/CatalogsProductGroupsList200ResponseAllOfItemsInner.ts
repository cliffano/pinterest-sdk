/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CatalogsProductGroup } from './CatalogsProductGroup';
import {
    CatalogsProductGroupFromJSON,
    CatalogsProductGroupFromJSONTyped,
    CatalogsProductGroupToJSON,
} from './CatalogsProductGroup';
import type { CatalogsProductGroupFilters } from './CatalogsProductGroupFilters';
import {
    CatalogsProductGroupFiltersFromJSON,
    CatalogsProductGroupFiltersFromJSONTyped,
    CatalogsProductGroupFiltersToJSON,
} from './CatalogsProductGroupFilters';
import type { CatalogsProductGroupStatus } from './CatalogsProductGroupStatus';
import {
    CatalogsProductGroupStatusFromJSON,
    CatalogsProductGroupStatusFromJSONTyped,
    CatalogsProductGroupStatusToJSON,
} from './CatalogsProductGroupStatus';
import type { CatalogsProductGroupType } from './CatalogsProductGroupType';
import {
    CatalogsProductGroupTypeFromJSON,
    CatalogsProductGroupTypeFromJSONTyped,
    CatalogsProductGroupTypeToJSON,
} from './CatalogsProductGroupType';
import type { CatalogsVerticalProductGroup } from './CatalogsVerticalProductGroup';
import {
    CatalogsVerticalProductGroupFromJSON,
    CatalogsVerticalProductGroupFromJSONTyped,
    CatalogsVerticalProductGroupToJSON,
} from './CatalogsVerticalProductGroup';

/**
 * 
 * @export
 * @interface CatalogsProductGroupsList200ResponseAllOfItemsInner
 */
export interface CatalogsProductGroupsList200ResponseAllOfItemsInner {
    /**
     * ID of the catalog product group.
     * @type {string}
     * @memberof CatalogsProductGroupsList200ResponseAllOfItemsInner
     */
    id: string;
    /**
     * Name of catalog product group
     * @type {string}
     * @memberof CatalogsProductGroupsList200ResponseAllOfItemsInner
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof CatalogsProductGroupsList200ResponseAllOfItemsInner
     */
    description?: string;
    /**
     * 
     * @type {CatalogsProductGroupFilters}
     * @memberof CatalogsProductGroupsList200ResponseAllOfItemsInner
     */
    filters: CatalogsProductGroupFilters;
    /**
     * boolean indicator of whether the product group is being featured or not
     * @type {boolean}
     * @memberof CatalogsProductGroupsList200ResponseAllOfItemsInner
     */
    isFeatured?: boolean;
    /**
     * 
     * @type {CatalogsProductGroupType}
     * @memberof CatalogsProductGroupsList200ResponseAllOfItemsInner
     */
    type?: CatalogsProductGroupType;
    /**
     * 
     * @type {CatalogsProductGroupStatus}
     * @memberof CatalogsProductGroupsList200ResponseAllOfItemsInner
     */
    status?: CatalogsProductGroupStatus;
    /**
     * Unix timestamp in seconds of when catalog product group was created.
     * @type {number}
     * @memberof CatalogsProductGroupsList200ResponseAllOfItemsInner
     */
    createdAt?: number;
    /**
     * Unix timestamp in seconds of last time catalog product group was updated.
     * @type {number}
     * @memberof CatalogsProductGroupsList200ResponseAllOfItemsInner
     */
    updatedAt?: number;
    /**
     * id of the catalogs feed belonging to this catalog product group
     * @type {string}
     * @memberof CatalogsProductGroupsList200ResponseAllOfItemsInner
     */
    feedId: string;
    /**
     * 
     * @type {string}
     * @memberof CatalogsProductGroupsList200ResponseAllOfItemsInner
     */
    catalogType?: CatalogsProductGroupsList200ResponseAllOfItemsInnerCatalogTypeEnum;
}


/**
 * @export
 */
export const CatalogsProductGroupsList200ResponseAllOfItemsInnerCatalogTypeEnum = {
    Retail: 'RETAIL'
} as const;
export type CatalogsProductGroupsList200ResponseAllOfItemsInnerCatalogTypeEnum = typeof CatalogsProductGroupsList200ResponseAllOfItemsInnerCatalogTypeEnum[keyof typeof CatalogsProductGroupsList200ResponseAllOfItemsInnerCatalogTypeEnum];


/**
 * Check if a given object implements the CatalogsProductGroupsList200ResponseAllOfItemsInner interface.
 */
export function instanceOfCatalogsProductGroupsList200ResponseAllOfItemsInner(value: object): boolean {
    if (!('id' in value)) return false;
    if (!('filters' in value)) return false;
    if (!('feedId' in value)) return false;
    return true;
}

export function CatalogsProductGroupsList200ResponseAllOfItemsInnerFromJSON(json: any): CatalogsProductGroupsList200ResponseAllOfItemsInner {
    return CatalogsProductGroupsList200ResponseAllOfItemsInnerFromJSONTyped(json, false);
}

export function CatalogsProductGroupsList200ResponseAllOfItemsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsProductGroupsList200ResponseAllOfItemsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'filters': CatalogsProductGroupFiltersFromJSON(json['filters']),
        'isFeatured': json['is_featured'] == null ? undefined : json['is_featured'],
        'type': json['type'] == null ? undefined : CatalogsProductGroupTypeFromJSON(json['type']),
        'status': json['status'] == null ? undefined : CatalogsProductGroupStatusFromJSON(json['status']),
        'createdAt': json['created_at'] == null ? undefined : json['created_at'],
        'updatedAt': json['updated_at'] == null ? undefined : json['updated_at'],
        'feedId': json['feed_id'],
        'catalogType': json['catalog_type'] == null ? undefined : json['catalog_type'],
    };
}

export function CatalogsProductGroupsList200ResponseAllOfItemsInnerToJSON(value?: CatalogsProductGroupsList200ResponseAllOfItemsInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'description': value['description'],
        'filters': CatalogsProductGroupFiltersToJSON(value['filters']),
        'is_featured': value['isFeatured'],
        'type': CatalogsProductGroupTypeToJSON(value['type']),
        'status': CatalogsProductGroupStatusToJSON(value['status']),
        'created_at': value['createdAt'],
        'updated_at': value['updatedAt'],
        'feed_id': value['feedId'],
        'catalog_type': value['catalogType'],
    };
}

