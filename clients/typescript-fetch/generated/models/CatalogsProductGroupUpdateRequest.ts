/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CatalogsProductGroupFilters,
    CatalogsProductGroupFiltersFromJSON,
    CatalogsProductGroupFiltersFromJSONTyped,
    CatalogsProductGroupFiltersToJSON,
} from './CatalogsProductGroupFilters';

/**
 * Request object for updating a product group.
 * @export
 * @interface CatalogsProductGroupUpdateRequest
 */
export interface CatalogsProductGroupUpdateRequest {
    /**
     * Catalog Feed id pertaining to the catalog product group.
     * @type {string}
     * @memberof CatalogsProductGroupUpdateRequest
     */
    feedId: string;
    /**
     * 
     * @type {string}
     * @memberof CatalogsProductGroupUpdateRequest
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CatalogsProductGroupUpdateRequest
     */
    description?: string | null;
    /**
     * 
     * @type {CatalogsProductGroupFilters}
     * @memberof CatalogsProductGroupUpdateRequest
     */
    filters: CatalogsProductGroupFilters;
}

export function CatalogsProductGroupUpdateRequestFromJSON(json: any): CatalogsProductGroupUpdateRequest {
    return CatalogsProductGroupUpdateRequestFromJSONTyped(json, false);
}

export function CatalogsProductGroupUpdateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsProductGroupUpdateRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'feedId': json['feed_id'],
        'name': json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'filters': CatalogsProductGroupFiltersFromJSON(json['filters']),
    };
}

export function CatalogsProductGroupUpdateRequestToJSON(value?: CatalogsProductGroupUpdateRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'feed_id': value.feedId,
        'name': value.name,
        'description': value.description,
        'filters': CatalogsProductGroupFiltersToJSON(value.filters),
    };
}

