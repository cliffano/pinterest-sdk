/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.6.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CatalogsProductGroupFiltersAllOfRequest } from './CatalogsProductGroupFiltersAllOfRequest';
import {
    CatalogsProductGroupFiltersAllOfRequestFromJSON,
    CatalogsProductGroupFiltersAllOfRequestFromJSONTyped,
    CatalogsProductGroupFiltersAllOfRequestToJSON,
} from './CatalogsProductGroupFiltersAllOfRequest';

/**
 * 
 * @export
 * @interface ProductGroupsCreateRequestFeedBaseCase
 */
export interface ProductGroupsCreateRequestFeedBaseCase {
    /**
     * 
     * @type {string}
     * @memberof ProductGroupsCreateRequestFeedBaseCase
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ProductGroupsCreateRequestFeedBaseCase
     */
    description?: string;
    /**
     * boolean indicator of whether the product group is being featured or not
     * @type {boolean}
     * @memberof ProductGroupsCreateRequestFeedBaseCase
     */
    isFeatured?: boolean;
    /**
     * 
     * @type {CatalogsProductGroupFiltersAllOfRequest}
     * @memberof ProductGroupsCreateRequestFeedBaseCase
     */
    filters: CatalogsProductGroupFiltersAllOfRequest;
    /**
     * Catalog Feed id pertaining to the catalog product group.
     * @type {string}
     * @memberof ProductGroupsCreateRequestFeedBaseCase
     */
    feedId: string;
}

/**
 * Check if a given object implements the ProductGroupsCreateRequestFeedBaseCase interface.
 */
export function instanceOfProductGroupsCreateRequestFeedBaseCase(value: object): boolean {
    if (!('name' in value)) return false;
    if (!('filters' in value)) return false;
    if (!('feedId' in value)) return false;
    return true;
}

export function ProductGroupsCreateRequestFeedBaseCaseFromJSON(json: any): ProductGroupsCreateRequestFeedBaseCase {
    return ProductGroupsCreateRequestFeedBaseCaseFromJSONTyped(json, false);
}

export function ProductGroupsCreateRequestFeedBaseCaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductGroupsCreateRequestFeedBaseCase {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'isFeatured': json['is_featured'] == null ? undefined : json['is_featured'],
        'filters': CatalogsProductGroupFiltersAllOfRequestFromJSON(json['filters']),
        'feedId': json['feed_id'],
    };
}

export function ProductGroupsCreateRequestFeedBaseCaseToJSON(value?: ProductGroupsCreateRequestFeedBaseCase | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'description': value['description'],
        'is_featured': value['isFeatured'],
        'filters': CatalogsProductGroupFiltersAllOfRequestToJSON(value['filters']),
        'feed_id': value['feedId'],
    };
}

