/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CampaignCommon,
    CampaignCommonFromJSON,
    CampaignCommonFromJSONTyped,
    CampaignCommonToJSON,
} from './CampaignCommon';
import {
    CampaignResponseAllOf,
    CampaignResponseAllOfFromJSON,
    CampaignResponseAllOfFromJSONTyped,
    CampaignResponseAllOfToJSON,
} from './CampaignResponseAllOf';
import {
    CampaignResponseAllOf1,
    CampaignResponseAllOf1FromJSON,
    CampaignResponseAllOf1FromJSONTyped,
    CampaignResponseAllOf1ToJSON,
} from './CampaignResponseAllOf1';
import {
    EntityStatus,
    EntityStatusFromJSON,
    EntityStatusFromJSONTyped,
    EntityStatusToJSON,
} from './EntityStatus';
import {
    ObjectiveType,
    ObjectiveTypeFromJSON,
    ObjectiveTypeFromJSONTyped,
    ObjectiveTypeToJSON,
} from './ObjectiveType';
import {
    TrackingUrls,
    TrackingUrlsFromJSON,
    TrackingUrlsFromJSONTyped,
    TrackingUrlsToJSON,
} from './TrackingUrls';

/**
 * 
 * @export
 * @interface CampaignResponse
 */
export interface CampaignResponse {
    /**
     * Campaign ID.
     * @type {string}
     * @memberof CampaignResponse
     */
    id: string;
    /**
     * Campaign's Advertiser ID.
     * @type {string}
     * @memberof CampaignResponse
     */
    adAccountId: string;
    /**
     * Campaign name.
     * @type {string}
     * @memberof CampaignResponse
     */
    name?: string;
    /**
     * 
     * @type {EntityStatus}
     * @memberof CampaignResponse
     */
    status?: EntityStatus;
    /**
     * Campaign total spending cap.
     * @type {number}
     * @memberof CampaignResponse
     */
    lifetimeSpendCap?: number | null;
    /**
     * Campaign daily spending cap.
     * @type {number}
     * @memberof CampaignResponse
     */
    dailySpendCap?: number | null;
    /**
     * Order line ID that appears on the invoice.
     * @type {string}
     * @memberof CampaignResponse
     */
    orderLineId?: string | null;
    /**
     * 
     * @type {TrackingUrls}
     * @memberof CampaignResponse
     */
    trackingUrls?: TrackingUrls | null;
    /**
     * Campaign start time. Unix timestamp in seconds. Only used for Campaign Budget Optimization (CBO) campaigns.
     * @type {number}
     * @memberof CampaignResponse
     */
    startTime?: number | null;
    /**
     * Campaign end time. Unix timestamp in seconds. Only used for Campaign Budget Optimization (CBO) campaigns.
     * @type {number}
     * @memberof CampaignResponse
     */
    endTime?: number | null;
    /**
     * 
     * @type {ObjectiveType}
     * @memberof CampaignResponse
     */
    objectiveType?: ObjectiveType;
    /**
     * Campaign creation time. Unix timestamp in seconds.
     * @type {number}
     * @memberof CampaignResponse
     */
    createdTime?: number;
    /**
     * UTC timestamp. Last update time.
     * @type {number}
     * @memberof CampaignResponse
     */
    updatedTime?: number;
    /**
     * Always "campaign".
     * @type {string}
     * @memberof CampaignResponse
     */
    type?: string;
}

export function CampaignResponseFromJSON(json: any): CampaignResponse {
    return CampaignResponseFromJSONTyped(json, false);
}

export function CampaignResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CampaignResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'adAccountId': json['ad_account_id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'status': !exists(json, 'status') ? undefined : EntityStatusFromJSON(json['status']),
        'lifetimeSpendCap': !exists(json, 'lifetime_spend_cap') ? undefined : json['lifetime_spend_cap'],
        'dailySpendCap': !exists(json, 'daily_spend_cap') ? undefined : json['daily_spend_cap'],
        'orderLineId': !exists(json, 'order_line_id') ? undefined : json['order_line_id'],
        'trackingUrls': !exists(json, 'tracking_urls') ? undefined : (json['tracking_urls'] === null ? null : mapValues(json['tracking_urls'], FromJSON)),
        'startTime': !exists(json, 'start_time') ? undefined : json['start_time'],
        'endTime': !exists(json, 'end_time') ? undefined : json['end_time'],
        'objectiveType': !exists(json, 'objective_type') ? undefined : ObjectiveTypeFromJSON(json['objective_type']),
        'createdTime': !exists(json, 'created_time') ? undefined : json['created_time'],
        'updatedTime': !exists(json, 'updated_time') ? undefined : json['updated_time'],
        'type': !exists(json, 'type') ? undefined : json['type'],
    };
}

export function CampaignResponseToJSON(value?: CampaignResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'ad_account_id': value.adAccountId,
        'name': value.name,
        'status': EntityStatusToJSON(value.status),
        'lifetime_spend_cap': value.lifetimeSpendCap,
        'daily_spend_cap': value.dailySpendCap,
        'order_line_id': value.orderLineId,
        'tracking_urls': value.trackingUrls === undefined ? undefined : (value.trackingUrls === null ? null : mapValues(value.trackingUrls, ToJSON)),
        'start_time': value.startTime,
        'end_time': value.endTime,
        'objective_type': ObjectiveTypeToJSON(value.objectiveType),
        'created_time': value.createdTime,
        'updated_time': value.updatedTime,
        'type': value.type,
    };
}

