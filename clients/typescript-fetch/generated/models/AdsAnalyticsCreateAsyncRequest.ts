/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.6.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AdGroupSummaryStatus } from './AdGroupSummaryStatus';
import {
    AdGroupSummaryStatusFromJSON,
    AdGroupSummaryStatusFromJSONTyped,
    AdGroupSummaryStatusToJSON,
} from './AdGroupSummaryStatus';
import type { AdsAnalyticsMetricsFilter } from './AdsAnalyticsMetricsFilter';
import {
    AdsAnalyticsMetricsFilterFromJSON,
    AdsAnalyticsMetricsFilterFromJSONTyped,
    AdsAnalyticsMetricsFilterToJSON,
} from './AdsAnalyticsMetricsFilter';
import type { AdsAnalyticsTargetingType } from './AdsAnalyticsTargetingType';
import {
    AdsAnalyticsTargetingTypeFromJSON,
    AdsAnalyticsTargetingTypeFromJSONTyped,
    AdsAnalyticsTargetingTypeToJSON,
} from './AdsAnalyticsTargetingType';
import type { CampaignSummaryStatus } from './CampaignSummaryStatus';
import {
    CampaignSummaryStatusFromJSON,
    CampaignSummaryStatusFromJSONTyped,
    CampaignSummaryStatusToJSON,
} from './CampaignSummaryStatus';
import type { ConversionAttributionWindowDays } from './ConversionAttributionWindowDays';
import {
    ConversionAttributionWindowDaysFromJSON,
    ConversionAttributionWindowDaysFromJSONTyped,
    ConversionAttributionWindowDaysToJSON,
} from './ConversionAttributionWindowDays';
import type { ConversionReportAttributionType } from './ConversionReportAttributionType';
import {
    ConversionReportAttributionTypeFromJSON,
    ConversionReportAttributionTypeFromJSONTyped,
    ConversionReportAttributionTypeToJSON,
} from './ConversionReportAttributionType';
import type { ConversionReportTimeType } from './ConversionReportTimeType';
import {
    ConversionReportTimeTypeFromJSON,
    ConversionReportTimeTypeFromJSONTyped,
    ConversionReportTimeTypeToJSON,
} from './ConversionReportTimeType';
import type { DataOutputFormat } from './DataOutputFormat';
import {
    DataOutputFormatFromJSON,
    DataOutputFormatFromJSONTyped,
    DataOutputFormatToJSON,
} from './DataOutputFormat';
import type { Granularity } from './Granularity';
import {
    GranularityFromJSON,
    GranularityFromJSONTyped,
    GranularityToJSON,
} from './Granularity';
import type { MetricsReportingLevel } from './MetricsReportingLevel';
import {
    MetricsReportingLevelFromJSON,
    MetricsReportingLevelFromJSONTyped,
    MetricsReportingLevelToJSON,
} from './MetricsReportingLevel';
import type { ObjectiveType } from './ObjectiveType';
import {
    ObjectiveTypeFromJSON,
    ObjectiveTypeFromJSONTyped,
    ObjectiveTypeToJSON,
} from './ObjectiveType';
import type { PinPromotionSummaryStatus } from './PinPromotionSummaryStatus';
import {
    PinPromotionSummaryStatusFromJSON,
    PinPromotionSummaryStatusFromJSONTyped,
    PinPromotionSummaryStatusToJSON,
} from './PinPromotionSummaryStatus';
import type { ProductGroupSummaryStatus } from './ProductGroupSummaryStatus';
import {
    ProductGroupSummaryStatusFromJSON,
    ProductGroupSummaryStatusFromJSONTyped,
    ProductGroupSummaryStatusToJSON,
} from './ProductGroupSummaryStatus';
import type { ReportingColumnAsync } from './ReportingColumnAsync';
import {
    ReportingColumnAsyncFromJSON,
    ReportingColumnAsyncFromJSONTyped,
    ReportingColumnAsyncToJSON,
} from './ReportingColumnAsync';

/**
 * 
 * @export
 * @interface AdsAnalyticsCreateAsyncRequest
 */
export interface AdsAnalyticsCreateAsyncRequest {
    /**
     * Metric report start date (UTC). Format: YYYY-MM-DD
     * @type {string}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    startDate: string;
    /**
     * Metric report end date (UTC). Format: YYYY-MM-DD
     * @type {string}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    endDate: string;
    /**
     * TOTAL - metrics are aggregated over the specified date range.<br> DAY - metrics are broken down daily.<br> HOUR - metrics are broken down hourly.<br>WEEKLY - metrics are broken down weekly.<br>MONTHLY - metrics are broken down monthly
     * @type {Granularity}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    granularity: Granularity;
    /**
     * Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.
     * @type {ConversionAttributionWindowDays}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    clickWindowDays?: ConversionAttributionWindowDays;
    /**
     * Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.
     * @type {ConversionAttributionWindowDays}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    engagementWindowDays?: ConversionAttributionWindowDays;
    /**
     * Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `1` day.
     * @type {ConversionAttributionWindowDays}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    viewWindowDays?: ConversionAttributionWindowDays;
    /**
     * The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event.
     * @type {ConversionReportTimeType}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    conversionReportTime?: ConversionReportTimeType;
    /**
     * List of types of attribution for the conversion report
     * @type {Array<ConversionReportAttributionType>}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    attributionTypes?: Array<ConversionReportAttributionType>;
    /**
     * List of campaign ids
     * @type {Array<string>}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    campaignIds?: Array<string>;
    /**
     * List of status values for filtering
     * @type {Array<CampaignSummaryStatus>}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    campaignStatuses?: Array<CampaignSummaryStatus>;
    /**
     * List of values for filtering. ["WEB_SESSIONS"] in BETA.
     * @type {Array<ObjectiveType>}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    campaignObjectiveTypes?: Array<ObjectiveType>;
    /**
     * List of ad group ids
     * @type {Array<string>}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    adGroupIds?: Array<string>;
    /**
     * List of values for filtering
     * @type {Array<AdGroupSummaryStatus>}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    adGroupStatuses?: Array<AdGroupSummaryStatus>;
    /**
     * List of ad ids
     * @type {Array<string>}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    adIds?: Array<string>;
    /**
     * List of values for filtering
     * @type {Array<PinPromotionSummaryStatus>}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    adStatuses?: Array<PinPromotionSummaryStatus>;
    /**
     * List of product group ids
     * @type {Array<string>}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    productGroupIds?: Array<string>;
    /**
     * List of values for filtering
     * @type {Array<ProductGroupSummaryStatus>}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    productGroupStatuses?: Array<ProductGroupSummaryStatus>;
    /**
     * List of product item ids
     * @type {Array<string>}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    productItemIds?: Array<string>;
    /**
     * List of targeting types
     * @type {Array<AdsAnalyticsTargetingType>}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    targetingTypes?: Array<AdsAnalyticsTargetingType>;
    /**
     * List of metrics filters
     * @type {Array<AdsAnalyticsMetricsFilter>}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    metricsFilters?: Array<AdsAnalyticsMetricsFilter>;
    /**
     * Metric and entity columns
     * @type {Array<ReportingColumnAsync>}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    columns: Array<ReportingColumnAsync>;
    /**
     * Level of the report
     * @type {MetricsReportingLevel}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    level: MetricsReportingLevel;
    /**
     * Specification for formatting report data
     * @type {DataOutputFormat}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    reportFormat?: DataOutputFormat;
}

/**
 * Check if a given object implements the AdsAnalyticsCreateAsyncRequest interface.
 */
export function instanceOfAdsAnalyticsCreateAsyncRequest(value: object): boolean {
    if (!('startDate' in value)) return false;
    if (!('endDate' in value)) return false;
    if (!('granularity' in value)) return false;
    if (!('columns' in value)) return false;
    if (!('level' in value)) return false;
    return true;
}

export function AdsAnalyticsCreateAsyncRequestFromJSON(json: any): AdsAnalyticsCreateAsyncRequest {
    return AdsAnalyticsCreateAsyncRequestFromJSONTyped(json, false);
}

export function AdsAnalyticsCreateAsyncRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdsAnalyticsCreateAsyncRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'startDate': json['start_date'],
        'endDate': json['end_date'],
        'granularity': GranularityFromJSON(json['granularity']),
        'clickWindowDays': json['click_window_days'] == null ? undefined : ConversionAttributionWindowDaysFromJSON(json['click_window_days']),
        'engagementWindowDays': json['engagement_window_days'] == null ? undefined : ConversionAttributionWindowDaysFromJSON(json['engagement_window_days']),
        'viewWindowDays': json['view_window_days'] == null ? undefined : ConversionAttributionWindowDaysFromJSON(json['view_window_days']),
        'conversionReportTime': json['conversion_report_time'] == null ? undefined : ConversionReportTimeTypeFromJSON(json['conversion_report_time']),
        'attributionTypes': json['attribution_types'] == null ? undefined : ((json['attribution_types'] as Array<any>).map(ConversionReportAttributionTypeFromJSON)),
        'campaignIds': json['campaign_ids'] == null ? undefined : json['campaign_ids'],
        'campaignStatuses': json['campaign_statuses'] == null ? undefined : ((json['campaign_statuses'] as Array<any>).map(CampaignSummaryStatusFromJSON)),
        'campaignObjectiveTypes': json['campaign_objective_types'] == null ? undefined : ((json['campaign_objective_types'] as Array<any>).map(ObjectiveTypeFromJSON)),
        'adGroupIds': json['ad_group_ids'] == null ? undefined : json['ad_group_ids'],
        'adGroupStatuses': json['ad_group_statuses'] == null ? undefined : ((json['ad_group_statuses'] as Array<any>).map(AdGroupSummaryStatusFromJSON)),
        'adIds': json['ad_ids'] == null ? undefined : json['ad_ids'],
        'adStatuses': json['ad_statuses'] == null ? undefined : ((json['ad_statuses'] as Array<any>).map(PinPromotionSummaryStatusFromJSON)),
        'productGroupIds': json['product_group_ids'] == null ? undefined : json['product_group_ids'],
        'productGroupStatuses': json['product_group_statuses'] == null ? undefined : ((json['product_group_statuses'] as Array<any>).map(ProductGroupSummaryStatusFromJSON)),
        'productItemIds': json['product_item_ids'] == null ? undefined : json['product_item_ids'],
        'targetingTypes': json['targeting_types'] == null ? undefined : ((json['targeting_types'] as Array<any>).map(AdsAnalyticsTargetingTypeFromJSON)),
        'metricsFilters': json['metrics_filters'] == null ? undefined : ((json['metrics_filters'] as Array<any>).map(AdsAnalyticsMetricsFilterFromJSON)),
        'columns': ((json['columns'] as Array<any>).map(ReportingColumnAsyncFromJSON)),
        'level': MetricsReportingLevelFromJSON(json['level']),
        'reportFormat': json['report_format'] == null ? undefined : DataOutputFormatFromJSON(json['report_format']),
    };
}

export function AdsAnalyticsCreateAsyncRequestToJSON(value?: AdsAnalyticsCreateAsyncRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'start_date': value['startDate'],
        'end_date': value['endDate'],
        'granularity': GranularityToJSON(value['granularity']),
        'click_window_days': ConversionAttributionWindowDaysToJSON(value['clickWindowDays']),
        'engagement_window_days': ConversionAttributionWindowDaysToJSON(value['engagementWindowDays']),
        'view_window_days': ConversionAttributionWindowDaysToJSON(value['viewWindowDays']),
        'conversion_report_time': ConversionReportTimeTypeToJSON(value['conversionReportTime']),
        'attribution_types': value['attributionTypes'] == null ? undefined : ((value['attributionTypes'] as Array<any>).map(ConversionReportAttributionTypeToJSON)),
        'campaign_ids': value['campaignIds'],
        'campaign_statuses': value['campaignStatuses'] == null ? undefined : ((value['campaignStatuses'] as Array<any>).map(CampaignSummaryStatusToJSON)),
        'campaign_objective_types': value['campaignObjectiveTypes'] == null ? undefined : ((value['campaignObjectiveTypes'] as Array<any>).map(ObjectiveTypeToJSON)),
        'ad_group_ids': value['adGroupIds'],
        'ad_group_statuses': value['adGroupStatuses'] == null ? undefined : ((value['adGroupStatuses'] as Array<any>).map(AdGroupSummaryStatusToJSON)),
        'ad_ids': value['adIds'],
        'ad_statuses': value['adStatuses'] == null ? undefined : ((value['adStatuses'] as Array<any>).map(PinPromotionSummaryStatusToJSON)),
        'product_group_ids': value['productGroupIds'],
        'product_group_statuses': value['productGroupStatuses'] == null ? undefined : ((value['productGroupStatuses'] as Array<any>).map(ProductGroupSummaryStatusToJSON)),
        'product_item_ids': value['productItemIds'],
        'targeting_types': value['targetingTypes'] == null ? undefined : ((value['targetingTypes'] as Array<any>).map(AdsAnalyticsTargetingTypeToJSON)),
        'metrics_filters': value['metricsFilters'] == null ? undefined : ((value['metricsFilters'] as Array<any>).map(AdsAnalyticsMetricsFilterToJSON)),
        'columns': ((value['columns'] as Array<any>).map(ReportingColumnAsyncToJSON)),
        'level': MetricsReportingLevelToJSON(value['level']),
        'report_format': DataOutputFormatToJSON(value['reportFormat']),
    };
}

