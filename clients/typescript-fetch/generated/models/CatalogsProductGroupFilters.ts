/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: pinterest-api@pinterest.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CatalogsProductGroupFilterKeys,
    CatalogsProductGroupFilterKeysFromJSON,
    CatalogsProductGroupFilterKeysFromJSONTyped,
    CatalogsProductGroupFilterKeysToJSON,
} from './CatalogsProductGroupFilterKeys';
import {
    CatalogsProductGroupFiltersAllOf,
    CatalogsProductGroupFiltersAllOfFromJSON,
    CatalogsProductGroupFiltersAllOfFromJSONTyped,
    CatalogsProductGroupFiltersAllOfToJSON,
} from './CatalogsProductGroupFiltersAllOf';
import {
    CatalogsProductGroupFiltersAnyOf,
    CatalogsProductGroupFiltersAnyOfFromJSON,
    CatalogsProductGroupFiltersAnyOfFromJSONTyped,
    CatalogsProductGroupFiltersAnyOfToJSON,
} from './CatalogsProductGroupFiltersAnyOf';

/**
 * Object holding a group of filters for a catalog product group
 * @export
 * @interface CatalogsProductGroupFilters
 */
export interface CatalogsProductGroupFilters {
    /**
     * 
     * @type {Array<CatalogsProductGroupFilterKeys>}
     * @memberof CatalogsProductGroupFilters
     */
    anyOf?: Array<CatalogsProductGroupFilterKeys>;
    /**
     * 
     * @type {Array<CatalogsProductGroupFilterKeys>}
     * @memberof CatalogsProductGroupFilters
     */
    allOf?: Array<CatalogsProductGroupFilterKeys>;
}

export function CatalogsProductGroupFiltersFromJSON(json: any): CatalogsProductGroupFilters {
    return CatalogsProductGroupFiltersFromJSONTyped(json, false);
}

export function CatalogsProductGroupFiltersFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsProductGroupFilters {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'anyOf': !exists(json, 'any_of') ? undefined : ((json['any_of'] as Array<any>).map(CatalogsProductGroupFilterKeysFromJSON)),
        'allOf': !exists(json, 'all_of') ? undefined : ((json['all_of'] as Array<any>).map(CatalogsProductGroupFilterKeysFromJSON)),
    };
}

export function CatalogsProductGroupFiltersToJSON(value?: CatalogsProductGroupFilters | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'any_of': value.anyOf === undefined ? undefined : ((value.anyOf as Array<any>).map(CatalogsProductGroupFilterKeysToJSON)),
        'all_of': value.allOf === undefined ? undefined : ((value.allOf as Array<any>).map(CatalogsProductGroupFilterKeysToJSON)),
    };
}

