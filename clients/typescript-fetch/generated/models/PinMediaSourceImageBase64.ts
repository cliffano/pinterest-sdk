/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Base64-encoded image media source
 * @export
 * @interface PinMediaSourceImageBase64
 */
export interface PinMediaSourceImageBase64 {
    /**
     * 
     * @type {string}
     * @memberof PinMediaSourceImageBase64
     */
    sourceType: PinMediaSourceImageBase64SourceTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof PinMediaSourceImageBase64
     */
    contentType: PinMediaSourceImageBase64ContentTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof PinMediaSourceImageBase64
     */
    data: string;
}

/**
* @export
* @enum {string}
*/
export enum PinMediaSourceImageBase64SourceTypeEnum {
    ImageBase64 = 'image_base64'
}/**
* @export
* @enum {string}
*/
export enum PinMediaSourceImageBase64ContentTypeEnum {
    Jpeg = 'image/jpeg',
    Png = 'image/png'
}

export function PinMediaSourceImageBase64FromJSON(json: any): PinMediaSourceImageBase64 {
    return PinMediaSourceImageBase64FromJSONTyped(json, false);
}

export function PinMediaSourceImageBase64FromJSONTyped(json: any, ignoreDiscriminator: boolean): PinMediaSourceImageBase64 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sourceType': json['source_type'],
        'contentType': json['content_type'],
        'data': json['data'],
    };
}

export function PinMediaSourceImageBase64ToJSON(value?: PinMediaSourceImageBase64 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'source_type': value.sourceType,
        'content_type': value.contentType,
        'data': value.data,
    };
}

