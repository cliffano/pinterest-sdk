/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CatalogsHotelAttributes } from './CatalogsHotelAttributes';
import {
    CatalogsHotelAttributesFromJSON,
    CatalogsHotelAttributesFromJSONTyped,
    CatalogsHotelAttributesToJSON,
} from './CatalogsHotelAttributes';
import type { CatalogsType } from './CatalogsType';
import {
    CatalogsTypeFromJSON,
    CatalogsTypeFromJSONTyped,
    CatalogsTypeToJSON,
} from './CatalogsType';
import type { ItemResponseAnyOf } from './ItemResponseAnyOf';
import {
    ItemResponseAnyOfFromJSON,
    ItemResponseAnyOfFromJSONTyped,
    ItemResponseAnyOfToJSON,
} from './ItemResponseAnyOf';
import type { ItemResponseAnyOf1 } from './ItemResponseAnyOf1';
import {
    ItemResponseAnyOf1FromJSON,
    ItemResponseAnyOf1FromJSONTyped,
    ItemResponseAnyOf1ToJSON,
} from './ItemResponseAnyOf1';
import type { ItemValidationEvent } from './ItemValidationEvent';
import {
    ItemValidationEventFromJSON,
    ItemValidationEventFromJSONTyped,
    ItemValidationEventToJSON,
} from './ItemValidationEvent';
import type { Pin } from './Pin';
import {
    PinFromJSON,
    PinFromJSONTyped,
    PinToJSON,
} from './Pin';

/**
 * Object describing an item record
 * @export
 * @interface ItemResponse
 */
export interface ItemResponse {
    /**
     * 
     * @type {CatalogsType}
     * @memberof ItemResponse
     */
    catalogType: CatalogsType;
    /**
     * The catalog item id in the merchant namespace
     * @type {string}
     * @memberof ItemResponse
     */
    itemId?: string;
    /**
     * Array with the errors for the item id requested
     * @type {Array<ItemValidationEvent>}
     * @memberof ItemResponse
     */
    errors?: Array<ItemValidationEvent>;
    /**
     * The catalog hotel id in the merchant namespace
     * @type {string}
     * @memberof ItemResponse
     */
    hotelId?: string;
}

/**
 * Check if a given object implements the ItemResponse interface.
 */
export function instanceOfItemResponse(value: object): boolean {
    if (!('catalogType' in value)) return false;
    return true;
}

export function ItemResponseFromJSON(json: any): ItemResponse {
    return ItemResponseFromJSONTyped(json, false);
}

export function ItemResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'catalogType': CatalogsTypeFromJSON(json['catalog_type']),
        'itemId': json['item_id'] == null ? undefined : json['item_id'],
        'errors': json['errors'] == null ? undefined : ((json['errors'] as Array<any>).map(ItemValidationEventFromJSON)),
        'hotelId': json['hotel_id'] == null ? undefined : json['hotel_id'],
    };
}

export function ItemResponseToJSON(value?: ItemResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'catalog_type': CatalogsTypeToJSON(value['catalogType']),
        'item_id': value['itemId'],
        'errors': value['errors'] == null ? undefined : ((value['errors'] as Array<any>).map(ItemValidationEventToJSON)),
        'hotel_id': value['hotelId'],
    };
}

