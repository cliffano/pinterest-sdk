/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: pinterest-api@pinterest.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cliffano.pinterestsdk.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for CatalogsFeedValidationWarnings
 */
public class CatalogsFeedValidationWarningsTest {
    private final CatalogsFeedValidationWarnings model = new CatalogsFeedValidationWarnings();

    /**
     * Model tests for CatalogsFeedValidationWarnings
     */
    @Test
    public void testCatalogsFeedValidationWarnings() {
        // TODO: test CatalogsFeedValidationWarnings
    }

    /**
     * Test the property 'titleLengthTooLong'
     */
    @Test
    public void titleLengthTooLongTest() {
        // TODO: test titleLengthTooLong
    }

    /**
     * Test the property 'descriptionLengthTooLong'
     */
    @Test
    public void descriptionLengthTooLongTest() {
        // TODO: test descriptionLengthTooLong
    }

    /**
     * Test the property 'genderInvalid'
     */
    @Test
    public void genderInvalidTest() {
        // TODO: test genderInvalid
    }

    /**
     * Test the property 'ageGroupInvalid'
     */
    @Test
    public void ageGroupInvalidTest() {
        // TODO: test ageGroupInvalid
    }

    /**
     * Test the property 'sizeTypeInvalid'
     */
    @Test
    public void sizeTypeInvalidTest() {
        // TODO: test sizeTypeInvalid
    }

    /**
     * Test the property 'linkFormatWarning'
     */
    @Test
    public void linkFormatWarningTest() {
        // TODO: test linkFormatWarning
    }

    /**
     * Test the property 'duplicateProducts'
     */
    @Test
    public void duplicateProductsTest() {
        // TODO: test duplicateProducts
    }

    /**
     * Test the property 'duplicateLinks'
     */
    @Test
    public void duplicateLinksTest() {
        // TODO: test duplicateLinks
    }

    /**
     * Test the property 'salesPriceInvalid'
     */
    @Test
    public void salesPriceInvalidTest() {
        // TODO: test salesPriceInvalid
    }

    /**
     * Test the property 'productCategoryDepthWarning'
     */
    @Test
    public void productCategoryDepthWarningTest() {
        // TODO: test productCategoryDepthWarning
    }

    /**
     * Test the property 'adwordsSameAsLink'
     */
    @Test
    public void adwordsSameAsLinkTest() {
        // TODO: test adwordsSameAsLink
    }

    /**
     * Test the property 'duplicateHeaders'
     */
    @Test
    public void duplicateHeadersTest() {
        // TODO: test duplicateHeaders
    }

    /**
     * Test the property 'fetchSameSignature'
     */
    @Test
    public void fetchSameSignatureTest() {
        // TODO: test fetchSameSignature
    }

    /**
     * Test the property 'adwordsFormatWarning'
     */
    @Test
    public void adwordsFormatWarningTest() {
        // TODO: test adwordsFormatWarning
    }

    /**
     * Test the property 'additionalImageLinkWarning'
     */
    @Test
    public void additionalImageLinkWarningTest() {
        // TODO: test additionalImageLinkWarning
    }

    /**
     * Test the property 'imageLinkWarning'
     */
    @Test
    public void imageLinkWarningTest() {
        // TODO: test imageLinkWarning
    }

    /**
     * Test the property 'shippingInvalid'
     */
    @Test
    public void shippingInvalidTest() {
        // TODO: test shippingInvalid
    }

    /**
     * Test the property 'taxInvalid'
     */
    @Test
    public void taxInvalidTest() {
        // TODO: test taxInvalid
    }

    /**
     * Test the property 'shippingWeightInvalid'
     */
    @Test
    public void shippingWeightInvalidTest() {
        // TODO: test shippingWeightInvalid
    }

    /**
     * Test the property 'expirationDateInvalid'
     */
    @Test
    public void expirationDateInvalidTest() {
        // TODO: test expirationDateInvalid
    }

    /**
     * Test the property 'availabilityDateInvalid'
     */
    @Test
    public void availabilityDateInvalidTest() {
        // TODO: test availabilityDateInvalid
    }

    /**
     * Test the property 'saleDateInvalid'
     */
    @Test
    public void saleDateInvalidTest() {
        // TODO: test saleDateInvalid
    }

    /**
     * Test the property 'weightUnitInvalid'
     */
    @Test
    public void weightUnitInvalidTest() {
        // TODO: test weightUnitInvalid
    }

    /**
     * Test the property 'isBundleInvalid'
     */
    @Test
    public void isBundleInvalidTest() {
        // TODO: test isBundleInvalid
    }

    /**
     * Test the property 'updatedTimeInvalid'
     */
    @Test
    public void updatedTimeInvalidTest() {
        // TODO: test updatedTimeInvalid
    }

    /**
     * Test the property 'customLabelLengthTooLong'
     */
    @Test
    public void customLabelLengthTooLongTest() {
        // TODO: test customLabelLengthTooLong
    }

    /**
     * Test the property 'productTypeLengthTooLong'
     */
    @Test
    public void productTypeLengthTooLongTest() {
        // TODO: test productTypeLengthTooLong
    }

    /**
     * Test the property 'tooManyAdditionalImageLinks'
     */
    @Test
    public void tooManyAdditionalImageLinksTest() {
        // TODO: test tooManyAdditionalImageLinks
    }

    /**
     * Test the property 'multipackInvalid'
     */
    @Test
    public void multipackInvalidTest() {
        // TODO: test multipackInvalid
    }

    /**
     * Test the property 'indexedProductCountLargeDelta'
     */
    @Test
    public void indexedProductCountLargeDeltaTest() {
        // TODO: test indexedProductCountLargeDelta
    }

    /**
     * Test the property 'itemAdditionalImageDownloadFailure'
     */
    @Test
    public void itemAdditionalImageDownloadFailureTest() {
        // TODO: test itemAdditionalImageDownloadFailure
    }

    /**
     * Test the property 'optionalProductCategoryMissing'
     */
    @Test
    public void optionalProductCategoryMissingTest() {
        // TODO: test optionalProductCategoryMissing
    }

    /**
     * Test the property 'optionalProductCategoryInvalid'
     */
    @Test
    public void optionalProductCategoryInvalidTest() {
        // TODO: test optionalProductCategoryInvalid
    }

    /**
     * Test the property 'optionalConditionMissing'
     */
    @Test
    public void optionalConditionMissingTest() {
        // TODO: test optionalConditionMissing
    }

    /**
     * Test the property 'optionalConditionInvalid'
     */
    @Test
    public void optionalConditionInvalidTest() {
        // TODO: test optionalConditionInvalid
    }

    /**
     * Test the property 'iosDeepLinkInvalid'
     */
    @Test
    public void iosDeepLinkInvalidTest() {
        // TODO: test iosDeepLinkInvalid
    }

    /**
     * Test the property 'androidDeepLinkInvalid'
     */
    @Test
    public void androidDeepLinkInvalidTest() {
        // TODO: test androidDeepLinkInvalid
    }

    /**
     * Test the property 'availabilityNormalized'
     */
    @Test
    public void availabilityNormalizedTest() {
        // TODO: test availabilityNormalized
    }

    /**
     * Test the property 'conditionNormalized'
     */
    @Test
    public void conditionNormalizedTest() {
        // TODO: test conditionNormalized
    }

    /**
     * Test the property 'genderNormalized'
     */
    @Test
    public void genderNormalizedTest() {
        // TODO: test genderNormalized
    }

    /**
     * Test the property 'sizeTypeNormalized'
     */
    @Test
    public void sizeTypeNormalizedTest() {
        // TODO: test sizeTypeNormalized
    }

    /**
     * Test the property 'ageGroupNormalized'
     */
    @Test
    public void ageGroupNormalizedTest() {
        // TODO: test ageGroupNormalized
    }

    /**
     * Test the property 'utmSourceAutoCorrected'
     */
    @Test
    public void utmSourceAutoCorrectedTest() {
        // TODO: test utmSourceAutoCorrected
    }

    /**
     * Test the property 'countryDoesNotMapToCurrency'
     */
    @Test
    public void countryDoesNotMapToCurrencyTest() {
        // TODO: test countryDoesNotMapToCurrency
    }

    /**
     * Test the property 'minAdPriceInvalid'
     */
    @Test
    public void minAdPriceInvalidTest() {
        // TODO: test minAdPriceInvalid
    }

}
