/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.oapicf.pinterestsdk.model;

import java.util.Objects;
import com.github.oapicf.pinterestsdk.model.OptimizationGoalMetadataConversionTagV3GoalMetadata;
import com.github.oapicf.pinterestsdk.model.OptimizationGoalMetadataFrequencyGoalMetadata;
import com.github.oapicf.pinterestsdk.model.OptimizationGoalMetadataScrollupGoalMetadata;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.github.oapicf.pinterestsdk.JSON;

/**
 * Optimization goals for objective-based performance campaigns. **REQUIRED** when campaign&#39;s &#x60;objective_type&#x60; is set to &#x60;\&quot;WEB_CONVERSION\&quot;&#x60;.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-14T23:01:05.225954683Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class AdGroupCommonOptimizationGoalMetadata {
  public static final String SERIALIZED_NAME_CONVERSION_TAG_V3_GOAL_METADATA = "conversion_tag_v3_goal_metadata";
  @SerializedName(SERIALIZED_NAME_CONVERSION_TAG_V3_GOAL_METADATA)
  private OptimizationGoalMetadataConversionTagV3GoalMetadata conversionTagV3GoalMetadata;

  public static final String SERIALIZED_NAME_FREQUENCY_GOAL_METADATA = "frequency_goal_metadata";
  @SerializedName(SERIALIZED_NAME_FREQUENCY_GOAL_METADATA)
  private OptimizationGoalMetadataFrequencyGoalMetadata frequencyGoalMetadata;

  public static final String SERIALIZED_NAME_SCROLLUP_GOAL_METADATA = "scrollup_goal_metadata";
  @SerializedName(SERIALIZED_NAME_SCROLLUP_GOAL_METADATA)
  private OptimizationGoalMetadataScrollupGoalMetadata scrollupGoalMetadata;

  public AdGroupCommonOptimizationGoalMetadata() {
  }

  public AdGroupCommonOptimizationGoalMetadata conversionTagV3GoalMetadata(OptimizationGoalMetadataConversionTagV3GoalMetadata conversionTagV3GoalMetadata) {
    this.conversionTagV3GoalMetadata = conversionTagV3GoalMetadata;
    return this;
  }

   /**
   * Get conversionTagV3GoalMetadata
   * @return conversionTagV3GoalMetadata
  **/
  @javax.annotation.Nullable
  public OptimizationGoalMetadataConversionTagV3GoalMetadata getConversionTagV3GoalMetadata() {
    return conversionTagV3GoalMetadata;
  }

  public void setConversionTagV3GoalMetadata(OptimizationGoalMetadataConversionTagV3GoalMetadata conversionTagV3GoalMetadata) {
    this.conversionTagV3GoalMetadata = conversionTagV3GoalMetadata;
  }


  public AdGroupCommonOptimizationGoalMetadata frequencyGoalMetadata(OptimizationGoalMetadataFrequencyGoalMetadata frequencyGoalMetadata) {
    this.frequencyGoalMetadata = frequencyGoalMetadata;
    return this;
  }

   /**
   * Get frequencyGoalMetadata
   * @return frequencyGoalMetadata
  **/
  @javax.annotation.Nullable
  public OptimizationGoalMetadataFrequencyGoalMetadata getFrequencyGoalMetadata() {
    return frequencyGoalMetadata;
  }

  public void setFrequencyGoalMetadata(OptimizationGoalMetadataFrequencyGoalMetadata frequencyGoalMetadata) {
    this.frequencyGoalMetadata = frequencyGoalMetadata;
  }


  public AdGroupCommonOptimizationGoalMetadata scrollupGoalMetadata(OptimizationGoalMetadataScrollupGoalMetadata scrollupGoalMetadata) {
    this.scrollupGoalMetadata = scrollupGoalMetadata;
    return this;
  }

   /**
   * Get scrollupGoalMetadata
   * @return scrollupGoalMetadata
  **/
  @javax.annotation.Nullable
  public OptimizationGoalMetadataScrollupGoalMetadata getScrollupGoalMetadata() {
    return scrollupGoalMetadata;
  }

  public void setScrollupGoalMetadata(OptimizationGoalMetadataScrollupGoalMetadata scrollupGoalMetadata) {
    this.scrollupGoalMetadata = scrollupGoalMetadata;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdGroupCommonOptimizationGoalMetadata adGroupCommonOptimizationGoalMetadata = (AdGroupCommonOptimizationGoalMetadata) o;
    return Objects.equals(this.conversionTagV3GoalMetadata, adGroupCommonOptimizationGoalMetadata.conversionTagV3GoalMetadata) &&
        Objects.equals(this.frequencyGoalMetadata, adGroupCommonOptimizationGoalMetadata.frequencyGoalMetadata) &&
        Objects.equals(this.scrollupGoalMetadata, adGroupCommonOptimizationGoalMetadata.scrollupGoalMetadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(conversionTagV3GoalMetadata, frequencyGoalMetadata, scrollupGoalMetadata);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdGroupCommonOptimizationGoalMetadata {\n");
    sb.append("    conversionTagV3GoalMetadata: ").append(toIndentedString(conversionTagV3GoalMetadata)).append("\n");
    sb.append("    frequencyGoalMetadata: ").append(toIndentedString(frequencyGoalMetadata)).append("\n");
    sb.append("    scrollupGoalMetadata: ").append(toIndentedString(scrollupGoalMetadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("conversion_tag_v3_goal_metadata");
    openapiFields.add("frequency_goal_metadata");
    openapiFields.add("scrollup_goal_metadata");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to AdGroupCommonOptimizationGoalMetadata
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AdGroupCommonOptimizationGoalMetadata.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AdGroupCommonOptimizationGoalMetadata is not found in the empty JSON string", AdGroupCommonOptimizationGoalMetadata.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AdGroupCommonOptimizationGoalMetadata.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AdGroupCommonOptimizationGoalMetadata` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `conversion_tag_v3_goal_metadata`
      if (jsonObj.get("conversion_tag_v3_goal_metadata") != null && !jsonObj.get("conversion_tag_v3_goal_metadata").isJsonNull()) {
        OptimizationGoalMetadataConversionTagV3GoalMetadata.validateJsonElement(jsonObj.get("conversion_tag_v3_goal_metadata"));
      }
      // validate the optional field `frequency_goal_metadata`
      if (jsonObj.get("frequency_goal_metadata") != null && !jsonObj.get("frequency_goal_metadata").isJsonNull()) {
        OptimizationGoalMetadataFrequencyGoalMetadata.validateJsonElement(jsonObj.get("frequency_goal_metadata"));
      }
      // validate the optional field `scrollup_goal_metadata`
      if (jsonObj.get("scrollup_goal_metadata") != null && !jsonObj.get("scrollup_goal_metadata").isJsonNull()) {
        OptimizationGoalMetadataScrollupGoalMetadata.validateJsonElement(jsonObj.get("scrollup_goal_metadata"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AdGroupCommonOptimizationGoalMetadata.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AdGroupCommonOptimizationGoalMetadata' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AdGroupCommonOptimizationGoalMetadata> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AdGroupCommonOptimizationGoalMetadata.class));

       return (TypeAdapter<T>) new TypeAdapter<AdGroupCommonOptimizationGoalMetadata>() {
           @Override
           public void write(JsonWriter out, AdGroupCommonOptimizationGoalMetadata value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AdGroupCommonOptimizationGoalMetadata read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AdGroupCommonOptimizationGoalMetadata given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AdGroupCommonOptimizationGoalMetadata
  * @throws IOException if the JSON string is invalid with respect to AdGroupCommonOptimizationGoalMetadata
  */
  public static AdGroupCommonOptimizationGoalMetadata fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AdGroupCommonOptimizationGoalMetadata.class);
  }

 /**
  * Convert an instance of AdGroupCommonOptimizationGoalMetadata to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

