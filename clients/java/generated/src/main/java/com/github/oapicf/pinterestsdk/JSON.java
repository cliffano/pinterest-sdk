/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.oapicf.pinterestsdk;

import com.fasterxml.jackson.databind.util.StdDateFormat;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.google.gson.JsonElement;
import io.gsonfire.GsonFireBuilder;
import io.gsonfire.TypeSelector;

import okio.ByteString;

import java.io.IOException;
import java.io.StringReader;
import java.lang.reflect.Type;
import java.text.DateFormat;
import java.text.ParseException;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.Locale;
import java.util.Map;
import java.util.HashMap;
import java.util.TimeZone;

/*
 * A JSON utility class
 *
 * NOTE: in the future, this class may be converted to static, which may break
 *       backward-compatibility
 */
public class JSON {
    private static Gson gson;
    private static boolean isLenientOnJson = false;
    private static DateTypeAdapter dateTypeAdapter = new DateTypeAdapter();
    private static SqlDateTypeAdapter sqlDateTypeAdapter = new SqlDateTypeAdapter();
    private static OffsetDateTimeTypeAdapter offsetDateTimeTypeAdapter = new OffsetDateTimeTypeAdapter();
    private static LocalDateTypeAdapter localDateTypeAdapter = new LocalDateTypeAdapter();
    private static ByteArrayAdapter byteArrayAdapter = new ByteArrayAdapter();

    private static final StdDateFormat sdf = new StdDateFormat()
        .withTimeZone(TimeZone.getTimeZone(ZoneId.systemDefault()))
        .withColonInTimeZone(true);
    private static final DateTimeFormatter dtf = DateTimeFormatter.ISO_OFFSET_DATE_TIME;

    @SuppressWarnings("unchecked")
    public static GsonBuilder createGson() {
        GsonFireBuilder fireBuilder = new GsonFireBuilder()
                .registerTypeSelector(com.github.oapicf.pinterestsdk.model.CatalogsFeed.class, new TypeSelector<com.github.oapicf.pinterestsdk.model.CatalogsFeed>() {
                    @Override
                    public Class<? extends com.github.oapicf.pinterestsdk.model.CatalogsFeed> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("HOTEL", com.github.oapicf.pinterestsdk.model.CatalogsHotelFeed.class);
                        classByDiscriminatorValue.put("RETAIL", com.github.oapicf.pinterestsdk.model.CatalogsRetailFeed.class);
                        classByDiscriminatorValue.put("CatalogsHotelFeed", com.github.oapicf.pinterestsdk.model.CatalogsHotelFeed.class);
                        classByDiscriminatorValue.put("CatalogsRetailFeed", com.github.oapicf.pinterestsdk.model.CatalogsRetailFeed.class);
                        classByDiscriminatorValue.put("CatalogsFeed", com.github.oapicf.pinterestsdk.model.CatalogsFeed.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "catalog_type"));
                    }
          })
                .registerTypeSelector(com.github.oapicf.pinterestsdk.model.CatalogsHotelBatchItem.class, new TypeSelector<com.github.oapicf.pinterestsdk.model.CatalogsHotelBatchItem>() {
                    @Override
                    public Class<? extends com.github.oapicf.pinterestsdk.model.CatalogsHotelBatchItem> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CREATE", com.github.oapicf.pinterestsdk.model.CatalogsCreateHotelItem.class);
                        classByDiscriminatorValue.put("DELETE", com.github.oapicf.pinterestsdk.model.CatalogsDeleteHotelItem.class);
                        classByDiscriminatorValue.put("UPDATE", com.github.oapicf.pinterestsdk.model.CatalogsUpdateHotelItem.class);
                        classByDiscriminatorValue.put("UPSERT", com.github.oapicf.pinterestsdk.model.CatalogsUpsertHotelItem.class);
                        classByDiscriminatorValue.put("CatalogsCreateHotelItem", com.github.oapicf.pinterestsdk.model.CatalogsCreateHotelItem.class);
                        classByDiscriminatorValue.put("CatalogsDeleteHotelItem", com.github.oapicf.pinterestsdk.model.CatalogsDeleteHotelItem.class);
                        classByDiscriminatorValue.put("CatalogsUpdateHotelItem", com.github.oapicf.pinterestsdk.model.CatalogsUpdateHotelItem.class);
                        classByDiscriminatorValue.put("CatalogsUpsertHotelItem", com.github.oapicf.pinterestsdk.model.CatalogsUpsertHotelItem.class);
                        classByDiscriminatorValue.put("CatalogsHotelBatchItem", com.github.oapicf.pinterestsdk.model.CatalogsHotelBatchItem.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "operation"));
                    }
          })
                .registerTypeSelector(com.github.oapicf.pinterestsdk.model.CatalogsItemsBatch.class, new TypeSelector<com.github.oapicf.pinterestsdk.model.CatalogsItemsBatch>() {
                    @Override
                    public Class<? extends com.github.oapicf.pinterestsdk.model.CatalogsItemsBatch> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("HOTEL", com.github.oapicf.pinterestsdk.model.CatalogsHotelItemsBatch.class);
                        classByDiscriminatorValue.put("RETAIL", com.github.oapicf.pinterestsdk.model.CatalogsRetailItemsBatch.class);
                        classByDiscriminatorValue.put("CatalogsHotelItemsBatch", com.github.oapicf.pinterestsdk.model.CatalogsHotelItemsBatch.class);
                        classByDiscriminatorValue.put("CatalogsRetailItemsBatch", com.github.oapicf.pinterestsdk.model.CatalogsRetailItemsBatch.class);
                        classByDiscriminatorValue.put("CatalogsItemsBatch", com.github.oapicf.pinterestsdk.model.CatalogsItemsBatch.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "catalog_type"));
                    }
          })
                .registerTypeSelector(com.github.oapicf.pinterestsdk.model.CatalogsItemsBatchRequest.class, new TypeSelector<com.github.oapicf.pinterestsdk.model.CatalogsItemsBatchRequest>() {
                    @Override
                    public Class<? extends com.github.oapicf.pinterestsdk.model.CatalogsItemsBatchRequest> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CREATE", com.github.oapicf.pinterestsdk.model.CatalogsItemsCreateBatchRequest.class);
                        classByDiscriminatorValue.put("DELETE", com.github.oapicf.pinterestsdk.model.CatalogsItemsDeleteBatchRequest.class);
                        classByDiscriminatorValue.put("DELETE_DISCONTINUED", com.github.oapicf.pinterestsdk.model.CatalogsItemsDeleteDiscontinuedBatchRequest.class);
                        classByDiscriminatorValue.put("UPDATE", com.github.oapicf.pinterestsdk.model.CatalogsItemsUpdateBatchRequest.class);
                        classByDiscriminatorValue.put("UPSERT", com.github.oapicf.pinterestsdk.model.CatalogsItemsUpsertBatchRequest.class);
                        classByDiscriminatorValue.put("CatalogsItemsCreateBatchRequest", com.github.oapicf.pinterestsdk.model.CatalogsItemsCreateBatchRequest.class);
                        classByDiscriminatorValue.put("CatalogsItemsDeleteBatchRequest", com.github.oapicf.pinterestsdk.model.CatalogsItemsDeleteBatchRequest.class);
                        classByDiscriminatorValue.put("CatalogsItemsDeleteDiscontinuedBatchRequest", com.github.oapicf.pinterestsdk.model.CatalogsItemsDeleteDiscontinuedBatchRequest.class);
                        classByDiscriminatorValue.put("CatalogsItemsUpdateBatchRequest", com.github.oapicf.pinterestsdk.model.CatalogsItemsUpdateBatchRequest.class);
                        classByDiscriminatorValue.put("CatalogsItemsUpsertBatchRequest", com.github.oapicf.pinterestsdk.model.CatalogsItemsUpsertBatchRequest.class);
                        classByDiscriminatorValue.put("CatalogsItemsBatchRequest", com.github.oapicf.pinterestsdk.model.CatalogsItemsBatchRequest.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "operation"));
                    }
          })
                .registerTypeSelector(com.github.oapicf.pinterestsdk.model.CatalogsItemsFilters.class, new TypeSelector<com.github.oapicf.pinterestsdk.model.CatalogsItemsFilters>() {
                    @Override
                    public Class<? extends com.github.oapicf.pinterestsdk.model.CatalogsItemsFilters> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("HOTEL", com.github.oapicf.pinterestsdk.model.CatalogsHotelItemsFilter.class);
                        classByDiscriminatorValue.put("RETAIL", com.github.oapicf.pinterestsdk.model.CatalogsRetailItemsFilter.class);
                        classByDiscriminatorValue.put("CatalogsHotelItemsFilter", com.github.oapicf.pinterestsdk.model.CatalogsHotelItemsFilter.class);
                        classByDiscriminatorValue.put("CatalogsRetailItemsFilter", com.github.oapicf.pinterestsdk.model.CatalogsRetailItemsFilter.class);
                        classByDiscriminatorValue.put("CatalogsItemsFilters", com.github.oapicf.pinterestsdk.model.CatalogsItemsFilters.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "catalog_type"));
                    }
          })
                .registerTypeSelector(com.github.oapicf.pinterestsdk.model.CatalogsRetailBatchRequestItemsInner.class, new TypeSelector<com.github.oapicf.pinterestsdk.model.CatalogsRetailBatchRequestItemsInner>() {
                    @Override
                    public Class<? extends com.github.oapicf.pinterestsdk.model.CatalogsRetailBatchRequestItemsInner> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CREATE", com.github.oapicf.pinterestsdk.model.CatalogsCreateRetailItem.class);
                        classByDiscriminatorValue.put("DELETE", com.github.oapicf.pinterestsdk.model.CatalogsDeleteRetailItem.class);
                        classByDiscriminatorValue.put("UPDATE", com.github.oapicf.pinterestsdk.model.CatalogsUpdateRetailItem.class);
                        classByDiscriminatorValue.put("UPSERT", com.github.oapicf.pinterestsdk.model.CatalogsUpsertRetailItem.class);
                        classByDiscriminatorValue.put("CatalogsCreateRetailItem", com.github.oapicf.pinterestsdk.model.CatalogsCreateRetailItem.class);
                        classByDiscriminatorValue.put("CatalogsDeleteRetailItem", com.github.oapicf.pinterestsdk.model.CatalogsDeleteRetailItem.class);
                        classByDiscriminatorValue.put("CatalogsUpdateRetailItem", com.github.oapicf.pinterestsdk.model.CatalogsUpdateRetailItem.class);
                        classByDiscriminatorValue.put("CatalogsUpsertRetailItem", com.github.oapicf.pinterestsdk.model.CatalogsUpsertRetailItem.class);
                        classByDiscriminatorValue.put("CatalogsRetailBatchRequest_items_inner", com.github.oapicf.pinterestsdk.model.CatalogsRetailBatchRequestItemsInner.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "operation"));
                    }
          })
                .registerTypeSelector(com.github.oapicf.pinterestsdk.model.CatalogsVerticalBatchRequest.class, new TypeSelector<com.github.oapicf.pinterestsdk.model.CatalogsVerticalBatchRequest>() {
                    @Override
                    public Class<? extends com.github.oapicf.pinterestsdk.model.CatalogsVerticalBatchRequest> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("HOTEL", com.github.oapicf.pinterestsdk.model.CatalogsHotelBatchRequest.class);
                        classByDiscriminatorValue.put("RETAIL", com.github.oapicf.pinterestsdk.model.CatalogsRetailBatchRequest.class);
                        classByDiscriminatorValue.put("CatalogsHotelBatchRequest", com.github.oapicf.pinterestsdk.model.CatalogsHotelBatchRequest.class);
                        classByDiscriminatorValue.put("CatalogsRetailBatchRequest", com.github.oapicf.pinterestsdk.model.CatalogsRetailBatchRequest.class);
                        classByDiscriminatorValue.put("CatalogsVerticalBatchRequest", com.github.oapicf.pinterestsdk.model.CatalogsVerticalBatchRequest.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "catalog_type"));
                    }
          })
                .registerTypeSelector(com.github.oapicf.pinterestsdk.model.CatalogsVerticalFeedsCreateRequest.class, new TypeSelector<com.github.oapicf.pinterestsdk.model.CatalogsVerticalFeedsCreateRequest>() {
                    @Override
                    public Class<? extends com.github.oapicf.pinterestsdk.model.CatalogsVerticalFeedsCreateRequest> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("HOTEL", com.github.oapicf.pinterestsdk.model.CatalogsHotelFeedsCreateRequest.class);
                        classByDiscriminatorValue.put("RETAIL", com.github.oapicf.pinterestsdk.model.CatalogsRetailFeedsCreateRequest.class);
                        classByDiscriminatorValue.put("CatalogsHotelFeedsCreateRequest", com.github.oapicf.pinterestsdk.model.CatalogsHotelFeedsCreateRequest.class);
                        classByDiscriminatorValue.put("CatalogsRetailFeedsCreateRequest", com.github.oapicf.pinterestsdk.model.CatalogsRetailFeedsCreateRequest.class);
                        classByDiscriminatorValue.put("CatalogsVerticalFeedsCreateRequest", com.github.oapicf.pinterestsdk.model.CatalogsVerticalFeedsCreateRequest.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "catalog_type"));
                    }
          })
                .registerTypeSelector(com.github.oapicf.pinterestsdk.model.CatalogsVerticalFeedsUpdateRequest.class, new TypeSelector<com.github.oapicf.pinterestsdk.model.CatalogsVerticalFeedsUpdateRequest>() {
                    @Override
                    public Class<? extends com.github.oapicf.pinterestsdk.model.CatalogsVerticalFeedsUpdateRequest> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("HOTEL", com.github.oapicf.pinterestsdk.model.CatalogsHotelFeedsUpdateRequest.class);
                        classByDiscriminatorValue.put("RETAIL", com.github.oapicf.pinterestsdk.model.CatalogsRetailFeedsUpdateRequest.class);
                        classByDiscriminatorValue.put("CatalogsHotelFeedsUpdateRequest", com.github.oapicf.pinterestsdk.model.CatalogsHotelFeedsUpdateRequest.class);
                        classByDiscriminatorValue.put("CatalogsRetailFeedsUpdateRequest", com.github.oapicf.pinterestsdk.model.CatalogsRetailFeedsUpdateRequest.class);
                        classByDiscriminatorValue.put("CatalogsVerticalFeedsUpdateRequest", com.github.oapicf.pinterestsdk.model.CatalogsVerticalFeedsUpdateRequest.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "catalog_type"));
                    }
          })
                .registerTypeSelector(com.github.oapicf.pinterestsdk.model.CatalogsVerticalProductGroup.class, new TypeSelector<com.github.oapicf.pinterestsdk.model.CatalogsVerticalProductGroup>() {
                    @Override
                    public Class<? extends com.github.oapicf.pinterestsdk.model.CatalogsVerticalProductGroup> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("HOTEL", com.github.oapicf.pinterestsdk.model.CatalogsHotelProductGroup.class);
                        classByDiscriminatorValue.put("RETAIL", com.github.oapicf.pinterestsdk.model.CatalogsRetailProductGroup.class);
                        classByDiscriminatorValue.put("CatalogsHotelProductGroup", com.github.oapicf.pinterestsdk.model.CatalogsHotelProductGroup.class);
                        classByDiscriminatorValue.put("CatalogsRetailProductGroup", com.github.oapicf.pinterestsdk.model.CatalogsRetailProductGroup.class);
                        classByDiscriminatorValue.put("CatalogsVerticalProductGroup", com.github.oapicf.pinterestsdk.model.CatalogsVerticalProductGroup.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "catalog_type"));
                    }
          })
                .registerTypeSelector(com.github.oapicf.pinterestsdk.model.CatalogsVerticalProductGroupCreateRequest.class, new TypeSelector<com.github.oapicf.pinterestsdk.model.CatalogsVerticalProductGroupCreateRequest>() {
                    @Override
                    public Class<? extends com.github.oapicf.pinterestsdk.model.CatalogsVerticalProductGroupCreateRequest> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("HOTEL", com.github.oapicf.pinterestsdk.model.CatalogsHotelProductGroupCreateRequest.class);
                        classByDiscriminatorValue.put("CatalogsHotelProductGroupCreateRequest", com.github.oapicf.pinterestsdk.model.CatalogsHotelProductGroupCreateRequest.class);
                        classByDiscriminatorValue.put("CatalogsVerticalProductGroupCreateRequest", com.github.oapicf.pinterestsdk.model.CatalogsVerticalProductGroupCreateRequest.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "catalog_type"));
                    }
          })
                .registerTypeSelector(com.github.oapicf.pinterestsdk.model.CatalogsVerticalProductGroupUpdateRequest.class, new TypeSelector<com.github.oapicf.pinterestsdk.model.CatalogsVerticalProductGroupUpdateRequest>() {
                    @Override
                    public Class<? extends com.github.oapicf.pinterestsdk.model.CatalogsVerticalProductGroupUpdateRequest> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("HOTEL", com.github.oapicf.pinterestsdk.model.CatalogsHotelProductGroupUpdateRequest.class);
                        classByDiscriminatorValue.put("CatalogsHotelProductGroupUpdateRequest", com.github.oapicf.pinterestsdk.model.CatalogsHotelProductGroupUpdateRequest.class);
                        classByDiscriminatorValue.put("CatalogsVerticalProductGroupUpdateRequest", com.github.oapicf.pinterestsdk.model.CatalogsVerticalProductGroupUpdateRequest.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "catalog_type"));
                    }
          })
                .registerTypeSelector(com.github.oapicf.pinterestsdk.model.ItemResponse.class, new TypeSelector<com.github.oapicf.pinterestsdk.model.ItemResponse>() {
                    @Override
                    public Class<? extends com.github.oapicf.pinterestsdk.model.ItemResponse> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("HOTEL", com.github.oapicf.pinterestsdk.model.CatalogsHotelItemErrorResponse.class);
                        classByDiscriminatorValue.put("RETAIL", com.github.oapicf.pinterestsdk.model.CatalogsRetailItemErrorResponse.class);
                        classByDiscriminatorValue.put("ItemResponse_anyOf", com.github.oapicf.pinterestsdk.model.ItemResponseAnyOf.class);
                        classByDiscriminatorValue.put("ItemResponse_anyOf_1", com.github.oapicf.pinterestsdk.model.ItemResponseAnyOf1.class);
                        classByDiscriminatorValue.put("ItemResponse", com.github.oapicf.pinterestsdk.model.ItemResponse.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "catalog_type"));
                    }
          })
                .registerTypeSelector(com.github.oapicf.pinterestsdk.model.ItemResponseAnyOf.class, new TypeSelector<com.github.oapicf.pinterestsdk.model.ItemResponseAnyOf>() {
                    @Override
                    public Class<? extends com.github.oapicf.pinterestsdk.model.ItemResponseAnyOf> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("HOTEL", com.github.oapicf.pinterestsdk.model.CatalogsHotelItemResponse.class);
                        classByDiscriminatorValue.put("RETAIL", com.github.oapicf.pinterestsdk.model.CatalogsRetailItemResponse.class);
                        classByDiscriminatorValue.put("CatalogsHotelItemResponse", com.github.oapicf.pinterestsdk.model.CatalogsHotelItemResponse.class);
                        classByDiscriminatorValue.put("CatalogsRetailItemResponse", com.github.oapicf.pinterestsdk.model.CatalogsRetailItemResponse.class);
                        classByDiscriminatorValue.put("ItemResponse_anyOf", com.github.oapicf.pinterestsdk.model.ItemResponseAnyOf.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "catalog_type"));
                    }
          })
                .registerTypeSelector(com.github.oapicf.pinterestsdk.model.ItemResponseAnyOf1.class, new TypeSelector<com.github.oapicf.pinterestsdk.model.ItemResponseAnyOf1>() {
                    @Override
                    public Class<? extends com.github.oapicf.pinterestsdk.model.ItemResponseAnyOf1> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("HOTEL", com.github.oapicf.pinterestsdk.model.CatalogsHotelItemErrorResponse.class);
                        classByDiscriminatorValue.put("RETAIL", com.github.oapicf.pinterestsdk.model.CatalogsRetailItemErrorResponse.class);
                        classByDiscriminatorValue.put("CatalogsHotelItemErrorResponse", com.github.oapicf.pinterestsdk.model.CatalogsHotelItemErrorResponse.class);
                        classByDiscriminatorValue.put("CatalogsRetailItemErrorResponse", com.github.oapicf.pinterestsdk.model.CatalogsRetailItemErrorResponse.class);
                        classByDiscriminatorValue.put("ItemResponse_anyOf_1", com.github.oapicf.pinterestsdk.model.ItemResponseAnyOf1.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "catalog_type"));
                    }
          })
                .registerTypeSelector(com.github.oapicf.pinterestsdk.model.OauthAccessTokenRequestCode.class, new TypeSelector<com.github.oapicf.pinterestsdk.model.OauthAccessTokenRequestCode>() {
                    @Override
                    public Class<? extends com.github.oapicf.pinterestsdk.model.OauthAccessTokenRequestCode> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("OauthAccessTokenRequestCode", com.github.oapicf.pinterestsdk.model.OauthAccessTokenRequestCode.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "grant_type"));
                    }
          })
                .registerTypeSelector(com.github.oapicf.pinterestsdk.model.OauthAccessTokenRequestRefresh.class, new TypeSelector<com.github.oapicf.pinterestsdk.model.OauthAccessTokenRequestRefresh>() {
                    @Override
                    public Class<? extends com.github.oapicf.pinterestsdk.model.OauthAccessTokenRequestRefresh> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("OauthAccessTokenRequestRefresh", com.github.oapicf.pinterestsdk.model.OauthAccessTokenRequestRefresh.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "grant_type"));
                    }
          })
                .registerTypeSelector(com.github.oapicf.pinterestsdk.model.OauthAccessTokenResponse.class, new TypeSelector<com.github.oapicf.pinterestsdk.model.OauthAccessTokenResponse>() {
                    @Override
                    public Class<? extends com.github.oapicf.pinterestsdk.model.OauthAccessTokenResponse> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("authorization_code", com.github.oapicf.pinterestsdk.model.OauthAccessTokenResponseCode.class);
                        classByDiscriminatorValue.put("everlasting_refresh", com.github.oapicf.pinterestsdk.model.OauthAccessTokenResponseEverlastingRefresh.class);
                        classByDiscriminatorValue.put("integration_refresh", com.github.oapicf.pinterestsdk.model.OauthAccessTokenResponseIntegrationRefresh.class);
                        classByDiscriminatorValue.put("refresh_token", com.github.oapicf.pinterestsdk.model.OauthAccessTokenResponseRefresh.class);
                        classByDiscriminatorValue.put("OauthAccessTokenResponse", com.github.oapicf.pinterestsdk.model.OauthAccessTokenResponse.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "response_type"));
                    }
          })
                .registerTypeSelector(com.github.oapicf.pinterestsdk.model.OauthAccessTokenResponseCode.class, new TypeSelector<com.github.oapicf.pinterestsdk.model.OauthAccessTokenResponseCode>() {
                    @Override
                    public Class<? extends com.github.oapicf.pinterestsdk.model.OauthAccessTokenResponseCode> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("OauthAccessTokenResponseCode", com.github.oapicf.pinterestsdk.model.OauthAccessTokenResponseCode.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "response_type"));
                    }
          })
                .registerTypeSelector(com.github.oapicf.pinterestsdk.model.OauthAccessTokenResponseEverlastingRefresh.class, new TypeSelector<com.github.oapicf.pinterestsdk.model.OauthAccessTokenResponseEverlastingRefresh>() {
                    @Override
                    public Class<? extends com.github.oapicf.pinterestsdk.model.OauthAccessTokenResponseEverlastingRefresh> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("OauthAccessTokenResponseEverlastingRefresh", com.github.oapicf.pinterestsdk.model.OauthAccessTokenResponseEverlastingRefresh.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "response_type"));
                    }
          })
                .registerTypeSelector(com.github.oapicf.pinterestsdk.model.OauthAccessTokenResponseIntegrationRefresh.class, new TypeSelector<com.github.oapicf.pinterestsdk.model.OauthAccessTokenResponseIntegrationRefresh>() {
                    @Override
                    public Class<? extends com.github.oapicf.pinterestsdk.model.OauthAccessTokenResponseIntegrationRefresh> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("OauthAccessTokenResponseIntegrationRefresh", com.github.oapicf.pinterestsdk.model.OauthAccessTokenResponseIntegrationRefresh.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "response_type"));
                    }
          })
                .registerTypeSelector(com.github.oapicf.pinterestsdk.model.OauthAccessTokenResponseRefresh.class, new TypeSelector<com.github.oapicf.pinterestsdk.model.OauthAccessTokenResponseRefresh>() {
                    @Override
                    public Class<? extends com.github.oapicf.pinterestsdk.model.OauthAccessTokenResponseRefresh> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("OauthAccessTokenResponseRefresh", com.github.oapicf.pinterestsdk.model.OauthAccessTokenResponseRefresh.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "response_type"));
                    }
          })
                .registerTypeSelector(com.github.oapicf.pinterestsdk.model.PinMedia.class, new TypeSelector<com.github.oapicf.pinterestsdk.model.PinMedia>() {
                    @Override
                    public Class<? extends com.github.oapicf.pinterestsdk.model.PinMedia> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("image", com.github.oapicf.pinterestsdk.model.PinMediaWithImage.class);
                        classByDiscriminatorValue.put("multiple_images", com.github.oapicf.pinterestsdk.model.PinMediaWithImages.class);
                        classByDiscriminatorValue.put("multiple_mixed", com.github.oapicf.pinterestsdk.model.PinMediaWithImageAndVideo.class);
                        classByDiscriminatorValue.put("multiple_videos", com.github.oapicf.pinterestsdk.model.PinMediaWithVideos.class);
                        classByDiscriminatorValue.put("video", com.github.oapicf.pinterestsdk.model.PinMediaWithVideo.class);
                        classByDiscriminatorValue.put("SummaryPin_media", com.github.oapicf.pinterestsdk.model.SummaryPinMedia.class);
                        classByDiscriminatorValue.put("PinMedia", com.github.oapicf.pinterestsdk.model.PinMedia.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "media_type"));
                    }
          })
                .registerTypeSelector(com.github.oapicf.pinterestsdk.model.PinMediaSource.class, new TypeSelector<com.github.oapicf.pinterestsdk.model.PinMediaSource>() {
                    @Override
                    public Class<? extends com.github.oapicf.pinterestsdk.model.PinMediaSource> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("image_base64", com.github.oapicf.pinterestsdk.model.PinMediaSourceImageBase64.class);
                        classByDiscriminatorValue.put("image_url", com.github.oapicf.pinterestsdk.model.PinMediaSourceImageURL.class);
                        classByDiscriminatorValue.put("multiple_image_base64", com.github.oapicf.pinterestsdk.model.PinMediaSourceImagesBase64.class);
                        classByDiscriminatorValue.put("multiple_image_urls", com.github.oapicf.pinterestsdk.model.PinMediaSourceImagesURL.class);
                        classByDiscriminatorValue.put("pin_url", com.github.oapicf.pinterestsdk.model.PinMediaSourcePinURL.class);
                        classByDiscriminatorValue.put("video_id", com.github.oapicf.pinterestsdk.model.PinMediaSourceVideoID.class);
                        classByDiscriminatorValue.put("PinMediaSourceImageBase64", com.github.oapicf.pinterestsdk.model.PinMediaSourceImageBase64.class);
                        classByDiscriminatorValue.put("PinMediaSourceImageURL", com.github.oapicf.pinterestsdk.model.PinMediaSourceImageURL.class);
                        classByDiscriminatorValue.put("PinMediaSourceImagesBase64", com.github.oapicf.pinterestsdk.model.PinMediaSourceImagesBase64.class);
                        classByDiscriminatorValue.put("PinMediaSourceImagesURL", com.github.oapicf.pinterestsdk.model.PinMediaSourceImagesURL.class);
                        classByDiscriminatorValue.put("PinMediaSourcePinURL", com.github.oapicf.pinterestsdk.model.PinMediaSourcePinURL.class);
                        classByDiscriminatorValue.put("PinMediaSourceVideoID", com.github.oapicf.pinterestsdk.model.PinMediaSourceVideoID.class);
                        classByDiscriminatorValue.put("PinMediaSource", com.github.oapicf.pinterestsdk.model.PinMediaSource.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "source_type"));
                    }
          })
                .registerTypeSelector(com.github.oapicf.pinterestsdk.model.PinMediaWithImage.class, new TypeSelector<com.github.oapicf.pinterestsdk.model.PinMediaWithImage>() {
                    @Override
                    public Class<? extends com.github.oapicf.pinterestsdk.model.PinMediaWithImage> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PinMediaWithImage", com.github.oapicf.pinterestsdk.model.PinMediaWithImage.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "media_type"));
                    }
          })
                .registerTypeSelector(com.github.oapicf.pinterestsdk.model.PinMediaWithImageAndVideo.class, new TypeSelector<com.github.oapicf.pinterestsdk.model.PinMediaWithImageAndVideo>() {
                    @Override
                    public Class<? extends com.github.oapicf.pinterestsdk.model.PinMediaWithImageAndVideo> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PinMediaWithImageAndVideo", com.github.oapicf.pinterestsdk.model.PinMediaWithImageAndVideo.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "media_type"));
                    }
          })
                .registerTypeSelector(com.github.oapicf.pinterestsdk.model.PinMediaWithImages.class, new TypeSelector<com.github.oapicf.pinterestsdk.model.PinMediaWithImages>() {
                    @Override
                    public Class<? extends com.github.oapicf.pinterestsdk.model.PinMediaWithImages> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PinMediaWithImages", com.github.oapicf.pinterestsdk.model.PinMediaWithImages.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "media_type"));
                    }
          })
                .registerTypeSelector(com.github.oapicf.pinterestsdk.model.PinMediaWithVideo.class, new TypeSelector<com.github.oapicf.pinterestsdk.model.PinMediaWithVideo>() {
                    @Override
                    public Class<? extends com.github.oapicf.pinterestsdk.model.PinMediaWithVideo> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PinMediaWithVideo", com.github.oapicf.pinterestsdk.model.PinMediaWithVideo.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "media_type"));
                    }
          })
                .registerTypeSelector(com.github.oapicf.pinterestsdk.model.PinMediaWithVideos.class, new TypeSelector<com.github.oapicf.pinterestsdk.model.PinMediaWithVideos>() {
                    @Override
                    public Class<? extends com.github.oapicf.pinterestsdk.model.PinMediaWithVideos> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PinMediaWithVideos", com.github.oapicf.pinterestsdk.model.PinMediaWithVideos.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "media_type"));
                    }
          })
                .registerTypeSelector(com.github.oapicf.pinterestsdk.model.SummaryPinMedia.class, new TypeSelector<com.github.oapicf.pinterestsdk.model.SummaryPinMedia>() {
                    @Override
                    public Class<? extends com.github.oapicf.pinterestsdk.model.SummaryPinMedia> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("SummaryPin_media", com.github.oapicf.pinterestsdk.model.SummaryPinMedia.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "media_type"));
                    }
          })
        ;
        GsonBuilder builder = fireBuilder.createGsonBuilder();
        return builder;
    }

    private static String getDiscriminatorValue(JsonElement readElement, String discriminatorField) {
        JsonElement element = readElement.getAsJsonObject().get(discriminatorField);
        if (null == element) {
            throw new IllegalArgumentException("missing discriminator field: <" + discriminatorField + ">");
        }
        return element.getAsString();
    }

    /**
     * Returns the Java class that implements the OpenAPI schema for the specified discriminator value.
     *
     * @param classByDiscriminatorValue The map of discriminator values to Java classes.
     * @param discriminatorValue The value of the OpenAPI discriminator in the input data.
     * @return The Java class that implements the OpenAPI schema
     */
    private static Class getClassByDiscriminator(Map classByDiscriminatorValue, String discriminatorValue) {
        Class clazz = (Class) classByDiscriminatorValue.get(discriminatorValue);
        if (null == clazz) {
            throw new IllegalArgumentException("cannot determine model class of name: <" + discriminatorValue + ">");
        }
        return clazz;
    }

    static {
        GsonBuilder gsonBuilder = createGson();
        gsonBuilder.registerTypeAdapter(Date.class, dateTypeAdapter);
        gsonBuilder.registerTypeAdapter(java.sql.Date.class, sqlDateTypeAdapter);
        gsonBuilder.registerTypeAdapter(OffsetDateTime.class, offsetDateTimeTypeAdapter);
        gsonBuilder.registerTypeAdapter(LocalDate.class, localDateTypeAdapter);
        gsonBuilder.registerTypeAdapter(byte[].class, byteArrayAdapter);
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.Account.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdAccount.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdAccountAnalyticsResponseInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdAccountCreateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdAccountCreateSubscriptionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdAccountCreateSubscriptionResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdAccountGetSubscriptionResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdAccountOwner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdAccountsCatalogsProductGroupsList200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdAccountsCountryResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdAccountsCountryResponseData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdAccountsList200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdAccountsSubscriptionsGetList200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdArrayResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdArrayResponseElement.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdCommon.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdCommonQuizPinData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdCommonTrackingUrls.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdCreateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdGroupArrayResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdGroupArrayResponseElement.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdGroupAudienceSizingRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdGroupAudienceSizingRequestKeywordsInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdGroupAudienceSizingResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdGroupCommon.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdGroupCommonOptimizationGoalMetadata.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdGroupCommonTrackingUrls.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdGroupCreateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdGroupResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdGroupUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdGroupsAnalyticsResponseInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdGroupsList200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdPinId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdPreviewCreateFromImage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdPreviewCreateFromPin.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdPreviewRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdPreviewURLResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdsAnalyticsCreateAsyncRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdsAnalyticsCreateAsyncResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdsAnalyticsGetAsyncResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdsAnalyticsMetricsFilter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdsAnalyticsResponseInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdsCreditDiscountsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdsCreditRedeemRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdsCreditRedeemResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdsCreditsDiscountsGet200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AdsList200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AnalyticsDailyMetrics.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AnalyticsMetricsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.Audience.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AudienceCategory.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AudienceCommon.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AudienceCreateCustomRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AudienceCreateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AudienceCreateRequest1AudienceType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AudienceDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AudienceDefinitionResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AudienceDemographicValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AudienceDemographics.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AudienceInsightCategoryArrayResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AudienceInsightCategoryCommon.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AudienceInsightsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AudienceRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AudienceSubcategory.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AudienceUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AudiencesList200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.AvailabilityFilter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.BidFloor.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.BidFloorRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.BidFloorSpec.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.BillingProfilesGet200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.BillingProfilesResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.Board.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.BoardMedia.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.BoardOwner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.BoardSection.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.BoardSectionsList200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.BoardUpdate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.BoardsList200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.BoardsListPins200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.BoardsUserFollowsList200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.BookClosedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.BrandFilter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.BulkDownloadRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.BulkDownloadRequestCampaignFilter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.BulkDownloadResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.BulkUpsertRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.BulkUpsertRequestCreate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.BulkUpsertRequestUpdate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.BulkUpsertResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.BulkUpsertStatusResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CampaignCommon.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CampaignCreateCommon.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CampaignCreateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CampaignCreateResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CampaignCreateResponseData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CampaignCreateResponseItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CampaignId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CampaignResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CampaignUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CampaignUpdateResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CampaignsAnalyticsResponseInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CampaignsList200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.Catalog.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogProductGroup.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsCreateHotelItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsCreateRetailItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsDbItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsDeleteHotelItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsDeleteRetailItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsFeed.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsFeedCredentials.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsFeedIngestionDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsFeedIngestionErrors.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsFeedIngestionInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsFeedIngestionWarnings.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsFeedProcessingResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsFeedProcessingSchedule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsFeedProductCounts.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsFeedValidationDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsFeedValidationErrors.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsFeedValidationWarnings.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsFeedsCreateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsFeedsCreateRequestDefaultLocale.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsFeedsUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsHotelAddress.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsHotelAttributes.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsHotelAttributesAllOfMainImage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsHotelBatchItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsHotelBatchRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsHotelFeed.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsHotelFeedsCreateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsHotelFeedsUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsHotelGuestRatings.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsHotelItemErrorResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsHotelItemResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsHotelItemsBatch.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsHotelItemsFilter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsHotelProductGroup.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsHotelProductGroupCreateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsHotelProductGroupFilterKeys.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsHotelProductGroupFilters.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsHotelProductGroupFiltersAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsHotelProductGroupFiltersAnyOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsHotelProductGroupUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsItemValidationDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsItemValidationErrors.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsItemValidationIssues.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsItemValidationWarnings.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsItems.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsItemsBatch.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsItemsBatchRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsItemsCreateBatchRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsItemsDeleteBatchRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsItemsDeleteDiscontinuedBatchRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsItemsFilters.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsItemsUpdateBatchRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsItemsUpsertBatchRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsList200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsListProductsByFilterRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsListProductsByFilterRequestOneOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsProduct.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsProductGroup.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsProductGroupCreateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsProductGroupCurrencyCriteria.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsProductGroupFilterKeys.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsProductGroupFilters.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsProductGroupFiltersAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsProductGroupFiltersAnyOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsProductGroupFiltersRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsProductGroupFiltersRequestAnyOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsProductGroupFiltersRequestAnyOf1.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsProductGroupMultipleCountriesCriteria.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsProductGroupMultipleGenderCriteria.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsProductGroupMultipleStringCriteria.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsProductGroupMultipleStringListCriteria.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsProductGroupPinsList200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsProductGroupPricingCriteria.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsProductGroupPricingCurrencyCriteria.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsProductGroupProductCounts.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsProductGroupUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsProductGroupsCreate201Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsProductGroupsCreateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsProductGroupsList200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsProductGroupsList200ResponseAllOfItemsInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsProductGroupsUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsProductMetadata.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsRetailBatchRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsRetailBatchRequestItemsInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsRetailFeed.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsRetailFeedsCreateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsRetailFeedsUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsRetailItemErrorResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsRetailItemResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsRetailItemsBatch.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsRetailItemsFilter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsRetailProductGroup.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsUpdatableHotelAttributes.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsUpdateHotelItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsUpdateRetailItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsUpsertHotelItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsUpsertRetailItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsVerticalBatchRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsVerticalFeedsCreateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsVerticalFeedsUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsVerticalProductGroup.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsVerticalProductGroupCreateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CatalogsVerticalProductGroupUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ConditionFilter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ConversionApiResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ConversionApiResponseEventsInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ConversionEventResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ConversionEvents.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ConversionEventsDataInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ConversionEventsDataInnerCustomData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ConversionEventsDataInnerCustomDataContentsInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ConversionEventsUserData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ConversionTagCommon.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ConversionTagConfigs.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ConversionTagCreate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ConversionTagListResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ConversionTagResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CountryFilter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CreateMMMReportRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CreateMMMReportResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CreateMMMReportResponseData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CurrencyFilter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CustomLabel0Filter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CustomLabel1Filter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CustomLabel2Filter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CustomLabel3Filter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CustomLabel4Filter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CustomerList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CustomerListRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CustomerListUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.CustomerListsList200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.DeliveryMetricsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.DeliveryMetricsResponseItemsInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.DetailedError.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.Error.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.Exception.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.FeedProcessingResultsList200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.FeedsCreateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.FeedsList200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.FeedsUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.FollowUserRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.FollowersList200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.GenderFilter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.GetMMMReportResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.GetMMMReportResponseData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.GoogleProductCategory0Filter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.GoogleProductCategory1Filter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.GoogleProductCategory2Filter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.GoogleProductCategory3Filter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.GoogleProductCategory4Filter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.GoogleProductCategory5Filter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.GoogleProductCategory6Filter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.HotelIdFilter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.HotelProcessingRecord.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ImageDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ImageMetadata.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ImageMetadataImages.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.IntegrationLog.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.IntegrationLogClientError.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.IntegrationLogClientRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.IntegrationLogsInvalidLogResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.IntegrationLogsInvalidLogResponseRejectedLogsInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.IntegrationLogsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.IntegrationLogsSuccessResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.IntegrationMetadata.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.IntegrationRecord.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.IntegrationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.IntegrationRequestPatch.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.IntegrationsGetList200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.Interest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ItemAttributes.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ItemBatchRecord.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ItemCreateBatchRecord.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ItemDeleteBatchRecord.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ItemDeleteDiscontinuedBatchRecord.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ItemGroupIdFilter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ItemIdFilter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ItemProcessingRecord.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ItemResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ItemResponseAnyOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ItemResponseAnyOf1.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ItemUpdateBatchRecord.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ItemUpsertBatchRecord.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ItemValidationEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ItemsBatchPostRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ItemsIssuesList200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.Keyword.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.KeywordError.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.KeywordMetrics.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.KeywordMetricsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.KeywordUpdate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.KeywordUpdateBody.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.KeywordsCommon.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.KeywordsGet200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.KeywordsMetricsArrayResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.KeywordsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.KeywordsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.LeadFormCommon.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.LeadFormQuestion.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.LeadFormResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.LeadFormTestRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.LeadFormTestResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.LeadFormsList200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.LineItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.LinkedBusiness.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.MaxPriceFilter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.MediaList200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.MediaUpload.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.MediaUploadAllOfUploadParameters.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.MediaUploadDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.MediaUploadRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.MetricsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.MinPriceFilter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.OauthAccessTokenRequestCode.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.OauthAccessTokenRequestRefresh.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.OauthAccessTokenResponseCode.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.OauthAccessTokenResponseEverlastingRefresh.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.OauthAccessTokenResponseIntegrationRefresh.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.OauthAccessTokenResponseRefresh.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.OptimizationGoalMetadata.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.OptimizationGoalMetadataConversionTagV3GoalMetadata.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.OptimizationGoalMetadataConversionTagV3GoalMetadataAttributionWindows.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.OptimizationGoalMetadataFrequencyGoalMetadata.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.OptimizationGoalMetadataScrollupGoalMetadata.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.OrderLine.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.OrderLineError.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.OrderLineResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.OrderLineSingleResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.OrderLines.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.OrderLinesArrayResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.OrderLinesList200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.PageVisitConversionTagsGet200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.Paginated.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.Pin.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.PinAnalyticsMetricsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.PinAnalyticsMetricsResponseDailyMetricsInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.PinCreate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.PinMediaMetadata.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.PinMediaSource.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.PinMediaSourceImageBase64.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.PinMediaSourceImageURL.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.PinMediaSourceImagesBase64.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.PinMediaSourceImagesBase64ItemsInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.PinMediaSourceImagesURL.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.PinMediaSourceImagesURLItemsInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.PinMediaSourcePinURL.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.PinMediaSourceVideoID.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.PinMediaWithImage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.PinMediaWithImageAndVideo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.PinMediaWithImages.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.PinMediaWithVideo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.PinMediaWithVideos.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.PinUpdate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.PinUpdateCarouselSlotsInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.PinsAnalyticsMetricTypesParameterInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.PinsList200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.PinsSaveRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.PinterestTagEventData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.PriceFilter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ProductGroupAnalyticsResponseInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ProductGroupPromotion.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ProductGroupPromotionCreateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ProductGroupPromotionResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ProductGroupPromotionResponseItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ProductGroupPromotionUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ProductGroupPromotionsList200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ProductType0Filter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ProductType1Filter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ProductType2Filter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ProductType3Filter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.ProductType4Filter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.QuizPinData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.QuizPinOption.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.QuizPinQuestion.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.QuizPinResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.RelatedTerms.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.RelatedTermsRelatedTermsListInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.SSIOAccountAddress.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.SSIOAccountItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.SSIOAccountPMPName.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.SSIOAccountResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.SSIOCreateInsertionOrderRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.SSIOCreateInsertionOrderResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.SSIOEditInsertionOrderRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.SSIOEditInsertionOrderResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.SSIOInsertionOrderCommon.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.SSIOInsertionOrderStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.SSIOInsertionOrderStatusResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.SSIOOrderLine.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.SearchPartnerPins200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.SearchUserBoardsGet200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.SingleInterestTargetingOptionResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.SsioInsertionOrdersStatusGetByAdAccount200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.SsioOrderLinesGetByAdAccount200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.SummaryPin.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.SummaryPinMedia.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.TargetingSpec.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.TargetingSpecSHOPPINGRETARGETING.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.TargetingTypeFilter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.TemplateResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.TemplateResponseDateRange.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.TemplateResponseDateRangeAbsoluteDateRange.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.TemplateResponseDateRangeDynamicDateRange.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.TemplateResponseDateRangeRelativeDateRange.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.TemplatesList200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.TermsOfService.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.TopPinsAnalyticsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.TopPinsAnalyticsResponseDateAvailability.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.TopPinsAnalyticsResponsePinsInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.TopVideoPinsAnalyticsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.TopVideoPinsAnalyticsResponsePinsInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.TrackingUrls.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.TrendingKeywordsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.TrendingKeywordsResponseTrendsInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.TrendingKeywordsResponseTrendsInnerTimeSeries.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.UpdatableItemAttributes.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.UserAccountFollowedInterests200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.UserFollowingGet200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.UserSummary.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.UserWebsiteSummary.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.UserWebsiteVerificationCode.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.UserWebsiteVerifyRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.UserWebsitesGet200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.github.oapicf.pinterestsdk.model.VideoMetadata.CustomTypeAdapterFactory());
        gson = gsonBuilder.create();
    }

    /**
     * Get Gson.
     *
     * @return Gson
     */
    public static Gson getGson() {
        return gson;
    }

    /**
     * Set Gson.
     *
     * @param gson Gson
     */
    public static void setGson(Gson gson) {
        JSON.gson = gson;
    }

    public static void setLenientOnJson(boolean lenientOnJson) {
        isLenientOnJson = lenientOnJson;
    }

    /**
     * Serialize the given Java object into JSON string.
     *
     * @param obj Object
     * @return String representation of the JSON
     */
    public static String serialize(Object obj) {
        return gson.toJson(obj);
    }

    /**
     * Deserialize the given JSON string to Java object.
     *
     * @param <T>        Type
     * @param body       The JSON string
     * @param returnType The type to deserialize into
     * @return The deserialized Java object
     */
    @SuppressWarnings("unchecked")
    public static <T> T deserialize(String body, Type returnType) {
        try {
            if (isLenientOnJson) {
                JsonReader jsonReader = new JsonReader(new StringReader(body));
                // see https://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs/com/google/gson/stream/JsonReader.html#setLenient(boolean)
                jsonReader.setLenient(true);
                return gson.fromJson(jsonReader, returnType);
            } else {
                return gson.fromJson(body, returnType);
            }
        } catch (JsonParseException e) {
            // Fallback processing when failed to parse JSON form response body:
            // return the response body string directly for the String return type;
            if (returnType.equals(String.class)) {
                return (T) body;
            } else {
                throw (e);
            }
        }
    }

    /**
     * Gson TypeAdapter for Byte Array type
     */
    public static class ByteArrayAdapter extends TypeAdapter<byte[]> {

        @Override
        public void write(JsonWriter out, byte[] value) throws IOException {
            if (value == null) {
                out.nullValue();
            } else {
                out.value(ByteString.of(value).base64());
            }
        }

        @Override
        public byte[] read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String bytesAsBase64 = in.nextString();
                    ByteString byteString = ByteString.decodeBase64(bytesAsBase64);
                    return byteString.toByteArray();
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 OffsetDateTime type
     */
    public static class OffsetDateTimeTypeAdapter extends TypeAdapter<OffsetDateTime> {

        private DateTimeFormatter formatter;

        public OffsetDateTimeTypeAdapter() {
            this(DateTimeFormatter.ISO_OFFSET_DATE_TIME);
        }

        public OffsetDateTimeTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, OffsetDateTime date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public OffsetDateTime read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    if (date.endsWith("+0000")) {
                        date = date.substring(0, date.length()-5) + "Z";
                    }
                    return OffsetDateTime.parse(date, formatter);
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 LocalDate type
     */
    public static class LocalDateTypeAdapter extends TypeAdapter<LocalDate> {

        private DateTimeFormatter formatter;

        public LocalDateTypeAdapter() {
            this(DateTimeFormatter.ISO_LOCAL_DATE);
        }

        public LocalDateTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, LocalDate date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public LocalDate read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    return LocalDate.parse(date, formatter);
            }
        }
    }

    public static void setOffsetDateTimeFormat(DateTimeFormatter dateFormat) {
        offsetDateTimeTypeAdapter.setFormat(dateFormat);
    }

    public static void setLocalDateFormat(DateTimeFormatter dateFormat) {
        localDateTypeAdapter.setFormat(dateFormat);
    }

    /**
     * Gson TypeAdapter for java.sql.Date type
     * If the dateFormat is null, a simple "yyyy-MM-dd" format will be used
     * (more efficient than SimpleDateFormat).
     */
    public static class SqlDateTypeAdapter extends TypeAdapter<java.sql.Date> {

        private DateFormat dateFormat;

        public SqlDateTypeAdapter() {}

        public SqlDateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, java.sql.Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = date.toString();
                }
                out.value(value);
            }
        }

        @Override
        public java.sql.Date read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    try {
                        if (dateFormat != null) {
                            return new java.sql.Date(dateFormat.parse(date).getTime());
                        }
                        return new java.sql.Date(sdf.parse(date).getTime());
                    } catch (ParseException e) {
                        throw new JsonParseException(e);
                    }
            }
        }
    }

    /**
     * Gson TypeAdapter for java.util.Date type
     * If the dateFormat is null, DateTimeFormatter will be used.
     */
    public static class DateTypeAdapter extends TypeAdapter<Date> {

        private DateFormat dateFormat;

        public DateTypeAdapter() {}

        public DateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = date.toInstant().atOffset(ZoneOffset.UTC).format(dtf);
                }
                out.value(value);
            }
        }

        @Override
        public Date read(JsonReader in) throws IOException {
            try {
                switch (in.peek()) {
                    case NULL:
                        in.nextNull();
                        return null;
                    default:
                        String date = in.nextString();
                        try {
                            if (dateFormat != null) {
                                return dateFormat.parse(date);
                            }
                            return sdf.parse(date);
                        } catch (ParseException e) {
                            throw new JsonParseException(e);
                        }
                }
            } catch (IllegalArgumentException e) {
                throw new JsonParseException(e);
            }
        }
    }

    public static void setDateFormat(DateFormat dateFormat) {
        dateTypeAdapter.setFormat(dateFormat);
    }

    public static void setSqlDateFormat(DateFormat dateFormat) {
        sqlDateTypeAdapter.setFormat(dateFormat);
    }
}
