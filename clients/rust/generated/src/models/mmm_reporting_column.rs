/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// MmmReportingColumn : Marketing Mix Modeling (MMM) Reporting Columns
/// Marketing Mix Modeling (MMM) Reporting Columns
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MmmReportingColumn {
    #[serde(rename = "SPEND_IN_DOLLAR")]
    SpendInDollar,
    #[serde(rename = "SPEND_IN_MICRO_DOLLAR")]
    SpendInMicroDollar,
    #[serde(rename = "ECPC_IN_DOLLAR")]
    EcpcInDollar,
    #[serde(rename = "ECTR")]
    Ectr,
    #[serde(rename = "CAMPAIGN_NAME")]
    CampaignName,
    #[serde(rename = "TOTAL_ENGAGEMENT")]
    TotalEngagement,
    #[serde(rename = "EENGAGEMENT_RATE")]
    EengagementRate,
    #[serde(rename = "ECPM_IN_DOLLAR")]
    EcpmInDollar,
    #[serde(rename = "CAMPAIGN_ID")]
    CampaignId,
    #[serde(rename = "ADVERTISER_ID")]
    AdvertiserId,
    #[serde(rename = "AD_GROUP_ID")]
    AdGroupId,
    #[serde(rename = "AD_GROUP_NAME")]
    AdGroupName,
    #[serde(rename = "CLICKTHROUGH_1")]
    Clickthrough1,
    #[serde(rename = "IMPRESSION_1")]
    Impression1,
    #[serde(rename = "CLICKTHROUGH_2")]
    Clickthrough2,
    #[serde(rename = "IMPRESSION_2")]
    Impression2,
    #[serde(rename = "TOTAL_CLICKTHROUGH")]
    TotalClickthrough,
    #[serde(rename = "TOTAL_IMPRESSION")]
    TotalImpression,
    #[serde(rename = "ADVERTISER_NAME")]
    AdvertiserName,
    #[serde(rename = "SPEND_ORDER_LINE_PAID_TYPE")]
    SpendOrderLinePaidType,

}

impl ToString for MmmReportingColumn {
    fn to_string(&self) -> String {
        match self {
            Self::SpendInDollar => String::from("SPEND_IN_DOLLAR"),
            Self::SpendInMicroDollar => String::from("SPEND_IN_MICRO_DOLLAR"),
            Self::EcpcInDollar => String::from("ECPC_IN_DOLLAR"),
            Self::Ectr => String::from("ECTR"),
            Self::CampaignName => String::from("CAMPAIGN_NAME"),
            Self::TotalEngagement => String::from("TOTAL_ENGAGEMENT"),
            Self::EengagementRate => String::from("EENGAGEMENT_RATE"),
            Self::EcpmInDollar => String::from("ECPM_IN_DOLLAR"),
            Self::CampaignId => String::from("CAMPAIGN_ID"),
            Self::AdvertiserId => String::from("ADVERTISER_ID"),
            Self::AdGroupId => String::from("AD_GROUP_ID"),
            Self::AdGroupName => String::from("AD_GROUP_NAME"),
            Self::Clickthrough1 => String::from("CLICKTHROUGH_1"),
            Self::Impression1 => String::from("IMPRESSION_1"),
            Self::Clickthrough2 => String::from("CLICKTHROUGH_2"),
            Self::Impression2 => String::from("IMPRESSION_2"),
            Self::TotalClickthrough => String::from("TOTAL_CLICKTHROUGH"),
            Self::TotalImpression => String::from("TOTAL_IMPRESSION"),
            Self::AdvertiserName => String::from("ADVERTISER_NAME"),
            Self::SpendOrderLinePaidType => String::from("SPEND_ORDER_LINE_PAID_TYPE"),
        }
    }
}

impl Default for MmmReportingColumn {
    fn default() -> MmmReportingColumn {
        Self::SpendInDollar
    }
}

