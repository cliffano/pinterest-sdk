/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// DataStatus : Metrics availablity, e.g., \"READY\".
/// Metrics availablity, e.g., \"READY\".
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum DataStatus {
    #[serde(rename = "PROCESSING")]
    Processing,
    #[serde(rename = "READY")]
    Ready,
    #[serde(rename = "ESTIMATE")]
    Estimate,
    #[serde(rename = "BEFORE_BUSINESS_CREATED")]
    BeforeBusinessCreated,
    #[serde(rename = "BEFORE_DATA_RETENTION_PERIOD")]
    BeforeDataRetentionPeriod,
    #[serde(rename = "BEFORE_PIN_DATA_RETENTION_PERIOD")]
    BeforePinDataRetentionPeriod,
    #[serde(rename = "BEFORE_METRIC_START_DATE")]
    BeforeMetricStartDate,
    #[serde(rename = "BEFORE_CORE_METRIC_START_DATE")]
    BeforeCoreMetricStartDate,
    #[serde(rename = "BEFORE_PIN_FORMAT_METRIC_START_DATE")]
    BeforePinFormatMetricStartDate,
    #[serde(rename = "BEFORE_AUDIENCE_METRIC_START_DATE")]
    BeforeAudienceMetricStartDate,
    #[serde(rename = "BEFORE_AUDIENCE_MONTHLY_METRIC_START_DATE")]
    BeforeAudienceMonthlyMetricStartDate,
    #[serde(rename = "BEFORE_VIDEO_METRIC_START_DATE")]
    BeforeVideoMetricStartDate,
    #[serde(rename = "BEFORE_CONVERSION_METRIC_START_DATE")]
    BeforeConversionMetricStartDate,
    #[serde(rename = "PURCHASERS_METRIC_SMALLER_THAN_THRESHOLD")]
    PurchasersMetricSmallerThanThreshold,
    #[serde(rename = "IN_BAD_TAG_DATE")]
    InBadTagDate,
    #[serde(rename = "BEFORE_PUBLISHED_METRIC_START_DATE")]
    BeforePublishedMetricStartDate,
    #[serde(rename = "BEFORE_ASSIST_METRIC_START_DATE")]
    BeforeAssistMetricStartDate,
    #[serde(rename = "BEFORE_PIN_CREATED")]
    BeforePinCreated,
    #[serde(rename = "BEFORE_ACCOUNT_CLAIMED")]
    BeforeAccountClaimed,
    #[serde(rename = "BEFORE_DEMOGRAPHIC_FILTERS_START_DATE")]
    BeforeDemographicFiltersStartDate,
    #[serde(rename = "AUDIENCE_SEGMENT_SMALLER_THAN_THRESHOLD")]
    AudienceSegmentSmallerThanThreshold,
    #[serde(rename = "AUDIENCE_TOTAL_SMALLER_THAN_THRESHOLD")]
    AudienceTotalSmallerThanThreshold,
    #[serde(rename = "BEFORE_PRODUCT_GROUP_FILTER_START_DATE")]
    BeforeProductGroupFilterStartDate,

}

impl ToString for DataStatus {
    fn to_string(&self) -> String {
        match self {
            Self::Processing => String::from("PROCESSING"),
            Self::Ready => String::from("READY"),
            Self::Estimate => String::from("ESTIMATE"),
            Self::BeforeBusinessCreated => String::from("BEFORE_BUSINESS_CREATED"),
            Self::BeforeDataRetentionPeriod => String::from("BEFORE_DATA_RETENTION_PERIOD"),
            Self::BeforePinDataRetentionPeriod => String::from("BEFORE_PIN_DATA_RETENTION_PERIOD"),
            Self::BeforeMetricStartDate => String::from("BEFORE_METRIC_START_DATE"),
            Self::BeforeCoreMetricStartDate => String::from("BEFORE_CORE_METRIC_START_DATE"),
            Self::BeforePinFormatMetricStartDate => String::from("BEFORE_PIN_FORMAT_METRIC_START_DATE"),
            Self::BeforeAudienceMetricStartDate => String::from("BEFORE_AUDIENCE_METRIC_START_DATE"),
            Self::BeforeAudienceMonthlyMetricStartDate => String::from("BEFORE_AUDIENCE_MONTHLY_METRIC_START_DATE"),
            Self::BeforeVideoMetricStartDate => String::from("BEFORE_VIDEO_METRIC_START_DATE"),
            Self::BeforeConversionMetricStartDate => String::from("BEFORE_CONVERSION_METRIC_START_DATE"),
            Self::PurchasersMetricSmallerThanThreshold => String::from("PURCHASERS_METRIC_SMALLER_THAN_THRESHOLD"),
            Self::InBadTagDate => String::from("IN_BAD_TAG_DATE"),
            Self::BeforePublishedMetricStartDate => String::from("BEFORE_PUBLISHED_METRIC_START_DATE"),
            Self::BeforeAssistMetricStartDate => String::from("BEFORE_ASSIST_METRIC_START_DATE"),
            Self::BeforePinCreated => String::from("BEFORE_PIN_CREATED"),
            Self::BeforeAccountClaimed => String::from("BEFORE_ACCOUNT_CLAIMED"),
            Self::BeforeDemographicFiltersStartDate => String::from("BEFORE_DEMOGRAPHIC_FILTERS_START_DATE"),
            Self::AudienceSegmentSmallerThanThreshold => String::from("AUDIENCE_SEGMENT_SMALLER_THAN_THRESHOLD"),
            Self::AudienceTotalSmallerThanThreshold => String::from("AUDIENCE_TOTAL_SMALLER_THAN_THRESHOLD"),
            Self::BeforeProductGroupFilterStartDate => String::from("BEFORE_PRODUCT_GROUP_FILTER_START_DATE"),
        }
    }
}

impl Default for DataStatus {
    fn default() -> DataStatus {
        Self::Processing
    }
}

