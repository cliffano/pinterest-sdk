/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: pinterest-api@pinterest.com
 * Generated by: https://openapi-generator.tech
 */

/// MetricsReportingLevel : Level of the reporting request

/// Level of the reporting request
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MetricsReportingLevel {
    #[serde(rename = "ADVERTISER")]
    ADVERTISER,
    #[serde(rename = "ADVERTISER_TARGETING")]
    ADVERTISERTARGETING,
    #[serde(rename = "CAMPAIGN")]
    CAMPAIGN,
    #[serde(rename = "CAMPAIGN_TARGETING")]
    CAMPAIGNTARGETING,
    #[serde(rename = "AD_GROUP")]
    ADGROUP,
    #[serde(rename = "AD_GROUP_TARGETING")]
    ADGROUPTARGETING,
    #[serde(rename = "PIN_PROMOTION")]
    PINPROMOTION,
    #[serde(rename = "PIN_PROMOTION_TARGETING")]
    PINPROMOTIONTARGETING,
    #[serde(rename = "KEYWORD")]
    KEYWORD,
    #[serde(rename = "PRODUCT_GROUP")]
    PRODUCTGROUP,
    #[serde(rename = "PRODUCT_GROUP_TARGETING")]
    PRODUCTGROUPTARGETING,
    #[serde(rename = "PRODUCT_ITEM")]
    PRODUCTITEM,

}

impl ToString for MetricsReportingLevel {
    fn to_string(&self) -> String {
        match self {
            Self::ADVERTISER => String::from("ADVERTISER"),
            Self::ADVERTISERTARGETING => String::from("ADVERTISER_TARGETING"),
            Self::CAMPAIGN => String::from("CAMPAIGN"),
            Self::CAMPAIGNTARGETING => String::from("CAMPAIGN_TARGETING"),
            Self::ADGROUP => String::from("AD_GROUP"),
            Self::ADGROUPTARGETING => String::from("AD_GROUP_TARGETING"),
            Self::PINPROMOTION => String::from("PIN_PROMOTION"),
            Self::PINPROMOTIONTARGETING => String::from("PIN_PROMOTION_TARGETING"),
            Self::KEYWORD => String::from("KEYWORD"),
            Self::PRODUCTGROUP => String::from("PRODUCT_GROUP"),
            Self::PRODUCTGROUPTARGETING => String::from("PRODUCT_GROUP_TARGETING"),
            Self::PRODUCTITEM => String::from("PRODUCT_ITEM"),
        }
    }
}

impl Default for MetricsReportingLevel {
    fn default() -> MetricsReportingLevel {
        Self::ADVERTISER
    }
}




