/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// Language : Language code, which is among the offical ISO 639-1 language list.
/// Language code, which is among the offical ISO 639-1 language list.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Language {
    #[serde(rename = "AM")]
    Am,
    #[serde(rename = "AR")]
    Ar,
    #[serde(rename = "AZ")]
    Az,
    #[serde(rename = "BG")]
    Bg,
    #[serde(rename = "BN")]
    Bn,
    #[serde(rename = "BS")]
    Bs,
    #[serde(rename = "CA")]
    Ca,
    #[serde(rename = "CS")]
    Cs,
    #[serde(rename = "DA")]
    Da,
    #[serde(rename = "DV")]
    Dv,
    #[serde(rename = "DZ")]
    Dz,
    #[serde(rename = "DE")]
    De,
    #[serde(rename = "EL")]
    El,
    #[serde(rename = "EN")]
    En,
    #[serde(rename = "ES")]
    Es,
    #[serde(rename = "ET")]
    Et,
    #[serde(rename = "FA")]
    Fa,
    #[serde(rename = "FI")]
    Fi,
    #[serde(rename = "FR")]
    Fr,
    #[serde(rename = "HE")]
    He,
    #[serde(rename = "HI")]
    Hi,
    #[serde(rename = "HR")]
    Hr,
    #[serde(rename = "HU")]
    Hu,
    #[serde(rename = "HY")]
    Hy,
    #[serde(rename = "ID")]
    Id,
    #[serde(rename = "IN")]
    In,
    #[serde(rename = "IS")]
    Is,
    #[serde(rename = "IT")]
    It,
    #[serde(rename = "IW")]
    Iw,
    #[serde(rename = "JA")]
    Ja,
    #[serde(rename = "KA")]
    Ka,
    #[serde(rename = "KM")]
    Km,
    #[serde(rename = "KO")]
    Ko,
    #[serde(rename = "LO")]
    Lo,
    #[serde(rename = "LT")]
    Lt,
    #[serde(rename = "LV")]
    Lv,
    #[serde(rename = "MK")]
    Mk,
    #[serde(rename = "MN")]
    Mn,
    #[serde(rename = "MS")]
    Ms,
    #[serde(rename = "MY")]
    My,
    #[serde(rename = "NB")]
    Nb,
    #[serde(rename = "NE")]
    Ne,
    #[serde(rename = "NL")]
    Nl,
    #[serde(rename = "NO")]
    No,
    #[serde(rename = "PL")]
    Pl,
    #[serde(rename = "PT")]
    Pt,
    #[serde(rename = "RO")]
    Ro,
    #[serde(rename = "RU")]
    Ru,
    #[serde(rename = "SK")]
    Sk,
    #[serde(rename = "SL")]
    Sl,
    #[serde(rename = "SQ")]
    Sq,
    #[serde(rename = "SR")]
    Sr,
    #[serde(rename = "SV")]
    Sv,
    #[serde(rename = "TL")]
    Tl,
    #[serde(rename = "UK")]
    Uk,
    #[serde(rename = "VI")]
    Vi,
    #[serde(rename = "TE")]
    Te,
    #[serde(rename = "TH")]
    Th,
    #[serde(rename = "TR")]
    Tr,
    #[serde(rename = "XX")]
    Xx,
    #[serde(rename = "ZH")]
    Zh,

}

impl ToString for Language {
    fn to_string(&self) -> String {
        match self {
            Self::Am => String::from("AM"),
            Self::Ar => String::from("AR"),
            Self::Az => String::from("AZ"),
            Self::Bg => String::from("BG"),
            Self::Bn => String::from("BN"),
            Self::Bs => String::from("BS"),
            Self::Ca => String::from("CA"),
            Self::Cs => String::from("CS"),
            Self::Da => String::from("DA"),
            Self::Dv => String::from("DV"),
            Self::Dz => String::from("DZ"),
            Self::De => String::from("DE"),
            Self::El => String::from("EL"),
            Self::En => String::from("EN"),
            Self::Es => String::from("ES"),
            Self::Et => String::from("ET"),
            Self::Fa => String::from("FA"),
            Self::Fi => String::from("FI"),
            Self::Fr => String::from("FR"),
            Self::He => String::from("HE"),
            Self::Hi => String::from("HI"),
            Self::Hr => String::from("HR"),
            Self::Hu => String::from("HU"),
            Self::Hy => String::from("HY"),
            Self::Id => String::from("ID"),
            Self::In => String::from("IN"),
            Self::Is => String::from("IS"),
            Self::It => String::from("IT"),
            Self::Iw => String::from("IW"),
            Self::Ja => String::from("JA"),
            Self::Ka => String::from("KA"),
            Self::Km => String::from("KM"),
            Self::Ko => String::from("KO"),
            Self::Lo => String::from("LO"),
            Self::Lt => String::from("LT"),
            Self::Lv => String::from("LV"),
            Self::Mk => String::from("MK"),
            Self::Mn => String::from("MN"),
            Self::Ms => String::from("MS"),
            Self::My => String::from("MY"),
            Self::Nb => String::from("NB"),
            Self::Ne => String::from("NE"),
            Self::Nl => String::from("NL"),
            Self::No => String::from("NO"),
            Self::Pl => String::from("PL"),
            Self::Pt => String::from("PT"),
            Self::Ro => String::from("RO"),
            Self::Ru => String::from("RU"),
            Self::Sk => String::from("SK"),
            Self::Sl => String::from("SL"),
            Self::Sq => String::from("SQ"),
            Self::Sr => String::from("SR"),
            Self::Sv => String::from("SV"),
            Self::Tl => String::from("TL"),
            Self::Uk => String::from("UK"),
            Self::Vi => String::from("VI"),
            Self::Te => String::from("TE"),
            Self::Th => String::from("TH"),
            Self::Tr => String::from("TR"),
            Self::Xx => String::from("XX"),
            Self::Zh => String::from("ZH"),
        }
    }
}

impl Default for Language {
    fn default() -> Language {
        Self::Am
    }
}

