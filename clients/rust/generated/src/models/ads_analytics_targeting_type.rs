/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: pinterest-api@pinterest.com
 * Generated by: https://openapi-generator.tech
 */

/// AdsAnalyticsTargetingType : Reporting targeting type

/// Reporting targeting type
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AdsAnalyticsTargetingType {
    #[serde(rename = "KEYWORD")]
    KEYWORD,
    #[serde(rename = "APPTYPE")]
    APPTYPE,
    #[serde(rename = "GENDER")]
    GENDER,
    #[serde(rename = "LOCATION")]
    LOCATION,
    #[serde(rename = "PLACEMENT")]
    PLACEMENT,
    #[serde(rename = "COUNTRY")]
    COUNTRY,
    #[serde(rename = "TARGETED_INTEREST")]
    TARGETEDINTEREST,
    #[serde(rename = "PINNER_INTEREST")]
    PINNERINTEREST,
    #[serde(rename = "AUDIENCE_INCLUDE")]
    AUDIENCEINCLUDE,
    #[serde(rename = "AUDIENCE_EXCLUDE")]
    AUDIENCEEXCLUDE,
    #[serde(rename = "GEO")]
    GEO,
    #[serde(rename = "AGE_BUCKET")]
    AGEBUCKET,
    #[serde(rename = "REGION")]
    REGION,

}

impl ToString for AdsAnalyticsTargetingType {
    fn to_string(&self) -> String {
        match self {
            Self::KEYWORD => String::from("KEYWORD"),
            Self::APPTYPE => String::from("APPTYPE"),
            Self::GENDER => String::from("GENDER"),
            Self::LOCATION => String::from("LOCATION"),
            Self::PLACEMENT => String::from("PLACEMENT"),
            Self::COUNTRY => String::from("COUNTRY"),
            Self::TARGETEDINTEREST => String::from("TARGETED_INTEREST"),
            Self::PINNERINTEREST => String::from("PINNER_INTEREST"),
            Self::AUDIENCEINCLUDE => String::from("AUDIENCE_INCLUDE"),
            Self::AUDIENCEEXCLUDE => String::from("AUDIENCE_EXCLUDE"),
            Self::GEO => String::from("GEO"),
            Self::AGEBUCKET => String::from("AGE_BUCKET"),
            Self::REGION => String::from("REGION"),
        }
    }
}

impl Default for AdsAnalyticsTargetingType {
    fn default() -> AdsAnalyticsTargetingType {
        Self::KEYWORD
    }
}




