/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// CatalogProductGroup : non-promoted catalog product group entity
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CatalogProductGroup {
    /// ID of the catalog product group.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Merchant ID pertaining to the owner of the catalog product group.
    #[serde(rename = "merchant_id", skip_serializing_if = "Option::is_none")]
    pub merchant_id: Option<String>,
    /// Name of catalog product group
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Object holding a list of filters
    #[serde(rename = "filters", skip_serializing_if = "Option::is_none")]
    pub filters: Option<serde_json::Value>,
    /// Object holding a list of filters
    #[serde(rename = "filter_v2", skip_serializing_if = "Option::is_none")]
    pub filter_v2: Option<serde_json::Value>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<Box<models::Board>>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<models::EntityStatus>,
    /// id of the feed profile belonging to this catalog product group
    #[serde(rename = "feed_profile_id", skip_serializing_if = "Option::is_none")]
    pub feed_profile_id: Option<String>,
    /// Unix timestamp in seconds of when catalog product group was created.
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<i32>,
    /// Unix timestamp in seconds of last time catalog product group was updated.
    #[serde(rename = "last_update", skip_serializing_if = "Option::is_none")]
    pub last_update: Option<i32>,
    /// Amount of products in the catalog product group
    #[serde(rename = "product_count", skip_serializing_if = "Option::is_none")]
    pub product_count: Option<i32>,
    /// index of the featured position of the catalog product group
    #[serde(rename = "featured_position", skip_serializing_if = "Option::is_none")]
    pub featured_position: Option<i32>,
}

impl CatalogProductGroup {
    /// non-promoted catalog product group entity
    pub fn new() -> CatalogProductGroup {
        CatalogProductGroup {
            id: None,
            merchant_id: None,
            name: None,
            filters: None,
            filter_v2: None,
            r#type: None,
            status: None,
            feed_profile_id: None,
            created_at: None,
            last_update: None,
            product_count: None,
            featured_position: None,
        }
    }
}

