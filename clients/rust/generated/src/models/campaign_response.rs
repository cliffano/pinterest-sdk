/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: pinterest-api@pinterest.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CampaignResponse {
    /// Campaign ID.
    #[serde(rename = "id")]
    pub id: String,
    /// Campaign's Advertiser ID.
    #[serde(rename = "ad_account_id")]
    pub ad_account_id: String,
    /// Campaign name.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Box<crate::models::EntityStatus>>,
    /// Campaign total spending cap.
    #[serde(rename = "lifetime_spend_cap", skip_serializing_if = "Option::is_none")]
    pub lifetime_spend_cap: Option<i32>,
    /// Campaign daily spending cap.
    #[serde(rename = "daily_spend_cap", skip_serializing_if = "Option::is_none")]
    pub daily_spend_cap: Option<i32>,
    /// Order line ID that appears on the invoice.
    #[serde(rename = "order_line_id", skip_serializing_if = "Option::is_none")]
    pub order_line_id: Option<String>,
    #[serde(rename = "tracking_urls", skip_serializing_if = "Option::is_none")]
    pub tracking_urls: Option<Box<crate::models::TrackingUrls>>,
    /// Campaign start time. Unix timestamp in seconds. Only used for Campaign Budget Optimization (CBO) campaigns.
    #[serde(rename = "start_time", skip_serializing_if = "Option::is_none")]
    pub start_time: Option<i32>,
    /// Campaign end time. Unix timestamp in seconds. Only used for Campaign Budget Optimization (CBO) campaigns.
    #[serde(rename = "end_time", skip_serializing_if = "Option::is_none")]
    pub end_time: Option<i32>,
    #[serde(rename = "objective_type", skip_serializing_if = "Option::is_none")]
    pub objective_type: Option<crate::models::ObjectiveType>,
    /// Campaign creation time. Unix timestamp in seconds.
    #[serde(rename = "created_time", skip_serializing_if = "Option::is_none")]
    pub created_time: Option<i32>,
    /// UTC timestamp. Last update time.
    #[serde(rename = "updated_time", skip_serializing_if = "Option::is_none")]
    pub updated_time: Option<i32>,
    /// Always \"campaign\".
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<String>,
}

impl CampaignResponse {
    pub fn new(id: String, ad_account_id: String) -> CampaignResponse {
        CampaignResponse {
            id,
            ad_account_id,
            name: None,
            status: None,
            lifetime_spend_cap: None,
            daily_spend_cap: None,
            order_line_id: None,
            tracking_urls: None: None,
            start_time: None,
            end_time: None,
            objective_type: None,
            created_time: None,
            updated_time: None,
            _type: None,
        }
    }
}


