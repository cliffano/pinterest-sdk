/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: pinterest-api@pinterest.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AdGroupResponseAllOf1 {
    /// Campaign ID of the ad group.
    #[serde(rename = "campaign_id", skip_serializing_if = "Option::is_none")]
    pub campaign_id: Option<String>,
    #[serde(rename = "billable_event", skip_serializing_if = "Option::is_none")]
    pub billable_event: Option<crate::models::ActionType>,
    /// Ad group ID.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Always \"adgroup\".
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<String>,
    /// Advertiser ID.
    #[serde(rename = "ad_account_id", skip_serializing_if = "Option::is_none")]
    pub ad_account_id: Option<String>,
    /// Ad group creation time. Unix timestamp in seconds.
    #[serde(rename = "created_time", skip_serializing_if = "Option::is_none")]
    pub created_time: Option<i32>,
    /// Ad group last update time. Unix timestamp in seconds.
    #[serde(rename = "updated_time", skip_serializing_if = "Option::is_none")]
    pub updated_time: Option<i32>,
}

impl AdGroupResponseAllOf1 {
    pub fn new() -> AdGroupResponseAllOf1 {
        AdGroupResponseAllOf1 {
            campaign_id: None,
            billable_event: None,
            id: None,
            _type: None,
            ad_account_id: None,
            created_time: None,
            updated_time: None,
        }
    }
}


