/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: blah@cliffano.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CatalogsFeedValidationErrors {
    #[serde(rename = "fetch_error", skip_serializing_if = "Option::is_none")]
    pub fetch_error: Option<i32>,
    #[serde(rename = "fetch_inactive_feed_error", skip_serializing_if = "Option::is_none")]
    pub fetch_inactive_feed_error: Option<i32>,
    #[serde(rename = "encoding_error", skip_serializing_if = "Option::is_none")]
    pub encoding_error: Option<i32>,
    #[serde(rename = "delimiter_error", skip_serializing_if = "Option::is_none")]
    pub delimiter_error: Option<i32>,
    #[serde(rename = "required_columns_missing", skip_serializing_if = "Option::is_none")]
    pub required_columns_missing: Option<i32>,
    #[serde(rename = "image_link_invalid", skip_serializing_if = "Option::is_none")]
    pub image_link_invalid: Option<i32>,
    #[serde(rename = "itemid_missing", skip_serializing_if = "Option::is_none")]
    pub itemid_missing: Option<i32>,
    #[serde(rename = "title_missing", skip_serializing_if = "Option::is_none")]
    pub title_missing: Option<i32>,
    #[serde(rename = "description_missing", skip_serializing_if = "Option::is_none")]
    pub description_missing: Option<i32>,
    #[serde(rename = "product_category_invalid", skip_serializing_if = "Option::is_none")]
    pub product_category_invalid: Option<i32>,
    #[serde(rename = "product_link_missing", skip_serializing_if = "Option::is_none")]
    pub product_link_missing: Option<i32>,
    #[serde(rename = "image_link_missing", skip_serializing_if = "Option::is_none")]
    pub image_link_missing: Option<i32>,
    #[serde(rename = "availability_invalid", skip_serializing_if = "Option::is_none")]
    pub availability_invalid: Option<i32>,
    #[serde(rename = "product_price_invalid", skip_serializing_if = "Option::is_none")]
    pub product_price_invalid: Option<i32>,
    #[serde(rename = "link_format_invalid", skip_serializing_if = "Option::is_none")]
    pub link_format_invalid: Option<i32>,
    #[serde(rename = "parse_line_error", skip_serializing_if = "Option::is_none")]
    pub parse_line_error: Option<i32>,
    #[serde(rename = "adwords_format_invalid", skip_serializing_if = "Option::is_none")]
    pub adwords_format_invalid: Option<i32>,
    #[serde(rename = "product_category_missing", skip_serializing_if = "Option::is_none")]
    pub product_category_missing: Option<i32>,
    #[serde(rename = "internal_service_error", skip_serializing_if = "Option::is_none")]
    pub internal_service_error: Option<i32>,
    #[serde(rename = "no_verified_domain", skip_serializing_if = "Option::is_none")]
    pub no_verified_domain: Option<i32>,
    #[serde(rename = "adult_invalid", skip_serializing_if = "Option::is_none")]
    pub adult_invalid: Option<i32>,
    #[serde(rename = "invalid_domain", skip_serializing_if = "Option::is_none")]
    pub invalid_domain: Option<i32>,
    #[serde(rename = "feed_length_too_long", skip_serializing_if = "Option::is_none")]
    pub feed_length_too_long: Option<i32>,
    #[serde(rename = "link_length_too_long", skip_serializing_if = "Option::is_none")]
    pub link_length_too_long: Option<i32>,
    #[serde(rename = "malformed_xml", skip_serializing_if = "Option::is_none")]
    pub malformed_xml: Option<i32>,
    #[serde(rename = "redirect_invalid", skip_serializing_if = "Option::is_none")]
    pub redirect_invalid: Option<i32>,
    #[serde(rename = "price_missing", skip_serializing_if = "Option::is_none")]
    pub price_missing: Option<i32>,
    #[serde(rename = "feed_too_small", skip_serializing_if = "Option::is_none")]
    pub feed_too_small: Option<i32>,
    #[serde(rename = "condition_invalid", skip_serializing_if = "Option::is_none")]
    pub condition_invalid: Option<i32>,
    #[serde(rename = "shopify_no_products", skip_serializing_if = "Option::is_none")]
    pub shopify_no_products: Option<i32>,
    #[serde(rename = "max_items_per_item_group_exceeded", skip_serializing_if = "Option::is_none")]
    pub max_items_per_item_group_exceeded: Option<i32>,
    #[serde(rename = "item_main_image_download_failure", skip_serializing_if = "Option::is_none")]
    pub item_main_image_download_failure: Option<i32>,
    #[serde(rename = "pinjoin_content_unsafe", skip_serializing_if = "Option::is_none")]
    pub pinjoin_content_unsafe: Option<i32>,
    #[serde(rename = "blocklisted_image_signature", skip_serializing_if = "Option::is_none")]
    pub blocklisted_image_signature: Option<i32>,
}

impl CatalogsFeedValidationErrors {
    pub fn new() -> CatalogsFeedValidationErrors {
        CatalogsFeedValidationErrors {
            fetch_error: None,
            fetch_inactive_feed_error: None,
            encoding_error: None,
            delimiter_error: None,
            required_columns_missing: None,
            image_link_invalid: None,
            itemid_missing: None,
            title_missing: None,
            description_missing: None,
            product_category_invalid: None,
            product_link_missing: None,
            image_link_missing: None,
            availability_invalid: None,
            product_price_invalid: None,
            link_format_invalid: None,
            parse_line_error: None,
            adwords_format_invalid: None,
            product_category_missing: None,
            internal_service_error: None,
            no_verified_domain: None,
            adult_invalid: None,
            invalid_domain: None,
            feed_length_too_long: None,
            link_length_too_long: None,
            malformed_xml: None,
            redirect_invalid: None,
            price_missing: None,
            feed_too_small: None,
            condition_invalid: None,
            shopify_no_products: None,
            max_items_per_item_group_exceeded: None,
            item_main_image_download_failure: None,
            pinjoin_content_unsafe: None,
            blocklisted_image_signature: None,
        }
    }
}


