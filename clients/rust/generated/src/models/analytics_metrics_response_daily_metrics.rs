/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: pinterest-api@pinterest.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AnalyticsMetricsResponseDailyMetrics {
    /// Metrics availablity, e.g., \"READY\".
    #[serde(rename = "data_status", skip_serializing_if = "Option::is_none")]
    pub data_status: Option<DataStatus>,
    /// Metrics date (UTC): YYYY-MM-DD.
    #[serde(rename = "date", skip_serializing_if = "Option::is_none")]
    pub date: Option<String>,
    /// The metric name and daily value for each requested metric
    #[serde(rename = "metrics", skip_serializing_if = "Option::is_none")]
    pub metrics: Option<::std::collections::HashMap<String, f32>>,
}

impl AnalyticsMetricsResponseDailyMetrics {
    pub fn new() -> AnalyticsMetricsResponseDailyMetrics {
        AnalyticsMetricsResponseDailyMetrics {
            data_status: None,
            date: None,
            metrics: None,
        }
    }
}

/// Metrics availablity, e.g., \"READY\".
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum DataStatus {
    #[serde(rename = "PROCESSING")]
    PROCESSING,
    #[serde(rename = "READY")]
    READY,
    #[serde(rename = "ESTIMATE")]
    ESTIMATE,
    #[serde(rename = "BEFORE_BUSINESS_CREATED")]
    BEFOREBUSINESSCREATED,
    #[serde(rename = "BEFORE_DATA_RETENTION_PERIOD")]
    BEFOREDATARETENTIONPERIOD,
    #[serde(rename = "BEFORE_PIN_DATA_RETENTION_PERIOD")]
    BEFOREPINDATARETENTIONPERIOD,
    #[serde(rename = "BEFORE_METRIC_START_DATE")]
    BEFOREMETRICSTARTDATE,
    #[serde(rename = "BEFORE_CORE_METRIC_START_DATE")]
    BEFORECOREMETRICSTARTDATE,
    #[serde(rename = "BEFORE_PIN_FORMAT_METRIC_START_DATE")]
    BEFOREPINFORMATMETRICSTARTDATE,
    #[serde(rename = "BEFORE_AUDIENCE_METRIC_START_DATE")]
    BEFOREAUDIENCEMETRICSTARTDATE,
    #[serde(rename = "BEFORE_AUDIENCE_MONTHLY_METRIC_START_DATE")]
    BEFOREAUDIENCEMONTHLYMETRICSTARTDATE,
    #[serde(rename = "BEFORE_VIDEO_METRIC_START_DATE")]
    BEFOREVIDEOMETRICSTARTDATE,
    #[serde(rename = "BEFORE_CONVERSION_METRIC_START_DATE")]
    BEFORECONVERSIONMETRICSTARTDATE,
    #[serde(rename = "PURCHASERS_METRIC_SMALLER_THAN_THRESHOLD")]
    PURCHASERSMETRICSMALLERTHANTHRESHOLD,
    #[serde(rename = "IN_BAD_TAG_DATE")]
    INBADTAGDATE,
    #[serde(rename = "BEFORE_PUBLISHED_METRIC_START_DATE")]
    BEFOREPUBLISHEDMETRICSTARTDATE,
    #[serde(rename = "BEFORE_ASSIST_METRIC_START_DATE")]
    BEFOREASSISTMETRICSTARTDATE,
    #[serde(rename = "BEFORE_PIN_CREATED")]
    BEFOREPINCREATED,
    #[serde(rename = "BEFORE_ACCOUNT_CLAIMED")]
    BEFOREACCOUNTCLAIMED,
    #[serde(rename = "BEFORE_DEMOGRAPHIC_FILTERS_START_DATE")]
    BEFOREDEMOGRAPHICFILTERSSTARTDATE,
    #[serde(rename = "AUDIENCE_SEGMENT_SMALLER_THAN_THRESHOLD")]
    AUDIENCESEGMENTSMALLERTHANTHRESHOLD,
    #[serde(rename = "AUDIENCE_TOTAL_SMALLER_THAN_THRESHOLD")]
    AUDIENCETOTALSMALLERTHANTHRESHOLD,
    #[serde(rename = "BEFORE_PRODUCT_GROUP_FILTER_START_DATE")]
    BEFOREPRODUCTGROUPFILTERSTARTDATE,
}

impl Default for DataStatus {
    fn default() -> DataStatus {
        Self::PROCESSING
    }
}

