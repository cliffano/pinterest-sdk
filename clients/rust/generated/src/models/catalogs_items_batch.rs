/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: pinterest-api@pinterest.com
 * Generated by: https://openapi-generator.tech
 */

/// CatalogsItemsBatch : Object describing the catalogs items batch



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CatalogsItemsBatch {
    /// Array with the catalogs items processing records part of the catalogs items batch
    #[serde(rename = "items", skip_serializing_if = "Option::is_none")]
    pub items: Option<Vec<crate::models::ItemProcessingRecord>>,
    /// Id of the catalogs items batch
    #[serde(rename = "batch_id", skip_serializing_if = "Option::is_none")]
    pub batch_id: Option<String>,
    /// Time of the batch creation: YYYY-MM-DD'T'hh:mm:ssTZD
    #[serde(rename = "created_time", skip_serializing_if = "Option::is_none")]
    pub created_time: Option<String>,
    /// Time of the batch completion: YYYY-MM-DD'T'hh:mm:ssTZD
    #[serde(rename = "completed_time", skip_serializing_if = "Option::is_none")]
    pub completed_time: Option<String>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<crate::models::BatchOperationStatus>,
}

impl CatalogsItemsBatch {
    /// Object describing the catalogs items batch
    pub fn new() -> CatalogsItemsBatch {
        CatalogsItemsBatch {
            items: None,
            batch_id: None,
            created_time: None,
            completed_time: None,
            status: None,
        }
    }
}


