/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// ConversionTagType : conversion tag type
/// conversion tag type
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ConversionTagType {
    #[serde(rename = "PAGE_LOAD")]
    PageLoad,
    #[serde(rename = "UNKNOWN")]
    Unknown,
    #[serde(rename = "INITIALIZED")]
    Initialized,
    #[serde(rename = "PAGE_VISIT")]
    PageVisit,
    #[serde(rename = "SIGNUP")]
    Signup,
    #[serde(rename = "CHECKOUT")]
    Checkout,
    #[serde(rename = "CUSTOM")]
    Custom,
    #[serde(rename = "VIEW_CATEGORY")]
    ViewCategory,
    #[serde(rename = "SEARCH")]
    Search,
    #[serde(rename = "ADD_TO_CART")]
    AddToCart,
    #[serde(rename = "WATCH_VIDEO")]
    WatchVideo,
    #[serde(rename = "LEAD")]
    Lead,
    #[serde(rename = "APP_INSTALL")]
    AppInstall,
    #[serde(rename = "WEB_SESSION")]
    WebSession,
    #[serde(rename = "EXTERNAL_MEASUREMENT")]
    ExternalMeasurement,

}

impl ToString for ConversionTagType {
    fn to_string(&self) -> String {
        match self {
            Self::PageLoad => String::from("PAGE_LOAD"),
            Self::Unknown => String::from("UNKNOWN"),
            Self::Initialized => String::from("INITIALIZED"),
            Self::PageVisit => String::from("PAGE_VISIT"),
            Self::Signup => String::from("SIGNUP"),
            Self::Checkout => String::from("CHECKOUT"),
            Self::Custom => String::from("CUSTOM"),
            Self::ViewCategory => String::from("VIEW_CATEGORY"),
            Self::Search => String::from("SEARCH"),
            Self::AddToCart => String::from("ADD_TO_CART"),
            Self::WatchVideo => String::from("WATCH_VIDEO"),
            Self::Lead => String::from("LEAD"),
            Self::AppInstall => String::from("APP_INSTALL"),
            Self::WebSession => String::from("WEB_SESSION"),
            Self::ExternalMeasurement => String::from("EXTERNAL_MEASUREMENT"),
        }
    }
}

impl Default for ConversionTagType {
    fn default() -> ConversionTagType {
        Self::PageLoad
    }
}

