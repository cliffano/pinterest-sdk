/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CatalogsLocale {
    #[serde(rename = "af-ZA")]
    AfZa,
    #[serde(rename = "ar-SA")]
    ArSa,
    #[serde(rename = "bg-BG")]
    BgBg,
    #[serde(rename = "bn-IN")]
    BnIn,
    #[serde(rename = "cs-CZ")]
    CsCz,
    #[serde(rename = "da-DK")]
    DaDk,
    #[serde(rename = "de")]
    De,
    #[serde(rename = "el-GR")]
    ElGr,
    #[serde(rename = "en-AU")]
    EnAu,
    #[serde(rename = "en-CA")]
    EnCa,
    #[serde(rename = "en-GB")]
    EnGb,
    #[serde(rename = "en-IN")]
    EnIn,
    #[serde(rename = "en-US")]
    EnUs,
    #[serde(rename = "es-419")]
    Es419,
    #[serde(rename = "es-AR")]
    EsAr,
    #[serde(rename = "es-ES")]
    EsEs,
    #[serde(rename = "es-MX")]
    EsMx,
    #[serde(rename = "fi-FI")]
    FiFi,
    #[serde(rename = "fr")]
    Fr,
    #[serde(rename = "fr-CA")]
    FrCa,
    #[serde(rename = "he-IL")]
    HeIl,
    #[serde(rename = "hi-IN")]
    HiIn,
    #[serde(rename = "hr-HR")]
    HrHr,
    #[serde(rename = "hu-HU")]
    HuHu,
    #[serde(rename = "id-ID")]
    IdId,
    #[serde(rename = "it")]
    It,
    #[serde(rename = "ja")]
    Ja,
    #[serde(rename = "ko-KR")]
    KoKr,
    #[serde(rename = "ms-MY")]
    MsMy,
    #[serde(rename = "nb-NO")]
    NbNo,
    #[serde(rename = "nl")]
    Nl,
    #[serde(rename = "pl-PL")]
    PlPl,
    #[serde(rename = "pt-BR")]
    PtBr,
    #[serde(rename = "pt-PT")]
    PtPt,
    #[serde(rename = "ro-RO")]
    RoRo,
    #[serde(rename = "ru-RU")]
    RuRu,
    #[serde(rename = "sk-SK")]
    SkSk,
    #[serde(rename = "sv-SE")]
    SvSe,
    #[serde(rename = "te-IN")]
    TeIn,
    #[serde(rename = "th-TH")]
    ThTh,
    #[serde(rename = "tl-PH")]
    TlPh,
    #[serde(rename = "tr")]
    Tr,
    #[serde(rename = "uk-UA")]
    UkUa,
    #[serde(rename = "vi-VN")]
    ViVn,
    #[serde(rename = "zh-CN")]
    ZhCn,
    #[serde(rename = "zh-TW")]
    ZhTw,

}

impl ToString for CatalogsLocale {
    fn to_string(&self) -> String {
        match self {
            Self::AfZa => String::from("af-ZA"),
            Self::ArSa => String::from("ar-SA"),
            Self::BgBg => String::from("bg-BG"),
            Self::BnIn => String::from("bn-IN"),
            Self::CsCz => String::from("cs-CZ"),
            Self::DaDk => String::from("da-DK"),
            Self::De => String::from("de"),
            Self::ElGr => String::from("el-GR"),
            Self::EnAu => String::from("en-AU"),
            Self::EnCa => String::from("en-CA"),
            Self::EnGb => String::from("en-GB"),
            Self::EnIn => String::from("en-IN"),
            Self::EnUs => String::from("en-US"),
            Self::Es419 => String::from("es-419"),
            Self::EsAr => String::from("es-AR"),
            Self::EsEs => String::from("es-ES"),
            Self::EsMx => String::from("es-MX"),
            Self::FiFi => String::from("fi-FI"),
            Self::Fr => String::from("fr"),
            Self::FrCa => String::from("fr-CA"),
            Self::HeIl => String::from("he-IL"),
            Self::HiIn => String::from("hi-IN"),
            Self::HrHr => String::from("hr-HR"),
            Self::HuHu => String::from("hu-HU"),
            Self::IdId => String::from("id-ID"),
            Self::It => String::from("it"),
            Self::Ja => String::from("ja"),
            Self::KoKr => String::from("ko-KR"),
            Self::MsMy => String::from("ms-MY"),
            Self::NbNo => String::from("nb-NO"),
            Self::Nl => String::from("nl"),
            Self::PlPl => String::from("pl-PL"),
            Self::PtBr => String::from("pt-BR"),
            Self::PtPt => String::from("pt-PT"),
            Self::RoRo => String::from("ro-RO"),
            Self::RuRu => String::from("ru-RU"),
            Self::SkSk => String::from("sk-SK"),
            Self::SvSe => String::from("sv-SE"),
            Self::TeIn => String::from("te-IN"),
            Self::ThTh => String::from("th-TH"),
            Self::TlPh => String::from("tl-PH"),
            Self::Tr => String::from("tr"),
            Self::UkUa => String::from("uk-UA"),
            Self::ViVn => String::from("vi-VN"),
            Self::ZhCn => String::from("zh-CN"),
            Self::ZhTw => String::from("zh-TW"),
        }
    }
}

impl Default for CatalogsLocale {
    fn default() -> CatalogsLocale {
        Self::AfZa
    }
}

