/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// Catalog : Catalog entity
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Catalog {
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    /// ID of the catalog entity.
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "updated_at", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<String>,
    /// A human-friendly name associated to a catalog entity.
    #[serde(rename = "name", deserialize_with = "Option::deserialize")]
    pub name: Option<String>,
    #[serde(rename = "catalog_type")]
    pub catalog_type: models::CatalogsType,
}

impl Catalog {
    /// Catalog entity
    pub fn new(id: String, name: Option<String>, catalog_type: models::CatalogsType) -> Catalog {
        Catalog {
            created_at: None,
            id,
            updated_at: None,
            name,
            catalog_type,
        }
    }
}

