/*
Pinterest REST API

Testing CampaignsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/oapicf/pinterest-sdk"
)

func Test_openapi_CampaignsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test CampaignsAPIService CampaignTargetingAnalyticsGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var adAccountId string

		resp, httpRes, err := apiClient.CampaignsAPI.CampaignTargetingAnalyticsGet(context.Background(), adAccountId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CampaignsAPIService CampaignsAnalytics", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var adAccountId string

		resp, httpRes, err := apiClient.CampaignsAPI.CampaignsAnalytics(context.Background(), adAccountId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CampaignsAPIService CampaignsCreate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var adAccountId string

		resp, httpRes, err := apiClient.CampaignsAPI.CampaignsCreate(context.Background(), adAccountId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CampaignsAPIService CampaignsGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var adAccountId string
		var campaignId string

		resp, httpRes, err := apiClient.CampaignsAPI.CampaignsGet(context.Background(), adAccountId, campaignId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CampaignsAPIService CampaignsList", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var adAccountId string

		resp, httpRes, err := apiClient.CampaignsAPI.CampaignsList(context.Background(), adAccountId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CampaignsAPIService CampaignsUpdate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var adAccountId string

		resp, httpRes, err := apiClient.CampaignsAPI.CampaignsUpdate(context.Background(), adAccountId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
