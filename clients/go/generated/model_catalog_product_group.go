/*
Pinterest REST API

Pinterest's REST API

API version: 5.12.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CatalogProductGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogProductGroup{}

// CatalogProductGroup non-promoted catalog product group entity
type CatalogProductGroup struct {
	// ID of the catalog product group.
	Id *string `json:"id,omitempty"`
	// Merchant ID pertaining to the owner of the catalog product group.
	MerchantId *string `json:"merchant_id,omitempty"`
	// Name of catalog product group
	Name *string `json:"name,omitempty"`
	// Object holding a list of filters
	Filters map[string]interface{} `json:"filters,omitempty"`
	// Object holding a list of filters
	FilterV2 map[string]interface{} `json:"filter_v2,omitempty"`
	Type *Board `json:"type,omitempty"`
	Status *EntityStatus `json:"status,omitempty"`
	// id of the feed profile belonging to this catalog product group
	FeedProfileId *string `json:"feed_profile_id,omitempty"`
	// Unix timestamp in seconds of when catalog product group was created.
	CreatedAt *int32 `json:"created_at,omitempty"`
	// Unix timestamp in seconds of last time catalog product group was updated.
	LastUpdate *int32 `json:"last_update,omitempty"`
	// Amount of products in the catalog product group
	ProductCount *int32 `json:"product_count,omitempty"`
	// index of the featured position of the catalog product group
	FeaturedPosition *int32 `json:"featured_position,omitempty"`
}

// NewCatalogProductGroup instantiates a new CatalogProductGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogProductGroup() *CatalogProductGroup {
	this := CatalogProductGroup{}
	return &this
}

// NewCatalogProductGroupWithDefaults instantiates a new CatalogProductGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogProductGroupWithDefaults() *CatalogProductGroup {
	this := CatalogProductGroup{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CatalogProductGroup) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogProductGroup) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CatalogProductGroup) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CatalogProductGroup) SetId(v string) {
	o.Id = &v
}

// GetMerchantId returns the MerchantId field value if set, zero value otherwise.
func (o *CatalogProductGroup) GetMerchantId() string {
	if o == nil || IsNil(o.MerchantId) {
		var ret string
		return ret
	}
	return *o.MerchantId
}

// GetMerchantIdOk returns a tuple with the MerchantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogProductGroup) GetMerchantIdOk() (*string, bool) {
	if o == nil || IsNil(o.MerchantId) {
		return nil, false
	}
	return o.MerchantId, true
}

// HasMerchantId returns a boolean if a field has been set.
func (o *CatalogProductGroup) HasMerchantId() bool {
	if o != nil && !IsNil(o.MerchantId) {
		return true
	}

	return false
}

// SetMerchantId gets a reference to the given string and assigns it to the MerchantId field.
func (o *CatalogProductGroup) SetMerchantId(v string) {
	o.MerchantId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CatalogProductGroup) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogProductGroup) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CatalogProductGroup) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CatalogProductGroup) SetName(v string) {
	o.Name = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *CatalogProductGroup) GetFilters() map[string]interface{} {
	if o == nil || IsNil(o.Filters) {
		var ret map[string]interface{}
		return ret
	}
	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogProductGroup) GetFiltersOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Filters) {
		return map[string]interface{}{}, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *CatalogProductGroup) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given map[string]interface{} and assigns it to the Filters field.
func (o *CatalogProductGroup) SetFilters(v map[string]interface{}) {
	o.Filters = v
}

// GetFilterV2 returns the FilterV2 field value if set, zero value otherwise.
func (o *CatalogProductGroup) GetFilterV2() map[string]interface{} {
	if o == nil || IsNil(o.FilterV2) {
		var ret map[string]interface{}
		return ret
	}
	return o.FilterV2
}

// GetFilterV2Ok returns a tuple with the FilterV2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogProductGroup) GetFilterV2Ok() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.FilterV2) {
		return map[string]interface{}{}, false
	}
	return o.FilterV2, true
}

// HasFilterV2 returns a boolean if a field has been set.
func (o *CatalogProductGroup) HasFilterV2() bool {
	if o != nil && !IsNil(o.FilterV2) {
		return true
	}

	return false
}

// SetFilterV2 gets a reference to the given map[string]interface{} and assigns it to the FilterV2 field.
func (o *CatalogProductGroup) SetFilterV2(v map[string]interface{}) {
	o.FilterV2 = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CatalogProductGroup) GetType() Board {
	if o == nil || IsNil(o.Type) {
		var ret Board
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogProductGroup) GetTypeOk() (*Board, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CatalogProductGroup) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given Board and assigns it to the Type field.
func (o *CatalogProductGroup) SetType(v Board) {
	o.Type = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CatalogProductGroup) GetStatus() EntityStatus {
	if o == nil || IsNil(o.Status) {
		var ret EntityStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogProductGroup) GetStatusOk() (*EntityStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CatalogProductGroup) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given EntityStatus and assigns it to the Status field.
func (o *CatalogProductGroup) SetStatus(v EntityStatus) {
	o.Status = &v
}

// GetFeedProfileId returns the FeedProfileId field value if set, zero value otherwise.
func (o *CatalogProductGroup) GetFeedProfileId() string {
	if o == nil || IsNil(o.FeedProfileId) {
		var ret string
		return ret
	}
	return *o.FeedProfileId
}

// GetFeedProfileIdOk returns a tuple with the FeedProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogProductGroup) GetFeedProfileIdOk() (*string, bool) {
	if o == nil || IsNil(o.FeedProfileId) {
		return nil, false
	}
	return o.FeedProfileId, true
}

// HasFeedProfileId returns a boolean if a field has been set.
func (o *CatalogProductGroup) HasFeedProfileId() bool {
	if o != nil && !IsNil(o.FeedProfileId) {
		return true
	}

	return false
}

// SetFeedProfileId gets a reference to the given string and assigns it to the FeedProfileId field.
func (o *CatalogProductGroup) SetFeedProfileId(v string) {
	o.FeedProfileId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CatalogProductGroup) GetCreatedAt() int32 {
	if o == nil || IsNil(o.CreatedAt) {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogProductGroup) GetCreatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CatalogProductGroup) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *CatalogProductGroup) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetLastUpdate returns the LastUpdate field value if set, zero value otherwise.
func (o *CatalogProductGroup) GetLastUpdate() int32 {
	if o == nil || IsNil(o.LastUpdate) {
		var ret int32
		return ret
	}
	return *o.LastUpdate
}

// GetLastUpdateOk returns a tuple with the LastUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogProductGroup) GetLastUpdateOk() (*int32, bool) {
	if o == nil || IsNil(o.LastUpdate) {
		return nil, false
	}
	return o.LastUpdate, true
}

// HasLastUpdate returns a boolean if a field has been set.
func (o *CatalogProductGroup) HasLastUpdate() bool {
	if o != nil && !IsNil(o.LastUpdate) {
		return true
	}

	return false
}

// SetLastUpdate gets a reference to the given int32 and assigns it to the LastUpdate field.
func (o *CatalogProductGroup) SetLastUpdate(v int32) {
	o.LastUpdate = &v
}

// GetProductCount returns the ProductCount field value if set, zero value otherwise.
func (o *CatalogProductGroup) GetProductCount() int32 {
	if o == nil || IsNil(o.ProductCount) {
		var ret int32
		return ret
	}
	return *o.ProductCount
}

// GetProductCountOk returns a tuple with the ProductCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogProductGroup) GetProductCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ProductCount) {
		return nil, false
	}
	return o.ProductCount, true
}

// HasProductCount returns a boolean if a field has been set.
func (o *CatalogProductGroup) HasProductCount() bool {
	if o != nil && !IsNil(o.ProductCount) {
		return true
	}

	return false
}

// SetProductCount gets a reference to the given int32 and assigns it to the ProductCount field.
func (o *CatalogProductGroup) SetProductCount(v int32) {
	o.ProductCount = &v
}

// GetFeaturedPosition returns the FeaturedPosition field value if set, zero value otherwise.
func (o *CatalogProductGroup) GetFeaturedPosition() int32 {
	if o == nil || IsNil(o.FeaturedPosition) {
		var ret int32
		return ret
	}
	return *o.FeaturedPosition
}

// GetFeaturedPositionOk returns a tuple with the FeaturedPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogProductGroup) GetFeaturedPositionOk() (*int32, bool) {
	if o == nil || IsNil(o.FeaturedPosition) {
		return nil, false
	}
	return o.FeaturedPosition, true
}

// HasFeaturedPosition returns a boolean if a field has been set.
func (o *CatalogProductGroup) HasFeaturedPosition() bool {
	if o != nil && !IsNil(o.FeaturedPosition) {
		return true
	}

	return false
}

// SetFeaturedPosition gets a reference to the given int32 and assigns it to the FeaturedPosition field.
func (o *CatalogProductGroup) SetFeaturedPosition(v int32) {
	o.FeaturedPosition = &v
}

func (o CatalogProductGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogProductGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.MerchantId) {
		toSerialize["merchant_id"] = o.MerchantId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	if !IsNil(o.FilterV2) {
		toSerialize["filter_v2"] = o.FilterV2
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.FeedProfileId) {
		toSerialize["feed_profile_id"] = o.FeedProfileId
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.LastUpdate) {
		toSerialize["last_update"] = o.LastUpdate
	}
	if !IsNil(o.ProductCount) {
		toSerialize["product_count"] = o.ProductCount
	}
	if !IsNil(o.FeaturedPosition) {
		toSerialize["featured_position"] = o.FeaturedPosition
	}
	return toSerialize, nil
}

type NullableCatalogProductGroup struct {
	value *CatalogProductGroup
	isSet bool
}

func (v NullableCatalogProductGroup) Get() *CatalogProductGroup {
	return v.value
}

func (v *NullableCatalogProductGroup) Set(val *CatalogProductGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogProductGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogProductGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogProductGroup(val *CatalogProductGroup) *NullableCatalogProductGroup {
	return &NullableCatalogProductGroup{value: val, isSet: true}
}

func (v NullableCatalogProductGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogProductGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


