/*
Pinterest REST API

Pinterest's REST API

API version: 5.3.0
Contact: blah@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ItemBatchRecord Object describing an item batch record
type ItemBatchRecord struct {
	// The catalog item id in the merchant namespace
	ItemId *string `json:"item_id,omitempty"`
	Attributes *ItemAttributes `json:"attributes,omitempty"`
}

// NewItemBatchRecord instantiates a new ItemBatchRecord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewItemBatchRecord() *ItemBatchRecord {
	this := ItemBatchRecord{}
	return &this
}

// NewItemBatchRecordWithDefaults instantiates a new ItemBatchRecord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewItemBatchRecordWithDefaults() *ItemBatchRecord {
	this := ItemBatchRecord{}
	return &this
}

// GetItemId returns the ItemId field value if set, zero value otherwise.
func (o *ItemBatchRecord) GetItemId() string {
	if o == nil || o.ItemId == nil {
		var ret string
		return ret
	}
	return *o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemBatchRecord) GetItemIdOk() (*string, bool) {
	if o == nil || o.ItemId == nil {
		return nil, false
	}
	return o.ItemId, true
}

// HasItemId returns a boolean if a field has been set.
func (o *ItemBatchRecord) HasItemId() bool {
	if o != nil && o.ItemId != nil {
		return true
	}

	return false
}

// SetItemId gets a reference to the given string and assigns it to the ItemId field.
func (o *ItemBatchRecord) SetItemId(v string) {
	o.ItemId = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *ItemBatchRecord) GetAttributes() ItemAttributes {
	if o == nil || o.Attributes == nil {
		var ret ItemAttributes
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemBatchRecord) GetAttributesOk() (*ItemAttributes, bool) {
	if o == nil || o.Attributes == nil {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *ItemBatchRecord) HasAttributes() bool {
	if o != nil && o.Attributes != nil {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given ItemAttributes and assigns it to the Attributes field.
func (o *ItemBatchRecord) SetAttributes(v ItemAttributes) {
	o.Attributes = &v
}

func (o ItemBatchRecord) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ItemId != nil {
		toSerialize["item_id"] = o.ItemId
	}
	if o.Attributes != nil {
		toSerialize["attributes"] = o.Attributes
	}
	return json.Marshal(toSerialize)
}

type NullableItemBatchRecord struct {
	value *ItemBatchRecord
	isSet bool
}

func (v NullableItemBatchRecord) Get() *ItemBatchRecord {
	return v.value
}

func (v *NullableItemBatchRecord) Set(val *ItemBatchRecord) {
	v.value = val
	v.isSet = true
}

func (v NullableItemBatchRecord) IsSet() bool {
	return v.isSet
}

func (v *NullableItemBatchRecord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableItemBatchRecord(val *ItemBatchRecord) *NullableItemBatchRecord {
	return &NullableItemBatchRecord{value: val, isSet: true}
}

func (v NullableItemBatchRecord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableItemBatchRecord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


