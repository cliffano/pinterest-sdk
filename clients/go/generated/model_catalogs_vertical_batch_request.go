/*
Pinterest REST API

Pinterest's REST API

API version: 5.12.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// CatalogsVerticalBatchRequest - A request object that can have multiple operations on a single batch
type CatalogsVerticalBatchRequest struct {
	CatalogsHotelBatchRequest *CatalogsHotelBatchRequest
	CatalogsRetailBatchRequest *CatalogsRetailBatchRequest
}

// CatalogsHotelBatchRequestAsCatalogsVerticalBatchRequest is a convenience function that returns CatalogsHotelBatchRequest wrapped in CatalogsVerticalBatchRequest
func CatalogsHotelBatchRequestAsCatalogsVerticalBatchRequest(v *CatalogsHotelBatchRequest) CatalogsVerticalBatchRequest {
	return CatalogsVerticalBatchRequest{
		CatalogsHotelBatchRequest: v,
	}
}

// CatalogsRetailBatchRequestAsCatalogsVerticalBatchRequest is a convenience function that returns CatalogsRetailBatchRequest wrapped in CatalogsVerticalBatchRequest
func CatalogsRetailBatchRequestAsCatalogsVerticalBatchRequest(v *CatalogsRetailBatchRequest) CatalogsVerticalBatchRequest {
	return CatalogsVerticalBatchRequest{
		CatalogsRetailBatchRequest: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *CatalogsVerticalBatchRequest) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into CatalogsHotelBatchRequest
	err = newStrictDecoder(data).Decode(&dst.CatalogsHotelBatchRequest)
	if err == nil {
		jsonCatalogsHotelBatchRequest, _ := json.Marshal(dst.CatalogsHotelBatchRequest)
		if string(jsonCatalogsHotelBatchRequest) == "{}" { // empty struct
			dst.CatalogsHotelBatchRequest = nil
		} else {
			match++
		}
	} else {
		dst.CatalogsHotelBatchRequest = nil
	}

	// try to unmarshal data into CatalogsRetailBatchRequest
	err = newStrictDecoder(data).Decode(&dst.CatalogsRetailBatchRequest)
	if err == nil {
		jsonCatalogsRetailBatchRequest, _ := json.Marshal(dst.CatalogsRetailBatchRequest)
		if string(jsonCatalogsRetailBatchRequest) == "{}" { // empty struct
			dst.CatalogsRetailBatchRequest = nil
		} else {
			match++
		}
	} else {
		dst.CatalogsRetailBatchRequest = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.CatalogsHotelBatchRequest = nil
		dst.CatalogsRetailBatchRequest = nil

		return fmt.Errorf("data matches more than one schema in oneOf(CatalogsVerticalBatchRequest)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(CatalogsVerticalBatchRequest)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CatalogsVerticalBatchRequest) MarshalJSON() ([]byte, error) {
	if src.CatalogsHotelBatchRequest != nil {
		return json.Marshal(&src.CatalogsHotelBatchRequest)
	}

	if src.CatalogsRetailBatchRequest != nil {
		return json.Marshal(&src.CatalogsRetailBatchRequest)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *CatalogsVerticalBatchRequest) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.CatalogsHotelBatchRequest != nil {
		return obj.CatalogsHotelBatchRequest
	}

	if obj.CatalogsRetailBatchRequest != nil {
		return obj.CatalogsRetailBatchRequest
	}

	// all schemas are nil
	return nil
}

type NullableCatalogsVerticalBatchRequest struct {
	value *CatalogsVerticalBatchRequest
	isSet bool
}

func (v NullableCatalogsVerticalBatchRequest) Get() *CatalogsVerticalBatchRequest {
	return v.value
}

func (v *NullableCatalogsVerticalBatchRequest) Set(val *CatalogsVerticalBatchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsVerticalBatchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsVerticalBatchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsVerticalBatchRequest(val *CatalogsVerticalBatchRequest) *NullableCatalogsVerticalBatchRequest {
	return &NullableCatalogsVerticalBatchRequest{value: val, isSet: true}
}

func (v NullableCatalogsVerticalBatchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsVerticalBatchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


