/*
Pinterest REST API

Pinterest's REST API

API version: 5.3.0
Contact: blah@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CatalogsProductGroupUpdateRequest Request object for updating a product group.
type CatalogsProductGroupUpdateRequest struct {
	// Catalog Feed id pertaining to the catalog product group.
	FeedId string `json:"feed_id"`
	Name string `json:"name"`
	Description NullableString `json:"description,omitempty"`
	Filters CatalogsProductGroupFilters `json:"filters"`
}

// NewCatalogsProductGroupUpdateRequest instantiates a new CatalogsProductGroupUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogsProductGroupUpdateRequest(feedId string, name string, filters CatalogsProductGroupFilters) *CatalogsProductGroupUpdateRequest {
	this := CatalogsProductGroupUpdateRequest{}
	this.FeedId = feedId
	this.Name = name
	this.Filters = filters
	return &this
}

// NewCatalogsProductGroupUpdateRequestWithDefaults instantiates a new CatalogsProductGroupUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogsProductGroupUpdateRequestWithDefaults() *CatalogsProductGroupUpdateRequest {
	this := CatalogsProductGroupUpdateRequest{}
	return &this
}

// GetFeedId returns the FeedId field value
func (o *CatalogsProductGroupUpdateRequest) GetFeedId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FeedId
}

// GetFeedIdOk returns a tuple with the FeedId field value
// and a boolean to check if the value has been set.
func (o *CatalogsProductGroupUpdateRequest) GetFeedIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FeedId, true
}

// SetFeedId sets field value
func (o *CatalogsProductGroupUpdateRequest) SetFeedId(v string) {
	o.FeedId = v
}

// GetName returns the Name field value
func (o *CatalogsProductGroupUpdateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CatalogsProductGroupUpdateRequest) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CatalogsProductGroupUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogsProductGroupUpdateRequest) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogsProductGroupUpdateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CatalogsProductGroupUpdateRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CatalogsProductGroupUpdateRequest) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CatalogsProductGroupUpdateRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CatalogsProductGroupUpdateRequest) UnsetDescription() {
	o.Description.Unset()
}

// GetFilters returns the Filters field value
func (o *CatalogsProductGroupUpdateRequest) GetFilters() CatalogsProductGroupFilters {
	if o == nil {
		var ret CatalogsProductGroupFilters
		return ret
	}

	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value
// and a boolean to check if the value has been set.
func (o *CatalogsProductGroupUpdateRequest) GetFiltersOk() (*CatalogsProductGroupFilters, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Filters, true
}

// SetFilters sets field value
func (o *CatalogsProductGroupUpdateRequest) SetFilters(v CatalogsProductGroupFilters) {
	o.Filters = v
}

func (o CatalogsProductGroupUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["feed_id"] = o.FeedId
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if true {
		toSerialize["filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableCatalogsProductGroupUpdateRequest struct {
	value *CatalogsProductGroupUpdateRequest
	isSet bool
}

func (v NullableCatalogsProductGroupUpdateRequest) Get() *CatalogsProductGroupUpdateRequest {
	return v.value
}

func (v *NullableCatalogsProductGroupUpdateRequest) Set(val *CatalogsProductGroupUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsProductGroupUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsProductGroupUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsProductGroupUpdateRequest(val *CatalogsProductGroupUpdateRequest) *NullableCatalogsProductGroupUpdateRequest {
	return &NullableCatalogsProductGroupUpdateRequest{value: val, isSet: true}
}

func (v NullableCatalogsProductGroupUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsProductGroupUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


