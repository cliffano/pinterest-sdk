/*
Pinterest REST API

Pinterest's REST API

API version: 5.12.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// CatalogsProductGroupsCreate201Response - struct for CatalogsProductGroupsCreate201Response
type CatalogsProductGroupsCreate201Response struct {
	CatalogsProductGroup *CatalogsProductGroup
	CatalogsVerticalProductGroup *CatalogsVerticalProductGroup
}

// CatalogsProductGroupAsCatalogsProductGroupsCreate201Response is a convenience function that returns CatalogsProductGroup wrapped in CatalogsProductGroupsCreate201Response
func CatalogsProductGroupAsCatalogsProductGroupsCreate201Response(v *CatalogsProductGroup) CatalogsProductGroupsCreate201Response {
	return CatalogsProductGroupsCreate201Response{
		CatalogsProductGroup: v,
	}
}

// CatalogsVerticalProductGroupAsCatalogsProductGroupsCreate201Response is a convenience function that returns CatalogsVerticalProductGroup wrapped in CatalogsProductGroupsCreate201Response
func CatalogsVerticalProductGroupAsCatalogsProductGroupsCreate201Response(v *CatalogsVerticalProductGroup) CatalogsProductGroupsCreate201Response {
	return CatalogsProductGroupsCreate201Response{
		CatalogsVerticalProductGroup: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *CatalogsProductGroupsCreate201Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into CatalogsProductGroup
	err = newStrictDecoder(data).Decode(&dst.CatalogsProductGroup)
	if err == nil {
		jsonCatalogsProductGroup, _ := json.Marshal(dst.CatalogsProductGroup)
		if string(jsonCatalogsProductGroup) == "{}" { // empty struct
			dst.CatalogsProductGroup = nil
		} else {
			match++
		}
	} else {
		dst.CatalogsProductGroup = nil
	}

	// try to unmarshal data into CatalogsVerticalProductGroup
	err = newStrictDecoder(data).Decode(&dst.CatalogsVerticalProductGroup)
	if err == nil {
		jsonCatalogsVerticalProductGroup, _ := json.Marshal(dst.CatalogsVerticalProductGroup)
		if string(jsonCatalogsVerticalProductGroup) == "{}" { // empty struct
			dst.CatalogsVerticalProductGroup = nil
		} else {
			match++
		}
	} else {
		dst.CatalogsVerticalProductGroup = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.CatalogsProductGroup = nil
		dst.CatalogsVerticalProductGroup = nil

		return fmt.Errorf("data matches more than one schema in oneOf(CatalogsProductGroupsCreate201Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(CatalogsProductGroupsCreate201Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CatalogsProductGroupsCreate201Response) MarshalJSON() ([]byte, error) {
	if src.CatalogsProductGroup != nil {
		return json.Marshal(&src.CatalogsProductGroup)
	}

	if src.CatalogsVerticalProductGroup != nil {
		return json.Marshal(&src.CatalogsVerticalProductGroup)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *CatalogsProductGroupsCreate201Response) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.CatalogsProductGroup != nil {
		return obj.CatalogsProductGroup
	}

	if obj.CatalogsVerticalProductGroup != nil {
		return obj.CatalogsVerticalProductGroup
	}

	// all schemas are nil
	return nil
}

type NullableCatalogsProductGroupsCreate201Response struct {
	value *CatalogsProductGroupsCreate201Response
	isSet bool
}

func (v NullableCatalogsProductGroupsCreate201Response) Get() *CatalogsProductGroupsCreate201Response {
	return v.value
}

func (v *NullableCatalogsProductGroupsCreate201Response) Set(val *CatalogsProductGroupsCreate201Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsProductGroupsCreate201Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsProductGroupsCreate201Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsProductGroupsCreate201Response(val *CatalogsProductGroupsCreate201Response) *NullableCatalogsProductGroupsCreate201Response {
	return &NullableCatalogsProductGroupsCreate201Response{value: val, isSet: true}
}

func (v NullableCatalogsProductGroupsCreate201Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsProductGroupsCreate201Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


