/*
Pinterest REST API

Pinterest's REST API

API version: 5.3.0
Contact: pinterest-api@pinterest.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AdAccountOwner struct for AdAccountOwner
type AdAccountOwner struct {
	// Public username for the user account
	Username *string `json:"username,omitempty"`
}

// NewAdAccountOwner instantiates a new AdAccountOwner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdAccountOwner() *AdAccountOwner {
	this := AdAccountOwner{}
	return &this
}

// NewAdAccountOwnerWithDefaults instantiates a new AdAccountOwner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdAccountOwnerWithDefaults() *AdAccountOwner {
	this := AdAccountOwner{}
	return &this
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *AdAccountOwner) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdAccountOwner) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *AdAccountOwner) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *AdAccountOwner) SetUsername(v string) {
	o.Username = &v
}

func (o AdAccountOwner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullableAdAccountOwner struct {
	value *AdAccountOwner
	isSet bool
}

func (v NullableAdAccountOwner) Get() *AdAccountOwner {
	return v.value
}

func (v *NullableAdAccountOwner) Set(val *AdAccountOwner) {
	v.value = val
	v.isSet = true
}

func (v NullableAdAccountOwner) IsSet() bool {
	return v.isSet
}

func (v *NullableAdAccountOwner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdAccountOwner(val *AdAccountOwner) *NullableAdAccountOwner {
	return &NullableAdAccountOwner{value: val, isSet: true}
}

func (v NullableAdAccountOwner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdAccountOwner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


