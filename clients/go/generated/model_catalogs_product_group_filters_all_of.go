/*
Pinterest REST API

Pinterest's REST API

API version: 5.3.0
Contact: blah@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CatalogsProductGroupFiltersAllOf struct for CatalogsProductGroupFiltersAllOf
type CatalogsProductGroupFiltersAllOf struct {
	AllOf []CatalogsProductGroupFilterKeys `json:"all_of,omitempty"`
}

// NewCatalogsProductGroupFiltersAllOf instantiates a new CatalogsProductGroupFiltersAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogsProductGroupFiltersAllOf() *CatalogsProductGroupFiltersAllOf {
	this := CatalogsProductGroupFiltersAllOf{}
	return &this
}

// NewCatalogsProductGroupFiltersAllOfWithDefaults instantiates a new CatalogsProductGroupFiltersAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogsProductGroupFiltersAllOfWithDefaults() *CatalogsProductGroupFiltersAllOf {
	this := CatalogsProductGroupFiltersAllOf{}
	return &this
}

// GetAllOf returns the AllOf field value if set, zero value otherwise.
func (o *CatalogsProductGroupFiltersAllOf) GetAllOf() []CatalogsProductGroupFilterKeys {
	if o == nil || o.AllOf == nil {
		var ret []CatalogsProductGroupFilterKeys
		return ret
	}
	return o.AllOf
}

// GetAllOfOk returns a tuple with the AllOf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsProductGroupFiltersAllOf) GetAllOfOk() ([]CatalogsProductGroupFilterKeys, bool) {
	if o == nil || o.AllOf == nil {
		return nil, false
	}
	return o.AllOf, true
}

// HasAllOf returns a boolean if a field has been set.
func (o *CatalogsProductGroupFiltersAllOf) HasAllOf() bool {
	if o != nil && o.AllOf != nil {
		return true
	}

	return false
}

// SetAllOf gets a reference to the given []CatalogsProductGroupFilterKeys and assigns it to the AllOf field.
func (o *CatalogsProductGroupFiltersAllOf) SetAllOf(v []CatalogsProductGroupFilterKeys) {
	o.AllOf = v
}

func (o CatalogsProductGroupFiltersAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllOf != nil {
		toSerialize["all_of"] = o.AllOf
	}
	return json.Marshal(toSerialize)
}

type NullableCatalogsProductGroupFiltersAllOf struct {
	value *CatalogsProductGroupFiltersAllOf
	isSet bool
}

func (v NullableCatalogsProductGroupFiltersAllOf) Get() *CatalogsProductGroupFiltersAllOf {
	return v.value
}

func (v *NullableCatalogsProductGroupFiltersAllOf) Set(val *CatalogsProductGroupFiltersAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsProductGroupFiltersAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsProductGroupFiltersAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsProductGroupFiltersAllOf(val *CatalogsProductGroupFiltersAllOf) *NullableCatalogsProductGroupFiltersAllOf {
	return &NullableCatalogsProductGroupFiltersAllOf{value: val, isSet: true}
}

func (v NullableCatalogsProductGroupFiltersAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsProductGroupFiltersAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


