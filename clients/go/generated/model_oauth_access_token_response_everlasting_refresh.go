/*
Pinterest REST API

Pinterest's REST API

API version: 5.12.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OauthAccessTokenResponseEverlastingRefresh type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OauthAccessTokenResponseEverlastingRefresh{}

// OauthAccessTokenResponseEverlastingRefresh A successful OAuth access token response for the refresh token flow, with an added everlasting refresh token.
type OauthAccessTokenResponseEverlastingRefresh struct {
	RefreshToken string `json:"refresh_token"`
	RefreshTokenExpiresIn int32 `json:"refresh_token_expires_in"`
	RefreshTokenExpiresAt int32 `json:"refresh_token_expires_at"`
}

type _OauthAccessTokenResponseEverlastingRefresh OauthAccessTokenResponseEverlastingRefresh

// NewOauthAccessTokenResponseEverlastingRefresh instantiates a new OauthAccessTokenResponseEverlastingRefresh object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOauthAccessTokenResponseEverlastingRefresh(refreshToken string, refreshTokenExpiresIn int32, refreshTokenExpiresAt int32, accessToken string, tokenType string, expiresIn int32, scope string) *OauthAccessTokenResponseEverlastingRefresh {
	this := OauthAccessTokenResponseEverlastingRefresh{}
	this.AccessToken = accessToken
	this.TokenType = tokenType
	this.ExpiresIn = expiresIn
	this.Scope = scope
	this.RefreshToken = refreshToken
	this.RefreshTokenExpiresIn = refreshTokenExpiresIn
	this.RefreshTokenExpiresAt = refreshTokenExpiresAt
	return &this
}

// NewOauthAccessTokenResponseEverlastingRefreshWithDefaults instantiates a new OauthAccessTokenResponseEverlastingRefresh object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOauthAccessTokenResponseEverlastingRefreshWithDefaults() *OauthAccessTokenResponseEverlastingRefresh {
	this := OauthAccessTokenResponseEverlastingRefresh{}
	return &this
}

// GetRefreshToken returns the RefreshToken field value
func (o *OauthAccessTokenResponseEverlastingRefresh) GetRefreshToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RefreshToken
}

// GetRefreshTokenOk returns a tuple with the RefreshToken field value
// and a boolean to check if the value has been set.
func (o *OauthAccessTokenResponseEverlastingRefresh) GetRefreshTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RefreshToken, true
}

// SetRefreshToken sets field value
func (o *OauthAccessTokenResponseEverlastingRefresh) SetRefreshToken(v string) {
	o.RefreshToken = v
}

// GetRefreshTokenExpiresIn returns the RefreshTokenExpiresIn field value
func (o *OauthAccessTokenResponseEverlastingRefresh) GetRefreshTokenExpiresIn() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RefreshTokenExpiresIn
}

// GetRefreshTokenExpiresInOk returns a tuple with the RefreshTokenExpiresIn field value
// and a boolean to check if the value has been set.
func (o *OauthAccessTokenResponseEverlastingRefresh) GetRefreshTokenExpiresInOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RefreshTokenExpiresIn, true
}

// SetRefreshTokenExpiresIn sets field value
func (o *OauthAccessTokenResponseEverlastingRefresh) SetRefreshTokenExpiresIn(v int32) {
	o.RefreshTokenExpiresIn = v
}

// GetRefreshTokenExpiresAt returns the RefreshTokenExpiresAt field value
func (o *OauthAccessTokenResponseEverlastingRefresh) GetRefreshTokenExpiresAt() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RefreshTokenExpiresAt
}

// GetRefreshTokenExpiresAtOk returns a tuple with the RefreshTokenExpiresAt field value
// and a boolean to check if the value has been set.
func (o *OauthAccessTokenResponseEverlastingRefresh) GetRefreshTokenExpiresAtOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RefreshTokenExpiresAt, true
}

// SetRefreshTokenExpiresAt sets field value
func (o *OauthAccessTokenResponseEverlastingRefresh) SetRefreshTokenExpiresAt(v int32) {
	o.RefreshTokenExpiresAt = v
}

func (o OauthAccessTokenResponseEverlastingRefresh) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OauthAccessTokenResponseEverlastingRefresh) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["refresh_token"] = o.RefreshToken
	toSerialize["refresh_token_expires_in"] = o.RefreshTokenExpiresIn
	toSerialize["refresh_token_expires_at"] = o.RefreshTokenExpiresAt
	return toSerialize, nil
}

func (o *OauthAccessTokenResponseEverlastingRefresh) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"refresh_token",
		"refresh_token_expires_in",
		"refresh_token_expires_at",
		"access_token",
		"token_type",
		"expires_in",
		"scope",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOauthAccessTokenResponseEverlastingRefresh := _OauthAccessTokenResponseEverlastingRefresh{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOauthAccessTokenResponseEverlastingRefresh)

	if err != nil {
		return err
	}

	*o = OauthAccessTokenResponseEverlastingRefresh(varOauthAccessTokenResponseEverlastingRefresh)

	return err
}

type NullableOauthAccessTokenResponseEverlastingRefresh struct {
	value *OauthAccessTokenResponseEverlastingRefresh
	isSet bool
}

func (v NullableOauthAccessTokenResponseEverlastingRefresh) Get() *OauthAccessTokenResponseEverlastingRefresh {
	return v.value
}

func (v *NullableOauthAccessTokenResponseEverlastingRefresh) Set(val *OauthAccessTokenResponseEverlastingRefresh) {
	v.value = val
	v.isSet = true
}

func (v NullableOauthAccessTokenResponseEverlastingRefresh) IsSet() bool {
	return v.isSet
}

func (v *NullableOauthAccessTokenResponseEverlastingRefresh) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOauthAccessTokenResponseEverlastingRefresh(val *OauthAccessTokenResponseEverlastingRefresh) *NullableOauthAccessTokenResponseEverlastingRefresh {
	return &NullableOauthAccessTokenResponseEverlastingRefresh{value: val, isSet: true}
}

func (v NullableOauthAccessTokenResponseEverlastingRefresh) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOauthAccessTokenResponseEverlastingRefresh) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


