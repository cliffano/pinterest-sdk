/*
Pinterest REST API

Pinterest's REST API

API version: 5.3.0
Contact: pinterest-api@pinterest.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ProductType1Filter struct for ProductType1Filter
type ProductType1Filter struct {
	PRODUCTTYPE1 CatalogsProductGroupMultipleStringListCriteria `json:"PRODUCT_TYPE_1"`
}

// NewProductType1Filter instantiates a new ProductType1Filter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductType1Filter(pRODUCTTYPE1 CatalogsProductGroupMultipleStringListCriteria) *ProductType1Filter {
	this := ProductType1Filter{}
	this.PRODUCTTYPE1 = pRODUCTTYPE1
	return &this
}

// NewProductType1FilterWithDefaults instantiates a new ProductType1Filter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductType1FilterWithDefaults() *ProductType1Filter {
	this := ProductType1Filter{}
	return &this
}

// GetPRODUCTTYPE1 returns the PRODUCTTYPE1 field value
func (o *ProductType1Filter) GetPRODUCTTYPE1() CatalogsProductGroupMultipleStringListCriteria {
	if o == nil {
		var ret CatalogsProductGroupMultipleStringListCriteria
		return ret
	}

	return o.PRODUCTTYPE1
}

// GetPRODUCTTYPE1Ok returns a tuple with the PRODUCTTYPE1 field value
// and a boolean to check if the value has been set.
func (o *ProductType1Filter) GetPRODUCTTYPE1Ok() (CatalogsProductGroupMultipleStringListCriteria, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PRODUCTTYPE1, true
}

// SetPRODUCTTYPE1 sets field value
func (o *ProductType1Filter) SetPRODUCTTYPE1(v CatalogsProductGroupMultipleStringListCriteria) {
	o.PRODUCTTYPE1 = v
}

func (o ProductType1Filter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["PRODUCT_TYPE_1"] = o.PRODUCTTYPE1
	}
	return json.Marshal(toSerialize)
}

type NullableProductType1Filter struct {
	value *ProductType1Filter
	isSet bool
}

func (v NullableProductType1Filter) Get() *ProductType1Filter {
	return v.value
}

func (v *NullableProductType1Filter) Set(val *ProductType1Filter) {
	v.value = val
	v.isSet = true
}

func (v NullableProductType1Filter) IsSet() bool {
	return v.isSet
}

func (v *NullableProductType1Filter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductType1Filter(val *ProductType1Filter) *NullableProductType1Filter {
	return &NullableProductType1Filter{value: val, isSet: true}
}

func (v NullableProductType1Filter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductType1Filter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


