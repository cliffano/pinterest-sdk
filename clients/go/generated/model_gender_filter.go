/*
Pinterest REST API

Pinterest's REST API

API version: 5.3.0
Contact: blah@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GenderFilter struct for GenderFilter
type GenderFilter struct {
	GENDER CatalogsProductGroupMultipleStringCriteria `json:"GENDER"`
}

// NewGenderFilter instantiates a new GenderFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenderFilter(gENDER CatalogsProductGroupMultipleStringCriteria) *GenderFilter {
	this := GenderFilter{}
	this.GENDER = gENDER
	return &this
}

// NewGenderFilterWithDefaults instantiates a new GenderFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenderFilterWithDefaults() *GenderFilter {
	this := GenderFilter{}
	return &this
}

// GetGENDER returns the GENDER field value
func (o *GenderFilter) GetGENDER() CatalogsProductGroupMultipleStringCriteria {
	if o == nil {
		var ret CatalogsProductGroupMultipleStringCriteria
		return ret
	}

	return o.GENDER
}

// GetGENDEROk returns a tuple with the GENDER field value
// and a boolean to check if the value has been set.
func (o *GenderFilter) GetGENDEROk() (CatalogsProductGroupMultipleStringCriteria, bool) {
	if o == nil  {
		return nil, false
	}
	return o.GENDER, true
}

// SetGENDER sets field value
func (o *GenderFilter) SetGENDER(v CatalogsProductGroupMultipleStringCriteria) {
	o.GENDER = v
}

func (o GenderFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["GENDER"] = o.GENDER
	}
	return json.Marshal(toSerialize)
}

type NullableGenderFilter struct {
	value *GenderFilter
	isSet bool
}

func (v NullableGenderFilter) Get() *GenderFilter {
	return v.value
}

func (v *NullableGenderFilter) Set(val *GenderFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableGenderFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableGenderFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenderFilter(val *GenderFilter) *NullableGenderFilter {
	return &NullableGenderFilter{value: val, isSet: true}
}

func (v NullableGenderFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenderFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


