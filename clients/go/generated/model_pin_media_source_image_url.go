/*
Pinterest REST API

Pinterest's REST API

API version: 5.3.0
Contact: blah@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PinMediaSourceImageURL Image URL-based media source
type PinMediaSourceImageURL struct {
	SourceType string `json:"source_type"`
	Url string `json:"url"`
}

// NewPinMediaSourceImageURL instantiates a new PinMediaSourceImageURL object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPinMediaSourceImageURL(sourceType string, url string) *PinMediaSourceImageURL {
	this := PinMediaSourceImageURL{}
	this.SourceType = sourceType
	this.Url = url
	return &this
}

// NewPinMediaSourceImageURLWithDefaults instantiates a new PinMediaSourceImageURL object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPinMediaSourceImageURLWithDefaults() *PinMediaSourceImageURL {
	this := PinMediaSourceImageURL{}
	return &this
}

// GetSourceType returns the SourceType field value
func (o *PinMediaSourceImageURL) GetSourceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceType
}

// GetSourceTypeOk returns a tuple with the SourceType field value
// and a boolean to check if the value has been set.
func (o *PinMediaSourceImageURL) GetSourceTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SourceType, true
}

// SetSourceType sets field value
func (o *PinMediaSourceImageURL) SetSourceType(v string) {
	o.SourceType = v
}

// GetUrl returns the Url field value
func (o *PinMediaSourceImageURL) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *PinMediaSourceImageURL) GetUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *PinMediaSourceImageURL) SetUrl(v string) {
	o.Url = v
}

func (o PinMediaSourceImageURL) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["source_type"] = o.SourceType
	}
	if true {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullablePinMediaSourceImageURL struct {
	value *PinMediaSourceImageURL
	isSet bool
}

func (v NullablePinMediaSourceImageURL) Get() *PinMediaSourceImageURL {
	return v.value
}

func (v *NullablePinMediaSourceImageURL) Set(val *PinMediaSourceImageURL) {
	v.value = val
	v.isSet = true
}

func (v NullablePinMediaSourceImageURL) IsSet() bool {
	return v.isSet
}

func (v *NullablePinMediaSourceImageURL) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePinMediaSourceImageURL(val *PinMediaSourceImageURL) *NullablePinMediaSourceImageURL {
	return &NullablePinMediaSourceImageURL{value: val, isSet: true}
}

func (v NullablePinMediaSourceImageURL) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePinMediaSourceImageURL) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


