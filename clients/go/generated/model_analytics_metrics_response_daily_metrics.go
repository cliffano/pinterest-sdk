/*
Pinterest REST API

Pinterest's REST API

API version: 5.3.0
Contact: blah@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AnalyticsMetricsResponseDailyMetrics struct for AnalyticsMetricsResponseDailyMetrics
type AnalyticsMetricsResponseDailyMetrics struct {
	// Metrics availablity, e.g., \"READY\".
	DataStatus *string `json:"data_status,omitempty"`
	// Metrics date (UTC): YYYY-MM-DD.
	Date *string `json:"date,omitempty"`
	// The metric name and daily value for each requested metric
	Metrics *map[string]float32 `json:"metrics,omitempty"`
}

// NewAnalyticsMetricsResponseDailyMetrics instantiates a new AnalyticsMetricsResponseDailyMetrics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnalyticsMetricsResponseDailyMetrics() *AnalyticsMetricsResponseDailyMetrics {
	this := AnalyticsMetricsResponseDailyMetrics{}
	return &this
}

// NewAnalyticsMetricsResponseDailyMetricsWithDefaults instantiates a new AnalyticsMetricsResponseDailyMetrics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnalyticsMetricsResponseDailyMetricsWithDefaults() *AnalyticsMetricsResponseDailyMetrics {
	this := AnalyticsMetricsResponseDailyMetrics{}
	return &this
}

// GetDataStatus returns the DataStatus field value if set, zero value otherwise.
func (o *AnalyticsMetricsResponseDailyMetrics) GetDataStatus() string {
	if o == nil || o.DataStatus == nil {
		var ret string
		return ret
	}
	return *o.DataStatus
}

// GetDataStatusOk returns a tuple with the DataStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsMetricsResponseDailyMetrics) GetDataStatusOk() (*string, bool) {
	if o == nil || o.DataStatus == nil {
		return nil, false
	}
	return o.DataStatus, true
}

// HasDataStatus returns a boolean if a field has been set.
func (o *AnalyticsMetricsResponseDailyMetrics) HasDataStatus() bool {
	if o != nil && o.DataStatus != nil {
		return true
	}

	return false
}

// SetDataStatus gets a reference to the given string and assigns it to the DataStatus field.
func (o *AnalyticsMetricsResponseDailyMetrics) SetDataStatus(v string) {
	o.DataStatus = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *AnalyticsMetricsResponseDailyMetrics) GetDate() string {
	if o == nil || o.Date == nil {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsMetricsResponseDailyMetrics) GetDateOk() (*string, bool) {
	if o == nil || o.Date == nil {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *AnalyticsMetricsResponseDailyMetrics) HasDate() bool {
	if o != nil && o.Date != nil {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *AnalyticsMetricsResponseDailyMetrics) SetDate(v string) {
	o.Date = &v
}

// GetMetrics returns the Metrics field value if set, zero value otherwise.
func (o *AnalyticsMetricsResponseDailyMetrics) GetMetrics() map[string]float32 {
	if o == nil || o.Metrics == nil {
		var ret map[string]float32
		return ret
	}
	return *o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsMetricsResponseDailyMetrics) GetMetricsOk() (*map[string]float32, bool) {
	if o == nil || o.Metrics == nil {
		return nil, false
	}
	return o.Metrics, true
}

// HasMetrics returns a boolean if a field has been set.
func (o *AnalyticsMetricsResponseDailyMetrics) HasMetrics() bool {
	if o != nil && o.Metrics != nil {
		return true
	}

	return false
}

// SetMetrics gets a reference to the given map[string]float32 and assigns it to the Metrics field.
func (o *AnalyticsMetricsResponseDailyMetrics) SetMetrics(v map[string]float32) {
	o.Metrics = &v
}

func (o AnalyticsMetricsResponseDailyMetrics) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DataStatus != nil {
		toSerialize["data_status"] = o.DataStatus
	}
	if o.Date != nil {
		toSerialize["date"] = o.Date
	}
	if o.Metrics != nil {
		toSerialize["metrics"] = o.Metrics
	}
	return json.Marshal(toSerialize)
}

type NullableAnalyticsMetricsResponseDailyMetrics struct {
	value *AnalyticsMetricsResponseDailyMetrics
	isSet bool
}

func (v NullableAnalyticsMetricsResponseDailyMetrics) Get() *AnalyticsMetricsResponseDailyMetrics {
	return v.value
}

func (v *NullableAnalyticsMetricsResponseDailyMetrics) Set(val *AnalyticsMetricsResponseDailyMetrics) {
	v.value = val
	v.isSet = true
}

func (v NullableAnalyticsMetricsResponseDailyMetrics) IsSet() bool {
	return v.isSet
}

func (v *NullableAnalyticsMetricsResponseDailyMetrics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnalyticsMetricsResponseDailyMetrics(val *AnalyticsMetricsResponseDailyMetrics) *NullableAnalyticsMetricsResponseDailyMetrics {
	return &NullableAnalyticsMetricsResponseDailyMetrics{value: val, isSet: true}
}

func (v NullableAnalyticsMetricsResponseDailyMetrics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnalyticsMetricsResponseDailyMetrics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


