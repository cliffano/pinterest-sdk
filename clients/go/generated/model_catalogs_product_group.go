/*
Pinterest REST API

Pinterest's REST API

API version: 5.3.0
Contact: blah@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CatalogsProductGroup catalog product group entity
type CatalogsProductGroup struct {
	// ID of the catalog product group.
	Id string `json:"id"`
	// Name of catalog product group
	Name *string `json:"name,omitempty"`
	Description NullableString `json:"description,omitempty"`
	Filters CatalogsProductGroupFilters `json:"filters"`
	Type *CatalogsProductGroupType `json:"type,omitempty"`
	Status *CatalogsProductGroupStatus `json:"status,omitempty"`
	// id of the catalogs feed belonging to this catalog product group
	FeedId *string `json:"feed_id,omitempty"`
	// Unix timestamp in seconds of when catalog product group was created.
	CreatedAt *int32 `json:"created_at,omitempty"`
	// Unix timestamp in seconds of last time catalog product group was updated.
	UpdatedAt *int32 `json:"updated_at,omitempty"`
}

// NewCatalogsProductGroup instantiates a new CatalogsProductGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogsProductGroup(id string, filters CatalogsProductGroupFilters) *CatalogsProductGroup {
	this := CatalogsProductGroup{}
	this.Id = id
	this.Filters = filters
	return &this
}

// NewCatalogsProductGroupWithDefaults instantiates a new CatalogsProductGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogsProductGroupWithDefaults() *CatalogsProductGroup {
	this := CatalogsProductGroup{}
	return &this
}

// GetId returns the Id field value
func (o *CatalogsProductGroup) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CatalogsProductGroup) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CatalogsProductGroup) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CatalogsProductGroup) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsProductGroup) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CatalogsProductGroup) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CatalogsProductGroup) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogsProductGroup) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogsProductGroup) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CatalogsProductGroup) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CatalogsProductGroup) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CatalogsProductGroup) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CatalogsProductGroup) UnsetDescription() {
	o.Description.Unset()
}

// GetFilters returns the Filters field value
func (o *CatalogsProductGroup) GetFilters() CatalogsProductGroupFilters {
	if o == nil {
		var ret CatalogsProductGroupFilters
		return ret
	}

	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value
// and a boolean to check if the value has been set.
func (o *CatalogsProductGroup) GetFiltersOk() (*CatalogsProductGroupFilters, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Filters, true
}

// SetFilters sets field value
func (o *CatalogsProductGroup) SetFilters(v CatalogsProductGroupFilters) {
	o.Filters = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CatalogsProductGroup) GetType() CatalogsProductGroupType {
	if o == nil || o.Type == nil {
		var ret CatalogsProductGroupType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsProductGroup) GetTypeOk() (*CatalogsProductGroupType, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CatalogsProductGroup) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given CatalogsProductGroupType and assigns it to the Type field.
func (o *CatalogsProductGroup) SetType(v CatalogsProductGroupType) {
	o.Type = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CatalogsProductGroup) GetStatus() CatalogsProductGroupStatus {
	if o == nil || o.Status == nil {
		var ret CatalogsProductGroupStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsProductGroup) GetStatusOk() (*CatalogsProductGroupStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CatalogsProductGroup) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given CatalogsProductGroupStatus and assigns it to the Status field.
func (o *CatalogsProductGroup) SetStatus(v CatalogsProductGroupStatus) {
	o.Status = &v
}

// GetFeedId returns the FeedId field value if set, zero value otherwise.
func (o *CatalogsProductGroup) GetFeedId() string {
	if o == nil || o.FeedId == nil {
		var ret string
		return ret
	}
	return *o.FeedId
}

// GetFeedIdOk returns a tuple with the FeedId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsProductGroup) GetFeedIdOk() (*string, bool) {
	if o == nil || o.FeedId == nil {
		return nil, false
	}
	return o.FeedId, true
}

// HasFeedId returns a boolean if a field has been set.
func (o *CatalogsProductGroup) HasFeedId() bool {
	if o != nil && o.FeedId != nil {
		return true
	}

	return false
}

// SetFeedId gets a reference to the given string and assigns it to the FeedId field.
func (o *CatalogsProductGroup) SetFeedId(v string) {
	o.FeedId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CatalogsProductGroup) GetCreatedAt() int32 {
	if o == nil || o.CreatedAt == nil {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsProductGroup) GetCreatedAtOk() (*int32, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CatalogsProductGroup) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *CatalogsProductGroup) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *CatalogsProductGroup) GetUpdatedAt() int32 {
	if o == nil || o.UpdatedAt == nil {
		var ret int32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsProductGroup) GetUpdatedAtOk() (*int32, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *CatalogsProductGroup) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int32 and assigns it to the UpdatedAt field.
func (o *CatalogsProductGroup) SetUpdatedAt(v int32) {
	o.UpdatedAt = &v
}

func (o CatalogsProductGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if true {
		toSerialize["filters"] = o.Filters
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.FeedId != nil {
		toSerialize["feed_id"] = o.FeedId
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableCatalogsProductGroup struct {
	value *CatalogsProductGroup
	isSet bool
}

func (v NullableCatalogsProductGroup) Get() *CatalogsProductGroup {
	return v.value
}

func (v *NullableCatalogsProductGroup) Set(val *CatalogsProductGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsProductGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsProductGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsProductGroup(val *CatalogsProductGroup) *NullableCatalogsProductGroup {
	return &NullableCatalogsProductGroup{value: val, isSet: true}
}

func (v NullableCatalogsProductGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsProductGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


