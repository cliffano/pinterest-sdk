/*
Pinterest REST API

Pinterest's REST API

API version: 5.3.0
Contact: blah@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PinMediaWithImageAllOf struct for PinMediaWithImageAllOf
type PinMediaWithImageAllOf struct {
	Images *map[string]ImageDetails `json:"images,omitempty"`
}

// NewPinMediaWithImageAllOf instantiates a new PinMediaWithImageAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPinMediaWithImageAllOf() *PinMediaWithImageAllOf {
	this := PinMediaWithImageAllOf{}
	return &this
}

// NewPinMediaWithImageAllOfWithDefaults instantiates a new PinMediaWithImageAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPinMediaWithImageAllOfWithDefaults() *PinMediaWithImageAllOf {
	this := PinMediaWithImageAllOf{}
	return &this
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *PinMediaWithImageAllOf) GetImages() map[string]ImageDetails {
	if o == nil || o.Images == nil {
		var ret map[string]ImageDetails
		return ret
	}
	return *o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PinMediaWithImageAllOf) GetImagesOk() (*map[string]ImageDetails, bool) {
	if o == nil || o.Images == nil {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *PinMediaWithImageAllOf) HasImages() bool {
	if o != nil && o.Images != nil {
		return true
	}

	return false
}

// SetImages gets a reference to the given map[string]ImageDetails and assigns it to the Images field.
func (o *PinMediaWithImageAllOf) SetImages(v map[string]ImageDetails) {
	o.Images = &v
}

func (o PinMediaWithImageAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Images != nil {
		toSerialize["images"] = o.Images
	}
	return json.Marshal(toSerialize)
}

type NullablePinMediaWithImageAllOf struct {
	value *PinMediaWithImageAllOf
	isSet bool
}

func (v NullablePinMediaWithImageAllOf) Get() *PinMediaWithImageAllOf {
	return v.value
}

func (v *NullablePinMediaWithImageAllOf) Set(val *PinMediaWithImageAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullablePinMediaWithImageAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullablePinMediaWithImageAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePinMediaWithImageAllOf(val *PinMediaWithImageAllOf) *NullablePinMediaWithImageAllOf {
	return &NullablePinMediaWithImageAllOf{value: val, isSet: true}
}

func (v NullablePinMediaWithImageAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePinMediaWithImageAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


