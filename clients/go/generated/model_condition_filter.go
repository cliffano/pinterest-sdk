/*
Pinterest REST API

Pinterest's REST API

API version: 5.3.0
Contact: blah@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ConditionFilter struct for ConditionFilter
type ConditionFilter struct {
	CONDITION CatalogsProductGroupMultipleStringCriteria `json:"CONDITION"`
}

// NewConditionFilter instantiates a new ConditionFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConditionFilter(cONDITION CatalogsProductGroupMultipleStringCriteria) *ConditionFilter {
	this := ConditionFilter{}
	this.CONDITION = cONDITION
	return &this
}

// NewConditionFilterWithDefaults instantiates a new ConditionFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConditionFilterWithDefaults() *ConditionFilter {
	this := ConditionFilter{}
	return &this
}

// GetCONDITION returns the CONDITION field value
func (o *ConditionFilter) GetCONDITION() CatalogsProductGroupMultipleStringCriteria {
	if o == nil {
		var ret CatalogsProductGroupMultipleStringCriteria
		return ret
	}

	return o.CONDITION
}

// GetCONDITIONOk returns a tuple with the CONDITION field value
// and a boolean to check if the value has been set.
func (o *ConditionFilter) GetCONDITIONOk() (CatalogsProductGroupMultipleStringCriteria, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CONDITION, true
}

// SetCONDITION sets field value
func (o *ConditionFilter) SetCONDITION(v CatalogsProductGroupMultipleStringCriteria) {
	o.CONDITION = v
}

func (o ConditionFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["CONDITION"] = o.CONDITION
	}
	return json.Marshal(toSerialize)
}

type NullableConditionFilter struct {
	value *ConditionFilter
	isSet bool
}

func (v NullableConditionFilter) Get() *ConditionFilter {
	return v.value
}

func (v *NullableConditionFilter) Set(val *ConditionFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableConditionFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableConditionFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConditionFilter(val *ConditionFilter) *NullableConditionFilter {
	return &NullableConditionFilter{value: val, isSet: true}
}

func (v NullableConditionFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConditionFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


