/*
Pinterest REST API

Pinterest's REST API

API version: 5.3.0
Contact: blah@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OauthAccessTokenResponseCodeAllOf struct for OauthAccessTokenResponseCodeAllOf
type OauthAccessTokenResponseCodeAllOf struct {
	RefreshToken string `json:"refresh_token"`
	RefreshTokenExpiresIn int32 `json:"refresh_token_expires_in"`
}

// NewOauthAccessTokenResponseCodeAllOf instantiates a new OauthAccessTokenResponseCodeAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOauthAccessTokenResponseCodeAllOf(refreshToken string, refreshTokenExpiresIn int32) *OauthAccessTokenResponseCodeAllOf {
	this := OauthAccessTokenResponseCodeAllOf{}
	this.RefreshToken = refreshToken
	this.RefreshTokenExpiresIn = refreshTokenExpiresIn
	return &this
}

// NewOauthAccessTokenResponseCodeAllOfWithDefaults instantiates a new OauthAccessTokenResponseCodeAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOauthAccessTokenResponseCodeAllOfWithDefaults() *OauthAccessTokenResponseCodeAllOf {
	this := OauthAccessTokenResponseCodeAllOf{}
	return &this
}

// GetRefreshToken returns the RefreshToken field value
func (o *OauthAccessTokenResponseCodeAllOf) GetRefreshToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RefreshToken
}

// GetRefreshTokenOk returns a tuple with the RefreshToken field value
// and a boolean to check if the value has been set.
func (o *OauthAccessTokenResponseCodeAllOf) GetRefreshTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RefreshToken, true
}

// SetRefreshToken sets field value
func (o *OauthAccessTokenResponseCodeAllOf) SetRefreshToken(v string) {
	o.RefreshToken = v
}

// GetRefreshTokenExpiresIn returns the RefreshTokenExpiresIn field value
func (o *OauthAccessTokenResponseCodeAllOf) GetRefreshTokenExpiresIn() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RefreshTokenExpiresIn
}

// GetRefreshTokenExpiresInOk returns a tuple with the RefreshTokenExpiresIn field value
// and a boolean to check if the value has been set.
func (o *OauthAccessTokenResponseCodeAllOf) GetRefreshTokenExpiresInOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RefreshTokenExpiresIn, true
}

// SetRefreshTokenExpiresIn sets field value
func (o *OauthAccessTokenResponseCodeAllOf) SetRefreshTokenExpiresIn(v int32) {
	o.RefreshTokenExpiresIn = v
}

func (o OauthAccessTokenResponseCodeAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["refresh_token"] = o.RefreshToken
	}
	if true {
		toSerialize["refresh_token_expires_in"] = o.RefreshTokenExpiresIn
	}
	return json.Marshal(toSerialize)
}

type NullableOauthAccessTokenResponseCodeAllOf struct {
	value *OauthAccessTokenResponseCodeAllOf
	isSet bool
}

func (v NullableOauthAccessTokenResponseCodeAllOf) Get() *OauthAccessTokenResponseCodeAllOf {
	return v.value
}

func (v *NullableOauthAccessTokenResponseCodeAllOf) Set(val *OauthAccessTokenResponseCodeAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableOauthAccessTokenResponseCodeAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableOauthAccessTokenResponseCodeAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOauthAccessTokenResponseCodeAllOf(val *OauthAccessTokenResponseCodeAllOf) *NullableOauthAccessTokenResponseCodeAllOf {
	return &NullableOauthAccessTokenResponseCodeAllOf{value: val, isSet: true}
}

func (v NullableOauthAccessTokenResponseCodeAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOauthAccessTokenResponseCodeAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


