// tslint:disable
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    NonNullableCatalogsCurrency,
    NonNullableCatalogsCurrencyFromJSON,
    NonNullableCatalogsCurrencyToJSON,
    NonNullableProductAvailabilityType,
    NonNullableProductAvailabilityTypeFromJSON,
    NonNullableProductAvailabilityTypeToJSON,
} from './';

/**
 * Product metadata entity
 * @export
 * @interface CatalogsProductMetadata
 */
export interface CatalogsProductMetadata  {
    /**
     * The user-created unique ID that represents the product.
     * @type {string}
     * @memberof CatalogsProductMetadata
     */
    itemId: string;
    /**
     * The parent ID of the product.
     * @type {string}
     * @memberof CatalogsProductMetadata
     */
    itemGroupId: string;
    /**
     * 
     * @type {NonNullableProductAvailabilityType}
     * @memberof CatalogsProductMetadata
     */
    availability: NonNullableProductAvailabilityType;
    /**
     * The price of the product.
     * @type {number}
     * @memberof CatalogsProductMetadata
     */
    price: number;
    /**
     * The discounted price of the product.
     * @type {number}
     * @memberof CatalogsProductMetadata
     */
    salePrice: number;
    /**
     * 
     * @type {NonNullableCatalogsCurrency}
     * @memberof CatalogsProductMetadata
     */
    currency: NonNullableCatalogsCurrency;
}

export function CatalogsProductMetadataFromJSON(json: any): CatalogsProductMetadata {
    return {
        'itemId': json['item_id'],
        'itemGroupId': json['item_group_id'],
        'availability': NonNullableProductAvailabilityTypeFromJSON(json['availability']),
        'price': json['price'],
        'salePrice': json['sale_price'],
        'currency': NonNullableCatalogsCurrencyFromJSON(json['currency']),
    };
}

export function CatalogsProductMetadataToJSON(value?: CatalogsProductMetadata): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'item_id': value.itemId,
        'item_group_id': value.itemGroupId,
        'availability': NonNullableProductAvailabilityTypeToJSON(value.availability),
        'price': value.price,
        'sale_price': value.salePrice,
        'currency': NonNullableCatalogsCurrencyToJSON(value.currency),
    };
}



