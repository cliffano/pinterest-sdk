// tslint:disable
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CatalogsHotelBatchItem,
    CatalogsHotelBatchItemFromJSON,
    CatalogsHotelBatchItemToJSON,
    CatalogsType,
    CatalogsTypeFromJSON,
    CatalogsTypeToJSON,
    Country,
    CountryFromJSON,
    CountryToJSON,
    Language,
    LanguageFromJSON,
    LanguageToJSON,
} from './';

/**
 * Request object to update catalogs hotel items
 * @export
 * @interface CatalogsHotelBatchRequest
 */
export interface CatalogsHotelBatchRequest  {
    /**
     * 
     * @type {CatalogsType}
     * @memberof CatalogsHotelBatchRequest
     */
    catalogType: CatalogsType;
    /**
     * 
     * @type {Country}
     * @memberof CatalogsHotelBatchRequest
     */
    country: Country;
    /**
     * 
     * @type {Language}
     * @memberof CatalogsHotelBatchRequest
     */
    language: Language;
    /**
     * Array with catalogs item operations
     * @type {Array<CatalogsHotelBatchItem>}
     * @memberof CatalogsHotelBatchRequest
     */
    items: Array<CatalogsHotelBatchItem>;
    /**
     * Catalog id pertaining to the hotel item. If not provided, default to oldest hotel catalog
     * @type {string}
     * @memberof CatalogsHotelBatchRequest
     */
    catalogId?: string;
}

export function CatalogsHotelBatchRequestFromJSON(json: any): CatalogsHotelBatchRequest {
    return {
        'catalogType': CatalogsTypeFromJSON(json['catalog_type']),
        'country': CountryFromJSON(json['country']),
        'language': LanguageFromJSON(json['language']),
        'items': (json['items'] as Array<any>).map(CatalogsHotelBatchItemFromJSON),
        'catalogId': !exists(json, 'catalog_id') ? undefined : json['catalog_id'],
    };
}

export function CatalogsHotelBatchRequestToJSON(value?: CatalogsHotelBatchRequest): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'catalog_type': CatalogsTypeToJSON(value.catalogType),
        'country': CountryToJSON(value.country),
        'language': LanguageToJSON(value.language),
        'items': (value.items as Array<any>).map(CatalogsHotelBatchItemToJSON),
        'catalog_id': value.catalogId,
    };
}



