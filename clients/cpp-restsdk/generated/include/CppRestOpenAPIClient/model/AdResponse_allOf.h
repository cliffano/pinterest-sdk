/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.4.1
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.1.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * AdResponse_allOf.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_AdResponse_allOf_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_AdResponse_allOf_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/PinPromotionSummaryStatus.h"
#include <cpprest/details/basic_types.h>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  AdResponse_allOf
    : public ModelBase
{
public:
    AdResponse_allOf();
    virtual ~AdResponse_allOf();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// AdResponse_allOf members

    /// <summary>
    /// The ID of the advertiser that this ad belongs to.
    /// </summary>
    utility::string_t getAdAccountId() const;
    bool adAccountIdIsSet() const;
    void unsetAd_account_id();

    void setAdAccountId(const utility::string_t& value);

    /// <summary>
    /// ID of the ad campaign that contains this ad.
    /// </summary>
    utility::string_t getCampaignId() const;
    bool campaignIdIsSet() const;
    void unsetCampaign_id();

    void setCampaignId(const utility::string_t& value);

    /// <summary>
    /// Destination URL template for all items within a collections drawer.
    /// </summary>
    utility::string_t getCollectionItemsDestinationUrlTemplate() const;
    bool collectionItemsDestinationUrlTemplateIsSet() const;
    void unsetCollection_items_destination_url_template();

    void setCollectionItemsDestinationUrlTemplate(const utility::string_t& value);

    /// <summary>
    /// Pin creation time. Unix timestamp in seconds.
    /// </summary>
    int32_t getCreatedTime() const;
    bool createdTimeIsSet() const;
    void unsetCreated_time();

    void setCreatedTime(int32_t value);

    /// <summary>
    /// The ID of this ad.
    /// </summary>
    utility::string_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(const utility::string_t& value);

    /// <summary>
    /// Enum reason why the pin was rejected. Returned if &lt;code&gt;review_status&lt;/code&gt; is \&quot;REJECTED\&quot;.
    /// </summary>
    std::vector<utility::string_t>& getRejectedReasons();
    bool rejectedReasonsIsSet() const;
    void unsetRejected_reasons();

    void setRejectedReasons(const std::vector<utility::string_t>& value);

    /// <summary>
    /// Text reason why the pin was rejected. Returned if &lt;code&gt;review_status&lt;/code&gt; is \&quot;REJECTED\&quot;.
    /// </summary>
    std::vector<utility::string_t>& getRejectionLabels();
    bool rejectionLabelsIsSet() const;
    void unsetRejection_labels();

    void setRejectionLabels(const std::vector<utility::string_t>& value);

    /// <summary>
    /// Ad review status
    /// </summary>
    utility::string_t getReviewStatus() const;
    bool reviewStatusIsSet() const;
    void unsetReview_status();

    void setReviewStatus(const utility::string_t& value);

    /// <summary>
    /// Always \&quot;ad\&quot;.
    /// </summary>
    utility::string_t getType() const;
    bool typeIsSet() const;
    void unsetType();

    void setType(const utility::string_t& value);

    /// <summary>
    /// Last update time. Unix timestamp in seconds.
    /// </summary>
    int32_t getUpdatedTime() const;
    bool updatedTimeIsSet() const;
    void unsetUpdated_time();

    void setUpdatedTime(int32_t value);

    /// <summary>
    /// Ad summary status
    /// </summary>
    PinPromotionSummaryStatus getSummaryStatus() const;
    bool summaryStatusIsSet() const;
    void unsetSummary_status();

    void setSummaryStatus(const PinPromotionSummaryStatus& value);


protected:
    utility::string_t m_Ad_account_id;
    bool m_Ad_account_idIsSet;
    utility::string_t m_Campaign_id;
    bool m_Campaign_idIsSet;
    utility::string_t m_Collection_items_destination_url_template;
    bool m_Collection_items_destination_url_templateIsSet;
    int32_t m_Created_time;
    bool m_Created_timeIsSet;
    utility::string_t m_Id;
    bool m_IdIsSet;
    std::vector<utility::string_t> m_Rejected_reasons;
    bool m_Rejected_reasonsIsSet;
    std::vector<utility::string_t> m_Rejection_labels;
    bool m_Rejection_labelsIsSet;
    utility::string_t m_Review_status;
    bool m_Review_statusIsSet;
    utility::string_t m_Type;
    bool m_TypeIsSet;
    int32_t m_Updated_time;
    bool m_Updated_timeIsSet;
    PinPromotionSummaryStatus m_Summary_status;
    bool m_Summary_statusIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_AdResponse_allOf_H_ */
