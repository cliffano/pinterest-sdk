/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.4.1
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.1.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ProductGroupPromotion.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_ProductGroupPromotion_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_ProductGroupPromotion_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>
#include "CppRestOpenAPIClient/model/Items.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  ProductGroupPromotion
    : public ModelBase
{
public:
    ProductGroupPromotion();
    virtual ~ProductGroupPromotion();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ProductGroupPromotion members

    /// <summary>
    /// ID of the product group promotion.
    /// </summary>
    utility::string_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(const utility::string_t& value);

    /// <summary>
    /// ID of the ad group the product group belongs to.
    /// </summary>
    utility::string_t getAdGroupId() const;
    bool adGroupIdIsSet() const;
    void unsetAd_group_id();

    void setAdGroupId(const utility::string_t& value);

    /// <summary>
    /// Product group promotion
    /// </summary>
    utility::string_t getType() const;
    bool typeIsSet() const;
    void unsetType();

    void setType(const utility::string_t& value);

    /// <summary>
    /// The bid in micro currency.
    /// </summary>
    int32_t getBidInMicroCurrency() const;
    bool bidInMicroCurrencyIsSet() const;
    void unsetBid_in_micro_currency();

    void setBidInMicroCurrency(int32_t value);

    /// <summary>
    /// True if the group is BIDDABLE, false if it should be EXCLUDED from serving ads.
    /// </summary>
    bool isIncluded() const;
    bool includedIsSet() const;
    void unsetIncluded();

    void setIncluded(bool value);

    /// <summary>
    /// The full product group definition path
    /// </summary>
    utility::string_t getDefinition() const;
    bool definitionIsSet() const;
    void unsetDefinition();

    void setDefinition(const utility::string_t& value);

    /// <summary>
    /// The definition of the product group, relative to its parent - an attribute name/value pair
    /// </summary>
    utility::string_t getRelativeDefinition() const;
    bool relativeDefinitionIsSet() const;
    void unsetRelative_definition();

    void setRelativeDefinition(const utility::string_t& value);

    /// <summary>
    /// The parent Product Group ID of this Product Group
    /// </summary>
    utility::string_t getParentId() const;
    bool parentIdIsSet() const;
    void unsetParent_id();

    void setParentId(const utility::string_t& value);

    /// <summary>
    /// Slideshow Collections Title
    /// </summary>
    utility::string_t getSlideshowCollectionsTitle() const;
    bool slideshowCollectionsTitleIsSet() const;
    void unsetSlideshow_collections_title();

    void setSlideshowCollectionsTitle(const utility::string_t& value);

    /// <summary>
    /// Slideshow Collections Description
    /// </summary>
    utility::string_t getSlideshowCollectionsDescription() const;
    bool slideshowCollectionsDescriptionIsSet() const;
    void unsetSlideshow_collections_description();

    void setSlideshowCollectionsDescription(const utility::string_t& value);


protected:
    utility::string_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_Ad_group_id;
    bool m_Ad_group_idIsSet;
    utility::string_t m_Type;
    bool m_TypeIsSet;
    int32_t m_Bid_in_micro_currency;
    bool m_Bid_in_micro_currencyIsSet;
    bool m_Included;
    bool m_IncludedIsSet;
    utility::string_t m_Definition;
    bool m_DefinitionIsSet;
    utility::string_t m_Relative_definition;
    bool m_Relative_definitionIsSet;
    utility::string_t m_Parent_id;
    bool m_Parent_idIsSet;
    utility::string_t m_Slideshow_collections_title;
    bool m_Slideshow_collections_titleIsSet;
    utility::string_t m_Slideshow_collections_description;
    bool m_Slideshow_collections_descriptionIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_ProductGroupPromotion_H_ */
