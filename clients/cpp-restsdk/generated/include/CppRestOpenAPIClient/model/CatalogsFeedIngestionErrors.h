/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.6.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.2.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CatalogsFeedIngestionErrors.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsFeedIngestionErrors_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsFeedIngestionErrors_H_


#include "CppRestOpenAPIClient/ModelBase.h"


namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  CatalogsFeedIngestionErrors
    : public ModelBase
{
public:
    CatalogsFeedIngestionErrors();
    virtual ~CatalogsFeedIngestionErrors();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CatalogsFeedIngestionErrors members

    /// <summary>
    /// Some items include images that can&#39;t be found.
    /// </summary>
    int32_t getIMAGEDOWNLOADERROR() const;
    bool iMAGEDOWNLOADERRORIsSet() const;
    void unsetIMAGE_DOWNLOAD_ERROR();

    void setIMAGEDOWNLOADERROR(int32_t value);

    /// <summary>
    /// We experienced a technical difficulty and were unable to ingest this some items. The next ingestion will happen in 24 hours.
    /// </summary>
    int32_t getLINELEVELINTERNALERROR() const;
    bool lINELEVELINTERNALERRORIsSet() const;
    void unsetLINE_LEVEL_INTERNAL_ERROR();

    void setLINELEVELINTERNALERROR(int32_t value);

    /// <summary>
    /// The product count has decreased by more than 99% compared to the last successful ingestion.
    /// </summary>
    int32_t getLARGEPRODUCTCOUNTDECREASE() const;
    bool lARGEPRODUCTCOUNTDECREASEIsSet() const;
    void unsetLARGE_PRODUCT_COUNT_DECREASE();

    void setLARGEPRODUCTCOUNTDECREASE(int32_t value);

    /// <summary>
    /// We detected an issue with your account and are not currently ingesting your items. Please review our policies at policy.pinterest.com/community-guidelines#section-spam or contact us at help.pinterest.com/contact for more information.
    /// </summary>
    int32_t getACCOUNTFLAGGED() const;
    bool aCCOUNTFLAGGEDIsSet() const;
    void unsetACCOUNT_FLAGGED();

    void setACCOUNTFLAGGED(int32_t value);


protected:
    int32_t m_IMAGE_DOWNLOAD_ERROR;
    bool m_IMAGE_DOWNLOAD_ERRORIsSet;
    int32_t m_LINE_LEVEL_INTERNAL_ERROR;
    bool m_LINE_LEVEL_INTERNAL_ERRORIsSet;
    int32_t m_LARGE_PRODUCT_COUNT_DECREASE;
    bool m_LARGE_PRODUCT_COUNT_DECREASEIsSet;
    int32_t m_ACCOUNT_FLAGGED;
    bool m_ACCOUNT_FLAGGEDIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsFeedIngestionErrors_H_ */
