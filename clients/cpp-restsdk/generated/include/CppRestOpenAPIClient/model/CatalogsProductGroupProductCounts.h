/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.6.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.4.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CatalogsProductGroupProductCounts.h
 *
 * Product counts for a CatalogsProductGroup
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsProductGroupProductCounts_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsProductGroupProductCounts_H_


#include "CppRestOpenAPIClient/ModelBase.h"


namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// Product counts for a CatalogsProductGroup
/// </summary>
class  CatalogsProductGroupProductCounts
    : public ModelBase
{
public:
    CatalogsProductGroupProductCounts();
    virtual ~CatalogsProductGroupProductCounts();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CatalogsProductGroupProductCounts members

    /// <summary>
    /// 
    /// </summary>
    double getInStock() const;
    bool inStockIsSet() const;
    void unsetIn_stock();

    void setInStock(double value);

    /// <summary>
    /// 
    /// </summary>
    double getOutOfStock() const;
    bool outOfStockIsSet() const;
    void unsetOut_of_stock();

    void setOutOfStock(double value);

    /// <summary>
    /// 
    /// </summary>
    double getPreorder() const;
    bool preorderIsSet() const;
    void unsetPreorder();

    void setPreorder(double value);

    /// <summary>
    /// 
    /// </summary>
    double getTotal() const;
    bool totalIsSet() const;
    void unsetTotal();

    void setTotal(double value);


protected:
    double m_In_stock;
    bool m_In_stockIsSet;
    double m_Out_of_stock;
    bool m_Out_of_stockIsSet;
    double m_Preorder;
    bool m_PreorderIsSet;
    double m_Total;
    bool m_TotalIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsProductGroupProductCounts_H_ */
