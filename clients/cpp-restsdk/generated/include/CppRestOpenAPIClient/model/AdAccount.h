/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.4.1
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.1.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * AdAccount.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_AdAccount_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_AdAccount_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/Currency.h"
#include <cpprest/details/basic_types.h>
#include "CppRestOpenAPIClient/model/Country.h"
#include <vector>
#include "CppRestOpenAPIClient/model/Ad_account_owner.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

class Ad_account_owner;

/// <summary>
/// 
/// </summary>
class  AdAccount
    : public ModelBase
{
public:
    AdAccount();
    virtual ~AdAccount();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// AdAccount members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();

    void setName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Ad_account_owner> getOwner() const;
    bool ownerIsSet() const;
    void unsetOwner();

    void setOwner(const std::shared_ptr<Ad_account_owner>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Country> getCountry() const;
    bool countryIsSet() const;
    void unsetCountry();

    void setCountry(const std::shared_ptr<Country>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Currency> getCurrency() const;
    bool currencyIsSet() const;
    void unsetCurrency();

    void setCurrency(const std::shared_ptr<Currency>& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<utility::string_t>& getPermissions();
    bool permissionsIsSet() const;
    void unsetPermissions();

    void setPermissions(const std::vector<utility::string_t>& value);


protected:
    utility::string_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_Name;
    bool m_NameIsSet;
    std::shared_ptr<Ad_account_owner> m_Owner;
    bool m_OwnerIsSet;
    std::shared_ptr<Country> m_Country;
    bool m_CountryIsSet;
    std::shared_ptr<Currency> m_Currency;
    bool m_CurrencyIsSet;
    std::vector<utility::string_t> m_Permissions;
    bool m_PermissionsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_AdAccount_H_ */
