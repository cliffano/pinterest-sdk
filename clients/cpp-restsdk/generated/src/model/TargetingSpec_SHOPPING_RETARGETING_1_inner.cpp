/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.6.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.4.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "CppRestOpenAPIClient/model/TargetingSpec_SHOPPING_RETARGETING_1_inner.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {



TargetingSpec_SHOPPING_RETARGETING_1_inner::TargetingSpec_SHOPPING_RETARGETING_1_inner()
{
    m_Lookback_window = 0;
    m_Lookback_windowIsSet = false;
    m_Tag_typesIsSet = false;
    m_Exclusion_window = 0;
    m_Exclusion_windowIsSet = false;
}

TargetingSpec_SHOPPING_RETARGETING_1_inner::~TargetingSpec_SHOPPING_RETARGETING_1_inner()
{
}

void TargetingSpec_SHOPPING_RETARGETING_1_inner::validate()
{
    // TODO: implement validation
}

web::json::value TargetingSpec_SHOPPING_RETARGETING_1_inner::toJson() const
{

    web::json::value val = web::json::value::object();
    
    if(m_Lookback_windowIsSet)
    {
        val[utility::conversions::to_string_t(U("lookback_window"))] = ModelBase::toJson(m_Lookback_window);
    }
    if(m_Tag_typesIsSet)
    {
        val[utility::conversions::to_string_t(U("tag_types"))] = ModelBase::toJson(m_Tag_types);
    }
    if(m_Exclusion_windowIsSet)
    {
        val[utility::conversions::to_string_t(U("exclusion_window"))] = ModelBase::toJson(m_Exclusion_window);
    }

    return val;
}

bool TargetingSpec_SHOPPING_RETARGETING_1_inner::fromJson(const web::json::value& val)
{
    bool ok = true;
    
    if(val.has_field(utility::conversions::to_string_t(U("lookback_window"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("lookback_window")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setLookbackWindow;
            ok &= ModelBase::fromJson(fieldValue, refVal_setLookbackWindow);
            setLookbackWindow(refVal_setLookbackWindow);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("tag_types"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("tag_types")));
        if(!fieldValue.is_null())
        {
            std::vector<int32_t> refVal_setTagTypes;
            ok &= ModelBase::fromJson(fieldValue, refVal_setTagTypes);
            setTagTypes(refVal_setTagTypes);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("exclusion_window"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("exclusion_window")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setExclusionWindow;
            ok &= ModelBase::fromJson(fieldValue, refVal_setExclusionWindow);
            setExclusionWindow(refVal_setExclusionWindow);
        }
    }
    return ok;
}

void TargetingSpec_SHOPPING_RETARGETING_1_inner::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t(U(".")))
    {
        namePrefix += utility::conversions::to_string_t(U("."));
    }
    if(m_Lookback_windowIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("lookback_window")), m_Lookback_window));
    }
    if(m_Tag_typesIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("tag_types")), m_Tag_types));
    }
    if(m_Exclusion_windowIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("exclusion_window")), m_Exclusion_window));
    }
}

bool TargetingSpec_SHOPPING_RETARGETING_1_inner::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    bool ok = true;
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t(U(".")))
    {
        namePrefix += utility::conversions::to_string_t(U("."));
    }

    if(multipart->hasContent(utility::conversions::to_string_t(U("lookback_window"))))
    {
        int32_t refVal_setLookbackWindow;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("lookback_window"))), refVal_setLookbackWindow );
        setLookbackWindow(refVal_setLookbackWindow);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("tag_types"))))
    {
        std::vector<int32_t> refVal_setTagTypes;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("tag_types"))), refVal_setTagTypes );
        setTagTypes(refVal_setTagTypes);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("exclusion_window"))))
    {
        int32_t refVal_setExclusionWindow;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("exclusion_window"))), refVal_setExclusionWindow );
        setExclusionWindow(refVal_setExclusionWindow);
    }
    return ok;
}

int32_t TargetingSpec_SHOPPING_RETARGETING_1_inner::getLookbackWindow() const
{
    return m_Lookback_window;
}

void TargetingSpec_SHOPPING_RETARGETING_1_inner::setLookbackWindow(int32_t value)
{
    m_Lookback_window = value;
    m_Lookback_windowIsSet = true;
}

bool TargetingSpec_SHOPPING_RETARGETING_1_inner::lookbackWindowIsSet() const
{
    return m_Lookback_windowIsSet;
}

void TargetingSpec_SHOPPING_RETARGETING_1_inner::unsetLookback_window()
{
    m_Lookback_windowIsSet = false;
}
std::vector<int32_t>& TargetingSpec_SHOPPING_RETARGETING_1_inner::getTagTypes()
{
    return m_Tag_types;
}

void TargetingSpec_SHOPPING_RETARGETING_1_inner::setTagTypes(std::vector<int32_t> value)
{
    m_Tag_types = value;
    m_Tag_typesIsSet = true;
}

bool TargetingSpec_SHOPPING_RETARGETING_1_inner::tagTypesIsSet() const
{
    return m_Tag_typesIsSet;
}

void TargetingSpec_SHOPPING_RETARGETING_1_inner::unsetTag_types()
{
    m_Tag_typesIsSet = false;
}
int32_t TargetingSpec_SHOPPING_RETARGETING_1_inner::getExclusionWindow() const
{
    return m_Exclusion_window;
}

void TargetingSpec_SHOPPING_RETARGETING_1_inner::setExclusionWindow(int32_t value)
{
    m_Exclusion_window = value;
    m_Exclusion_windowIsSet = true;
}

bool TargetingSpec_SHOPPING_RETARGETING_1_inner::exclusionWindowIsSet() const
{
    return m_Exclusion_windowIsSet;
}

void TargetingSpec_SHOPPING_RETARGETING_1_inner::unsetExclusion_window()
{
    m_Exclusion_windowIsSet = false;
}
}
}
}
}


