# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, validator  # noqa: F401


class ItemAttributes(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    ItemAttributes - a model defined in OpenAPI

        ad_link: The ad_link of this ItemAttributes [Optional].
        additional_image_link: The additional_image_link of this ItemAttributes [Optional].
        adult: The adult of this ItemAttributes [Optional].
        age_group: The age_group of this ItemAttributes [Optional].
        availability: The availability of this ItemAttributes [Optional].
        average_review_rating: The average_review_rating of this ItemAttributes [Optional].
        brand: The brand of this ItemAttributes [Optional].
        color: The color of this ItemAttributes [Optional].
        condition: The condition of this ItemAttributes [Optional].
        custom_label_0: The custom_label_0 of this ItemAttributes [Optional].
        custom_label_1: The custom_label_1 of this ItemAttributes [Optional].
        custom_label_2: The custom_label_2 of this ItemAttributes [Optional].
        custom_label_3: The custom_label_3 of this ItemAttributes [Optional].
        custom_label_4: The custom_label_4 of this ItemAttributes [Optional].
        description: The description of this ItemAttributes [Optional].
        free_shipping_label: The free_shipping_label of this ItemAttributes [Optional].
        free_shipping_limit: The free_shipping_limit of this ItemAttributes [Optional].
        gender: The gender of this ItemAttributes [Optional].
        google_product_category: The google_product_category of this ItemAttributes [Optional].
        gtin: The gtin of this ItemAttributes [Optional].
        id: The id of this ItemAttributes [Optional].
        image_link: The image_link of this ItemAttributes [Optional].
        item_group_id: The item_group_id of this ItemAttributes [Optional].
        last_updated_time: The last_updated_time of this ItemAttributes [Optional].
        link: The link of this ItemAttributes [Optional].
        material: The material of this ItemAttributes [Optional].
        min_ad_price: The min_ad_price of this ItemAttributes [Optional].
        mobile_link: The mobile_link of this ItemAttributes [Optional].
        mpn: The mpn of this ItemAttributes [Optional].
        number_of_ratings: The number_of_ratings of this ItemAttributes [Optional].
        number_of_reviews: The number_of_reviews of this ItemAttributes [Optional].
        pattern: The pattern of this ItemAttributes [Optional].
        price: The price of this ItemAttributes [Optional].
        product_type: The product_type of this ItemAttributes [Optional].
        sale_price: The sale_price of this ItemAttributes [Optional].
        shipping: The shipping of this ItemAttributes [Optional].
        shipping_height: The shipping_height of this ItemAttributes [Optional].
        shipping_weight: The shipping_weight of this ItemAttributes [Optional].
        shipping_width: The shipping_width of this ItemAttributes [Optional].
        size: The size of this ItemAttributes [Optional].
        size_system: The size_system of this ItemAttributes [Optional].
        size_type: The size_type of this ItemAttributes [Optional].
        tax: The tax of this ItemAttributes [Optional].
        title: The title of this ItemAttributes [Optional].
    """

    ad_link: Optional[str] = None
    additional_image_link: Optional[List[str]] = None
    adult: Optional[bool] = None
    age_group: Optional[str] = None
    availability: Optional[str] = None
    average_review_rating: Optional[float] = None
    brand: Optional[str] = None
    color: Optional[str] = None
    condition: Optional[str] = None
    custom_label_0: Optional[str] = None
    custom_label_1: Optional[str] = None
    custom_label_2: Optional[str] = None
    custom_label_3: Optional[str] = None
    custom_label_4: Optional[str] = None
    description: Optional[str] = None
    free_shipping_label: Optional[bool] = None
    free_shipping_limit: Optional[str] = None
    gender: Optional[str] = None
    google_product_category: Optional[str] = None
    gtin: Optional[int] = None
    id: Optional[str] = None
    image_link: Optional[List[str]] = None
    item_group_id: Optional[str] = None
    last_updated_time: Optional[int] = None
    link: Optional[str] = None
    material: Optional[str] = None
    min_ad_price: Optional[str] = None
    mobile_link: Optional[str] = None
    mpn: Optional[str] = None
    number_of_ratings: Optional[int] = None
    number_of_reviews: Optional[int] = None
    pattern: Optional[str] = None
    price: Optional[str] = None
    product_type: Optional[str] = None
    sale_price: Optional[str] = None
    shipping: Optional[str] = None
    shipping_height: Optional[str] = None
    shipping_weight: Optional[str] = None
    shipping_width: Optional[str] = None
    size: Optional[str] = None
    size_system: Optional[str] = None
    size_type: Optional[str] = None
    tax: Optional[str] = None
    title: Optional[str] = None

    @validator("custom_label_0")
    def custom_label_0_max_length(cls, value):
        assert len(value) <= 1000
        return value

    @validator("custom_label_1")
    def custom_label_1_max_length(cls, value):
        assert len(value) <= 1000
        return value

    @validator("custom_label_2")
    def custom_label_2_max_length(cls, value):
        assert len(value) <= 1000
        return value

    @validator("custom_label_3")
    def custom_label_3_max_length(cls, value):
        assert len(value) <= 1000
        return value

    @validator("custom_label_4")
    def custom_label_4_max_length(cls, value):
        assert len(value) <= 1000
        return value

    @validator("description")
    def description_max_length(cls, value):
        assert len(value) <= 10000
        return value

    @validator("id")
    def id_max_length(cls, value):
        assert len(value) <= 127
        return value

    @validator("item_group_id")
    def item_group_id_max_length(cls, value):
        assert len(value) <= 127
        return value

    @validator("link")
    def link_max_length(cls, value):
        assert len(value) <= 511
        return value

    @validator("product_type")
    def product_type_max_length(cls, value):
        assert len(value) <= 1000
        return value

    @validator("title")
    def title_max_length(cls, value):
        assert len(value) <= 500
        return value

ItemAttributes.update_forward_refs()
