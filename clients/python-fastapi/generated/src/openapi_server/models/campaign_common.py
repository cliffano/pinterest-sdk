# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, validator  # noqa: F401
from openapi_server.models.entity_status import EntityStatus
from openapi_server.models.tracking_urls import TrackingUrls


class CampaignCommon(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    CampaignCommon - a model defined in OpenAPI

        ad_account_id: The ad_account_id of this CampaignCommon.
        name: The name of this CampaignCommon [Optional].
        status: The status of this CampaignCommon [Optional].
        lifetime_spend_cap: The lifetime_spend_cap of this CampaignCommon [Optional].
        daily_spend_cap: The daily_spend_cap of this CampaignCommon [Optional].
        order_line_id: The order_line_id of this CampaignCommon [Optional].
        tracking_urls: The tracking_urls of this CampaignCommon [Optional].
        start_time: The start_time of this CampaignCommon [Optional].
        end_time: The end_time of this CampaignCommon [Optional].
    """

    ad_account_id: str
    name: Optional[str] = None
    status: Optional[EntityStatus] = None
    lifetime_spend_cap: Optional[int] = None
    daily_spend_cap: Optional[int] = None
    order_line_id: Optional[str] = None
    tracking_urls: Optional[TrackingUrls] = None
    start_time: Optional[int] = None
    end_time: Optional[int] = None

    @validator("ad_account_id")
    def ad_account_id_pattern(cls, value):
        assert value is not None and re.match(r"^\d+$", value)
        return value

    @validator("order_line_id")
    def order_line_id_pattern(cls, value):
        assert value is not None and re.match(r"^\d+$", value)
        return value

CampaignCommon.update_forward_refs()
