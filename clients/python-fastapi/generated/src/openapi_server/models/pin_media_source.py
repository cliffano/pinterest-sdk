# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, validator  # noqa: F401
from openapi_server.models.pin_media_source_image_base64 import PinMediaSourceImageBase64
from openapi_server.models.pin_media_source_image_url import PinMediaSourceImageURL
from openapi_server.models.pin_media_source_video_id import PinMediaSourceVideoID


class PinMediaSource(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    PinMediaSource - a model defined in OpenAPI

        source_type: The source_type of this PinMediaSource.
        content_type: The content_type of this PinMediaSource.
        data: The data of this PinMediaSource.
        url: The url of this PinMediaSource.
        cover_image_url: The cover_image_url of this PinMediaSource.
        media_id: The media_id of this PinMediaSource.
    """

    source_type: str
    content_type: str
    data: str
    url: str
    cover_image_url: str
    media_id: str

    @validator("data")
    def data_pattern(cls, value):
        assert value is not None and re.match(r"[a-zA-Z0-9+\\/&#x3D;]+", value)
        return value

    @validator("media_id")
    def media_id_pattern(cls, value):
        assert value is not None and re.match(r"^\d+$", value)
        return value

PinMediaSource.update_forward_refs()
