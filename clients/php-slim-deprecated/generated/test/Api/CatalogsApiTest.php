<?php
/**
 * CatalogsApiTest
 *
 * PHP version 7
 *
 * @package OpenAPIServer\Api
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 * The version of the OpenAPI document: 5.3.0
 * Contact: pinterest-api@pinterest.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the endpoint.
 */
namespace OpenAPIServer\Api;

use PHPUnit\Framework\TestCase;
use OpenAPIServer\Api\CatalogsApi;

/**
 * CatalogsApiTest Class Doc Comment
 *
 * @package OpenAPIServer\Api
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 *
 * @coversDefaultClass \OpenAPIServer\Api\CatalogsApi
 */
class CatalogsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for catalogsProductGroupsCreate
     *
     * Create product group.
     *
     * @covers ::catalogsProductGroupsCreate
     */
    public function testCatalogsProductGroupsCreate()
    {
    }

    /**
     * Test case for catalogsProductGroupsDelete
     *
     * Delete product group.
     *
     * @covers ::catalogsProductGroupsDelete
     */
    public function testCatalogsProductGroupsDelete()
    {
    }

    /**
     * Test case for catalogsProductGroupsList
     *
     * Get product groups list.
     *
     * @covers ::catalogsProductGroupsList
     */
    public function testCatalogsProductGroupsList()
    {
    }

    /**
     * Test case for catalogsProductGroupsUpdate
     *
     * Update product group.
     *
     * @covers ::catalogsProductGroupsUpdate
     */
    public function testCatalogsProductGroupsUpdate()
    {
    }

    /**
     * Test case for feedProcessingResultsList
     *
     * List processing results for a given feed.
     *
     * @covers ::feedProcessingResultsList
     */
    public function testFeedProcessingResultsList()
    {
    }

    /**
     * Test case for feedsCreate
     *
     * Create feed.
     *
     * @covers ::feedsCreate
     */
    public function testFeedsCreate()
    {
    }

    /**
     * Test case for feedsDelete
     *
     * Delete feed.
     *
     * @covers ::feedsDelete
     */
    public function testFeedsDelete()
    {
    }

    /**
     * Test case for feedsGet
     *
     * Get feed.
     *
     * @covers ::feedsGet
     */
    public function testFeedsGet()
    {
    }

    /**
     * Test case for feedsList
     *
     * List feeds.
     *
     * @covers ::feedsList
     */
    public function testFeedsList()
    {
    }

    /**
     * Test case for feedsUpdate
     *
     * Update feed.
     *
     * @covers ::feedsUpdate
     */
    public function testFeedsUpdate()
    {
    }

    /**
     * Test case for itemsBatchGet
     *
     * Get catalogs items batch.
     *
     * @covers ::itemsBatchGet
     */
    public function testItemsBatchGet()
    {
    }

    /**
     * Test case for itemsBatchPost
     *
     * Perform an operation on an item batch.
     *
     * @covers ::itemsBatchPost
     */
    public function testItemsBatchPost()
    {
    }

    /**
     * Test case for itemsGet
     *
     * Get catalogs items.
     *
     * @covers ::itemsGet
     */
    public function testItemsGet()
    {
    }
}
