/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { AdResponseAllOf } from './adResponseAllOf';
import { AdResponseAllOf1 } from './adResponseAllOf1';
import { EntityStatus } from './entityStatus';
import { PinPromotionSummaryStatus } from './pinPromotionSummaryStatus';
import { TrackingUrls } from './trackingUrls';

export class AdResponse {
    /**
    * ID of the ad group that contains the ad.
    */
    'adGroupId'?: string;
    /**
    * Deep link URL for Android devices. Not currently available. Using this field will generate an error.
    */
    'androidDeepLink'?: string | null;
    /**
    * Comma-separated deep links for the carousel pin on Android.
    */
    'carouselAndroidDeepLinks'?: Array<string> | null;
    /**
    * Comma-separated destination URLs for the carousel pin to promote.
    */
    'carouselDestinationUrls'?: Array<string> | null;
    /**
    * Comma-separated deep links for the carousel pin on iOS.
    */
    'carouselIosDeepLinks'?: Array<string> | null;
    /**
    * Tracking url for the ad clicks.
    */
    'clickTrackingUrl'?: string | null;
    /**
    * Ad creative type enum
    */
    'creativeType'?: AdResponse.CreativeTypeEnum;
    /**
    * Destination URL.
    */
    'destinationUrl'?: string | null;
    /**
    * Deep link URL for iOS devices. Not currently available. Using this field will generate an error.
    */
    'iosDeepLink'?: string | null;
    /**
    * Is original pin deleted?
    */
    'isPinDeleted'?: boolean;
    /**
    * Is pin repinnable?
    */
    'isRemovable'?: boolean;
    /**
    * Name of the ad - 255 chars max.
    */
    'name'?: string | null;
    /**
    * Pin ID.
    */
    'pinId'?: string;
    'status'?: EntityStatus;
    'trackingUrls'?: TrackingUrls | null;
    /**
    * Tracking URL for ad impressions.
    */
    'viewTrackingUrl'?: string | null;
    /**
    * The ID of the advertiser that this ad belongs to.
    */
    'adAccountId'?: string;
    /**
    * ID of the ad campaign that contains this ad.
    */
    'campaignId'?: string;
    /**
    * Destination URL template for all items within a collections drawer.
    */
    'collectionItemsDestinationUrlTemplate'?: string | null;
    /**
    * Pin creation time. Unix timestamp in seconds.
    */
    'createdTime'?: number;
    /**
    * The ID of this ad.
    */
    'id'?: string;
    /**
    * Enum reason why the pin was rejected. Returned if <code>review_status</code> is \"REJECTED\".
    */
    'rejectedReasons'?: Array<AdResponse.RejectedReasonsEnum>;
    /**
    * Text reason why the pin was rejected. Returned if <code>review_status</code> is \"REJECTED\".
    */
    'rejectionLabels'?: Array<string>;
    /**
    * Ad review status
    */
    'reviewStatus'?: AdResponse.ReviewStatusEnum;
    /**
    * Always \"ad\".
    */
    'type'?: string;
    /**
    * Last update time. Unix timestamp in seconds.
    */
    'updatedTime'?: number;
    /**
    * Ad summary status
    */
    'summaryStatus'?: PinPromotionSummaryStatus;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "adGroupId",
            "baseName": "ad_group_id",
            "type": "string"
        },
        {
            "name": "androidDeepLink",
            "baseName": "android_deep_link",
            "type": "string"
        },
        {
            "name": "carouselAndroidDeepLinks",
            "baseName": "carousel_android_deep_links",
            "type": "Array<string>"
        },
        {
            "name": "carouselDestinationUrls",
            "baseName": "carousel_destination_urls",
            "type": "Array<string>"
        },
        {
            "name": "carouselIosDeepLinks",
            "baseName": "carousel_ios_deep_links",
            "type": "Array<string>"
        },
        {
            "name": "clickTrackingUrl",
            "baseName": "click_tracking_url",
            "type": "string"
        },
        {
            "name": "creativeType",
            "baseName": "creative_type",
            "type": "AdResponse.CreativeTypeEnum"
        },
        {
            "name": "destinationUrl",
            "baseName": "destination_url",
            "type": "string"
        },
        {
            "name": "iosDeepLink",
            "baseName": "ios_deep_link",
            "type": "string"
        },
        {
            "name": "isPinDeleted",
            "baseName": "is_pin_deleted",
            "type": "boolean"
        },
        {
            "name": "isRemovable",
            "baseName": "is_removable",
            "type": "boolean"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "pinId",
            "baseName": "pin_id",
            "type": "string"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "EntityStatus"
        },
        {
            "name": "trackingUrls",
            "baseName": "tracking_urls",
            "type": "TrackingUrls"
        },
        {
            "name": "viewTrackingUrl",
            "baseName": "view_tracking_url",
            "type": "string"
        },
        {
            "name": "adAccountId",
            "baseName": "ad_account_id",
            "type": "string"
        },
        {
            "name": "campaignId",
            "baseName": "campaign_id",
            "type": "string"
        },
        {
            "name": "collectionItemsDestinationUrlTemplate",
            "baseName": "collection_items_destination_url_template",
            "type": "string"
        },
        {
            "name": "createdTime",
            "baseName": "created_time",
            "type": "number"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "rejectedReasons",
            "baseName": "rejected_reasons",
            "type": "Array<AdResponse.RejectedReasonsEnum>"
        },
        {
            "name": "rejectionLabels",
            "baseName": "rejection_labels",
            "type": "Array<string>"
        },
        {
            "name": "reviewStatus",
            "baseName": "review_status",
            "type": "AdResponse.ReviewStatusEnum"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string"
        },
        {
            "name": "updatedTime",
            "baseName": "updated_time",
            "type": "number"
        },
        {
            "name": "summaryStatus",
            "baseName": "summary_status",
            "type": "PinPromotionSummaryStatus"
        }    ];

    static getAttributeTypeMap() {
        return AdResponse.attributeTypeMap;
    }
}

export namespace AdResponse {
    export enum CreativeTypeEnum {
        Regular = <any> 'REGULAR',
        Video = <any> 'VIDEO',
        Shopping = <any> 'SHOPPING',
        Carousel = <any> 'CAROUSEL',
        MaxVideo = <any> 'MAX_VIDEO',
        ShopThePin = <any> 'SHOP_THE_PIN',
        Story = <any> 'STORY'
    }
    export enum RejectedReasonsEnum {
        Hashtags = <any> 'HASHTAGS',
        PromotionsAndPrices = <any> 'PROMOTIONS_AND_PRICES',
        Targeting = <any> 'TARGETING',
        LandingPage = <any> 'LANDING_PAGE',
        CapsAndSymbols = <any> 'CAPS_AND_SYMBOLS',
        Shocking = <any> 'SHOCKING',
        WeightLoss = <any> 'WEIGHT_LOSS',
        ProhibitedProduct = <any> 'PROHIBITED_PRODUCT',
        Authenticity = <any> 'AUTHENTICITY',
        Nudity = <any> 'NUDITY',
        ConfusingDesign = <any> 'CONFUSING_DESIGN',
        Urgency = <any> 'URGENCY',
        Ratings = <any> 'RATINGS',
        App = <any> 'APP',
        Alcohol = <any> 'ALCOHOL',
        Contests = <any> 'CONTESTS',
        Political = <any> 'POLITICAL',
        Other = <any> 'OTHER',
        Image = <any> 'IMAGE',
        Nar = <any> 'NAR',
        Inconsistent = <any> 'INCONSISTENT',
        Clickbait = <any> 'CLICKBAIT',
        NoDescription = <any> 'NO_DESCRIPTION',
        LowQuality = <any> 'LOW_QUALITY',
        ExaggeratedClaims = <any> 'EXAGGERATED_CLAIMS',
        PinterestBrand = <any> 'PINTEREST_BRAND',
        AlcoholNoSale = <any> 'ALCOHOL_NO_SALE',
        LandingPageSpeed = <any> 'LANDING_PAGE_SPEED',
        LandingPageHardwall = <any> 'LANDING_PAGE_HARDWALL',
        LandingPageBroken = <any> 'LANDING_PAGE_BROKEN',
        LandingPageQuality = <any> 'LANDING_PAGE_QUALITY',
        OutOfStock = <any> 'OUT_OF_STOCK',
        ImageLowQuality = <any> 'IMAGE_LOW_QUALITY',
        ImageBusy = <any> 'IMAGE_BUSY',
        ImagePoorlyEdited = <any> 'IMAGE_POORLY_EDITED',
        ImageBeforeAfter = <any> 'IMAGE_BEFORE_AFTER',
        Ugc = <any> 'UGC',
        FakeButtons = <any> 'FAKE_BUTTONS',
        Weapons = <any> 'WEAPONS',
        Sensitive = <any> 'SENSITIVE',
        UnacceptableBusiness = <any> 'UNACCEPTABLE_BUSINESS',
        SuspiciousClaims = <any> 'SUSPICIOUS_CLAIMS',
        Pharma = <any> 'PHARMA',
        SuspiciousSupplements = <any> 'SUSPICIOUS_SUPPLEMENTS',
        IllegalRecreationalDrug = <any> 'ILLEGAL_RECREATIONAL_DRUG',
        LowQualityLandingPage = <any> 'LOW_QUALITY_LANDING_PAGE',
        RestrictedHealthcare = <any> 'RESTRICTED_HEALTHCARE',
        InconsistentLangFr = <any> 'INCONSISTENT_LANG_FR'
    }
    export enum ReviewStatusEnum {
        Other = <any> 'OTHER',
        Pending = <any> 'PENDING',
        Rejected = <any> 'REJECTED',
        Approved = <any> 'APPROVED'
    }
}
