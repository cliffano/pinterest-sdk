/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { Board } from './board';
import { EntityStatus } from './entityStatus';

/**
* non-promoted catalog product group entity
*/
export class CatalogProductGroup {
    /**
    * ID of the catalog product group.
    */
    'id'?: string;
    /**
    * Merchant ID pertaining to the owner of the catalog product group.
    */
    'merchantId'?: string;
    /**
    * Name of catalog product group
    */
    'name'?: string;
    /**
    * Object holding a list of filters
    */
    'filters'?: object;
    /**
    * Object holding a list of filters
    */
    'filterV2'?: object;
    'type'?: Board;
    'status'?: EntityStatus;
    /**
    * id of the feed profile belonging to this catalog product group
    */
    'feedProfileId'?: string;
    /**
    * Unix timestamp in seconds of when catalog product group was created.
    */
    'createdAt'?: number;
    /**
    * Unix timestamp in seconds of last time catalog product group was updated.
    */
    'lastUpdate'?: number;
    /**
    * Amount of products in the catalog product group
    */
    'productCount'?: number;
    /**
    * index of the featured position of the catalog product group
    */
    'featuredPosition'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "merchantId",
            "baseName": "merchant_id",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "filters",
            "baseName": "filters",
            "type": "object"
        },
        {
            "name": "filterV2",
            "baseName": "filter_v2",
            "type": "object"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "Board"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "EntityStatus"
        },
        {
            "name": "feedProfileId",
            "baseName": "feed_profile_id",
            "type": "string"
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "number"
        },
        {
            "name": "lastUpdate",
            "baseName": "last_update",
            "type": "number"
        },
        {
            "name": "productCount",
            "baseName": "product_count",
            "type": "number"
        },
        {
            "name": "featuredPosition",
            "baseName": "featured_position",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return CatalogProductGroup.attributeTypeMap;
    }
}

export namespace CatalogProductGroup {
}
