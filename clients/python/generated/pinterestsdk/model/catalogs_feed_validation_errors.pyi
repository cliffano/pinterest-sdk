# coding: utf-8

"""
    Pinterest REST API

    Pinterest's REST API  # noqa: E501

    The version of the OpenAPI document: 5.6.0
    Contact: blah@cliffano.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from pinterestsdk import schemas  # noqa: F401


class CatalogsFeedValidationErrors(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            FETCH_ERROR = schemas.IntSchema
            FETCH_INACTIVE_FEED_ERROR = schemas.IntSchema
            ENCODING_ERROR = schemas.IntSchema
            DELIMITER_ERROR = schemas.IntSchema
            REQUIRED_COLUMNS_MISSING = schemas.IntSchema
            IMAGE_LINK_INVALID = schemas.IntSchema
            ITEMID_MISSING = schemas.IntSchema
            TITLE_MISSING = schemas.IntSchema
            DESCRIPTION_MISSING = schemas.IntSchema
            PRODUCT_LINK_MISSING = schemas.IntSchema
            IMAGE_LINK_MISSING = schemas.IntSchema
            AVAILABILITY_INVALID = schemas.IntSchema
            PRODUCT_PRICE_INVALID = schemas.IntSchema
            LINK_FORMAT_INVALID = schemas.IntSchema
            PARSE_LINE_ERROR = schemas.IntSchema
            ADWORDS_FORMAT_INVALID = schemas.IntSchema
            INTERNAL_SERVICE_ERROR = schemas.IntSchema
            NO_VERIFIED_DOMAIN = schemas.IntSchema
            ADULT_INVALID = schemas.IntSchema
            IMAGE_LINK_LENGTH_TOO_LONG = schemas.IntSchema
            INVALID_DOMAIN = schemas.IntSchema
            FEED_LENGTH_TOO_LONG = schemas.IntSchema
            LINK_LENGTH_TOO_LONG = schemas.IntSchema
            MALFORMED_XML = schemas.IntSchema
            PRICE_MISSING = schemas.IntSchema
            FEED_TOO_SMALL = schemas.IntSchema
            MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED = schemas.IntSchema
            ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE = schemas.IntSchema
            PINJOIN_CONTENT_UNSAFE = schemas.IntSchema
            BLOCKLISTED_IMAGE_SIGNATURE = schemas.IntSchema
            LIST_PRICE_INVALID = schemas.IntSchema
            PRICE_CANNOT_BE_DETERMINED = schemas.IntSchema
            __annotations__ = {
                "FETCH_ERROR": FETCH_ERROR,
                "FETCH_INACTIVE_FEED_ERROR": FETCH_INACTIVE_FEED_ERROR,
                "ENCODING_ERROR": ENCODING_ERROR,
                "DELIMITER_ERROR": DELIMITER_ERROR,
                "REQUIRED_COLUMNS_MISSING": REQUIRED_COLUMNS_MISSING,
                "IMAGE_LINK_INVALID": IMAGE_LINK_INVALID,
                "ITEMID_MISSING": ITEMID_MISSING,
                "TITLE_MISSING": TITLE_MISSING,
                "DESCRIPTION_MISSING": DESCRIPTION_MISSING,
                "PRODUCT_LINK_MISSING": PRODUCT_LINK_MISSING,
                "IMAGE_LINK_MISSING": IMAGE_LINK_MISSING,
                "AVAILABILITY_INVALID": AVAILABILITY_INVALID,
                "PRODUCT_PRICE_INVALID": PRODUCT_PRICE_INVALID,
                "LINK_FORMAT_INVALID": LINK_FORMAT_INVALID,
                "PARSE_LINE_ERROR": PARSE_LINE_ERROR,
                "ADWORDS_FORMAT_INVALID": ADWORDS_FORMAT_INVALID,
                "INTERNAL_SERVICE_ERROR": INTERNAL_SERVICE_ERROR,
                "NO_VERIFIED_DOMAIN": NO_VERIFIED_DOMAIN,
                "ADULT_INVALID": ADULT_INVALID,
                "IMAGE_LINK_LENGTH_TOO_LONG": IMAGE_LINK_LENGTH_TOO_LONG,
                "INVALID_DOMAIN": INVALID_DOMAIN,
                "FEED_LENGTH_TOO_LONG": FEED_LENGTH_TOO_LONG,
                "LINK_LENGTH_TOO_LONG": LINK_LENGTH_TOO_LONG,
                "MALFORMED_XML": MALFORMED_XML,
                "PRICE_MISSING": PRICE_MISSING,
                "FEED_TOO_SMALL": FEED_TOO_SMALL,
                "MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED": MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED,
                "ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE": ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE,
                "PINJOIN_CONTENT_UNSAFE": PINJOIN_CONTENT_UNSAFE,
                "BLOCKLISTED_IMAGE_SIGNATURE": BLOCKLISTED_IMAGE_SIGNATURE,
                "LIST_PRICE_INVALID": LIST_PRICE_INVALID,
                "PRICE_CANNOT_BE_DETERMINED": PRICE_CANNOT_BE_DETERMINED,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["FETCH_ERROR"]) -> MetaOapg.properties.FETCH_ERROR: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["FETCH_INACTIVE_FEED_ERROR"]) -> MetaOapg.properties.FETCH_INACTIVE_FEED_ERROR: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ENCODING_ERROR"]) -> MetaOapg.properties.ENCODING_ERROR: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["DELIMITER_ERROR"]) -> MetaOapg.properties.DELIMITER_ERROR: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["REQUIRED_COLUMNS_MISSING"]) -> MetaOapg.properties.REQUIRED_COLUMNS_MISSING: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["IMAGE_LINK_INVALID"]) -> MetaOapg.properties.IMAGE_LINK_INVALID: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ITEMID_MISSING"]) -> MetaOapg.properties.ITEMID_MISSING: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["TITLE_MISSING"]) -> MetaOapg.properties.TITLE_MISSING: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["DESCRIPTION_MISSING"]) -> MetaOapg.properties.DESCRIPTION_MISSING: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["PRODUCT_LINK_MISSING"]) -> MetaOapg.properties.PRODUCT_LINK_MISSING: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["IMAGE_LINK_MISSING"]) -> MetaOapg.properties.IMAGE_LINK_MISSING: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["AVAILABILITY_INVALID"]) -> MetaOapg.properties.AVAILABILITY_INVALID: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["PRODUCT_PRICE_INVALID"]) -> MetaOapg.properties.PRODUCT_PRICE_INVALID: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["LINK_FORMAT_INVALID"]) -> MetaOapg.properties.LINK_FORMAT_INVALID: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["PARSE_LINE_ERROR"]) -> MetaOapg.properties.PARSE_LINE_ERROR: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ADWORDS_FORMAT_INVALID"]) -> MetaOapg.properties.ADWORDS_FORMAT_INVALID: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["INTERNAL_SERVICE_ERROR"]) -> MetaOapg.properties.INTERNAL_SERVICE_ERROR: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["NO_VERIFIED_DOMAIN"]) -> MetaOapg.properties.NO_VERIFIED_DOMAIN: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ADULT_INVALID"]) -> MetaOapg.properties.ADULT_INVALID: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["IMAGE_LINK_LENGTH_TOO_LONG"]) -> MetaOapg.properties.IMAGE_LINK_LENGTH_TOO_LONG: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["INVALID_DOMAIN"]) -> MetaOapg.properties.INVALID_DOMAIN: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["FEED_LENGTH_TOO_LONG"]) -> MetaOapg.properties.FEED_LENGTH_TOO_LONG: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["LINK_LENGTH_TOO_LONG"]) -> MetaOapg.properties.LINK_LENGTH_TOO_LONG: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["MALFORMED_XML"]) -> MetaOapg.properties.MALFORMED_XML: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["PRICE_MISSING"]) -> MetaOapg.properties.PRICE_MISSING: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["FEED_TOO_SMALL"]) -> MetaOapg.properties.FEED_TOO_SMALL: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED"]) -> MetaOapg.properties.MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE"]) -> MetaOapg.properties.ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["PINJOIN_CONTENT_UNSAFE"]) -> MetaOapg.properties.PINJOIN_CONTENT_UNSAFE: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["BLOCKLISTED_IMAGE_SIGNATURE"]) -> MetaOapg.properties.BLOCKLISTED_IMAGE_SIGNATURE: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["LIST_PRICE_INVALID"]) -> MetaOapg.properties.LIST_PRICE_INVALID: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["PRICE_CANNOT_BE_DETERMINED"]) -> MetaOapg.properties.PRICE_CANNOT_BE_DETERMINED: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["FETCH_ERROR", "FETCH_INACTIVE_FEED_ERROR", "ENCODING_ERROR", "DELIMITER_ERROR", "REQUIRED_COLUMNS_MISSING", "IMAGE_LINK_INVALID", "ITEMID_MISSING", "TITLE_MISSING", "DESCRIPTION_MISSING", "PRODUCT_LINK_MISSING", "IMAGE_LINK_MISSING", "AVAILABILITY_INVALID", "PRODUCT_PRICE_INVALID", "LINK_FORMAT_INVALID", "PARSE_LINE_ERROR", "ADWORDS_FORMAT_INVALID", "INTERNAL_SERVICE_ERROR", "NO_VERIFIED_DOMAIN", "ADULT_INVALID", "IMAGE_LINK_LENGTH_TOO_LONG", "INVALID_DOMAIN", "FEED_LENGTH_TOO_LONG", "LINK_LENGTH_TOO_LONG", "MALFORMED_XML", "PRICE_MISSING", "FEED_TOO_SMALL", "MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED", "ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE", "PINJOIN_CONTENT_UNSAFE", "BLOCKLISTED_IMAGE_SIGNATURE", "LIST_PRICE_INVALID", "PRICE_CANNOT_BE_DETERMINED", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["FETCH_ERROR"]) -> typing.Union[MetaOapg.properties.FETCH_ERROR, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["FETCH_INACTIVE_FEED_ERROR"]) -> typing.Union[MetaOapg.properties.FETCH_INACTIVE_FEED_ERROR, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ENCODING_ERROR"]) -> typing.Union[MetaOapg.properties.ENCODING_ERROR, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["DELIMITER_ERROR"]) -> typing.Union[MetaOapg.properties.DELIMITER_ERROR, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["REQUIRED_COLUMNS_MISSING"]) -> typing.Union[MetaOapg.properties.REQUIRED_COLUMNS_MISSING, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["IMAGE_LINK_INVALID"]) -> typing.Union[MetaOapg.properties.IMAGE_LINK_INVALID, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ITEMID_MISSING"]) -> typing.Union[MetaOapg.properties.ITEMID_MISSING, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["TITLE_MISSING"]) -> typing.Union[MetaOapg.properties.TITLE_MISSING, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["DESCRIPTION_MISSING"]) -> typing.Union[MetaOapg.properties.DESCRIPTION_MISSING, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["PRODUCT_LINK_MISSING"]) -> typing.Union[MetaOapg.properties.PRODUCT_LINK_MISSING, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["IMAGE_LINK_MISSING"]) -> typing.Union[MetaOapg.properties.IMAGE_LINK_MISSING, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["AVAILABILITY_INVALID"]) -> typing.Union[MetaOapg.properties.AVAILABILITY_INVALID, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["PRODUCT_PRICE_INVALID"]) -> typing.Union[MetaOapg.properties.PRODUCT_PRICE_INVALID, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["LINK_FORMAT_INVALID"]) -> typing.Union[MetaOapg.properties.LINK_FORMAT_INVALID, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["PARSE_LINE_ERROR"]) -> typing.Union[MetaOapg.properties.PARSE_LINE_ERROR, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ADWORDS_FORMAT_INVALID"]) -> typing.Union[MetaOapg.properties.ADWORDS_FORMAT_INVALID, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["INTERNAL_SERVICE_ERROR"]) -> typing.Union[MetaOapg.properties.INTERNAL_SERVICE_ERROR, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["NO_VERIFIED_DOMAIN"]) -> typing.Union[MetaOapg.properties.NO_VERIFIED_DOMAIN, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ADULT_INVALID"]) -> typing.Union[MetaOapg.properties.ADULT_INVALID, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["IMAGE_LINK_LENGTH_TOO_LONG"]) -> typing.Union[MetaOapg.properties.IMAGE_LINK_LENGTH_TOO_LONG, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["INVALID_DOMAIN"]) -> typing.Union[MetaOapg.properties.INVALID_DOMAIN, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["FEED_LENGTH_TOO_LONG"]) -> typing.Union[MetaOapg.properties.FEED_LENGTH_TOO_LONG, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["LINK_LENGTH_TOO_LONG"]) -> typing.Union[MetaOapg.properties.LINK_LENGTH_TOO_LONG, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["MALFORMED_XML"]) -> typing.Union[MetaOapg.properties.MALFORMED_XML, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["PRICE_MISSING"]) -> typing.Union[MetaOapg.properties.PRICE_MISSING, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["FEED_TOO_SMALL"]) -> typing.Union[MetaOapg.properties.FEED_TOO_SMALL, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED"]) -> typing.Union[MetaOapg.properties.MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE"]) -> typing.Union[MetaOapg.properties.ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["PINJOIN_CONTENT_UNSAFE"]) -> typing.Union[MetaOapg.properties.PINJOIN_CONTENT_UNSAFE, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["BLOCKLISTED_IMAGE_SIGNATURE"]) -> typing.Union[MetaOapg.properties.BLOCKLISTED_IMAGE_SIGNATURE, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["LIST_PRICE_INVALID"]) -> typing.Union[MetaOapg.properties.LIST_PRICE_INVALID, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["PRICE_CANNOT_BE_DETERMINED"]) -> typing.Union[MetaOapg.properties.PRICE_CANNOT_BE_DETERMINED, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["FETCH_ERROR", "FETCH_INACTIVE_FEED_ERROR", "ENCODING_ERROR", "DELIMITER_ERROR", "REQUIRED_COLUMNS_MISSING", "IMAGE_LINK_INVALID", "ITEMID_MISSING", "TITLE_MISSING", "DESCRIPTION_MISSING", "PRODUCT_LINK_MISSING", "IMAGE_LINK_MISSING", "AVAILABILITY_INVALID", "PRODUCT_PRICE_INVALID", "LINK_FORMAT_INVALID", "PARSE_LINE_ERROR", "ADWORDS_FORMAT_INVALID", "INTERNAL_SERVICE_ERROR", "NO_VERIFIED_DOMAIN", "ADULT_INVALID", "IMAGE_LINK_LENGTH_TOO_LONG", "INVALID_DOMAIN", "FEED_LENGTH_TOO_LONG", "LINK_LENGTH_TOO_LONG", "MALFORMED_XML", "PRICE_MISSING", "FEED_TOO_SMALL", "MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED", "ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE", "PINJOIN_CONTENT_UNSAFE", "BLOCKLISTED_IMAGE_SIGNATURE", "LIST_PRICE_INVALID", "PRICE_CANNOT_BE_DETERMINED", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        FETCH_ERROR: typing.Union[MetaOapg.properties.FETCH_ERROR, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        FETCH_INACTIVE_FEED_ERROR: typing.Union[MetaOapg.properties.FETCH_INACTIVE_FEED_ERROR, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        ENCODING_ERROR: typing.Union[MetaOapg.properties.ENCODING_ERROR, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        DELIMITER_ERROR: typing.Union[MetaOapg.properties.DELIMITER_ERROR, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        REQUIRED_COLUMNS_MISSING: typing.Union[MetaOapg.properties.REQUIRED_COLUMNS_MISSING, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        IMAGE_LINK_INVALID: typing.Union[MetaOapg.properties.IMAGE_LINK_INVALID, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        ITEMID_MISSING: typing.Union[MetaOapg.properties.ITEMID_MISSING, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        TITLE_MISSING: typing.Union[MetaOapg.properties.TITLE_MISSING, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        DESCRIPTION_MISSING: typing.Union[MetaOapg.properties.DESCRIPTION_MISSING, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        PRODUCT_LINK_MISSING: typing.Union[MetaOapg.properties.PRODUCT_LINK_MISSING, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        IMAGE_LINK_MISSING: typing.Union[MetaOapg.properties.IMAGE_LINK_MISSING, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        AVAILABILITY_INVALID: typing.Union[MetaOapg.properties.AVAILABILITY_INVALID, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        PRODUCT_PRICE_INVALID: typing.Union[MetaOapg.properties.PRODUCT_PRICE_INVALID, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        LINK_FORMAT_INVALID: typing.Union[MetaOapg.properties.LINK_FORMAT_INVALID, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        PARSE_LINE_ERROR: typing.Union[MetaOapg.properties.PARSE_LINE_ERROR, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        ADWORDS_FORMAT_INVALID: typing.Union[MetaOapg.properties.ADWORDS_FORMAT_INVALID, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        INTERNAL_SERVICE_ERROR: typing.Union[MetaOapg.properties.INTERNAL_SERVICE_ERROR, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        NO_VERIFIED_DOMAIN: typing.Union[MetaOapg.properties.NO_VERIFIED_DOMAIN, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        ADULT_INVALID: typing.Union[MetaOapg.properties.ADULT_INVALID, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        IMAGE_LINK_LENGTH_TOO_LONG: typing.Union[MetaOapg.properties.IMAGE_LINK_LENGTH_TOO_LONG, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        INVALID_DOMAIN: typing.Union[MetaOapg.properties.INVALID_DOMAIN, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        FEED_LENGTH_TOO_LONG: typing.Union[MetaOapg.properties.FEED_LENGTH_TOO_LONG, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        LINK_LENGTH_TOO_LONG: typing.Union[MetaOapg.properties.LINK_LENGTH_TOO_LONG, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        MALFORMED_XML: typing.Union[MetaOapg.properties.MALFORMED_XML, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        PRICE_MISSING: typing.Union[MetaOapg.properties.PRICE_MISSING, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        FEED_TOO_SMALL: typing.Union[MetaOapg.properties.FEED_TOO_SMALL, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED: typing.Union[MetaOapg.properties.MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE: typing.Union[MetaOapg.properties.ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        PINJOIN_CONTENT_UNSAFE: typing.Union[MetaOapg.properties.PINJOIN_CONTENT_UNSAFE, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        BLOCKLISTED_IMAGE_SIGNATURE: typing.Union[MetaOapg.properties.BLOCKLISTED_IMAGE_SIGNATURE, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        LIST_PRICE_INVALID: typing.Union[MetaOapg.properties.LIST_PRICE_INVALID, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        PRICE_CANNOT_BE_DETERMINED: typing.Union[MetaOapg.properties.PRICE_CANNOT_BE_DETERMINED, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'CatalogsFeedValidationErrors':
        return super().__new__(
            cls,
            *args,
            FETCH_ERROR=FETCH_ERROR,
            FETCH_INACTIVE_FEED_ERROR=FETCH_INACTIVE_FEED_ERROR,
            ENCODING_ERROR=ENCODING_ERROR,
            DELIMITER_ERROR=DELIMITER_ERROR,
            REQUIRED_COLUMNS_MISSING=REQUIRED_COLUMNS_MISSING,
            IMAGE_LINK_INVALID=IMAGE_LINK_INVALID,
            ITEMID_MISSING=ITEMID_MISSING,
            TITLE_MISSING=TITLE_MISSING,
            DESCRIPTION_MISSING=DESCRIPTION_MISSING,
            PRODUCT_LINK_MISSING=PRODUCT_LINK_MISSING,
            IMAGE_LINK_MISSING=IMAGE_LINK_MISSING,
            AVAILABILITY_INVALID=AVAILABILITY_INVALID,
            PRODUCT_PRICE_INVALID=PRODUCT_PRICE_INVALID,
            LINK_FORMAT_INVALID=LINK_FORMAT_INVALID,
            PARSE_LINE_ERROR=PARSE_LINE_ERROR,
            ADWORDS_FORMAT_INVALID=ADWORDS_FORMAT_INVALID,
            INTERNAL_SERVICE_ERROR=INTERNAL_SERVICE_ERROR,
            NO_VERIFIED_DOMAIN=NO_VERIFIED_DOMAIN,
            ADULT_INVALID=ADULT_INVALID,
            IMAGE_LINK_LENGTH_TOO_LONG=IMAGE_LINK_LENGTH_TOO_LONG,
            INVALID_DOMAIN=INVALID_DOMAIN,
            FEED_LENGTH_TOO_LONG=FEED_LENGTH_TOO_LONG,
            LINK_LENGTH_TOO_LONG=LINK_LENGTH_TOO_LONG,
            MALFORMED_XML=MALFORMED_XML,
            PRICE_MISSING=PRICE_MISSING,
            FEED_TOO_SMALL=FEED_TOO_SMALL,
            MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED=MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED,
            ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE=ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE,
            PINJOIN_CONTENT_UNSAFE=PINJOIN_CONTENT_UNSAFE,
            BLOCKLISTED_IMAGE_SIGNATURE=BLOCKLISTED_IMAGE_SIGNATURE,
            LIST_PRICE_INVALID=LIST_PRICE_INVALID,
            PRICE_CANNOT_BE_DETERMINED=PRICE_CANNOT_BE_DETERMINED,
            _configuration=_configuration,
            **kwargs,
        )
