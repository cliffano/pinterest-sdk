# coding: utf-8

"""
    Pinterest REST API

    Pinterest's REST API  # noqa: E501

    The version of the OpenAPI document: 5.6.0
    Contact: blah@cliffano.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from pinterestsdk import schemas  # noqa: F401


class CatalogsFeedIngestionErrors(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            IMAGE_DOWNLOAD_ERROR = schemas.IntSchema
            LINE_LEVEL_INTERNAL_ERROR = schemas.IntSchema
            
            
            class LARGE_PRODUCT_COUNT_DECREASE(
                schemas.EnumBase,
                schemas.IntSchema
            ):
                
                @schemas.classproperty
                def POSITIVE_1(cls):
                    return cls(1)
            ACCOUNT_FLAGGED = schemas.IntSchema
            __annotations__ = {
                "IMAGE_DOWNLOAD_ERROR": IMAGE_DOWNLOAD_ERROR,
                "LINE_LEVEL_INTERNAL_ERROR": LINE_LEVEL_INTERNAL_ERROR,
                "LARGE_PRODUCT_COUNT_DECREASE": LARGE_PRODUCT_COUNT_DECREASE,
                "ACCOUNT_FLAGGED": ACCOUNT_FLAGGED,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["IMAGE_DOWNLOAD_ERROR"]) -> MetaOapg.properties.IMAGE_DOWNLOAD_ERROR: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["LINE_LEVEL_INTERNAL_ERROR"]) -> MetaOapg.properties.LINE_LEVEL_INTERNAL_ERROR: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["LARGE_PRODUCT_COUNT_DECREASE"]) -> MetaOapg.properties.LARGE_PRODUCT_COUNT_DECREASE: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ACCOUNT_FLAGGED"]) -> MetaOapg.properties.ACCOUNT_FLAGGED: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["IMAGE_DOWNLOAD_ERROR", "LINE_LEVEL_INTERNAL_ERROR", "LARGE_PRODUCT_COUNT_DECREASE", "ACCOUNT_FLAGGED", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["IMAGE_DOWNLOAD_ERROR"]) -> typing.Union[MetaOapg.properties.IMAGE_DOWNLOAD_ERROR, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["LINE_LEVEL_INTERNAL_ERROR"]) -> typing.Union[MetaOapg.properties.LINE_LEVEL_INTERNAL_ERROR, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["LARGE_PRODUCT_COUNT_DECREASE"]) -> typing.Union[MetaOapg.properties.LARGE_PRODUCT_COUNT_DECREASE, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ACCOUNT_FLAGGED"]) -> typing.Union[MetaOapg.properties.ACCOUNT_FLAGGED, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["IMAGE_DOWNLOAD_ERROR", "LINE_LEVEL_INTERNAL_ERROR", "LARGE_PRODUCT_COUNT_DECREASE", "ACCOUNT_FLAGGED", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        IMAGE_DOWNLOAD_ERROR: typing.Union[MetaOapg.properties.IMAGE_DOWNLOAD_ERROR, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        LINE_LEVEL_INTERNAL_ERROR: typing.Union[MetaOapg.properties.LINE_LEVEL_INTERNAL_ERROR, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        LARGE_PRODUCT_COUNT_DECREASE: typing.Union[MetaOapg.properties.LARGE_PRODUCT_COUNT_DECREASE, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        ACCOUNT_FLAGGED: typing.Union[MetaOapg.properties.ACCOUNT_FLAGGED, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'CatalogsFeedIngestionErrors':
        return super().__new__(
            cls,
            *args,
            IMAGE_DOWNLOAD_ERROR=IMAGE_DOWNLOAD_ERROR,
            LINE_LEVEL_INTERNAL_ERROR=LINE_LEVEL_INTERNAL_ERROR,
            LARGE_PRODUCT_COUNT_DECREASE=LARGE_PRODUCT_COUNT_DECREASE,
            ACCOUNT_FLAGGED=ACCOUNT_FLAGGED,
            _configuration=_configuration,
            **kwargs,
        )
