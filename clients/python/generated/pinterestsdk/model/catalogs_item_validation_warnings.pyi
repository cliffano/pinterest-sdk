# coding: utf-8

"""
    Pinterest REST API

    Pinterest's REST API  # noqa: E501

    The version of the OpenAPI document: 5.6.0
    Contact: blah@cliffano.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from pinterestsdk import schemas  # noqa: F401


class CatalogsItemValidationWarnings(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def ADDITIONAL_IMAGE_LINK_WARNING() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def ADWORDS_FORMAT_WARNING() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def ADWORDS_SAME_AS_LINK() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def AGE_GROUP_INVALID() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def SIZE_SYSTEM_INVALID() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def AGE_GROUP_NORMALIZED() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def ANDROID_DEEP_LINK_INVALID() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def AVAILABILITY_DATE_INVALID() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def AVAILABILITY_NORMALIZED() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def CONDITION_NORMALIZED() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def COUNTRY_DOES_NOT_MAP_TO_CURRENCY() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def CUSTOM_LABEL_LENGTH_TOO_LONG() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def DESCRIPTION_LENGTH_TOO_LONG() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def DUPLICATE_PRODUCTS() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def EXPIRATION_DATE_INVALID() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def GENDER_INVALID() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def GENDER_NORMALIZED() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def GTIN_INVALID() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def IMAGE_LINK_WARNING() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def IOS_DEEP_LINK_INVALID() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def IS_BUNDLE_INVALID() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def LINK_FORMAT_WARNING() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def MIN_AD_PRICE_INVALID() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def MPN_INVALID() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def MULTIPACK_INVALID() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def OPTIONAL_CONDITION_INVALID() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def OPTIONAL_CONDITION_MISSING() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def OPTIONAL_PRODUCT_CATEGORY_INVALID() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def OPTIONAL_PRODUCT_CATEGORY_MISSING() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def PRODUCT_CATEGORY_DEPTH_WARNING() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def PRODUCT_TYPE_LENGTH_TOO_LONG() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def SALES_PRICE_INVALID() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def SALES_PRICE_TOO_LOW() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def SALES_PRICE_TOO_HIGH() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def SALE_DATE_INVALID() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def SHIPPING_INVALID() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def SHIPPING_HEIGHT_INVALID() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def SHIPPING_WEIGHT_INVALID() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def SHIPPING_WIDTH_INVALID() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def SIZE_TYPE_INVALID() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def SIZE_TYPE_NORMALIZED() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def TAX_INVALID() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def TITLE_LENGTH_TOO_LONG() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def TOO_MANY_ADDITIONAL_IMAGE_LINKS() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def UTM_SOURCE_AUTO_CORRECTED() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
        
            @staticmethod
            def WEIGHT_UNIT_INVALID() -> typing.Type['CatalogsItemValidationDetails']:
                return CatalogsItemValidationDetails
            __annotations__ = {
                "ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG": ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG,
                "ADDITIONAL_IMAGE_LINK_WARNING": ADDITIONAL_IMAGE_LINK_WARNING,
                "ADWORDS_FORMAT_WARNING": ADWORDS_FORMAT_WARNING,
                "ADWORDS_SAME_AS_LINK": ADWORDS_SAME_AS_LINK,
                "AGE_GROUP_INVALID": AGE_GROUP_INVALID,
                "SIZE_SYSTEM_INVALID": SIZE_SYSTEM_INVALID,
                "AGE_GROUP_NORMALIZED": AGE_GROUP_NORMALIZED,
                "ANDROID_DEEP_LINK_INVALID": ANDROID_DEEP_LINK_INVALID,
                "AVAILABILITY_DATE_INVALID": AVAILABILITY_DATE_INVALID,
                "AVAILABILITY_NORMALIZED": AVAILABILITY_NORMALIZED,
                "CONDITION_NORMALIZED": CONDITION_NORMALIZED,
                "COUNTRY_DOES_NOT_MAP_TO_CURRENCY": COUNTRY_DOES_NOT_MAP_TO_CURRENCY,
                "CUSTOM_LABEL_LENGTH_TOO_LONG": CUSTOM_LABEL_LENGTH_TOO_LONG,
                "DESCRIPTION_LENGTH_TOO_LONG": DESCRIPTION_LENGTH_TOO_LONG,
                "DUPLICATE_PRODUCTS": DUPLICATE_PRODUCTS,
                "EXPIRATION_DATE_INVALID": EXPIRATION_DATE_INVALID,
                "GENDER_INVALID": GENDER_INVALID,
                "GENDER_NORMALIZED": GENDER_NORMALIZED,
                "GTIN_INVALID": GTIN_INVALID,
                "IMAGE_LINK_WARNING": IMAGE_LINK_WARNING,
                "IOS_DEEP_LINK_INVALID": IOS_DEEP_LINK_INVALID,
                "IS_BUNDLE_INVALID": IS_BUNDLE_INVALID,
                "ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE": ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE,
                "LINK_FORMAT_WARNING": LINK_FORMAT_WARNING,
                "MIN_AD_PRICE_INVALID": MIN_AD_PRICE_INVALID,
                "MPN_INVALID": MPN_INVALID,
                "MULTIPACK_INVALID": MULTIPACK_INVALID,
                "OPTIONAL_CONDITION_INVALID": OPTIONAL_CONDITION_INVALID,
                "OPTIONAL_CONDITION_MISSING": OPTIONAL_CONDITION_MISSING,
                "OPTIONAL_PRODUCT_CATEGORY_INVALID": OPTIONAL_PRODUCT_CATEGORY_INVALID,
                "OPTIONAL_PRODUCT_CATEGORY_MISSING": OPTIONAL_PRODUCT_CATEGORY_MISSING,
                "PRODUCT_CATEGORY_DEPTH_WARNING": PRODUCT_CATEGORY_DEPTH_WARNING,
                "PRODUCT_TYPE_LENGTH_TOO_LONG": PRODUCT_TYPE_LENGTH_TOO_LONG,
                "SALES_PRICE_INVALID": SALES_PRICE_INVALID,
                "SALES_PRICE_TOO_LOW": SALES_PRICE_TOO_LOW,
                "SALES_PRICE_TOO_HIGH": SALES_PRICE_TOO_HIGH,
                "SALE_DATE_INVALID": SALE_DATE_INVALID,
                "SHIPPING_INVALID": SHIPPING_INVALID,
                "SHIPPING_HEIGHT_INVALID": SHIPPING_HEIGHT_INVALID,
                "SHIPPING_WEIGHT_INVALID": SHIPPING_WEIGHT_INVALID,
                "SHIPPING_WIDTH_INVALID": SHIPPING_WIDTH_INVALID,
                "SIZE_TYPE_INVALID": SIZE_TYPE_INVALID,
                "SIZE_TYPE_NORMALIZED": SIZE_TYPE_NORMALIZED,
                "TAX_INVALID": TAX_INVALID,
                "TITLE_LENGTH_TOO_LONG": TITLE_LENGTH_TOO_LONG,
                "TOO_MANY_ADDITIONAL_IMAGE_LINKS": TOO_MANY_ADDITIONAL_IMAGE_LINKS,
                "UTM_SOURCE_AUTO_CORRECTED": UTM_SOURCE_AUTO_CORRECTED,
                "WEIGHT_UNIT_INVALID": WEIGHT_UNIT_INVALID,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ADDITIONAL_IMAGE_LINK_WARNING"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ADWORDS_FORMAT_WARNING"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ADWORDS_SAME_AS_LINK"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["AGE_GROUP_INVALID"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["SIZE_SYSTEM_INVALID"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["AGE_GROUP_NORMALIZED"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ANDROID_DEEP_LINK_INVALID"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["AVAILABILITY_DATE_INVALID"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["AVAILABILITY_NORMALIZED"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CONDITION_NORMALIZED"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["COUNTRY_DOES_NOT_MAP_TO_CURRENCY"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CUSTOM_LABEL_LENGTH_TOO_LONG"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["DESCRIPTION_LENGTH_TOO_LONG"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["DUPLICATE_PRODUCTS"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["EXPIRATION_DATE_INVALID"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["GENDER_INVALID"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["GENDER_NORMALIZED"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["GTIN_INVALID"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["IMAGE_LINK_WARNING"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["IOS_DEEP_LINK_INVALID"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["IS_BUNDLE_INVALID"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["LINK_FORMAT_WARNING"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["MIN_AD_PRICE_INVALID"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["MPN_INVALID"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["MULTIPACK_INVALID"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["OPTIONAL_CONDITION_INVALID"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["OPTIONAL_CONDITION_MISSING"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["OPTIONAL_PRODUCT_CATEGORY_INVALID"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["OPTIONAL_PRODUCT_CATEGORY_MISSING"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["PRODUCT_CATEGORY_DEPTH_WARNING"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["PRODUCT_TYPE_LENGTH_TOO_LONG"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["SALES_PRICE_INVALID"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["SALES_PRICE_TOO_LOW"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["SALES_PRICE_TOO_HIGH"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["SALE_DATE_INVALID"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["SHIPPING_INVALID"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["SHIPPING_HEIGHT_INVALID"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["SHIPPING_WEIGHT_INVALID"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["SHIPPING_WIDTH_INVALID"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["SIZE_TYPE_INVALID"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["SIZE_TYPE_NORMALIZED"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["TAX_INVALID"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["TITLE_LENGTH_TOO_LONG"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["TOO_MANY_ADDITIONAL_IMAGE_LINKS"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["UTM_SOURCE_AUTO_CORRECTED"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["WEIGHT_UNIT_INVALID"]) -> 'CatalogsItemValidationDetails': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG", "ADDITIONAL_IMAGE_LINK_WARNING", "ADWORDS_FORMAT_WARNING", "ADWORDS_SAME_AS_LINK", "AGE_GROUP_INVALID", "SIZE_SYSTEM_INVALID", "AGE_GROUP_NORMALIZED", "ANDROID_DEEP_LINK_INVALID", "AVAILABILITY_DATE_INVALID", "AVAILABILITY_NORMALIZED", "CONDITION_NORMALIZED", "COUNTRY_DOES_NOT_MAP_TO_CURRENCY", "CUSTOM_LABEL_LENGTH_TOO_LONG", "DESCRIPTION_LENGTH_TOO_LONG", "DUPLICATE_PRODUCTS", "EXPIRATION_DATE_INVALID", "GENDER_INVALID", "GENDER_NORMALIZED", "GTIN_INVALID", "IMAGE_LINK_WARNING", "IOS_DEEP_LINK_INVALID", "IS_BUNDLE_INVALID", "ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE", "LINK_FORMAT_WARNING", "MIN_AD_PRICE_INVALID", "MPN_INVALID", "MULTIPACK_INVALID", "OPTIONAL_CONDITION_INVALID", "OPTIONAL_CONDITION_MISSING", "OPTIONAL_PRODUCT_CATEGORY_INVALID", "OPTIONAL_PRODUCT_CATEGORY_MISSING", "PRODUCT_CATEGORY_DEPTH_WARNING", "PRODUCT_TYPE_LENGTH_TOO_LONG", "SALES_PRICE_INVALID", "SALES_PRICE_TOO_LOW", "SALES_PRICE_TOO_HIGH", "SALE_DATE_INVALID", "SHIPPING_INVALID", "SHIPPING_HEIGHT_INVALID", "SHIPPING_WEIGHT_INVALID", "SHIPPING_WIDTH_INVALID", "SIZE_TYPE_INVALID", "SIZE_TYPE_NORMALIZED", "TAX_INVALID", "TITLE_LENGTH_TOO_LONG", "TOO_MANY_ADDITIONAL_IMAGE_LINKS", "UTM_SOURCE_AUTO_CORRECTED", "WEIGHT_UNIT_INVALID", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ADDITIONAL_IMAGE_LINK_WARNING"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ADWORDS_FORMAT_WARNING"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ADWORDS_SAME_AS_LINK"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["AGE_GROUP_INVALID"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["SIZE_SYSTEM_INVALID"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["AGE_GROUP_NORMALIZED"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ANDROID_DEEP_LINK_INVALID"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["AVAILABILITY_DATE_INVALID"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["AVAILABILITY_NORMALIZED"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CONDITION_NORMALIZED"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["COUNTRY_DOES_NOT_MAP_TO_CURRENCY"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CUSTOM_LABEL_LENGTH_TOO_LONG"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["DESCRIPTION_LENGTH_TOO_LONG"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["DUPLICATE_PRODUCTS"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["EXPIRATION_DATE_INVALID"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["GENDER_INVALID"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["GENDER_NORMALIZED"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["GTIN_INVALID"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["IMAGE_LINK_WARNING"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["IOS_DEEP_LINK_INVALID"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["IS_BUNDLE_INVALID"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["LINK_FORMAT_WARNING"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["MIN_AD_PRICE_INVALID"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["MPN_INVALID"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["MULTIPACK_INVALID"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["OPTIONAL_CONDITION_INVALID"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["OPTIONAL_CONDITION_MISSING"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["OPTIONAL_PRODUCT_CATEGORY_INVALID"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["OPTIONAL_PRODUCT_CATEGORY_MISSING"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["PRODUCT_CATEGORY_DEPTH_WARNING"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["PRODUCT_TYPE_LENGTH_TOO_LONG"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["SALES_PRICE_INVALID"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["SALES_PRICE_TOO_LOW"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["SALES_PRICE_TOO_HIGH"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["SALE_DATE_INVALID"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["SHIPPING_INVALID"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["SHIPPING_HEIGHT_INVALID"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["SHIPPING_WEIGHT_INVALID"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["SHIPPING_WIDTH_INVALID"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["SIZE_TYPE_INVALID"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["SIZE_TYPE_NORMALIZED"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["TAX_INVALID"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["TITLE_LENGTH_TOO_LONG"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["TOO_MANY_ADDITIONAL_IMAGE_LINKS"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["UTM_SOURCE_AUTO_CORRECTED"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["WEIGHT_UNIT_INVALID"]) -> typing.Union['CatalogsItemValidationDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG", "ADDITIONAL_IMAGE_LINK_WARNING", "ADWORDS_FORMAT_WARNING", "ADWORDS_SAME_AS_LINK", "AGE_GROUP_INVALID", "SIZE_SYSTEM_INVALID", "AGE_GROUP_NORMALIZED", "ANDROID_DEEP_LINK_INVALID", "AVAILABILITY_DATE_INVALID", "AVAILABILITY_NORMALIZED", "CONDITION_NORMALIZED", "COUNTRY_DOES_NOT_MAP_TO_CURRENCY", "CUSTOM_LABEL_LENGTH_TOO_LONG", "DESCRIPTION_LENGTH_TOO_LONG", "DUPLICATE_PRODUCTS", "EXPIRATION_DATE_INVALID", "GENDER_INVALID", "GENDER_NORMALIZED", "GTIN_INVALID", "IMAGE_LINK_WARNING", "IOS_DEEP_LINK_INVALID", "IS_BUNDLE_INVALID", "ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE", "LINK_FORMAT_WARNING", "MIN_AD_PRICE_INVALID", "MPN_INVALID", "MULTIPACK_INVALID", "OPTIONAL_CONDITION_INVALID", "OPTIONAL_CONDITION_MISSING", "OPTIONAL_PRODUCT_CATEGORY_INVALID", "OPTIONAL_PRODUCT_CATEGORY_MISSING", "PRODUCT_CATEGORY_DEPTH_WARNING", "PRODUCT_TYPE_LENGTH_TOO_LONG", "SALES_PRICE_INVALID", "SALES_PRICE_TOO_LOW", "SALES_PRICE_TOO_HIGH", "SALE_DATE_INVALID", "SHIPPING_INVALID", "SHIPPING_HEIGHT_INVALID", "SHIPPING_WEIGHT_INVALID", "SHIPPING_WIDTH_INVALID", "SIZE_TYPE_INVALID", "SIZE_TYPE_NORMALIZED", "TAX_INVALID", "TITLE_LENGTH_TOO_LONG", "TOO_MANY_ADDITIONAL_IMAGE_LINKS", "UTM_SOURCE_AUTO_CORRECTED", "WEIGHT_UNIT_INVALID", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        ADDITIONAL_IMAGE_LINK_WARNING: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        ADWORDS_FORMAT_WARNING: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        ADWORDS_SAME_AS_LINK: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        AGE_GROUP_INVALID: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        SIZE_SYSTEM_INVALID: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        AGE_GROUP_NORMALIZED: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        ANDROID_DEEP_LINK_INVALID: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        AVAILABILITY_DATE_INVALID: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        AVAILABILITY_NORMALIZED: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        CONDITION_NORMALIZED: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        COUNTRY_DOES_NOT_MAP_TO_CURRENCY: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        CUSTOM_LABEL_LENGTH_TOO_LONG: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        DESCRIPTION_LENGTH_TOO_LONG: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        DUPLICATE_PRODUCTS: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        EXPIRATION_DATE_INVALID: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        GENDER_INVALID: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        GENDER_NORMALIZED: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        GTIN_INVALID: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        IMAGE_LINK_WARNING: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        IOS_DEEP_LINK_INVALID: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        IS_BUNDLE_INVALID: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        LINK_FORMAT_WARNING: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        MIN_AD_PRICE_INVALID: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        MPN_INVALID: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        MULTIPACK_INVALID: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        OPTIONAL_CONDITION_INVALID: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        OPTIONAL_CONDITION_MISSING: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        OPTIONAL_PRODUCT_CATEGORY_INVALID: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        OPTIONAL_PRODUCT_CATEGORY_MISSING: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        PRODUCT_CATEGORY_DEPTH_WARNING: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        PRODUCT_TYPE_LENGTH_TOO_LONG: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        SALES_PRICE_INVALID: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        SALES_PRICE_TOO_LOW: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        SALES_PRICE_TOO_HIGH: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        SALE_DATE_INVALID: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        SHIPPING_INVALID: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        SHIPPING_HEIGHT_INVALID: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        SHIPPING_WEIGHT_INVALID: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        SHIPPING_WIDTH_INVALID: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        SIZE_TYPE_INVALID: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        SIZE_TYPE_NORMALIZED: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        TAX_INVALID: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        TITLE_LENGTH_TOO_LONG: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        TOO_MANY_ADDITIONAL_IMAGE_LINKS: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        UTM_SOURCE_AUTO_CORRECTED: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        WEIGHT_UNIT_INVALID: typing.Union['CatalogsItemValidationDetails', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'CatalogsItemValidationWarnings':
        return super().__new__(
            cls,
            *args,
            ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG=ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG,
            ADDITIONAL_IMAGE_LINK_WARNING=ADDITIONAL_IMAGE_LINK_WARNING,
            ADWORDS_FORMAT_WARNING=ADWORDS_FORMAT_WARNING,
            ADWORDS_SAME_AS_LINK=ADWORDS_SAME_AS_LINK,
            AGE_GROUP_INVALID=AGE_GROUP_INVALID,
            SIZE_SYSTEM_INVALID=SIZE_SYSTEM_INVALID,
            AGE_GROUP_NORMALIZED=AGE_GROUP_NORMALIZED,
            ANDROID_DEEP_LINK_INVALID=ANDROID_DEEP_LINK_INVALID,
            AVAILABILITY_DATE_INVALID=AVAILABILITY_DATE_INVALID,
            AVAILABILITY_NORMALIZED=AVAILABILITY_NORMALIZED,
            CONDITION_NORMALIZED=CONDITION_NORMALIZED,
            COUNTRY_DOES_NOT_MAP_TO_CURRENCY=COUNTRY_DOES_NOT_MAP_TO_CURRENCY,
            CUSTOM_LABEL_LENGTH_TOO_LONG=CUSTOM_LABEL_LENGTH_TOO_LONG,
            DESCRIPTION_LENGTH_TOO_LONG=DESCRIPTION_LENGTH_TOO_LONG,
            DUPLICATE_PRODUCTS=DUPLICATE_PRODUCTS,
            EXPIRATION_DATE_INVALID=EXPIRATION_DATE_INVALID,
            GENDER_INVALID=GENDER_INVALID,
            GENDER_NORMALIZED=GENDER_NORMALIZED,
            GTIN_INVALID=GTIN_INVALID,
            IMAGE_LINK_WARNING=IMAGE_LINK_WARNING,
            IOS_DEEP_LINK_INVALID=IOS_DEEP_LINK_INVALID,
            IS_BUNDLE_INVALID=IS_BUNDLE_INVALID,
            ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE=ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE,
            LINK_FORMAT_WARNING=LINK_FORMAT_WARNING,
            MIN_AD_PRICE_INVALID=MIN_AD_PRICE_INVALID,
            MPN_INVALID=MPN_INVALID,
            MULTIPACK_INVALID=MULTIPACK_INVALID,
            OPTIONAL_CONDITION_INVALID=OPTIONAL_CONDITION_INVALID,
            OPTIONAL_CONDITION_MISSING=OPTIONAL_CONDITION_MISSING,
            OPTIONAL_PRODUCT_CATEGORY_INVALID=OPTIONAL_PRODUCT_CATEGORY_INVALID,
            OPTIONAL_PRODUCT_CATEGORY_MISSING=OPTIONAL_PRODUCT_CATEGORY_MISSING,
            PRODUCT_CATEGORY_DEPTH_WARNING=PRODUCT_CATEGORY_DEPTH_WARNING,
            PRODUCT_TYPE_LENGTH_TOO_LONG=PRODUCT_TYPE_LENGTH_TOO_LONG,
            SALES_PRICE_INVALID=SALES_PRICE_INVALID,
            SALES_PRICE_TOO_LOW=SALES_PRICE_TOO_LOW,
            SALES_PRICE_TOO_HIGH=SALES_PRICE_TOO_HIGH,
            SALE_DATE_INVALID=SALE_DATE_INVALID,
            SHIPPING_INVALID=SHIPPING_INVALID,
            SHIPPING_HEIGHT_INVALID=SHIPPING_HEIGHT_INVALID,
            SHIPPING_WEIGHT_INVALID=SHIPPING_WEIGHT_INVALID,
            SHIPPING_WIDTH_INVALID=SHIPPING_WIDTH_INVALID,
            SIZE_TYPE_INVALID=SIZE_TYPE_INVALID,
            SIZE_TYPE_NORMALIZED=SIZE_TYPE_NORMALIZED,
            TAX_INVALID=TAX_INVALID,
            TITLE_LENGTH_TOO_LONG=TITLE_LENGTH_TOO_LONG,
            TOO_MANY_ADDITIONAL_IMAGE_LINKS=TOO_MANY_ADDITIONAL_IMAGE_LINKS,
            UTM_SOURCE_AUTO_CORRECTED=UTM_SOURCE_AUTO_CORRECTED,
            WEIGHT_UNIT_INVALID=WEIGHT_UNIT_INVALID,
            _configuration=_configuration,
            **kwargs,
        )

from pinterestsdk.model.catalogs_item_validation_details import CatalogsItemValidationDetails
