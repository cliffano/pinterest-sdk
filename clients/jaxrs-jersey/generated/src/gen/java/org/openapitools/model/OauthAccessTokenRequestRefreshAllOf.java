/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: pinterest-api@pinterest.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * OauthAccessTokenRequestRefreshAllOf
 */
@JsonPropertyOrder({
  OauthAccessTokenRequestRefreshAllOf.JSON_PROPERTY_REFRESH_TOKEN,
  OauthAccessTokenRequestRefreshAllOf.JSON_PROPERTY_SCOPE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2022-05-08T00:33:19.615491Z[Etc/UTC]")
public class OauthAccessTokenRequestRefreshAllOf   {
  public static final String JSON_PROPERTY_REFRESH_TOKEN = "refresh_token";
  @JsonProperty(JSON_PROPERTY_REFRESH_TOKEN)
  private String refreshToken;

  public static final String JSON_PROPERTY_SCOPE = "scope";
  @JsonProperty(JSON_PROPERTY_SCOPE)
  private String scope;

  public OauthAccessTokenRequestRefreshAllOf refreshToken(String refreshToken) {
    this.refreshToken = refreshToken;
    return this;
  }

  /**
   * Get refreshToken
   * @return refreshToken
   **/
  @JsonProperty(value = "refresh_token")
  @ApiModelProperty(required = true, value = "")
  @NotNull 
  public String getRefreshToken() {
    return refreshToken;
  }

  public void setRefreshToken(String refreshToken) {
    this.refreshToken = refreshToken;
  }

  public OauthAccessTokenRequestRefreshAllOf scope(String scope) {
    this.scope = scope;
    return this;
  }

  /**
   * Get scope
   * @return scope
   **/
  @JsonProperty(value = "scope")
  @ApiModelProperty(value = "")
  
  public String getScope() {
    return scope;
  }

  public void setScope(String scope) {
    this.scope = scope;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OauthAccessTokenRequestRefreshAllOf oauthAccessTokenRequestRefreshAllOf = (OauthAccessTokenRequestRefreshAllOf) o;
    return Objects.equals(this.refreshToken, oauthAccessTokenRequestRefreshAllOf.refreshToken) &&
        Objects.equals(this.scope, oauthAccessTokenRequestRefreshAllOf.scope);
  }

  @Override
  public int hashCode() {
    return Objects.hash(refreshToken, scope);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OauthAccessTokenRequestRefreshAllOf {\n");
    
    sb.append("    refreshToken: ").append(toIndentedString(refreshToken)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

