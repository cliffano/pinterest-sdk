{-
   Pinterest REST API
   Pinterest's REST API

   The version of the OpenAPI document: 5.3.0
   Contact: pinterest-api@pinterest.com

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Data exposing
    ( Account, AccountAccountType(..), accountAccountTypeVariants
    , ActionType(..), actionTypeVariants
    , AdAccount
    , AdAccountOwner
    , AdGroupResponse, AdGroupResponseBudgetType(..), adGroupResponseBudgetTypeVariants, AdGroupResponseConversionLearningModeType(..), adGroupResponseConversionLearningModeTypeVariants
    , AdGroupResponseAllOf1
    , AdGroupSummaryStatus(..), adGroupSummaryStatusVariants
    , AdResponse, AdResponseCreativeType(..), adResponseCreativeTypeVariants, AdResponseRejectedReasons(..), adResponseRejectedReasonsVariants, AdResponseReviewStatus(..), adResponseReviewStatusVariants
    , AdResponseAllOf1, AdResponseAllOf1RejectedReasons(..), adResponseAllOf1RejectedReasonsVariants, AdResponseAllOf1ReviewStatus(..), adResponseAllOf1ReviewStatusVariants
    , AdsAnalyticsCreateAsyncRequest
    , AdsAnalyticsCreateAsyncRequestAllOf1
    , AdsAnalyticsCreateAsyncResponse
    , AdsAnalyticsFilterColumn(..), adsAnalyticsFilterColumnVariants
    , AdsAnalyticsFilterOperator(..), adsAnalyticsFilterOperatorVariants
    , AdsAnalyticsGetAsyncResponse
    , AdsAnalyticsMetricsFilter
    , AdsAnalyticsTargetingType(..), adsAnalyticsTargetingTypeVariants
    , AnalyticsMetricsResponse
    , AnalyticsMetricsResponseDailyMetrics, AnalyticsMetricsResponseDailyMetricsDataStatus(..), analyticsMetricsResponseDailyMetricsDataStatusVariants
    , AvailabilityFilter
    , BatchOperation(..), batchOperationVariants
    , BatchOperationStatus(..), batchOperationStatusVariants
    , Board, BoardPrivacy(..), boardPrivacyVariants
    , BoardOwner
    , BoardSection
    , BoardUpdate, BoardUpdatePrivacy(..), boardUpdatePrivacyVariants
    , BrandFilter
    , CampaignCommon
    , CampaignResponse
    , CampaignResponseAllOf1
    , CampaignSummaryStatus(..), campaignSummaryStatusVariants
    , CatalogsDbItem
    , CatalogsFeed
    , CatalogsFeedCredentials
    , CatalogsFeedIngestionDetails
    , CatalogsFeedIngestionErrors, CatalogsFeedIngestionErrorsLargeProductCountDecrease(..), catalogsFeedIngestionErrorsLargeProductCountDecreaseVariants
    , CatalogsFeedIngestionInfo
    , CatalogsFeedProcessingResult
    , CatalogsFeedProcessingResultFields
    , CatalogsFeedProcessingSchedule, CatalogsFeedProcessingScheduleTimezone(..), catalogsFeedProcessingScheduleTimezoneVariants
    , CatalogsFeedProcessingStatus(..), catalogsFeedProcessingStatusVariants
    , CatalogsFeedProductCounts
    , CatalogsFeedValidationDetails
    , CatalogsFeedValidationErrors
    , CatalogsFeedValidationWarnings
    , CatalogsFeedsCreateRequest
    , CatalogsFeedsUpdateRequest
    , CatalogsFormat(..), catalogsFormatVariants
    , CatalogsItems
    , CatalogsItemsBatch
    , CatalogsItemsBatchRequest
    , CatalogsProductGroup
    , CatalogsProductGroupCreateRequest
    , CatalogsProductGroupCurrencyCriteria
    , CatalogsProductGroupFilterKeys
    , CatalogsProductGroupFilters
    , CatalogsProductGroupFiltersAnyOf
    , CatalogsProductGroupMultipleStringCriteria
    , CatalogsProductGroupMultipleStringListCriteria
    , CatalogsProductGroupPricingCriteria
    , CatalogsProductGroupStatus(..), catalogsProductGroupStatusVariants
    , CatalogsProductGroupType(..), catalogsProductGroupTypeVariants
    , CatalogsProductGroupUpdateRequest
    , CatalogsStatus(..), catalogsStatusVariants
    , ConditionFilter
    , ConversionAttributionWindowDays(..), conversionAttributionWindowDaysVariants
    , ConversionReportAttributionType(..), conversionReportAttributionTypeVariants
    , ConversionReportTimeType(..), conversionReportTimeTypeVariants
    , Country(..), countryVariants
    , Currency(..), currencyVariants
    , CurrencyFilter
    , CustomLabel0Filter
    , CustomLabel1Filter
    , CustomLabel2Filter
    , CustomLabel3Filter
    , CustomLabel4Filter
    , DataOutputFormat(..), dataOutputFormatVariants
    , EntityStatus(..), entityStatusVariants
    , Error
    , FeedFields
    , GenderFilter
    , GoogleProductCategory0Filter
    , GoogleProductCategory1Filter
    , GoogleProductCategory2Filter
    , GoogleProductCategory3Filter
    , GoogleProductCategory4Filter
    , GoogleProductCategory5Filter
    , GoogleProductCategory6Filter
    , Granularity(..), granularityVariants
    , ImageDetails
    , ItemAttributes
    , ItemBatchRecord
    , ItemGroupIdFilter
    , ItemIdFilter
    , ItemProcessingRecord
    , ItemProcessingStatus(..), itemProcessingStatusVariants
    , ItemValidationEvent
    , Language(..), languageVariants
    , MaxPriceFilter
    , MediaUpload
    , MediaUploadAllOfUploadParameters
    , MediaUploadDetails
    , MediaUploadRequest
    , MediaUploadStatus(..), mediaUploadStatusVariants
    , MediaUploadType(..), mediaUploadTypeVariants
    , MetricsReportingLevel(..), metricsReportingLevelVariants
    , MinPriceFilter
    , NonNullableCatalogsCurrency(..), nonNullableCatalogsCurrencyVariants
    , NullableCurrency(..), nullableCurrencyVariants
    , OauthAccessTokenRequest(..), OauthAccessTokenRequestGrantType(..), oauthAccessTokenRequestGrantTypeVariants
    , OauthAccessTokenRequestCode
    , OauthAccessTokenRequestRefresh
    , OauthAccessTokenResponse(..), OauthAccessTokenResponseResponseType(..), oauthAccessTokenResponseResponseTypeVariants
    , OauthAccessTokenResponseCode
    , OauthAccessTokenResponseRefresh
    , ObjectiveType(..), objectiveTypeVariants
    , PacingDeliveryType(..), pacingDeliveryTypeVariants
    , Paginated
    , Pin
    , PinMedia(..)
    , PinMediaSource(..), PinMediaSourceSourceType(..), pinMediaSourceSourceTypeVariants, PinMediaSourceContentType(..), pinMediaSourceContentTypeVariants
    , PinMediaSourceImageBase64, PinMediaSourceImageBase64SourceType(..), pinMediaSourceImageBase64SourceTypeVariants, PinMediaSourceImageBase64ContentType(..), pinMediaSourceImageBase64ContentTypeVariants
    , PinMediaSourceImageURL, PinMediaSourceImageURLSourceType(..), pinMediaSourceImageURLSourceTypeVariants
    , PinMediaSourceVideoID, PinMediaSourceVideoIDSourceType(..), pinMediaSourceVideoIDSourceTypeVariants
    , PinMediaWithImage
    , PinPromotionSummaryStatus(..), pinPromotionSummaryStatusVariants
    , PlacementGroupType(..), placementGroupTypeVariants
    , ProductAvailabilityType(..), productAvailabilityTypeVariants
    , ProductGroupSummaryStatus(..), productGroupSummaryStatusVariants
    , ProductType0Filter
    , ProductType1Filter
    , ProductType2Filter
    , ProductType3Filter
    , ProductType4Filter
    , ReportingColumnAsync(..), reportingColumnAsyncVariants
    , TargetingTypeFilter
    , TrackingUrls
    , encodeAccount
    , encodeActionType
    , encodeAdAccount
    , encodeAdAccountOwner
    , encodeAdGroupResponse
    , encodeAdGroupResponseAllOf1
    , encodeAdGroupSummaryStatus
    , encodeAdResponse
    , encodeAdResponseAllOf1
    , encodeAdsAnalyticsCreateAsyncRequest
    , encodeAdsAnalyticsCreateAsyncRequestAllOf1
    , encodeAdsAnalyticsCreateAsyncResponse
    , encodeAdsAnalyticsFilterColumn
    , encodeAdsAnalyticsFilterOperator
    , encodeAdsAnalyticsGetAsyncResponse
    , encodeAdsAnalyticsMetricsFilter
    , encodeAdsAnalyticsTargetingType
    , encodeAnalyticsMetricsResponse
    , encodeAnalyticsMetricsResponseDailyMetrics
    , encodeAvailabilityFilter
    , encodeBatchOperation
    , encodeBatchOperationStatus
    , encodeBoard
    , encodeBoardOwner
    , encodeBoardSection
    , encodeBoardUpdate
    , encodeBrandFilter
    , encodeCampaignCommon
    , encodeCampaignResponse
    , encodeCampaignResponseAllOf1
    , encodeCampaignSummaryStatus
    , encodeCatalogsDbItem
    , encodeCatalogsFeed
    , encodeCatalogsFeedCredentials
    , encodeCatalogsFeedIngestionDetails
    , encodeCatalogsFeedIngestionErrors
    , encodeCatalogsFeedIngestionInfo
    , encodeCatalogsFeedProcessingResult
    , encodeCatalogsFeedProcessingResultFields
    , encodeCatalogsFeedProcessingSchedule
    , encodeCatalogsFeedProcessingStatus
    , encodeCatalogsFeedProductCounts
    , encodeCatalogsFeedValidationDetails
    , encodeCatalogsFeedValidationErrors
    , encodeCatalogsFeedValidationWarnings
    , encodeCatalogsFeedsCreateRequest
    , encodeCatalogsFeedsUpdateRequest
    , encodeCatalogsFormat
    , encodeCatalogsItems
    , encodeCatalogsItemsBatch
    , encodeCatalogsItemsBatchRequest
    , encodeCatalogsProductGroup
    , encodeCatalogsProductGroupCreateRequest
    , encodeCatalogsProductGroupCurrencyCriteria
    , encodeCatalogsProductGroupFilterKeys
    , encodeCatalogsProductGroupFilters
    , encodeCatalogsProductGroupFiltersAnyOf
    , encodeCatalogsProductGroupMultipleStringCriteria
    , encodeCatalogsProductGroupMultipleStringListCriteria
    , encodeCatalogsProductGroupPricingCriteria
    , encodeCatalogsProductGroupStatus
    , encodeCatalogsProductGroupType
    , encodeCatalogsProductGroupUpdateRequest
    , encodeCatalogsStatus
    , encodeConditionFilter
    , encodeConversionAttributionWindowDays
    , encodeConversionReportAttributionType
    , encodeConversionReportTimeType
    , encodeCountry
    , encodeCurrency
    , encodeCurrencyFilter
    , encodeCustomLabel0Filter
    , encodeCustomLabel1Filter
    , encodeCustomLabel2Filter
    , encodeCustomLabel3Filter
    , encodeCustomLabel4Filter
    , encodeDataOutputFormat
    , encodeEntityStatus
    , encodeError
    , encodeFeedFields
    , encodeGenderFilter
    , encodeGoogleProductCategory0Filter
    , encodeGoogleProductCategory1Filter
    , encodeGoogleProductCategory2Filter
    , encodeGoogleProductCategory3Filter
    , encodeGoogleProductCategory4Filter
    , encodeGoogleProductCategory5Filter
    , encodeGoogleProductCategory6Filter
    , encodeGranularity
    , encodeImageDetails
    , encodeItemAttributes
    , encodeItemBatchRecord
    , encodeItemGroupIdFilter
    , encodeItemIdFilter
    , encodeItemProcessingRecord
    , encodeItemProcessingStatus
    , encodeItemValidationEvent
    , encodeLanguage
    , encodeMaxPriceFilter
    , encodeMediaUpload
    , encodeMediaUploadAllOfUploadParameters
    , encodeMediaUploadDetails
    , encodeMediaUploadRequest
    , encodeMediaUploadStatus
    , encodeMediaUploadType
    , encodeMetricsReportingLevel
    , encodeMinPriceFilter
    , encodeNonNullableCatalogsCurrency
    , encodeNullableCurrency
    , encodeOauthAccessTokenRequest
    , encodeOauthAccessTokenRequestCode
    , encodeOauthAccessTokenRequestRefresh
    , encodeOauthAccessTokenResponse
    , encodeOauthAccessTokenResponseCode
    , encodeOauthAccessTokenResponseRefresh
    , encodeObjectiveType
    , encodePacingDeliveryType
    , encodePaginated
    , encodePin
    , encodePinMedia
    , encodePinMediaSource
    , encodePinMediaSourceImageBase64
    , encodePinMediaSourceImageURL
    , encodePinMediaSourceVideoID
    , encodePinMediaWithImage
    , encodePinPromotionSummaryStatus
    , encodePlacementGroupType
    , encodeProductAvailabilityType
    , encodeProductGroupSummaryStatus
    , encodeProductType0Filter
    , encodeProductType1Filter
    , encodeProductType2Filter
    , encodeProductType3Filter
    , encodeProductType4Filter
    , encodeReportingColumnAsync
    , encodeTargetingTypeFilter
    , encodeTrackingUrls
    , accountDecoder
    , actionTypeDecoder
    , adAccountDecoder
    , adAccountOwnerDecoder
    , adGroupResponseDecoder
    , adGroupResponseAllOf1Decoder
    , adGroupSummaryStatusDecoder
    , adResponseDecoder
    , adResponseAllOf1Decoder
    , adsAnalyticsCreateAsyncRequestDecoder
    , adsAnalyticsCreateAsyncRequestAllOf1Decoder
    , adsAnalyticsCreateAsyncResponseDecoder
    , adsAnalyticsFilterColumnDecoder
    , adsAnalyticsFilterOperatorDecoder
    , adsAnalyticsGetAsyncResponseDecoder
    , adsAnalyticsMetricsFilterDecoder
    , adsAnalyticsTargetingTypeDecoder
    , analyticsMetricsResponseDecoder
    , analyticsMetricsResponseDailyMetricsDecoder
    , availabilityFilterDecoder
    , batchOperationDecoder
    , batchOperationStatusDecoder
    , boardDecoder
    , boardOwnerDecoder
    , boardSectionDecoder
    , boardUpdateDecoder
    , brandFilterDecoder
    , campaignCommonDecoder
    , campaignResponseDecoder
    , campaignResponseAllOf1Decoder
    , campaignSummaryStatusDecoder
    , catalogsDbItemDecoder
    , catalogsFeedDecoder
    , catalogsFeedCredentialsDecoder
    , catalogsFeedIngestionDetailsDecoder
    , catalogsFeedIngestionErrorsDecoder
    , catalogsFeedIngestionInfoDecoder
    , catalogsFeedProcessingResultDecoder
    , catalogsFeedProcessingResultFieldsDecoder
    , catalogsFeedProcessingScheduleDecoder
    , catalogsFeedProcessingStatusDecoder
    , catalogsFeedProductCountsDecoder
    , catalogsFeedValidationDetailsDecoder
    , catalogsFeedValidationErrorsDecoder
    , catalogsFeedValidationWarningsDecoder
    , catalogsFeedsCreateRequestDecoder
    , catalogsFeedsUpdateRequestDecoder
    , catalogsFormatDecoder
    , catalogsItemsDecoder
    , catalogsItemsBatchDecoder
    , catalogsItemsBatchRequestDecoder
    , catalogsProductGroupDecoder
    , catalogsProductGroupCreateRequestDecoder
    , catalogsProductGroupCurrencyCriteriaDecoder
    , catalogsProductGroupFilterKeysDecoder
    , catalogsProductGroupFiltersDecoder
    , catalogsProductGroupFiltersAnyOfDecoder
    , catalogsProductGroupMultipleStringCriteriaDecoder
    , catalogsProductGroupMultipleStringListCriteriaDecoder
    , catalogsProductGroupPricingCriteriaDecoder
    , catalogsProductGroupStatusDecoder
    , catalogsProductGroupTypeDecoder
    , catalogsProductGroupUpdateRequestDecoder
    , catalogsStatusDecoder
    , conditionFilterDecoder
    , conversionAttributionWindowDaysDecoder
    , conversionReportAttributionTypeDecoder
    , conversionReportTimeTypeDecoder
    , countryDecoder
    , currencyDecoder
    , currencyFilterDecoder
    , customLabel0FilterDecoder
    , customLabel1FilterDecoder
    , customLabel2FilterDecoder
    , customLabel3FilterDecoder
    , customLabel4FilterDecoder
    , dataOutputFormatDecoder
    , entityStatusDecoder
    , errorDecoder
    , feedFieldsDecoder
    , genderFilterDecoder
    , googleProductCategory0FilterDecoder
    , googleProductCategory1FilterDecoder
    , googleProductCategory2FilterDecoder
    , googleProductCategory3FilterDecoder
    , googleProductCategory4FilterDecoder
    , googleProductCategory5FilterDecoder
    , googleProductCategory6FilterDecoder
    , granularityDecoder
    , imageDetailsDecoder
    , itemAttributesDecoder
    , itemBatchRecordDecoder
    , itemGroupIdFilterDecoder
    , itemIdFilterDecoder
    , itemProcessingRecordDecoder
    , itemProcessingStatusDecoder
    , itemValidationEventDecoder
    , languageDecoder
    , maxPriceFilterDecoder
    , mediaUploadDecoder
    , mediaUploadAllOfUploadParametersDecoder
    , mediaUploadDetailsDecoder
    , mediaUploadRequestDecoder
    , mediaUploadStatusDecoder
    , mediaUploadTypeDecoder
    , metricsReportingLevelDecoder
    , minPriceFilterDecoder
    , nonNullableCatalogsCurrencyDecoder
    , nullableCurrencyDecoder
    , oauthAccessTokenRequestDecoder
    , oauthAccessTokenRequestCodeDecoder
    , oauthAccessTokenRequestRefreshDecoder
    , oauthAccessTokenResponseDecoder
    , oauthAccessTokenResponseCodeDecoder
    , oauthAccessTokenResponseRefreshDecoder
    , objectiveTypeDecoder
    , pacingDeliveryTypeDecoder
    , paginatedDecoder
    , pinDecoder
    , pinMediaDecoder
    , pinMediaSourceDecoder
    , pinMediaSourceImageBase64Decoder
    , pinMediaSourceImageURLDecoder
    , pinMediaSourceVideoIDDecoder
    , pinMediaWithImageDecoder
    , pinPromotionSummaryStatusDecoder
    , placementGroupTypeDecoder
    , productAvailabilityTypeDecoder
    , productGroupSummaryStatusDecoder
    , productType0FilterDecoder
    , productType1FilterDecoder
    , productType2FilterDecoder
    , productType3FilterDecoder
    , productType4FilterDecoder
    , reportingColumnAsyncDecoder
    , targetingTypeFilterDecoder
    , trackingUrlsDecoder
    )

import Api
import Api.Time exposing (Posix)
import Dict
import Json.Decode
import Json.Encode


-- MODEL


type alias Account =
    { accountType : Maybe AccountAccountType
    , profileImage : Maybe String
    , websiteUrl : Maybe String
    , username : Maybe String
    }


type AccountAccountType
    = AccountAccountTypePINNER
    | AccountAccountTypeBUSINESS


accountAccountTypeVariants : List AccountAccountType
accountAccountTypeVariants =
    [ AccountAccountTypePINNER
    , AccountAccountTypeBUSINESS
    ]


{-| Ad group billable event type.
-}
type ActionType
    = ActionTypeCLICKTHROUGH
    | ActionTypeIMPRESSION
    | ActionTypeVIDEOV50MRC
    | ActionTypeBILLABLEENGAGEMENT


actionTypeVariants : List ActionType
actionTypeVariants =
    [ ActionTypeCLICKTHROUGH
    , ActionTypeIMPRESSION
    , ActionTypeVIDEOV50MRC
    , ActionTypeBILLABLEENGAGEMENT
    ]


type alias AdAccount =
    { id : Maybe String
    , name : Maybe String
    , owner : Maybe AdAccountOwner
    , country : Maybe Country
    , currency : Maybe Currency
    }


type alias AdAccountOwner =
    { username : Maybe String
    }


type alias AdGroupResponse =
    { name : Maybe String
    , status : Maybe EntityStatus
    , budgetInMicroCurrency : Maybe Int
    , bidInMicroCurrency : Maybe Int
    , budgetType : Maybe AdGroupResponseBudgetType
    , startTime : Maybe Int
    , endTime : Maybe Int
    , targetingSpec : Maybe (Dict.Dict String (List (String)))
    , lifetimeFrequencyCap : Maybe Int
    , trackingUrls : Maybe Dict.Dict String TrackingUrls
    , autoTargetingEnabled : Maybe Bool
    , placementGroup : Maybe PlacementGroupType
    , pacingDeliveryType : Maybe PacingDeliveryType
    , conversionLearningModeType : Maybe AdGroupResponseConversionLearningModeType
    , summaryStatus : Maybe AdGroupSummaryStatus
    , feedProfileId : Maybe String
    , campaignId : Maybe String
    , billableEvent : Maybe ActionType
    , id : Maybe String
    , type_ : Maybe String
    , adAccountId : Maybe String
    , createdTime : Maybe Int
    , updatedTime : Maybe Int
    }


type AdGroupResponseBudgetType
    = AdGroupResponseBudgetTypeDAILY
    | AdGroupResponseBudgetTypeLIFETIME
    | AdGroupResponseBudgetTypeCBOADGROUP


adGroupResponseBudgetTypeVariants : List AdGroupResponseBudgetType
adGroupResponseBudgetTypeVariants =
    [ AdGroupResponseBudgetTypeDAILY
    , AdGroupResponseBudgetTypeLIFETIME
    , AdGroupResponseBudgetTypeCBOADGROUP
    ]


type AdGroupResponseConversionLearningModeType
    = AdGroupResponseConversionLearningModeTypeNOTACTIVE
    | AdGroupResponseConversionLearningModeTypeACTIVE
    | AdGroupResponseConversionLearningModeTypeNull


adGroupResponseConversionLearningModeTypeVariants : List AdGroupResponseConversionLearningModeType
adGroupResponseConversionLearningModeTypeVariants =
    [ AdGroupResponseConversionLearningModeTypeNOTACTIVE
    , AdGroupResponseConversionLearningModeTypeACTIVE
    , AdGroupResponseConversionLearningModeTypeNull
    ]


type alias AdGroupResponseAllOf1 =
    { campaignId : Maybe String
    , billableEvent : Maybe ActionType
    , id : Maybe String
    , type_ : Maybe String
    , adAccountId : Maybe String
    , createdTime : Maybe Int
    , updatedTime : Maybe Int
    }


{-| Summary status for ad group
-}
type AdGroupSummaryStatus
    = AdGroupSummaryStatusRUNNING
    | AdGroupSummaryStatusPAUSED
    | AdGroupSummaryStatusNOTSTARTED
    | AdGroupSummaryStatusCOMPLETED
    | AdGroupSummaryStatusADVERTISERDISABLED
    | AdGroupSummaryStatusARCHIVED


adGroupSummaryStatusVariants : List AdGroupSummaryStatus
adGroupSummaryStatusVariants =
    [ AdGroupSummaryStatusRUNNING
    , AdGroupSummaryStatusPAUSED
    , AdGroupSummaryStatusNOTSTARTED
    , AdGroupSummaryStatusCOMPLETED
    , AdGroupSummaryStatusADVERTISERDISABLED
    , AdGroupSummaryStatusARCHIVED
    ]


type alias AdResponse =
    { adGroupId : Maybe String
    , androidDeepLink : Maybe String
    , carouselAndroidDeepLinks : Maybe (List (String))
    , carouselDestinationUrls : Maybe (List (String))
    , carouselIosDeepLinks : Maybe (List (String))
    , clickTrackingUrl : Maybe String
    , creativeType : Maybe AdResponseCreativeType
    , destinationUrl : Maybe String
    , iosDeepLink : Maybe String
    , isPinDeleted : Maybe Bool
    , isRemovable : Maybe Bool
    , name : Maybe String
    , pinId : Maybe String
    , status : Maybe EntityStatus
    , trackingUrls : Maybe Dict.Dict String TrackingUrls
    , viewTrackingUrl : Maybe String
    , adAccountId : Maybe String
    , campaignId : Maybe String
    , collectionItemsDestinationUrlTemplate : Maybe String
    , createdTime : Maybe Int
    , id : Maybe String
    , rejectedReasons : Maybe (List AdResponseRejectedReasons)
    , rejectionLabels : Maybe (List (String))
    , reviewStatus : Maybe AdResponseReviewStatus
    , type_ : Maybe String
    , updatedTime : Maybe Int
    , summaryStatus : Maybe PinPromotionSummaryStatus
    }


type AdResponseCreativeType
    = AdResponseCreativeTypeREGULAR
    | AdResponseCreativeTypeVIDEO
    | AdResponseCreativeTypeSHOPPING
    | AdResponseCreativeTypeCAROUSEL
    | AdResponseCreativeTypeMAXVIDEO
    | AdResponseCreativeTypeSHOPTHEPIN
    | AdResponseCreativeTypeSTORY


adResponseCreativeTypeVariants : List AdResponseCreativeType
adResponseCreativeTypeVariants =
    [ AdResponseCreativeTypeREGULAR
    , AdResponseCreativeTypeVIDEO
    , AdResponseCreativeTypeSHOPPING
    , AdResponseCreativeTypeCAROUSEL
    , AdResponseCreativeTypeMAXVIDEO
    , AdResponseCreativeTypeSHOPTHEPIN
    , AdResponseCreativeTypeSTORY
    ]


type AdResponseRejectedReasons
    = AdResponseRejectedReasonsHASHTAGS
    | AdResponseRejectedReasonsPROMOTIONSANDPRICES
    | AdResponseRejectedReasonsTARGETING
    | AdResponseRejectedReasonsLANDINGPAGE
    | AdResponseRejectedReasonsCAPSANDSYMBOLS
    | AdResponseRejectedReasonsSHOCKING
    | AdResponseRejectedReasonsWEIGHTLOSS
    | AdResponseRejectedReasonsPROHIBITEDPRODUCT
    | AdResponseRejectedReasonsAUTHENTICITY
    | AdResponseRejectedReasonsNUDITY
    | AdResponseRejectedReasonsCONFUSINGDESIGN
    | AdResponseRejectedReasonsURGENCY
    | AdResponseRejectedReasonsRATINGS
    | AdResponseRejectedReasonsAPP
    | AdResponseRejectedReasonsALCOHOL
    | AdResponseRejectedReasonsCONTESTS
    | AdResponseRejectedReasonsPOLITICAL
    | AdResponseRejectedReasonsOTHER
    | AdResponseRejectedReasonsIMAGE
    | AdResponseRejectedReasonsNAR
    | AdResponseRejectedReasonsINCONSISTENT
    | AdResponseRejectedReasonsCLICKBAIT
    | AdResponseRejectedReasonsNODESCRIPTION
    | AdResponseRejectedReasonsLOWQUALITY
    | AdResponseRejectedReasonsEXAGGERATEDCLAIMS
    | AdResponseRejectedReasonsPINTERESTBRAND
    | AdResponseRejectedReasonsALCOHOLNOSALE
    | AdResponseRejectedReasonsLANDINGPAGESPEED
    | AdResponseRejectedReasonsLANDINGPAGEHARDWALL
    | AdResponseRejectedReasonsLANDINGPAGEBROKEN
    | AdResponseRejectedReasonsLANDINGPAGEQUALITY
    | AdResponseRejectedReasonsOUTOFSTOCK
    | AdResponseRejectedReasonsIMAGELOWQUALITY
    | AdResponseRejectedReasonsIMAGEBUSY
    | AdResponseRejectedReasonsIMAGEPOORLYEDITED
    | AdResponseRejectedReasonsIMAGEBEFOREAFTER
    | AdResponseRejectedReasonsUGC
    | AdResponseRejectedReasonsFAKEBUTTONS
    | AdResponseRejectedReasonsWEAPONS
    | AdResponseRejectedReasonsSENSITIVE
    | AdResponseRejectedReasonsUNACCEPTABLEBUSINESS
    | AdResponseRejectedReasonsSUSPICIOUSCLAIMS
    | AdResponseRejectedReasonsPHARMA
    | AdResponseRejectedReasonsSUSPICIOUSSUPPLEMENTS
    | AdResponseRejectedReasonsILLEGALRECREATIONALDRUG
    | AdResponseRejectedReasonsLOWQUALITYLANDINGPAGE
    | AdResponseRejectedReasonsRESTRICTEDHEALTHCARE
    | AdResponseRejectedReasonsINCONSISTENTLANGFR


adResponseRejectedReasonsVariants : List AdResponseRejectedReasons
adResponseRejectedReasonsVariants =
    [ AdResponseRejectedReasonsHASHTAGS
    , AdResponseRejectedReasonsPROMOTIONSANDPRICES
    , AdResponseRejectedReasonsTARGETING
    , AdResponseRejectedReasonsLANDINGPAGE
    , AdResponseRejectedReasonsCAPSANDSYMBOLS
    , AdResponseRejectedReasonsSHOCKING
    , AdResponseRejectedReasonsWEIGHTLOSS
    , AdResponseRejectedReasonsPROHIBITEDPRODUCT
    , AdResponseRejectedReasonsAUTHENTICITY
    , AdResponseRejectedReasonsNUDITY
    , AdResponseRejectedReasonsCONFUSINGDESIGN
    , AdResponseRejectedReasonsURGENCY
    , AdResponseRejectedReasonsRATINGS
    , AdResponseRejectedReasonsAPP
    , AdResponseRejectedReasonsALCOHOL
    , AdResponseRejectedReasonsCONTESTS
    , AdResponseRejectedReasonsPOLITICAL
    , AdResponseRejectedReasonsOTHER
    , AdResponseRejectedReasonsIMAGE
    , AdResponseRejectedReasonsNAR
    , AdResponseRejectedReasonsINCONSISTENT
    , AdResponseRejectedReasonsCLICKBAIT
    , AdResponseRejectedReasonsNODESCRIPTION
    , AdResponseRejectedReasonsLOWQUALITY
    , AdResponseRejectedReasonsEXAGGERATEDCLAIMS
    , AdResponseRejectedReasonsPINTERESTBRAND
    , AdResponseRejectedReasonsALCOHOLNOSALE
    , AdResponseRejectedReasonsLANDINGPAGESPEED
    , AdResponseRejectedReasonsLANDINGPAGEHARDWALL
    , AdResponseRejectedReasonsLANDINGPAGEBROKEN
    , AdResponseRejectedReasonsLANDINGPAGEQUALITY
    , AdResponseRejectedReasonsOUTOFSTOCK
    , AdResponseRejectedReasonsIMAGELOWQUALITY
    , AdResponseRejectedReasonsIMAGEBUSY
    , AdResponseRejectedReasonsIMAGEPOORLYEDITED
    , AdResponseRejectedReasonsIMAGEBEFOREAFTER
    , AdResponseRejectedReasonsUGC
    , AdResponseRejectedReasonsFAKEBUTTONS
    , AdResponseRejectedReasonsWEAPONS
    , AdResponseRejectedReasonsSENSITIVE
    , AdResponseRejectedReasonsUNACCEPTABLEBUSINESS
    , AdResponseRejectedReasonsSUSPICIOUSCLAIMS
    , AdResponseRejectedReasonsPHARMA
    , AdResponseRejectedReasonsSUSPICIOUSSUPPLEMENTS
    , AdResponseRejectedReasonsILLEGALRECREATIONALDRUG
    , AdResponseRejectedReasonsLOWQUALITYLANDINGPAGE
    , AdResponseRejectedReasonsRESTRICTEDHEALTHCARE
    , AdResponseRejectedReasonsINCONSISTENTLANGFR
    ]


type AdResponseReviewStatus
    = AdResponseReviewStatusOTHER
    | AdResponseReviewStatusPENDING
    | AdResponseReviewStatusREJECTED
    | AdResponseReviewStatusAPPROVED


adResponseReviewStatusVariants : List AdResponseReviewStatus
adResponseReviewStatusVariants =
    [ AdResponseReviewStatusOTHER
    , AdResponseReviewStatusPENDING
    , AdResponseReviewStatusREJECTED
    , AdResponseReviewStatusAPPROVED
    ]


type alias AdResponseAllOf1 =
    { adAccountId : Maybe String
    , campaignId : Maybe String
    , collectionItemsDestinationUrlTemplate : Maybe String
    , createdTime : Maybe Int
    , id : Maybe String
    , rejectedReasons : Maybe (List AdResponseAllOf1RejectedReasons)
    , rejectionLabels : Maybe (List (String))
    , reviewStatus : Maybe AdResponseAllOf1ReviewStatus
    , type_ : Maybe String
    , updatedTime : Maybe Int
    , summaryStatus : Maybe PinPromotionSummaryStatus
    }


type AdResponseAllOf1RejectedReasons
    = AdResponseAllOf1RejectedReasonsHASHTAGS
    | AdResponseAllOf1RejectedReasonsPROMOTIONSANDPRICES
    | AdResponseAllOf1RejectedReasonsTARGETING
    | AdResponseAllOf1RejectedReasonsLANDINGPAGE
    | AdResponseAllOf1RejectedReasonsCAPSANDSYMBOLS
    | AdResponseAllOf1RejectedReasonsSHOCKING
    | AdResponseAllOf1RejectedReasonsWEIGHTLOSS
    | AdResponseAllOf1RejectedReasonsPROHIBITEDPRODUCT
    | AdResponseAllOf1RejectedReasonsAUTHENTICITY
    | AdResponseAllOf1RejectedReasonsNUDITY
    | AdResponseAllOf1RejectedReasonsCONFUSINGDESIGN
    | AdResponseAllOf1RejectedReasonsURGENCY
    | AdResponseAllOf1RejectedReasonsRATINGS
    | AdResponseAllOf1RejectedReasonsAPP
    | AdResponseAllOf1RejectedReasonsALCOHOL
    | AdResponseAllOf1RejectedReasonsCONTESTS
    | AdResponseAllOf1RejectedReasonsPOLITICAL
    | AdResponseAllOf1RejectedReasonsOTHER
    | AdResponseAllOf1RejectedReasonsIMAGE
    | AdResponseAllOf1RejectedReasonsNAR
    | AdResponseAllOf1RejectedReasonsINCONSISTENT
    | AdResponseAllOf1RejectedReasonsCLICKBAIT
    | AdResponseAllOf1RejectedReasonsNODESCRIPTION
    | AdResponseAllOf1RejectedReasonsLOWQUALITY
    | AdResponseAllOf1RejectedReasonsEXAGGERATEDCLAIMS
    | AdResponseAllOf1RejectedReasonsPINTERESTBRAND
    | AdResponseAllOf1RejectedReasonsALCOHOLNOSALE
    | AdResponseAllOf1RejectedReasonsLANDINGPAGESPEED
    | AdResponseAllOf1RejectedReasonsLANDINGPAGEHARDWALL
    | AdResponseAllOf1RejectedReasonsLANDINGPAGEBROKEN
    | AdResponseAllOf1RejectedReasonsLANDINGPAGEQUALITY
    | AdResponseAllOf1RejectedReasonsOUTOFSTOCK
    | AdResponseAllOf1RejectedReasonsIMAGELOWQUALITY
    | AdResponseAllOf1RejectedReasonsIMAGEBUSY
    | AdResponseAllOf1RejectedReasonsIMAGEPOORLYEDITED
    | AdResponseAllOf1RejectedReasonsIMAGEBEFOREAFTER
    | AdResponseAllOf1RejectedReasonsUGC
    | AdResponseAllOf1RejectedReasonsFAKEBUTTONS
    | AdResponseAllOf1RejectedReasonsWEAPONS
    | AdResponseAllOf1RejectedReasonsSENSITIVE
    | AdResponseAllOf1RejectedReasonsUNACCEPTABLEBUSINESS
    | AdResponseAllOf1RejectedReasonsSUSPICIOUSCLAIMS
    | AdResponseAllOf1RejectedReasonsPHARMA
    | AdResponseAllOf1RejectedReasonsSUSPICIOUSSUPPLEMENTS
    | AdResponseAllOf1RejectedReasonsILLEGALRECREATIONALDRUG
    | AdResponseAllOf1RejectedReasonsLOWQUALITYLANDINGPAGE
    | AdResponseAllOf1RejectedReasonsRESTRICTEDHEALTHCARE
    | AdResponseAllOf1RejectedReasonsINCONSISTENTLANGFR


adResponseAllOf1RejectedReasonsVariants : List AdResponseAllOf1RejectedReasons
adResponseAllOf1RejectedReasonsVariants =
    [ AdResponseAllOf1RejectedReasonsHASHTAGS
    , AdResponseAllOf1RejectedReasonsPROMOTIONSANDPRICES
    , AdResponseAllOf1RejectedReasonsTARGETING
    , AdResponseAllOf1RejectedReasonsLANDINGPAGE
    , AdResponseAllOf1RejectedReasonsCAPSANDSYMBOLS
    , AdResponseAllOf1RejectedReasonsSHOCKING
    , AdResponseAllOf1RejectedReasonsWEIGHTLOSS
    , AdResponseAllOf1RejectedReasonsPROHIBITEDPRODUCT
    , AdResponseAllOf1RejectedReasonsAUTHENTICITY
    , AdResponseAllOf1RejectedReasonsNUDITY
    , AdResponseAllOf1RejectedReasonsCONFUSINGDESIGN
    , AdResponseAllOf1RejectedReasonsURGENCY
    , AdResponseAllOf1RejectedReasonsRATINGS
    , AdResponseAllOf1RejectedReasonsAPP
    , AdResponseAllOf1RejectedReasonsALCOHOL
    , AdResponseAllOf1RejectedReasonsCONTESTS
    , AdResponseAllOf1RejectedReasonsPOLITICAL
    , AdResponseAllOf1RejectedReasonsOTHER
    , AdResponseAllOf1RejectedReasonsIMAGE
    , AdResponseAllOf1RejectedReasonsNAR
    , AdResponseAllOf1RejectedReasonsINCONSISTENT
    , AdResponseAllOf1RejectedReasonsCLICKBAIT
    , AdResponseAllOf1RejectedReasonsNODESCRIPTION
    , AdResponseAllOf1RejectedReasonsLOWQUALITY
    , AdResponseAllOf1RejectedReasonsEXAGGERATEDCLAIMS
    , AdResponseAllOf1RejectedReasonsPINTERESTBRAND
    , AdResponseAllOf1RejectedReasonsALCOHOLNOSALE
    , AdResponseAllOf1RejectedReasonsLANDINGPAGESPEED
    , AdResponseAllOf1RejectedReasonsLANDINGPAGEHARDWALL
    , AdResponseAllOf1RejectedReasonsLANDINGPAGEBROKEN
    , AdResponseAllOf1RejectedReasonsLANDINGPAGEQUALITY
    , AdResponseAllOf1RejectedReasonsOUTOFSTOCK
    , AdResponseAllOf1RejectedReasonsIMAGELOWQUALITY
    , AdResponseAllOf1RejectedReasonsIMAGEBUSY
    , AdResponseAllOf1RejectedReasonsIMAGEPOORLYEDITED
    , AdResponseAllOf1RejectedReasonsIMAGEBEFOREAFTER
    , AdResponseAllOf1RejectedReasonsUGC
    , AdResponseAllOf1RejectedReasonsFAKEBUTTONS
    , AdResponseAllOf1RejectedReasonsWEAPONS
    , AdResponseAllOf1RejectedReasonsSENSITIVE
    , AdResponseAllOf1RejectedReasonsUNACCEPTABLEBUSINESS
    , AdResponseAllOf1RejectedReasonsSUSPICIOUSCLAIMS
    , AdResponseAllOf1RejectedReasonsPHARMA
    , AdResponseAllOf1RejectedReasonsSUSPICIOUSSUPPLEMENTS
    , AdResponseAllOf1RejectedReasonsILLEGALRECREATIONALDRUG
    , AdResponseAllOf1RejectedReasonsLOWQUALITYLANDINGPAGE
    , AdResponseAllOf1RejectedReasonsRESTRICTEDHEALTHCARE
    , AdResponseAllOf1RejectedReasonsINCONSISTENTLANGFR
    ]


type AdResponseAllOf1ReviewStatus
    = AdResponseAllOf1ReviewStatusOTHER
    | AdResponseAllOf1ReviewStatusPENDING
    | AdResponseAllOf1ReviewStatusREJECTED
    | AdResponseAllOf1ReviewStatusAPPROVED


adResponseAllOf1ReviewStatusVariants : List AdResponseAllOf1ReviewStatus
adResponseAllOf1ReviewStatusVariants =
    [ AdResponseAllOf1ReviewStatusOTHER
    , AdResponseAllOf1ReviewStatusPENDING
    , AdResponseAllOf1ReviewStatusREJECTED
    , AdResponseAllOf1ReviewStatusAPPROVED
    ]


type alias AdsAnalyticsCreateAsyncRequest =
    { startDate : String
    , endDate : String
    , granularity : Granularity
    , clickWindowDays : Maybe ConversionAttributionWindowDays
    , engagementWindowDays : Maybe ConversionAttributionWindowDays
    , viewWindowDays : Maybe ConversionAttributionWindowDays
    , conversionReportTime : Maybe ConversionReportTimeType
    , attributionTypes : Maybe (List (ConversionReportAttributionType))
    , columns : List (ReportingColumnAsync)
    , level : MetricsReportingLevel
    , reportFormat : Maybe DataOutputFormat
    , campaignIds : Maybe (List (String))
    , campaignStatuses : Maybe (List (CampaignSummaryStatus))
    , campaignObjectiveTypes : Maybe (List (ObjectiveType))
    , adGroupIds : Maybe (List (String))
    , adGroupStatuses : Maybe (List (AdGroupSummaryStatus))
    , adIds : Maybe (List (String))
    , adStatuses : Maybe (List (PinPromotionSummaryStatus))
    , productGroupIds : Maybe (List (String))
    , productGroupStatuses : Maybe (List (ProductGroupSummaryStatus))
    , productItemIds : Maybe (List (String))
    , targetingTypes : Maybe (List (AdsAnalyticsTargetingType))
    , metricsFilters : Maybe (List (AdsAnalyticsMetricsFilter))
    }


type alias AdsAnalyticsCreateAsyncRequestAllOf1 =
    { columns : List (ReportingColumnAsync)
    , level : MetricsReportingLevel
    , reportFormat : Maybe DataOutputFormat
    }


type alias AdsAnalyticsCreateAsyncResponse =
    { reportStatus : Maybe String
    , token : Maybe String
    , message : Maybe String
    }


{-| Reporting columns for sync reporting data filter
-}
type AdsAnalyticsFilterColumn
    = AdsAnalyticsFilterColumnSPENDINDOLLAR
    | AdsAnalyticsFilterColumnTOTALIMPRESSION


adsAnalyticsFilterColumnVariants : List AdsAnalyticsFilterColumn
adsAnalyticsFilterColumnVariants =
    [ AdsAnalyticsFilterColumnSPENDINDOLLAR
    , AdsAnalyticsFilterColumnTOTALIMPRESSION
    ]


{-| Filter operator for sync reporting
-}
type AdsAnalyticsFilterOperator
    = AdsAnalyticsFilterOperatorLESSTHAN
    | AdsAnalyticsFilterOperatorGREATERTHAN


adsAnalyticsFilterOperatorVariants : List AdsAnalyticsFilterOperator
adsAnalyticsFilterOperatorVariants =
    [ AdsAnalyticsFilterOperatorLESSTHAN
    , AdsAnalyticsFilterOperatorGREATERTHAN
    ]


type alias AdsAnalyticsGetAsyncResponse =
    { reportStatus : Maybe String
    , url : Maybe String
    , size : Maybe Float
    }


type alias AdsAnalyticsMetricsFilter =
    { field : Maybe AdsAnalyticsFilterColumn
    , operator : Maybe AdsAnalyticsFilterOperator
    , values : Maybe (List (Float))
    }


{-| Reporting targeting type
-}
type AdsAnalyticsTargetingType
    = AdsAnalyticsTargetingTypeKEYWORD
    | AdsAnalyticsTargetingTypeAPPTYPE
    | AdsAnalyticsTargetingTypeGENDER
    | AdsAnalyticsTargetingTypeLOCATION
    | AdsAnalyticsTargetingTypePLACEMENT
    | AdsAnalyticsTargetingTypeCOUNTRY
    | AdsAnalyticsTargetingTypeTARGETEDINTEREST
    | AdsAnalyticsTargetingTypePINNERINTEREST
    | AdsAnalyticsTargetingTypeAUDIENCEINCLUDE
    | AdsAnalyticsTargetingTypeAUDIENCEEXCLUDE
    | AdsAnalyticsTargetingTypeGEO
    | AdsAnalyticsTargetingTypeAGEBUCKET
    | AdsAnalyticsTargetingTypeREGION


adsAnalyticsTargetingTypeVariants : List AdsAnalyticsTargetingType
adsAnalyticsTargetingTypeVariants =
    [ AdsAnalyticsTargetingTypeKEYWORD
    , AdsAnalyticsTargetingTypeAPPTYPE
    , AdsAnalyticsTargetingTypeGENDER
    , AdsAnalyticsTargetingTypeLOCATION
    , AdsAnalyticsTargetingTypePLACEMENT
    , AdsAnalyticsTargetingTypeCOUNTRY
    , AdsAnalyticsTargetingTypeTARGETEDINTEREST
    , AdsAnalyticsTargetingTypePINNERINTEREST
    , AdsAnalyticsTargetingTypeAUDIENCEINCLUDE
    , AdsAnalyticsTargetingTypeAUDIENCEEXCLUDE
    , AdsAnalyticsTargetingTypeGEO
    , AdsAnalyticsTargetingTypeAGEBUCKET
    , AdsAnalyticsTargetingTypeREGION
    ]


type alias AnalyticsMetricsResponse =
    { dailyMetrics : Maybe (List (AnalyticsMetricsResponseDailyMetrics))
    , summaryMetrics : Maybe (Dict.Dict String (Float))
    }


type alias AnalyticsMetricsResponseDailyMetrics =
    { dataStatus : Maybe AnalyticsMetricsResponseDailyMetricsDataStatus
    , date : Maybe String
    , metrics : Maybe (Dict.Dict String (Float))
    }


type AnalyticsMetricsResponseDailyMetricsDataStatus
    = AnalyticsMetricsResponseDailyMetricsDataStatusPROCESSING
    | AnalyticsMetricsResponseDailyMetricsDataStatusREADY
    | AnalyticsMetricsResponseDailyMetricsDataStatusESTIMATE
    | AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREBUSINESSCREATED
    | AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREDATARETENTIONPERIOD
    | AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREPINDATARETENTIONPERIOD
    | AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREMETRICSTARTDATE
    | AnalyticsMetricsResponseDailyMetricsDataStatusBEFORECOREMETRICSTARTDATE
    | AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREPINFORMATMETRICSTARTDATE
    | AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREAUDIENCEMETRICSTARTDATE
    | AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREAUDIENCEMONTHLYMETRICSTARTDATE
    | AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREVIDEOMETRICSTARTDATE
    | AnalyticsMetricsResponseDailyMetricsDataStatusBEFORECONVERSIONMETRICSTARTDATE
    | AnalyticsMetricsResponseDailyMetricsDataStatusPURCHASERSMETRICSMALLERTHANTHRESHOLD
    | AnalyticsMetricsResponseDailyMetricsDataStatusINBADTAGDATE
    | AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREPUBLISHEDMETRICSTARTDATE
    | AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREASSISTMETRICSTARTDATE
    | AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREPINCREATED
    | AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREACCOUNTCLAIMED
    | AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREDEMOGRAPHICFILTERSSTARTDATE
    | AnalyticsMetricsResponseDailyMetricsDataStatusAUDIENCESEGMENTSMALLERTHANTHRESHOLD
    | AnalyticsMetricsResponseDailyMetricsDataStatusAUDIENCETOTALSMALLERTHANTHRESHOLD
    | AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREPRODUCTGROUPFILTERSTARTDATE


analyticsMetricsResponseDailyMetricsDataStatusVariants : List AnalyticsMetricsResponseDailyMetricsDataStatus
analyticsMetricsResponseDailyMetricsDataStatusVariants =
    [ AnalyticsMetricsResponseDailyMetricsDataStatusPROCESSING
    , AnalyticsMetricsResponseDailyMetricsDataStatusREADY
    , AnalyticsMetricsResponseDailyMetricsDataStatusESTIMATE
    , AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREBUSINESSCREATED
    , AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREDATARETENTIONPERIOD
    , AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREPINDATARETENTIONPERIOD
    , AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREMETRICSTARTDATE
    , AnalyticsMetricsResponseDailyMetricsDataStatusBEFORECOREMETRICSTARTDATE
    , AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREPINFORMATMETRICSTARTDATE
    , AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREAUDIENCEMETRICSTARTDATE
    , AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREAUDIENCEMONTHLYMETRICSTARTDATE
    , AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREVIDEOMETRICSTARTDATE
    , AnalyticsMetricsResponseDailyMetricsDataStatusBEFORECONVERSIONMETRICSTARTDATE
    , AnalyticsMetricsResponseDailyMetricsDataStatusPURCHASERSMETRICSMALLERTHANTHRESHOLD
    , AnalyticsMetricsResponseDailyMetricsDataStatusINBADTAGDATE
    , AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREPUBLISHEDMETRICSTARTDATE
    , AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREASSISTMETRICSTARTDATE
    , AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREPINCREATED
    , AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREACCOUNTCLAIMED
    , AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREDEMOGRAPHICFILTERSSTARTDATE
    , AnalyticsMetricsResponseDailyMetricsDataStatusAUDIENCESEGMENTSMALLERTHANTHRESHOLD
    , AnalyticsMetricsResponseDailyMetricsDataStatusAUDIENCETOTALSMALLERTHANTHRESHOLD
    , AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREPRODUCTGROUPFILTERSTARTDATE
    ]


type alias AvailabilityFilter =
    { aVAILABILITY : CatalogsProductGroupMultipleStringCriteria
    }


{-| The operation performed by the batch
-}
type BatchOperation
    = BatchOperationUPDATE
    | BatchOperationCREATE
    | BatchOperationUPSERT


batchOperationVariants : List BatchOperation
batchOperationVariants =
    [ BatchOperationUPDATE
    , BatchOperationCREATE
    , BatchOperationUPSERT
    ]


{-| The status of the operation performed by the batch
-}
type BatchOperationStatus
    = BatchOperationStatusPROCESSING
    | BatchOperationStatusCOMPLETED


batchOperationStatusVariants : List BatchOperationStatus
batchOperationStatusVariants =
    [ BatchOperationStatusPROCESSING
    , BatchOperationStatusCOMPLETED
    ]


{-| Board
-}
type alias Board =
    { id : Maybe String
    , name : String
    , description : Maybe String
    , owner : Maybe Dict.Dict String BoardOwner
    , privacy : Maybe BoardPrivacy
    }


type BoardPrivacy
    = BoardPrivacyPUBLIC
    | BoardPrivacyPROTECTED
    | BoardPrivacySECRET


boardPrivacyVariants : List BoardPrivacy
boardPrivacyVariants =
    [ BoardPrivacyPUBLIC
    , BoardPrivacyPROTECTED
    , BoardPrivacySECRET
    ]


type alias BoardOwner =
    { username : Maybe String
    }


{-| Sections help organize pins within a board.
-}
type alias BoardSection =
    { id : Maybe String
    , name : Maybe String
    }


{-| Board fields for updates
-}
type alias BoardUpdate =
    { name : Maybe String
    , description : Maybe String
    , privacy : Maybe BoardUpdatePrivacy
    }


type BoardUpdatePrivacy
    = BoardUpdatePrivacyPUBLIC
    | BoardUpdatePrivacySECRET


boardUpdatePrivacyVariants : List BoardUpdatePrivacy
boardUpdatePrivacyVariants =
    [ BoardUpdatePrivacyPUBLIC
    , BoardUpdatePrivacySECRET
    ]


type alias BrandFilter =
    { bRAND : CatalogsProductGroupMultipleStringCriteria
    }


{-| Campaign Data
-}
type alias CampaignCommon =
    { adAccountId : String
    , name : Maybe String
    , status : Maybe EntityStatus
    , lifetimeSpendCap : Maybe Int
    , dailySpendCap : Maybe Int
    , orderLineId : Maybe String
    , trackingUrls : Maybe Dict.Dict String TrackingUrls
    , startTime : Maybe Int
    , endTime : Maybe Int
    }


type alias CampaignResponse =
    { id : String
    , adAccountId : String
    , name : Maybe String
    , status : Maybe EntityStatus
    , lifetimeSpendCap : Maybe Int
    , dailySpendCap : Maybe Int
    , orderLineId : Maybe String
    , trackingUrls : Maybe Dict.Dict String TrackingUrls
    , startTime : Maybe Int
    , endTime : Maybe Int
    , objectiveType : Maybe ObjectiveType
    , createdTime : Maybe Int
    , updatedTime : Maybe Int
    , type_ : Maybe String
    }


type alias CampaignResponseAllOf1 =
    { objectiveType : Maybe ObjectiveType
    , createdTime : Maybe Int
    , updatedTime : Maybe Int
    , type_ : Maybe String
    }


{-| Summary status for campaign
-}
type CampaignSummaryStatus
    = CampaignSummaryStatusRUNNING
    | CampaignSummaryStatusPAUSED
    | CampaignSummaryStatusNOTSTARTED
    | CampaignSummaryStatusCOMPLETED
    | CampaignSummaryStatusADVERTISERDISABLED
    | CampaignSummaryStatusARCHIVED


campaignSummaryStatusVariants : List CampaignSummaryStatus
campaignSummaryStatusVariants =
    [ CampaignSummaryStatusRUNNING
    , CampaignSummaryStatusPAUSED
    , CampaignSummaryStatusNOTSTARTED
    , CampaignSummaryStatusCOMPLETED
    , CampaignSummaryStatusADVERTISERDISABLED
    , CampaignSummaryStatusARCHIVED
    ]


type alias CatalogsDbItem =
    { createdAt : Maybe Posix
    , id : Maybe String
    , updatedAt : Maybe Posix
    }


{-| Catalogs Catalogs Feed object
-}
type alias CatalogsFeed =
    { createdAt : Maybe Posix
    , id : Maybe String
    , updatedAt : Maybe Posix
    , defaultCountry : Country
    , defaultAvailability : Maybe ProductAvailabilityType
    , defaultCurrency : Maybe NullableCurrency
    , name : Maybe String
    , format : CatalogsFormat
    , defaultLocale : String
    , credentials : Maybe CatalogsFeedCredentials
    , location : String
    , preferredProcessingSchedule : Maybe CatalogsFeedProcessingSchedule
    , status : CatalogsStatus
    }


{-| Use this if your feed file requires username and password.
-}
type alias CatalogsFeedCredentials =
    { password : String
    , username : String
    }


type alias CatalogsFeedIngestionDetails =
    { errors : CatalogsFeedIngestionErrors
    , info : CatalogsFeedIngestionInfo
    }


type alias CatalogsFeedIngestionErrors =
    { imageDownloadError : Maybe Int
    , imageDownloadConnectionTimeout : Maybe Int
    , imageFormatUnrecognize : Maybe Int
    , lineLevelInternalError : Maybe Int
    , largeProductCountDecrease : Maybe CatalogsFeedIngestionErrorsLargeProductCountDecrease
    }


type CatalogsFeedIngestionErrorsLargeProductCountDecrease
    = CatalogsFeedIngestionErrorsLargeProductCountDecrease1


catalogsFeedIngestionErrorsLargeProductCountDecreaseVariants : List CatalogsFeedIngestionErrorsLargeProductCountDecrease
catalogsFeedIngestionErrorsLargeProductCountDecreaseVariants =
    [ CatalogsFeedIngestionErrorsLargeProductCountDecrease1
    ]


type alias CatalogsFeedIngestionInfo =
    { inStock : Maybe Int
    , outOfStock : Maybe Int
    , preorder : Maybe Int
    }


type alias CatalogsFeedProcessingResult =
    { createdAt : Maybe Posix
    , id : Maybe String
    , updatedAt : Maybe Posix
    , ingestionDetails : CatalogsFeedIngestionDetails
    , status : CatalogsFeedProcessingStatus
    , productCounts : Maybe CatalogsFeedProductCounts
    , validationDetails : CatalogsFeedValidationDetails
    }


type alias CatalogsFeedProcessingResultFields =
    { ingestionDetails : CatalogsFeedIngestionDetails
    , status : CatalogsFeedProcessingStatus
    , productCounts : Maybe CatalogsFeedProductCounts
    , validationDetails : CatalogsFeedValidationDetails
    }


{-| Optional daily processing schedule. Use this to configure the preferred time for processing a feed (otherwise random).
-}
type alias CatalogsFeedProcessingSchedule =
    { time : String
    , timezone : Maybe CatalogsFeedProcessingScheduleTimezone
    }


type CatalogsFeedProcessingScheduleTimezone
    = CatalogsFeedProcessingScheduleTimezoneAfricaAbidjan
    | CatalogsFeedProcessingScheduleTimezoneAfricaAccra
    | CatalogsFeedProcessingScheduleTimezoneAfricaAlgiers
    | CatalogsFeedProcessingScheduleTimezoneAfricaBissau
    | CatalogsFeedProcessingScheduleTimezoneAfricaCairo
    | CatalogsFeedProcessingScheduleTimezoneAfricaCasablanca
    | CatalogsFeedProcessingScheduleTimezoneAfricaCeuta
    | CatalogsFeedProcessingScheduleTimezoneAfricaElAaiun
    | CatalogsFeedProcessingScheduleTimezoneAfricaJohannesburg
    | CatalogsFeedProcessingScheduleTimezoneAfricaJuba
    | CatalogsFeedProcessingScheduleTimezoneAfricaKhartoum
    | CatalogsFeedProcessingScheduleTimezoneAfricaLagos
    | CatalogsFeedProcessingScheduleTimezoneAfricaMaputo
    | CatalogsFeedProcessingScheduleTimezoneAfricaMonrovia
    | CatalogsFeedProcessingScheduleTimezoneAfricaNairobi
    | CatalogsFeedProcessingScheduleTimezoneAfricaNdjamena
    | CatalogsFeedProcessingScheduleTimezoneAfricaSaoTome
    | CatalogsFeedProcessingScheduleTimezoneAfricaTripoli
    | CatalogsFeedProcessingScheduleTimezoneAfricaTunis
    | CatalogsFeedProcessingScheduleTimezoneAfricaWindhoek
    | CatalogsFeedProcessingScheduleTimezoneAmericaAdak
    | CatalogsFeedProcessingScheduleTimezoneAmericaAnchorage
    | CatalogsFeedProcessingScheduleTimezoneAmericaAraguaina
    | CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaBuenosAires
    | CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaCatamarca
    | CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaCordoba
    | CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaJujuy
    | CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaLaRioja
    | CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaMendoza
    | CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaRioGallegos
    | CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaSalta
    | CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaSanJuan
    | CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaSanLuis
    | CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaTucuman
    | CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaUshuaia
    | CatalogsFeedProcessingScheduleTimezoneAmericaAsuncion
    | CatalogsFeedProcessingScheduleTimezoneAmericaAtikokan
    | CatalogsFeedProcessingScheduleTimezoneAmericaBahia
    | CatalogsFeedProcessingScheduleTimezoneAmericaBahiaBanderas
    | CatalogsFeedProcessingScheduleTimezoneAmericaBarbados
    | CatalogsFeedProcessingScheduleTimezoneAmericaBelem
    | CatalogsFeedProcessingScheduleTimezoneAmericaBelize
    | CatalogsFeedProcessingScheduleTimezoneAmericaBlancSablon
    | CatalogsFeedProcessingScheduleTimezoneAmericaBoaVista
    | CatalogsFeedProcessingScheduleTimezoneAmericaBogota
    | CatalogsFeedProcessingScheduleTimezoneAmericaBoise
    | CatalogsFeedProcessingScheduleTimezoneAmericaCambridgeBay
    | CatalogsFeedProcessingScheduleTimezoneAmericaCampoGrande
    | CatalogsFeedProcessingScheduleTimezoneAmericaCancun
    | CatalogsFeedProcessingScheduleTimezoneAmericaCaracas
    | CatalogsFeedProcessingScheduleTimezoneAmericaCayenne
    | CatalogsFeedProcessingScheduleTimezoneAmericaChicago
    | CatalogsFeedProcessingScheduleTimezoneAmericaChihuahua
    | CatalogsFeedProcessingScheduleTimezoneAmericaCostaRica
    | CatalogsFeedProcessingScheduleTimezoneAmericaCreston
    | CatalogsFeedProcessingScheduleTimezoneAmericaCuiaba
    | CatalogsFeedProcessingScheduleTimezoneAmericaCuracao
    | CatalogsFeedProcessingScheduleTimezoneAmericaDanmarkshavn
    | CatalogsFeedProcessingScheduleTimezoneAmericaDawson
    | CatalogsFeedProcessingScheduleTimezoneAmericaDawsonCreek
    | CatalogsFeedProcessingScheduleTimezoneAmericaDenver
    | CatalogsFeedProcessingScheduleTimezoneAmericaDetroit
    | CatalogsFeedProcessingScheduleTimezoneAmericaEdmonton
    | CatalogsFeedProcessingScheduleTimezoneAmericaEirunepe
    | CatalogsFeedProcessingScheduleTimezoneAmericaElSalvador
    | CatalogsFeedProcessingScheduleTimezoneAmericaFortNelson
    | CatalogsFeedProcessingScheduleTimezoneAmericaFortaleza
    | CatalogsFeedProcessingScheduleTimezoneAmericaGlaceBay
    | CatalogsFeedProcessingScheduleTimezoneAmericaGooseBay
    | CatalogsFeedProcessingScheduleTimezoneAmericaGrandTurk
    | CatalogsFeedProcessingScheduleTimezoneAmericaGuatemala
    | CatalogsFeedProcessingScheduleTimezoneAmericaGuayaquil
    | CatalogsFeedProcessingScheduleTimezoneAmericaGuyana
    | CatalogsFeedProcessingScheduleTimezoneAmericaHalifax
    | CatalogsFeedProcessingScheduleTimezoneAmericaHavana
    | CatalogsFeedProcessingScheduleTimezoneAmericaHermosillo
    | CatalogsFeedProcessingScheduleTimezoneAmericaIndianaIndianapolis
    | CatalogsFeedProcessingScheduleTimezoneAmericaIndianaKnox
    | CatalogsFeedProcessingScheduleTimezoneAmericaIndianaMarengo
    | CatalogsFeedProcessingScheduleTimezoneAmericaIndianaPetersburg
    | CatalogsFeedProcessingScheduleTimezoneAmericaIndianaTellCity
    | CatalogsFeedProcessingScheduleTimezoneAmericaIndianaVevay
    | CatalogsFeedProcessingScheduleTimezoneAmericaIndianaVincennes
    | CatalogsFeedProcessingScheduleTimezoneAmericaIndianaWinamac
    | CatalogsFeedProcessingScheduleTimezoneAmericaInuvik
    | CatalogsFeedProcessingScheduleTimezoneAmericaIqaluit
    | CatalogsFeedProcessingScheduleTimezoneAmericaJamaica
    | CatalogsFeedProcessingScheduleTimezoneAmericaJuneau
    | CatalogsFeedProcessingScheduleTimezoneAmericaKentuckyLouisville
    | CatalogsFeedProcessingScheduleTimezoneAmericaKentuckyMonticello
    | CatalogsFeedProcessingScheduleTimezoneAmericaLaPaz
    | CatalogsFeedProcessingScheduleTimezoneAmericaLima
    | CatalogsFeedProcessingScheduleTimezoneAmericaLosAngeles
    | CatalogsFeedProcessingScheduleTimezoneAmericaMaceio
    | CatalogsFeedProcessingScheduleTimezoneAmericaManagua
    | CatalogsFeedProcessingScheduleTimezoneAmericaManaus
    | CatalogsFeedProcessingScheduleTimezoneAmericaMartinique
    | CatalogsFeedProcessingScheduleTimezoneAmericaMatamoros
    | CatalogsFeedProcessingScheduleTimezoneAmericaMazatlan
    | CatalogsFeedProcessingScheduleTimezoneAmericaMenominee
    | CatalogsFeedProcessingScheduleTimezoneAmericaMerida
    | CatalogsFeedProcessingScheduleTimezoneAmericaMetlakatla
    | CatalogsFeedProcessingScheduleTimezoneAmericaMexicoCity
    | CatalogsFeedProcessingScheduleTimezoneAmericaMiquelon
    | CatalogsFeedProcessingScheduleTimezoneAmericaMoncton
    | CatalogsFeedProcessingScheduleTimezoneAmericaMonterrey
    | CatalogsFeedProcessingScheduleTimezoneAmericaMontevideo
    | CatalogsFeedProcessingScheduleTimezoneAmericaNassau
    | CatalogsFeedProcessingScheduleTimezoneAmericaNewYork
    | CatalogsFeedProcessingScheduleTimezoneAmericaNipigon
    | CatalogsFeedProcessingScheduleTimezoneAmericaNome
    | CatalogsFeedProcessingScheduleTimezoneAmericaNoronha
    | CatalogsFeedProcessingScheduleTimezoneAmericaNorthDakotaBeulah
    | CatalogsFeedProcessingScheduleTimezoneAmericaNorthDakotaCenter
    | CatalogsFeedProcessingScheduleTimezoneAmericaNorthDakotaNewSalem
    | CatalogsFeedProcessingScheduleTimezoneAmericaNuuk
    | CatalogsFeedProcessingScheduleTimezoneAmericaOjinaga
    | CatalogsFeedProcessingScheduleTimezoneAmericaPanama
    | CatalogsFeedProcessingScheduleTimezoneAmericaPangnirtung
    | CatalogsFeedProcessingScheduleTimezoneAmericaParamaribo
    | CatalogsFeedProcessingScheduleTimezoneAmericaPhoenix
    | CatalogsFeedProcessingScheduleTimezoneAmericaPortAuPrince
    | CatalogsFeedProcessingScheduleTimezoneAmericaPortOfSpain
    | CatalogsFeedProcessingScheduleTimezoneAmericaPortoVelho
    | CatalogsFeedProcessingScheduleTimezoneAmericaPuertoRico
    | CatalogsFeedProcessingScheduleTimezoneAmericaPuntaArenas
    | CatalogsFeedProcessingScheduleTimezoneAmericaRainyRiver
    | CatalogsFeedProcessingScheduleTimezoneAmericaRankinInlet
    | CatalogsFeedProcessingScheduleTimezoneAmericaRecife
    | CatalogsFeedProcessingScheduleTimezoneAmericaRegina
    | CatalogsFeedProcessingScheduleTimezoneAmericaResolute
    | CatalogsFeedProcessingScheduleTimezoneAmericaRioBranco
    | CatalogsFeedProcessingScheduleTimezoneAmericaSantarem
    | CatalogsFeedProcessingScheduleTimezoneAmericaSantiago
    | CatalogsFeedProcessingScheduleTimezoneAmericaSantoDomingo
    | CatalogsFeedProcessingScheduleTimezoneAmericaSaoPaulo
    | CatalogsFeedProcessingScheduleTimezoneAmericaScoresbysund
    | CatalogsFeedProcessingScheduleTimezoneAmericaSitka
    | CatalogsFeedProcessingScheduleTimezoneAmericaStJohns
    | CatalogsFeedProcessingScheduleTimezoneAmericaSwiftCurrent
    | CatalogsFeedProcessingScheduleTimezoneAmericaTegucigalpa
    | CatalogsFeedProcessingScheduleTimezoneAmericaThule
    | CatalogsFeedProcessingScheduleTimezoneAmericaThunderBay
    | CatalogsFeedProcessingScheduleTimezoneAmericaTijuana
    | CatalogsFeedProcessingScheduleTimezoneAmericaToronto
    | CatalogsFeedProcessingScheduleTimezoneAmericaVancouver
    | CatalogsFeedProcessingScheduleTimezoneAmericaWhitehorse
    | CatalogsFeedProcessingScheduleTimezoneAmericaWinnipeg
    | CatalogsFeedProcessingScheduleTimezoneAmericaYakutat
    | CatalogsFeedProcessingScheduleTimezoneAmericaYellowknife
    | CatalogsFeedProcessingScheduleTimezoneAntarcticaCasey
    | CatalogsFeedProcessingScheduleTimezoneAntarcticaDavis
    | CatalogsFeedProcessingScheduleTimezoneAntarcticaDumontDUrville
    | CatalogsFeedProcessingScheduleTimezoneAntarcticaMacquarie
    | CatalogsFeedProcessingScheduleTimezoneAntarcticaMawson
    | CatalogsFeedProcessingScheduleTimezoneAntarcticaPalmer
    | CatalogsFeedProcessingScheduleTimezoneAntarcticaRothera
    | CatalogsFeedProcessingScheduleTimezoneAntarcticaSyowa
    | CatalogsFeedProcessingScheduleTimezoneAntarcticaTroll
    | CatalogsFeedProcessingScheduleTimezoneAntarcticaVostok
    | CatalogsFeedProcessingScheduleTimezoneAsiaAlmaty
    | CatalogsFeedProcessingScheduleTimezoneAsiaAmman
    | CatalogsFeedProcessingScheduleTimezoneAsiaAnadyr
    | CatalogsFeedProcessingScheduleTimezoneAsiaAqtau
    | CatalogsFeedProcessingScheduleTimezoneAsiaAqtobe
    | CatalogsFeedProcessingScheduleTimezoneAsiaAshgabat
    | CatalogsFeedProcessingScheduleTimezoneAsiaAtyrau
    | CatalogsFeedProcessingScheduleTimezoneAsiaBaghdad
    | CatalogsFeedProcessingScheduleTimezoneAsiaBaku
    | CatalogsFeedProcessingScheduleTimezoneAsiaBangkok
    | CatalogsFeedProcessingScheduleTimezoneAsiaBarnaul
    | CatalogsFeedProcessingScheduleTimezoneAsiaBeirut
    | CatalogsFeedProcessingScheduleTimezoneAsiaBishkek
    | CatalogsFeedProcessingScheduleTimezoneAsiaBrunei
    | CatalogsFeedProcessingScheduleTimezoneAsiaChita
    | CatalogsFeedProcessingScheduleTimezoneAsiaChoibalsan
    | CatalogsFeedProcessingScheduleTimezoneAsiaColombo
    | CatalogsFeedProcessingScheduleTimezoneAsiaDamascus
    | CatalogsFeedProcessingScheduleTimezoneAsiaDhaka
    | CatalogsFeedProcessingScheduleTimezoneAsiaDili
    | CatalogsFeedProcessingScheduleTimezoneAsiaDubai
    | CatalogsFeedProcessingScheduleTimezoneAsiaDushanbe
    | CatalogsFeedProcessingScheduleTimezoneAsiaFamagusta
    | CatalogsFeedProcessingScheduleTimezoneAsiaGaza
    | CatalogsFeedProcessingScheduleTimezoneAsiaHebron
    | CatalogsFeedProcessingScheduleTimezoneAsiaHoChiMinh
    | CatalogsFeedProcessingScheduleTimezoneAsiaHongKong
    | CatalogsFeedProcessingScheduleTimezoneAsiaHovd
    | CatalogsFeedProcessingScheduleTimezoneAsiaIrkutsk
    | CatalogsFeedProcessingScheduleTimezoneAsiaJakarta
    | CatalogsFeedProcessingScheduleTimezoneAsiaJayapura
    | CatalogsFeedProcessingScheduleTimezoneAsiaJerusalem
    | CatalogsFeedProcessingScheduleTimezoneAsiaKabul
    | CatalogsFeedProcessingScheduleTimezoneAsiaKamchatka
    | CatalogsFeedProcessingScheduleTimezoneAsiaKarachi
    | CatalogsFeedProcessingScheduleTimezoneAsiaKathmandu
    | CatalogsFeedProcessingScheduleTimezoneAsiaKhandyga
    | CatalogsFeedProcessingScheduleTimezoneAsiaKolkata
    | CatalogsFeedProcessingScheduleTimezoneAsiaKrasnoyarsk
    | CatalogsFeedProcessingScheduleTimezoneAsiaKualaLumpur
    | CatalogsFeedProcessingScheduleTimezoneAsiaKuching
    | CatalogsFeedProcessingScheduleTimezoneAsiaMacau
    | CatalogsFeedProcessingScheduleTimezoneAsiaMagadan
    | CatalogsFeedProcessingScheduleTimezoneAsiaMakassar
    | CatalogsFeedProcessingScheduleTimezoneAsiaManila
    | CatalogsFeedProcessingScheduleTimezoneAsiaNicosia
    | CatalogsFeedProcessingScheduleTimezoneAsiaNovokuznetsk
    | CatalogsFeedProcessingScheduleTimezoneAsiaNovosibirsk
    | CatalogsFeedProcessingScheduleTimezoneAsiaOmsk
    | CatalogsFeedProcessingScheduleTimezoneAsiaOral
    | CatalogsFeedProcessingScheduleTimezoneAsiaPontianak
    | CatalogsFeedProcessingScheduleTimezoneAsiaPyongyang
    | CatalogsFeedProcessingScheduleTimezoneAsiaQatar
    | CatalogsFeedProcessingScheduleTimezoneAsiaQostanay
    | CatalogsFeedProcessingScheduleTimezoneAsiaQyzylorda
    | CatalogsFeedProcessingScheduleTimezoneAsiaRiyadh
    | CatalogsFeedProcessingScheduleTimezoneAsiaSakhalin
    | CatalogsFeedProcessingScheduleTimezoneAsiaSamarkand
    | CatalogsFeedProcessingScheduleTimezoneAsiaSeoul
    | CatalogsFeedProcessingScheduleTimezoneAsiaShanghai
    | CatalogsFeedProcessingScheduleTimezoneAsiaSingapore
    | CatalogsFeedProcessingScheduleTimezoneAsiaSrednekolymsk
    | CatalogsFeedProcessingScheduleTimezoneAsiaTaipei
    | CatalogsFeedProcessingScheduleTimezoneAsiaTashkent
    | CatalogsFeedProcessingScheduleTimezoneAsiaTbilisi
    | CatalogsFeedProcessingScheduleTimezoneAsiaTehran
    | CatalogsFeedProcessingScheduleTimezoneAsiaThimphu
    | CatalogsFeedProcessingScheduleTimezoneAsiaTokyo
    | CatalogsFeedProcessingScheduleTimezoneAsiaTomsk
    | CatalogsFeedProcessingScheduleTimezoneAsiaUlaanbaatar
    | CatalogsFeedProcessingScheduleTimezoneAsiaUrumqi
    | CatalogsFeedProcessingScheduleTimezoneAsiaUstNera
    | CatalogsFeedProcessingScheduleTimezoneAsiaVladivostok
    | CatalogsFeedProcessingScheduleTimezoneAsiaYakutsk
    | CatalogsFeedProcessingScheduleTimezoneAsiaYangon
    | CatalogsFeedProcessingScheduleTimezoneAsiaYekaterinburg
    | CatalogsFeedProcessingScheduleTimezoneAsiaYerevan
    | CatalogsFeedProcessingScheduleTimezoneAtlanticAzores
    | CatalogsFeedProcessingScheduleTimezoneAtlanticBermuda
    | CatalogsFeedProcessingScheduleTimezoneAtlanticCanary
    | CatalogsFeedProcessingScheduleTimezoneAtlanticCapeVerde
    | CatalogsFeedProcessingScheduleTimezoneAtlanticFaroe
    | CatalogsFeedProcessingScheduleTimezoneAtlanticMadeira
    | CatalogsFeedProcessingScheduleTimezoneAtlanticReykjavik
    | CatalogsFeedProcessingScheduleTimezoneAtlanticSouthGeorgia
    | CatalogsFeedProcessingScheduleTimezoneAtlanticStanley
    | CatalogsFeedProcessingScheduleTimezoneAustraliaAdelaide
    | CatalogsFeedProcessingScheduleTimezoneAustraliaBrisbane
    | CatalogsFeedProcessingScheduleTimezoneAustraliaBrokenHill
    | CatalogsFeedProcessingScheduleTimezoneAustraliaCurrie
    | CatalogsFeedProcessingScheduleTimezoneAustraliaDarwin
    | CatalogsFeedProcessingScheduleTimezoneAustraliaEucla
    | CatalogsFeedProcessingScheduleTimezoneAustraliaHobart
    | CatalogsFeedProcessingScheduleTimezoneAustraliaLindeman
    | CatalogsFeedProcessingScheduleTimezoneAustraliaLordHowe
    | CatalogsFeedProcessingScheduleTimezoneAustraliaMelbourne
    | CatalogsFeedProcessingScheduleTimezoneAustraliaPerth
    | CatalogsFeedProcessingScheduleTimezoneAustraliaSydney
    | CatalogsFeedProcessingScheduleTimezoneCET
    | CatalogsFeedProcessingScheduleTimezoneCST6CDT
    | CatalogsFeedProcessingScheduleTimezoneEET
    | CatalogsFeedProcessingScheduleTimezoneEST
    | CatalogsFeedProcessingScheduleTimezoneEST5EDT
    | CatalogsFeedProcessingScheduleTimezoneEtcGMT
    | CatalogsFeedProcessingScheduleTimezoneEtcGMT+1
    | CatalogsFeedProcessingScheduleTimezoneEtcGMT+10
    | CatalogsFeedProcessingScheduleTimezoneEtcGMT+11
    | CatalogsFeedProcessingScheduleTimezoneEtcGMT+12
    | CatalogsFeedProcessingScheduleTimezoneEtcGMT+2
    | CatalogsFeedProcessingScheduleTimezoneEtcGMT+3
    | CatalogsFeedProcessingScheduleTimezoneEtcGMT+4
    | CatalogsFeedProcessingScheduleTimezoneEtcGMT+5
    | CatalogsFeedProcessingScheduleTimezoneEtcGMT+6
    | CatalogsFeedProcessingScheduleTimezoneEtcGMT+7
    | CatalogsFeedProcessingScheduleTimezoneEtcGMT+8
    | CatalogsFeedProcessingScheduleTimezoneEtcGMT+9
    | CatalogsFeedProcessingScheduleTimezoneEtcGMT1
    | CatalogsFeedProcessingScheduleTimezoneEtcGMT10
    | CatalogsFeedProcessingScheduleTimezoneEtcGMT11
    | CatalogsFeedProcessingScheduleTimezoneEtcGMT12
    | CatalogsFeedProcessingScheduleTimezoneEtcGMT13
    | CatalogsFeedProcessingScheduleTimezoneEtcGMT14
    | CatalogsFeedProcessingScheduleTimezoneEtcGMT2
    | CatalogsFeedProcessingScheduleTimezoneEtcGMT3
    | CatalogsFeedProcessingScheduleTimezoneEtcGMT4
    | CatalogsFeedProcessingScheduleTimezoneEtcGMT5
    | CatalogsFeedProcessingScheduleTimezoneEtcGMT6
    | CatalogsFeedProcessingScheduleTimezoneEtcGMT7
    | CatalogsFeedProcessingScheduleTimezoneEtcGMT8
    | CatalogsFeedProcessingScheduleTimezoneEtcGMT9
    | CatalogsFeedProcessingScheduleTimezoneEtcUTC
    | CatalogsFeedProcessingScheduleTimezoneEuropeAmsterdam
    | CatalogsFeedProcessingScheduleTimezoneEuropeAndorra
    | CatalogsFeedProcessingScheduleTimezoneEuropeAstrakhan
    | CatalogsFeedProcessingScheduleTimezoneEuropeAthens
    | CatalogsFeedProcessingScheduleTimezoneEuropeBelgrade
    | CatalogsFeedProcessingScheduleTimezoneEuropeBerlin
    | CatalogsFeedProcessingScheduleTimezoneEuropeBrussels
    | CatalogsFeedProcessingScheduleTimezoneEuropeBucharest
    | CatalogsFeedProcessingScheduleTimezoneEuropeBudapest
    | CatalogsFeedProcessingScheduleTimezoneEuropeChisinau
    | CatalogsFeedProcessingScheduleTimezoneEuropeCopenhagen
    | CatalogsFeedProcessingScheduleTimezoneEuropeDublin
    | CatalogsFeedProcessingScheduleTimezoneEuropeGibraltar
    | CatalogsFeedProcessingScheduleTimezoneEuropeHelsinki
    | CatalogsFeedProcessingScheduleTimezoneEuropeIstanbul
    | CatalogsFeedProcessingScheduleTimezoneEuropeKaliningrad
    | CatalogsFeedProcessingScheduleTimezoneEuropeKiev
    | CatalogsFeedProcessingScheduleTimezoneEuropeKirov
    | CatalogsFeedProcessingScheduleTimezoneEuropeLisbon
    | CatalogsFeedProcessingScheduleTimezoneEuropeLondon
    | CatalogsFeedProcessingScheduleTimezoneEuropeLuxembourg
    | CatalogsFeedProcessingScheduleTimezoneEuropeMadrid
    | CatalogsFeedProcessingScheduleTimezoneEuropeMalta
    | CatalogsFeedProcessingScheduleTimezoneEuropeMinsk
    | CatalogsFeedProcessingScheduleTimezoneEuropeMonaco
    | CatalogsFeedProcessingScheduleTimezoneEuropeMoscow
    | CatalogsFeedProcessingScheduleTimezoneEuropeOslo
    | CatalogsFeedProcessingScheduleTimezoneEuropeParis
    | CatalogsFeedProcessingScheduleTimezoneEuropePrague
    | CatalogsFeedProcessingScheduleTimezoneEuropeRiga
    | CatalogsFeedProcessingScheduleTimezoneEuropeRome
    | CatalogsFeedProcessingScheduleTimezoneEuropeSamara
    | CatalogsFeedProcessingScheduleTimezoneEuropeSaratov
    | CatalogsFeedProcessingScheduleTimezoneEuropeSimferopol
    | CatalogsFeedProcessingScheduleTimezoneEuropeSofia
    | CatalogsFeedProcessingScheduleTimezoneEuropeStockholm
    | CatalogsFeedProcessingScheduleTimezoneEuropeTallinn
    | CatalogsFeedProcessingScheduleTimezoneEuropeTirane
    | CatalogsFeedProcessingScheduleTimezoneEuropeUlyanovsk
    | CatalogsFeedProcessingScheduleTimezoneEuropeUzhgorod
    | CatalogsFeedProcessingScheduleTimezoneEuropeVienna
    | CatalogsFeedProcessingScheduleTimezoneEuropeVilnius
    | CatalogsFeedProcessingScheduleTimezoneEuropeVolgograd
    | CatalogsFeedProcessingScheduleTimezoneEuropeWarsaw
    | CatalogsFeedProcessingScheduleTimezoneEuropeZaporozhye
    | CatalogsFeedProcessingScheduleTimezoneEuropeZurich
    | CatalogsFeedProcessingScheduleTimezoneHST
    | CatalogsFeedProcessingScheduleTimezoneIndianChagos
    | CatalogsFeedProcessingScheduleTimezoneIndianChristmas
    | CatalogsFeedProcessingScheduleTimezoneIndianCocos
    | CatalogsFeedProcessingScheduleTimezoneIndianKerguelen
    | CatalogsFeedProcessingScheduleTimezoneIndianMahe
    | CatalogsFeedProcessingScheduleTimezoneIndianMaldives
    | CatalogsFeedProcessingScheduleTimezoneIndianMauritius
    | CatalogsFeedProcessingScheduleTimezoneIndianReunion
    | CatalogsFeedProcessingScheduleTimezoneMET
    | CatalogsFeedProcessingScheduleTimezoneMST
    | CatalogsFeedProcessingScheduleTimezoneMST7MDT
    | CatalogsFeedProcessingScheduleTimezonePST8PDT
    | CatalogsFeedProcessingScheduleTimezonePacificApia
    | CatalogsFeedProcessingScheduleTimezonePacificAuckland
    | CatalogsFeedProcessingScheduleTimezonePacificBougainville
    | CatalogsFeedProcessingScheduleTimezonePacificChatham
    | CatalogsFeedProcessingScheduleTimezonePacificChuuk
    | CatalogsFeedProcessingScheduleTimezonePacificEaster
    | CatalogsFeedProcessingScheduleTimezonePacificEfate
    | CatalogsFeedProcessingScheduleTimezonePacificEnderbury
    | CatalogsFeedProcessingScheduleTimezonePacificFakaofo
    | CatalogsFeedProcessingScheduleTimezonePacificFiji
    | CatalogsFeedProcessingScheduleTimezonePacificFunafuti
    | CatalogsFeedProcessingScheduleTimezonePacificGalapagos
    | CatalogsFeedProcessingScheduleTimezonePacificGambier
    | CatalogsFeedProcessingScheduleTimezonePacificGuadalcanal
    | CatalogsFeedProcessingScheduleTimezonePacificGuam
    | CatalogsFeedProcessingScheduleTimezonePacificHonolulu
    | CatalogsFeedProcessingScheduleTimezonePacificKiritimati
    | CatalogsFeedProcessingScheduleTimezonePacificKosrae
    | CatalogsFeedProcessingScheduleTimezonePacificKwajalein
    | CatalogsFeedProcessingScheduleTimezonePacificMajuro
    | CatalogsFeedProcessingScheduleTimezonePacificMarquesas
    | CatalogsFeedProcessingScheduleTimezonePacificNauru
    | CatalogsFeedProcessingScheduleTimezonePacificNiue
    | CatalogsFeedProcessingScheduleTimezonePacificNorfolk
    | CatalogsFeedProcessingScheduleTimezonePacificNoumea
    | CatalogsFeedProcessingScheduleTimezonePacificPagoPago
    | CatalogsFeedProcessingScheduleTimezonePacificPalau
    | CatalogsFeedProcessingScheduleTimezonePacificPitcairn
    | CatalogsFeedProcessingScheduleTimezonePacificPohnpei
    | CatalogsFeedProcessingScheduleTimezonePacificPortMoresby
    | CatalogsFeedProcessingScheduleTimezonePacificRarotonga
    | CatalogsFeedProcessingScheduleTimezonePacificTahiti
    | CatalogsFeedProcessingScheduleTimezonePacificTarawa
    | CatalogsFeedProcessingScheduleTimezonePacificTongatapu
    | CatalogsFeedProcessingScheduleTimezonePacificWake
    | CatalogsFeedProcessingScheduleTimezonePacificWallis
    | CatalogsFeedProcessingScheduleTimezoneWET
    | CatalogsFeedProcessingScheduleTimezoneNull


catalogsFeedProcessingScheduleTimezoneVariants : List CatalogsFeedProcessingScheduleTimezone
catalogsFeedProcessingScheduleTimezoneVariants =
    [ CatalogsFeedProcessingScheduleTimezoneAfricaAbidjan
    , CatalogsFeedProcessingScheduleTimezoneAfricaAccra
    , CatalogsFeedProcessingScheduleTimezoneAfricaAlgiers
    , CatalogsFeedProcessingScheduleTimezoneAfricaBissau
    , CatalogsFeedProcessingScheduleTimezoneAfricaCairo
    , CatalogsFeedProcessingScheduleTimezoneAfricaCasablanca
    , CatalogsFeedProcessingScheduleTimezoneAfricaCeuta
    , CatalogsFeedProcessingScheduleTimezoneAfricaElAaiun
    , CatalogsFeedProcessingScheduleTimezoneAfricaJohannesburg
    , CatalogsFeedProcessingScheduleTimezoneAfricaJuba
    , CatalogsFeedProcessingScheduleTimezoneAfricaKhartoum
    , CatalogsFeedProcessingScheduleTimezoneAfricaLagos
    , CatalogsFeedProcessingScheduleTimezoneAfricaMaputo
    , CatalogsFeedProcessingScheduleTimezoneAfricaMonrovia
    , CatalogsFeedProcessingScheduleTimezoneAfricaNairobi
    , CatalogsFeedProcessingScheduleTimezoneAfricaNdjamena
    , CatalogsFeedProcessingScheduleTimezoneAfricaSaoTome
    , CatalogsFeedProcessingScheduleTimezoneAfricaTripoli
    , CatalogsFeedProcessingScheduleTimezoneAfricaTunis
    , CatalogsFeedProcessingScheduleTimezoneAfricaWindhoek
    , CatalogsFeedProcessingScheduleTimezoneAmericaAdak
    , CatalogsFeedProcessingScheduleTimezoneAmericaAnchorage
    , CatalogsFeedProcessingScheduleTimezoneAmericaAraguaina
    , CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaBuenosAires
    , CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaCatamarca
    , CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaCordoba
    , CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaJujuy
    , CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaLaRioja
    , CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaMendoza
    , CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaRioGallegos
    , CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaSalta
    , CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaSanJuan
    , CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaSanLuis
    , CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaTucuman
    , CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaUshuaia
    , CatalogsFeedProcessingScheduleTimezoneAmericaAsuncion
    , CatalogsFeedProcessingScheduleTimezoneAmericaAtikokan
    , CatalogsFeedProcessingScheduleTimezoneAmericaBahia
    , CatalogsFeedProcessingScheduleTimezoneAmericaBahiaBanderas
    , CatalogsFeedProcessingScheduleTimezoneAmericaBarbados
    , CatalogsFeedProcessingScheduleTimezoneAmericaBelem
    , CatalogsFeedProcessingScheduleTimezoneAmericaBelize
    , CatalogsFeedProcessingScheduleTimezoneAmericaBlancSablon
    , CatalogsFeedProcessingScheduleTimezoneAmericaBoaVista
    , CatalogsFeedProcessingScheduleTimezoneAmericaBogota
    , CatalogsFeedProcessingScheduleTimezoneAmericaBoise
    , CatalogsFeedProcessingScheduleTimezoneAmericaCambridgeBay
    , CatalogsFeedProcessingScheduleTimezoneAmericaCampoGrande
    , CatalogsFeedProcessingScheduleTimezoneAmericaCancun
    , CatalogsFeedProcessingScheduleTimezoneAmericaCaracas
    , CatalogsFeedProcessingScheduleTimezoneAmericaCayenne
    , CatalogsFeedProcessingScheduleTimezoneAmericaChicago
    , CatalogsFeedProcessingScheduleTimezoneAmericaChihuahua
    , CatalogsFeedProcessingScheduleTimezoneAmericaCostaRica
    , CatalogsFeedProcessingScheduleTimezoneAmericaCreston
    , CatalogsFeedProcessingScheduleTimezoneAmericaCuiaba
    , CatalogsFeedProcessingScheduleTimezoneAmericaCuracao
    , CatalogsFeedProcessingScheduleTimezoneAmericaDanmarkshavn
    , CatalogsFeedProcessingScheduleTimezoneAmericaDawson
    , CatalogsFeedProcessingScheduleTimezoneAmericaDawsonCreek
    , CatalogsFeedProcessingScheduleTimezoneAmericaDenver
    , CatalogsFeedProcessingScheduleTimezoneAmericaDetroit
    , CatalogsFeedProcessingScheduleTimezoneAmericaEdmonton
    , CatalogsFeedProcessingScheduleTimezoneAmericaEirunepe
    , CatalogsFeedProcessingScheduleTimezoneAmericaElSalvador
    , CatalogsFeedProcessingScheduleTimezoneAmericaFortNelson
    , CatalogsFeedProcessingScheduleTimezoneAmericaFortaleza
    , CatalogsFeedProcessingScheduleTimezoneAmericaGlaceBay
    , CatalogsFeedProcessingScheduleTimezoneAmericaGooseBay
    , CatalogsFeedProcessingScheduleTimezoneAmericaGrandTurk
    , CatalogsFeedProcessingScheduleTimezoneAmericaGuatemala
    , CatalogsFeedProcessingScheduleTimezoneAmericaGuayaquil
    , CatalogsFeedProcessingScheduleTimezoneAmericaGuyana
    , CatalogsFeedProcessingScheduleTimezoneAmericaHalifax
    , CatalogsFeedProcessingScheduleTimezoneAmericaHavana
    , CatalogsFeedProcessingScheduleTimezoneAmericaHermosillo
    , CatalogsFeedProcessingScheduleTimezoneAmericaIndianaIndianapolis
    , CatalogsFeedProcessingScheduleTimezoneAmericaIndianaKnox
    , CatalogsFeedProcessingScheduleTimezoneAmericaIndianaMarengo
    , CatalogsFeedProcessingScheduleTimezoneAmericaIndianaPetersburg
    , CatalogsFeedProcessingScheduleTimezoneAmericaIndianaTellCity
    , CatalogsFeedProcessingScheduleTimezoneAmericaIndianaVevay
    , CatalogsFeedProcessingScheduleTimezoneAmericaIndianaVincennes
    , CatalogsFeedProcessingScheduleTimezoneAmericaIndianaWinamac
    , CatalogsFeedProcessingScheduleTimezoneAmericaInuvik
    , CatalogsFeedProcessingScheduleTimezoneAmericaIqaluit
    , CatalogsFeedProcessingScheduleTimezoneAmericaJamaica
    , CatalogsFeedProcessingScheduleTimezoneAmericaJuneau
    , CatalogsFeedProcessingScheduleTimezoneAmericaKentuckyLouisville
    , CatalogsFeedProcessingScheduleTimezoneAmericaKentuckyMonticello
    , CatalogsFeedProcessingScheduleTimezoneAmericaLaPaz
    , CatalogsFeedProcessingScheduleTimezoneAmericaLima
    , CatalogsFeedProcessingScheduleTimezoneAmericaLosAngeles
    , CatalogsFeedProcessingScheduleTimezoneAmericaMaceio
    , CatalogsFeedProcessingScheduleTimezoneAmericaManagua
    , CatalogsFeedProcessingScheduleTimezoneAmericaManaus
    , CatalogsFeedProcessingScheduleTimezoneAmericaMartinique
    , CatalogsFeedProcessingScheduleTimezoneAmericaMatamoros
    , CatalogsFeedProcessingScheduleTimezoneAmericaMazatlan
    , CatalogsFeedProcessingScheduleTimezoneAmericaMenominee
    , CatalogsFeedProcessingScheduleTimezoneAmericaMerida
    , CatalogsFeedProcessingScheduleTimezoneAmericaMetlakatla
    , CatalogsFeedProcessingScheduleTimezoneAmericaMexicoCity
    , CatalogsFeedProcessingScheduleTimezoneAmericaMiquelon
    , CatalogsFeedProcessingScheduleTimezoneAmericaMoncton
    , CatalogsFeedProcessingScheduleTimezoneAmericaMonterrey
    , CatalogsFeedProcessingScheduleTimezoneAmericaMontevideo
    , CatalogsFeedProcessingScheduleTimezoneAmericaNassau
    , CatalogsFeedProcessingScheduleTimezoneAmericaNewYork
    , CatalogsFeedProcessingScheduleTimezoneAmericaNipigon
    , CatalogsFeedProcessingScheduleTimezoneAmericaNome
    , CatalogsFeedProcessingScheduleTimezoneAmericaNoronha
    , CatalogsFeedProcessingScheduleTimezoneAmericaNorthDakotaBeulah
    , CatalogsFeedProcessingScheduleTimezoneAmericaNorthDakotaCenter
    , CatalogsFeedProcessingScheduleTimezoneAmericaNorthDakotaNewSalem
    , CatalogsFeedProcessingScheduleTimezoneAmericaNuuk
    , CatalogsFeedProcessingScheduleTimezoneAmericaOjinaga
    , CatalogsFeedProcessingScheduleTimezoneAmericaPanama
    , CatalogsFeedProcessingScheduleTimezoneAmericaPangnirtung
    , CatalogsFeedProcessingScheduleTimezoneAmericaParamaribo
    , CatalogsFeedProcessingScheduleTimezoneAmericaPhoenix
    , CatalogsFeedProcessingScheduleTimezoneAmericaPortAuPrince
    , CatalogsFeedProcessingScheduleTimezoneAmericaPortOfSpain
    , CatalogsFeedProcessingScheduleTimezoneAmericaPortoVelho
    , CatalogsFeedProcessingScheduleTimezoneAmericaPuertoRico
    , CatalogsFeedProcessingScheduleTimezoneAmericaPuntaArenas
    , CatalogsFeedProcessingScheduleTimezoneAmericaRainyRiver
    , CatalogsFeedProcessingScheduleTimezoneAmericaRankinInlet
    , CatalogsFeedProcessingScheduleTimezoneAmericaRecife
    , CatalogsFeedProcessingScheduleTimezoneAmericaRegina
    , CatalogsFeedProcessingScheduleTimezoneAmericaResolute
    , CatalogsFeedProcessingScheduleTimezoneAmericaRioBranco
    , CatalogsFeedProcessingScheduleTimezoneAmericaSantarem
    , CatalogsFeedProcessingScheduleTimezoneAmericaSantiago
    , CatalogsFeedProcessingScheduleTimezoneAmericaSantoDomingo
    , CatalogsFeedProcessingScheduleTimezoneAmericaSaoPaulo
    , CatalogsFeedProcessingScheduleTimezoneAmericaScoresbysund
    , CatalogsFeedProcessingScheduleTimezoneAmericaSitka
    , CatalogsFeedProcessingScheduleTimezoneAmericaStJohns
    , CatalogsFeedProcessingScheduleTimezoneAmericaSwiftCurrent
    , CatalogsFeedProcessingScheduleTimezoneAmericaTegucigalpa
    , CatalogsFeedProcessingScheduleTimezoneAmericaThule
    , CatalogsFeedProcessingScheduleTimezoneAmericaThunderBay
    , CatalogsFeedProcessingScheduleTimezoneAmericaTijuana
    , CatalogsFeedProcessingScheduleTimezoneAmericaToronto
    , CatalogsFeedProcessingScheduleTimezoneAmericaVancouver
    , CatalogsFeedProcessingScheduleTimezoneAmericaWhitehorse
    , CatalogsFeedProcessingScheduleTimezoneAmericaWinnipeg
    , CatalogsFeedProcessingScheduleTimezoneAmericaYakutat
    , CatalogsFeedProcessingScheduleTimezoneAmericaYellowknife
    , CatalogsFeedProcessingScheduleTimezoneAntarcticaCasey
    , CatalogsFeedProcessingScheduleTimezoneAntarcticaDavis
    , CatalogsFeedProcessingScheduleTimezoneAntarcticaDumontDUrville
    , CatalogsFeedProcessingScheduleTimezoneAntarcticaMacquarie
    , CatalogsFeedProcessingScheduleTimezoneAntarcticaMawson
    , CatalogsFeedProcessingScheduleTimezoneAntarcticaPalmer
    , CatalogsFeedProcessingScheduleTimezoneAntarcticaRothera
    , CatalogsFeedProcessingScheduleTimezoneAntarcticaSyowa
    , CatalogsFeedProcessingScheduleTimezoneAntarcticaTroll
    , CatalogsFeedProcessingScheduleTimezoneAntarcticaVostok
    , CatalogsFeedProcessingScheduleTimezoneAsiaAlmaty
    , CatalogsFeedProcessingScheduleTimezoneAsiaAmman
    , CatalogsFeedProcessingScheduleTimezoneAsiaAnadyr
    , CatalogsFeedProcessingScheduleTimezoneAsiaAqtau
    , CatalogsFeedProcessingScheduleTimezoneAsiaAqtobe
    , CatalogsFeedProcessingScheduleTimezoneAsiaAshgabat
    , CatalogsFeedProcessingScheduleTimezoneAsiaAtyrau
    , CatalogsFeedProcessingScheduleTimezoneAsiaBaghdad
    , CatalogsFeedProcessingScheduleTimezoneAsiaBaku
    , CatalogsFeedProcessingScheduleTimezoneAsiaBangkok
    , CatalogsFeedProcessingScheduleTimezoneAsiaBarnaul
    , CatalogsFeedProcessingScheduleTimezoneAsiaBeirut
    , CatalogsFeedProcessingScheduleTimezoneAsiaBishkek
    , CatalogsFeedProcessingScheduleTimezoneAsiaBrunei
    , CatalogsFeedProcessingScheduleTimezoneAsiaChita
    , CatalogsFeedProcessingScheduleTimezoneAsiaChoibalsan
    , CatalogsFeedProcessingScheduleTimezoneAsiaColombo
    , CatalogsFeedProcessingScheduleTimezoneAsiaDamascus
    , CatalogsFeedProcessingScheduleTimezoneAsiaDhaka
    , CatalogsFeedProcessingScheduleTimezoneAsiaDili
    , CatalogsFeedProcessingScheduleTimezoneAsiaDubai
    , CatalogsFeedProcessingScheduleTimezoneAsiaDushanbe
    , CatalogsFeedProcessingScheduleTimezoneAsiaFamagusta
    , CatalogsFeedProcessingScheduleTimezoneAsiaGaza
    , CatalogsFeedProcessingScheduleTimezoneAsiaHebron
    , CatalogsFeedProcessingScheduleTimezoneAsiaHoChiMinh
    , CatalogsFeedProcessingScheduleTimezoneAsiaHongKong
    , CatalogsFeedProcessingScheduleTimezoneAsiaHovd
    , CatalogsFeedProcessingScheduleTimezoneAsiaIrkutsk
    , CatalogsFeedProcessingScheduleTimezoneAsiaJakarta
    , CatalogsFeedProcessingScheduleTimezoneAsiaJayapura
    , CatalogsFeedProcessingScheduleTimezoneAsiaJerusalem
    , CatalogsFeedProcessingScheduleTimezoneAsiaKabul
    , CatalogsFeedProcessingScheduleTimezoneAsiaKamchatka
    , CatalogsFeedProcessingScheduleTimezoneAsiaKarachi
    , CatalogsFeedProcessingScheduleTimezoneAsiaKathmandu
    , CatalogsFeedProcessingScheduleTimezoneAsiaKhandyga
    , CatalogsFeedProcessingScheduleTimezoneAsiaKolkata
    , CatalogsFeedProcessingScheduleTimezoneAsiaKrasnoyarsk
    , CatalogsFeedProcessingScheduleTimezoneAsiaKualaLumpur
    , CatalogsFeedProcessingScheduleTimezoneAsiaKuching
    , CatalogsFeedProcessingScheduleTimezoneAsiaMacau
    , CatalogsFeedProcessingScheduleTimezoneAsiaMagadan
    , CatalogsFeedProcessingScheduleTimezoneAsiaMakassar
    , CatalogsFeedProcessingScheduleTimezoneAsiaManila
    , CatalogsFeedProcessingScheduleTimezoneAsiaNicosia
    , CatalogsFeedProcessingScheduleTimezoneAsiaNovokuznetsk
    , CatalogsFeedProcessingScheduleTimezoneAsiaNovosibirsk
    , CatalogsFeedProcessingScheduleTimezoneAsiaOmsk
    , CatalogsFeedProcessingScheduleTimezoneAsiaOral
    , CatalogsFeedProcessingScheduleTimezoneAsiaPontianak
    , CatalogsFeedProcessingScheduleTimezoneAsiaPyongyang
    , CatalogsFeedProcessingScheduleTimezoneAsiaQatar
    , CatalogsFeedProcessingScheduleTimezoneAsiaQostanay
    , CatalogsFeedProcessingScheduleTimezoneAsiaQyzylorda
    , CatalogsFeedProcessingScheduleTimezoneAsiaRiyadh
    , CatalogsFeedProcessingScheduleTimezoneAsiaSakhalin
    , CatalogsFeedProcessingScheduleTimezoneAsiaSamarkand
    , CatalogsFeedProcessingScheduleTimezoneAsiaSeoul
    , CatalogsFeedProcessingScheduleTimezoneAsiaShanghai
    , CatalogsFeedProcessingScheduleTimezoneAsiaSingapore
    , CatalogsFeedProcessingScheduleTimezoneAsiaSrednekolymsk
    , CatalogsFeedProcessingScheduleTimezoneAsiaTaipei
    , CatalogsFeedProcessingScheduleTimezoneAsiaTashkent
    , CatalogsFeedProcessingScheduleTimezoneAsiaTbilisi
    , CatalogsFeedProcessingScheduleTimezoneAsiaTehran
    , CatalogsFeedProcessingScheduleTimezoneAsiaThimphu
    , CatalogsFeedProcessingScheduleTimezoneAsiaTokyo
    , CatalogsFeedProcessingScheduleTimezoneAsiaTomsk
    , CatalogsFeedProcessingScheduleTimezoneAsiaUlaanbaatar
    , CatalogsFeedProcessingScheduleTimezoneAsiaUrumqi
    , CatalogsFeedProcessingScheduleTimezoneAsiaUstNera
    , CatalogsFeedProcessingScheduleTimezoneAsiaVladivostok
    , CatalogsFeedProcessingScheduleTimezoneAsiaYakutsk
    , CatalogsFeedProcessingScheduleTimezoneAsiaYangon
    , CatalogsFeedProcessingScheduleTimezoneAsiaYekaterinburg
    , CatalogsFeedProcessingScheduleTimezoneAsiaYerevan
    , CatalogsFeedProcessingScheduleTimezoneAtlanticAzores
    , CatalogsFeedProcessingScheduleTimezoneAtlanticBermuda
    , CatalogsFeedProcessingScheduleTimezoneAtlanticCanary
    , CatalogsFeedProcessingScheduleTimezoneAtlanticCapeVerde
    , CatalogsFeedProcessingScheduleTimezoneAtlanticFaroe
    , CatalogsFeedProcessingScheduleTimezoneAtlanticMadeira
    , CatalogsFeedProcessingScheduleTimezoneAtlanticReykjavik
    , CatalogsFeedProcessingScheduleTimezoneAtlanticSouthGeorgia
    , CatalogsFeedProcessingScheduleTimezoneAtlanticStanley
    , CatalogsFeedProcessingScheduleTimezoneAustraliaAdelaide
    , CatalogsFeedProcessingScheduleTimezoneAustraliaBrisbane
    , CatalogsFeedProcessingScheduleTimezoneAustraliaBrokenHill
    , CatalogsFeedProcessingScheduleTimezoneAustraliaCurrie
    , CatalogsFeedProcessingScheduleTimezoneAustraliaDarwin
    , CatalogsFeedProcessingScheduleTimezoneAustraliaEucla
    , CatalogsFeedProcessingScheduleTimezoneAustraliaHobart
    , CatalogsFeedProcessingScheduleTimezoneAustraliaLindeman
    , CatalogsFeedProcessingScheduleTimezoneAustraliaLordHowe
    , CatalogsFeedProcessingScheduleTimezoneAustraliaMelbourne
    , CatalogsFeedProcessingScheduleTimezoneAustraliaPerth
    , CatalogsFeedProcessingScheduleTimezoneAustraliaSydney
    , CatalogsFeedProcessingScheduleTimezoneCET
    , CatalogsFeedProcessingScheduleTimezoneCST6CDT
    , CatalogsFeedProcessingScheduleTimezoneEET
    , CatalogsFeedProcessingScheduleTimezoneEST
    , CatalogsFeedProcessingScheduleTimezoneEST5EDT
    , CatalogsFeedProcessingScheduleTimezoneEtcGMT
    , CatalogsFeedProcessingScheduleTimezoneEtcGMT+1
    , CatalogsFeedProcessingScheduleTimezoneEtcGMT+10
    , CatalogsFeedProcessingScheduleTimezoneEtcGMT+11
    , CatalogsFeedProcessingScheduleTimezoneEtcGMT+12
    , CatalogsFeedProcessingScheduleTimezoneEtcGMT+2
    , CatalogsFeedProcessingScheduleTimezoneEtcGMT+3
    , CatalogsFeedProcessingScheduleTimezoneEtcGMT+4
    , CatalogsFeedProcessingScheduleTimezoneEtcGMT+5
    , CatalogsFeedProcessingScheduleTimezoneEtcGMT+6
    , CatalogsFeedProcessingScheduleTimezoneEtcGMT+7
    , CatalogsFeedProcessingScheduleTimezoneEtcGMT+8
    , CatalogsFeedProcessingScheduleTimezoneEtcGMT+9
    , CatalogsFeedProcessingScheduleTimezoneEtcGMT1
    , CatalogsFeedProcessingScheduleTimezoneEtcGMT10
    , CatalogsFeedProcessingScheduleTimezoneEtcGMT11
    , CatalogsFeedProcessingScheduleTimezoneEtcGMT12
    , CatalogsFeedProcessingScheduleTimezoneEtcGMT13
    , CatalogsFeedProcessingScheduleTimezoneEtcGMT14
    , CatalogsFeedProcessingScheduleTimezoneEtcGMT2
    , CatalogsFeedProcessingScheduleTimezoneEtcGMT3
    , CatalogsFeedProcessingScheduleTimezoneEtcGMT4
    , CatalogsFeedProcessingScheduleTimezoneEtcGMT5
    , CatalogsFeedProcessingScheduleTimezoneEtcGMT6
    , CatalogsFeedProcessingScheduleTimezoneEtcGMT7
    , CatalogsFeedProcessingScheduleTimezoneEtcGMT8
    , CatalogsFeedProcessingScheduleTimezoneEtcGMT9
    , CatalogsFeedProcessingScheduleTimezoneEtcUTC
    , CatalogsFeedProcessingScheduleTimezoneEuropeAmsterdam
    , CatalogsFeedProcessingScheduleTimezoneEuropeAndorra
    , CatalogsFeedProcessingScheduleTimezoneEuropeAstrakhan
    , CatalogsFeedProcessingScheduleTimezoneEuropeAthens
    , CatalogsFeedProcessingScheduleTimezoneEuropeBelgrade
    , CatalogsFeedProcessingScheduleTimezoneEuropeBerlin
    , CatalogsFeedProcessingScheduleTimezoneEuropeBrussels
    , CatalogsFeedProcessingScheduleTimezoneEuropeBucharest
    , CatalogsFeedProcessingScheduleTimezoneEuropeBudapest
    , CatalogsFeedProcessingScheduleTimezoneEuropeChisinau
    , CatalogsFeedProcessingScheduleTimezoneEuropeCopenhagen
    , CatalogsFeedProcessingScheduleTimezoneEuropeDublin
    , CatalogsFeedProcessingScheduleTimezoneEuropeGibraltar
    , CatalogsFeedProcessingScheduleTimezoneEuropeHelsinki
    , CatalogsFeedProcessingScheduleTimezoneEuropeIstanbul
    , CatalogsFeedProcessingScheduleTimezoneEuropeKaliningrad
    , CatalogsFeedProcessingScheduleTimezoneEuropeKiev
    , CatalogsFeedProcessingScheduleTimezoneEuropeKirov
    , CatalogsFeedProcessingScheduleTimezoneEuropeLisbon
    , CatalogsFeedProcessingScheduleTimezoneEuropeLondon
    , CatalogsFeedProcessingScheduleTimezoneEuropeLuxembourg
    , CatalogsFeedProcessingScheduleTimezoneEuropeMadrid
    , CatalogsFeedProcessingScheduleTimezoneEuropeMalta
    , CatalogsFeedProcessingScheduleTimezoneEuropeMinsk
    , CatalogsFeedProcessingScheduleTimezoneEuropeMonaco
    , CatalogsFeedProcessingScheduleTimezoneEuropeMoscow
    , CatalogsFeedProcessingScheduleTimezoneEuropeOslo
    , CatalogsFeedProcessingScheduleTimezoneEuropeParis
    , CatalogsFeedProcessingScheduleTimezoneEuropePrague
    , CatalogsFeedProcessingScheduleTimezoneEuropeRiga
    , CatalogsFeedProcessingScheduleTimezoneEuropeRome
    , CatalogsFeedProcessingScheduleTimezoneEuropeSamara
    , CatalogsFeedProcessingScheduleTimezoneEuropeSaratov
    , CatalogsFeedProcessingScheduleTimezoneEuropeSimferopol
    , CatalogsFeedProcessingScheduleTimezoneEuropeSofia
    , CatalogsFeedProcessingScheduleTimezoneEuropeStockholm
    , CatalogsFeedProcessingScheduleTimezoneEuropeTallinn
    , CatalogsFeedProcessingScheduleTimezoneEuropeTirane
    , CatalogsFeedProcessingScheduleTimezoneEuropeUlyanovsk
    , CatalogsFeedProcessingScheduleTimezoneEuropeUzhgorod
    , CatalogsFeedProcessingScheduleTimezoneEuropeVienna
    , CatalogsFeedProcessingScheduleTimezoneEuropeVilnius
    , CatalogsFeedProcessingScheduleTimezoneEuropeVolgograd
    , CatalogsFeedProcessingScheduleTimezoneEuropeWarsaw
    , CatalogsFeedProcessingScheduleTimezoneEuropeZaporozhye
    , CatalogsFeedProcessingScheduleTimezoneEuropeZurich
    , CatalogsFeedProcessingScheduleTimezoneHST
    , CatalogsFeedProcessingScheduleTimezoneIndianChagos
    , CatalogsFeedProcessingScheduleTimezoneIndianChristmas
    , CatalogsFeedProcessingScheduleTimezoneIndianCocos
    , CatalogsFeedProcessingScheduleTimezoneIndianKerguelen
    , CatalogsFeedProcessingScheduleTimezoneIndianMahe
    , CatalogsFeedProcessingScheduleTimezoneIndianMaldives
    , CatalogsFeedProcessingScheduleTimezoneIndianMauritius
    , CatalogsFeedProcessingScheduleTimezoneIndianReunion
    , CatalogsFeedProcessingScheduleTimezoneMET
    , CatalogsFeedProcessingScheduleTimezoneMST
    , CatalogsFeedProcessingScheduleTimezoneMST7MDT
    , CatalogsFeedProcessingScheduleTimezonePST8PDT
    , CatalogsFeedProcessingScheduleTimezonePacificApia
    , CatalogsFeedProcessingScheduleTimezonePacificAuckland
    , CatalogsFeedProcessingScheduleTimezonePacificBougainville
    , CatalogsFeedProcessingScheduleTimezonePacificChatham
    , CatalogsFeedProcessingScheduleTimezonePacificChuuk
    , CatalogsFeedProcessingScheduleTimezonePacificEaster
    , CatalogsFeedProcessingScheduleTimezonePacificEfate
    , CatalogsFeedProcessingScheduleTimezonePacificEnderbury
    , CatalogsFeedProcessingScheduleTimezonePacificFakaofo
    , CatalogsFeedProcessingScheduleTimezonePacificFiji
    , CatalogsFeedProcessingScheduleTimezonePacificFunafuti
    , CatalogsFeedProcessingScheduleTimezonePacificGalapagos
    , CatalogsFeedProcessingScheduleTimezonePacificGambier
    , CatalogsFeedProcessingScheduleTimezonePacificGuadalcanal
    , CatalogsFeedProcessingScheduleTimezonePacificGuam
    , CatalogsFeedProcessingScheduleTimezonePacificHonolulu
    , CatalogsFeedProcessingScheduleTimezonePacificKiritimati
    , CatalogsFeedProcessingScheduleTimezonePacificKosrae
    , CatalogsFeedProcessingScheduleTimezonePacificKwajalein
    , CatalogsFeedProcessingScheduleTimezonePacificMajuro
    , CatalogsFeedProcessingScheduleTimezonePacificMarquesas
    , CatalogsFeedProcessingScheduleTimezonePacificNauru
    , CatalogsFeedProcessingScheduleTimezonePacificNiue
    , CatalogsFeedProcessingScheduleTimezonePacificNorfolk
    , CatalogsFeedProcessingScheduleTimezonePacificNoumea
    , CatalogsFeedProcessingScheduleTimezonePacificPagoPago
    , CatalogsFeedProcessingScheduleTimezonePacificPalau
    , CatalogsFeedProcessingScheduleTimezonePacificPitcairn
    , CatalogsFeedProcessingScheduleTimezonePacificPohnpei
    , CatalogsFeedProcessingScheduleTimezonePacificPortMoresby
    , CatalogsFeedProcessingScheduleTimezonePacificRarotonga
    , CatalogsFeedProcessingScheduleTimezonePacificTahiti
    , CatalogsFeedProcessingScheduleTimezonePacificTarawa
    , CatalogsFeedProcessingScheduleTimezonePacificTongatapu
    , CatalogsFeedProcessingScheduleTimezonePacificWake
    , CatalogsFeedProcessingScheduleTimezonePacificWallis
    , CatalogsFeedProcessingScheduleTimezoneWET
    , CatalogsFeedProcessingScheduleTimezoneNull
    ]


type CatalogsFeedProcessingStatus
    = CatalogsFeedProcessingStatusCOMPLETED
    | CatalogsFeedProcessingStatusCOMPLETEDEARLY
    | CatalogsFeedProcessingStatusDISAPPROVED
    | CatalogsFeedProcessingStatusFAILED
    | CatalogsFeedProcessingStatusPROCESSING
    | CatalogsFeedProcessingStatusQUEUEDFORPROCESSING
    | CatalogsFeedProcessingStatusUNDERAPPEAL
    | CatalogsFeedProcessingStatusUNDERREVIEW


catalogsFeedProcessingStatusVariants : List CatalogsFeedProcessingStatus
catalogsFeedProcessingStatusVariants =
    [ CatalogsFeedProcessingStatusCOMPLETED
    , CatalogsFeedProcessingStatusCOMPLETEDEARLY
    , CatalogsFeedProcessingStatusDISAPPROVED
    , CatalogsFeedProcessingStatusFAILED
    , CatalogsFeedProcessingStatusPROCESSING
    , CatalogsFeedProcessingStatusQUEUEDFORPROCESSING
    , CatalogsFeedProcessingStatusUNDERAPPEAL
    , CatalogsFeedProcessingStatusUNDERREVIEW
    ]


{-| The counts can be null early in the process.
-}
type alias CatalogsFeedProductCounts =
    { original : Maybe Int
    }


type alias CatalogsFeedValidationDetails =
    { errors : CatalogsFeedValidationErrors
    , warnings : CatalogsFeedValidationWarnings
    }


type alias CatalogsFeedValidationErrors =
    { fetchError : Maybe Int
    , fetchInactiveFeedError : Maybe Int
    , encodingError : Maybe Int
    , delimiterError : Maybe Int
    , requiredColumnsMissing : Maybe Int
    , imageLinkInvalid : Maybe Int
    , itemidMissing : Maybe Int
    , titleMissing : Maybe Int
    , descriptionMissing : Maybe Int
    , productCategoryInvalid : Maybe Int
    , productLinkMissing : Maybe Int
    , imageLinkMissing : Maybe Int
    , availabilityInvalid : Maybe Int
    , productPriceInvalid : Maybe Int
    , linkFormatInvalid : Maybe Int
    , parseLineError : Maybe Int
    , adwordsFormatInvalid : Maybe Int
    , productCategoryMissing : Maybe Int
    , internalServiceError : Maybe Int
    , noVerifiedDomain : Maybe Int
    , adultInvalid : Maybe Int
    , invalidDomain : Maybe Int
    , feedLengthTooLong : Maybe Int
    , linkLengthTooLong : Maybe Int
    , malformedXml : Maybe Int
    , redirectInvalid : Maybe Int
    , priceMissing : Maybe Int
    , feedTooSmall : Maybe Int
    , conditionInvalid : Maybe Int
    , shopifyNoProducts : Maybe Int
    , maxItemsPerItemGroupExceeded : Maybe Int
    , itemMainImageDownloadFailure : Maybe Int
    , pinjoinContentUnsafe : Maybe Int
    , blocklistedImageSignature : Maybe Int
    }


type alias CatalogsFeedValidationWarnings =
    { titleLengthTooLong : Maybe Int
    , descriptionLengthTooLong : Maybe Int
    , genderInvalid : Maybe Int
    , ageGroupInvalid : Maybe Int
    , sizeTypeInvalid : Maybe Int
    , linkFormatWarning : Maybe Int
    , duplicateProducts : Maybe Int
    , duplicateLinks : Maybe Int
    , salesPriceInvalid : Maybe Int
    , productCategoryDepthWarning : Maybe Int
    , adwordsSameAsLink : Maybe Int
    , duplicateHeaders : Maybe Int
    , fetchSameSignature : Maybe Int
    , adwordsFormatWarning : Maybe Int
    , additionalImageLinkWarning : Maybe Int
    , imageLinkWarning : Maybe Int
    , shippingInvalid : Maybe Int
    , taxInvalid : Maybe Int
    , shippingWeightInvalid : Maybe Int
    , expirationDateInvalid : Maybe Int
    , availabilityDateInvalid : Maybe Int
    , saleDateInvalid : Maybe Int
    , weightUnitInvalid : Maybe Int
    , isBundleInvalid : Maybe Int
    , updatedTimeInvalid : Maybe Int
    , customLabelLengthTooLong : Maybe Int
    , productTypeLengthTooLong : Maybe Int
    , tooManyAdditionalImageLinks : Maybe Int
    , multipackInvalid : Maybe Int
    , indexedProductCountLargeDelta : Maybe Int
    , itemAdditionalImageDownloadFailure : Maybe Int
    , optionalProductCategoryMissing : Maybe Int
    , optionalProductCategoryInvalid : Maybe Int
    , optionalConditionMissing : Maybe Int
    , optionalConditionInvalid : Maybe Int
    , iosDeepLinkInvalid : Maybe Int
    , androidDeepLinkInvalid : Maybe Int
    , availabilityNormalized : Maybe Int
    , conditionNormalized : Maybe Int
    , genderNormalized : Maybe Int
    , sizeTypeNormalized : Maybe Int
    , ageGroupNormalized : Maybe Int
    , utmSourceAutoCorrected : Maybe Int
    , countryDoesNotMapToCurrency : Maybe Int
    , minAdPriceInvalid : Maybe Int
    }


{-| Request object for creating a feed. Please, be aware that \"default_country\" and \"default_locale\" are not required in the spec for forward compatibility but for now the API will not accept requests without those fields.
-}
type alias CatalogsFeedsCreateRequest =
    { defaultCountry : Maybe Country
    , defaultAvailability : Maybe ProductAvailabilityType
    , defaultCurrency : Maybe NullableCurrency
    , name : String
    , format : CatalogsFormat
    , defaultLocale : Maybe String
    , credentials : Maybe CatalogsFeedCredentials
    , location : String
    , preferredProcessingSchedule : Maybe CatalogsFeedProcessingSchedule
    }


{-| Request object for updating a feed.
-}
type alias CatalogsFeedsUpdateRequest =
    { defaultAvailability : Maybe ProductAvailabilityType
    , defaultCurrency : Maybe NullableCurrency
    , name : Maybe String
    , format : Maybe CatalogsFormat
    , credentials : Maybe CatalogsFeedCredentials
    , location : Maybe String
    , preferredProcessingSchedule : Maybe CatalogsFeedProcessingSchedule
    , status : Maybe CatalogsStatus
    }


{-| The file format of a feed.
-}
type CatalogsFormat
    = CatalogsFormatTSV
    | CatalogsFormatCSV
    | CatalogsFormatXML


catalogsFormatVariants : List CatalogsFormat
catalogsFormatVariants =
    [ CatalogsFormatTSV
    , CatalogsFormatCSV
    , CatalogsFormatXML
    ]


{-| Response object of catalogs items
-}
type alias CatalogsItems =
    { items : Maybe (List (ItemBatchRecord))
    }


{-| Object describing the catalogs items batch
-}
type alias CatalogsItemsBatch =
    { items : Maybe (List (ItemProcessingRecord))
    , batchId : Maybe String
    , createdTime : Maybe Posix
    , completedTime : Maybe Posix
    , status : Maybe BatchOperationStatus
    }


{-| Request object of catalogs items batch
-}
type alias CatalogsItemsBatchRequest =
    { country : Maybe Country
    , language : Maybe Language
    , operation : Maybe BatchOperation
    , items : Maybe (List (ItemBatchRecord))
    }


{-| catalog product group entity
-}
type alias CatalogsProductGroup =
    { id : String
    , name : Maybe String
    , description : Maybe String
    , filters : CatalogsProductGroupFilters
    , type_ : Maybe CatalogsProductGroupType
    , status : Maybe CatalogsProductGroupStatus
    , feedId : Maybe String
    , createdAt : Maybe Int
    , updatedAt : Maybe Int
    }


{-| Request object for creating a product group.
-}
type alias CatalogsProductGroupCreateRequest =
    { feedId : String
    , name : String
    , description : Maybe String
    , filters : CatalogsProductGroupFilters
    }


type alias CatalogsProductGroupCurrencyCriteria =
    { values : NonNullableCatalogsCurrency
    , negated : Bool
    }


type alias CatalogsProductGroupFilterKeys =
    { mINPRICE : CatalogsProductGroupPricingCriteria
    , mAXPRICE : CatalogsProductGroupPricingCriteria
    , cURRENCY : CatalogsProductGroupCurrencyCriteria
    , iTEMID : CatalogsProductGroupCurrencyCriteria
    , aVAILABILITY : CatalogsProductGroupMultipleStringCriteria
    , bRAND : CatalogsProductGroupMultipleStringCriteria
    , cONDITION : CatalogsProductGroupMultipleStringCriteria
    , cUSTOMLABEL0 : CatalogsProductGroupMultipleStringCriteria
    , cUSTOMLABEL1 : CatalogsProductGroupMultipleStringCriteria
    , cUSTOMLABEL2 : CatalogsProductGroupMultipleStringCriteria
    , cUSTOMLABEL3 : CatalogsProductGroupMultipleStringCriteria
    , cUSTOMLABEL4 : CatalogsProductGroupMultipleStringCriteria
    , iTEMGROUPID : CatalogsProductGroupMultipleStringCriteria
    , gENDER : CatalogsProductGroupMultipleStringCriteria
    , pRODUCTTYPE4 : CatalogsProductGroupMultipleStringListCriteria
    , pRODUCTTYPE3 : CatalogsProductGroupMultipleStringListCriteria
    , pRODUCTTYPE2 : CatalogsProductGroupMultipleStringListCriteria
    , pRODUCTTYPE1 : CatalogsProductGroupMultipleStringListCriteria
    , pRODUCTTYPE0 : CatalogsProductGroupMultipleStringListCriteria
    , gOOGLEPRODUCTCATEGORY6 : CatalogsProductGroupMultipleStringListCriteria
    , gOOGLEPRODUCTCATEGORY5 : CatalogsProductGroupMultipleStringListCriteria
    , gOOGLEPRODUCTCATEGORY4 : CatalogsProductGroupMultipleStringListCriteria
    , gOOGLEPRODUCTCATEGORY3 : CatalogsProductGroupMultipleStringListCriteria
    , gOOGLEPRODUCTCATEGORY2 : CatalogsProductGroupMultipleStringListCriteria
    , gOOGLEPRODUCTCATEGORY1 : CatalogsProductGroupMultipleStringListCriteria
    , gOOGLEPRODUCTCATEGORY0 : CatalogsProductGroupMultipleStringListCriteria
    }


{-| Object holding a group of filters for a catalog product group
-}
type alias CatalogsProductGroupFilters =
    { anyOf : Maybe (List (CatalogsProductGroupFilterKeys))
    , allOf : Maybe (List (CatalogsProductGroupFilterKeys))
    }


type alias CatalogsProductGroupFiltersAnyOf =
    { anyOf : Maybe (List (CatalogsProductGroupFilterKeys))
    }


type alias CatalogsProductGroupMultipleStringCriteria =
    { values : List (String)
    , negated : Bool
    }


type alias CatalogsProductGroupMultipleStringListCriteria =
    { values : List (List (String))
    , negated : Bool
    }


type alias CatalogsProductGroupPricingCriteria =
    { inclusion : Bool
    , values : Float
    , negated : Bool
    }


type CatalogsProductGroupStatus
    = CatalogsProductGroupStatusACTIVE
    | CatalogsProductGroupStatusINACTIVE


catalogsProductGroupStatusVariants : List CatalogsProductGroupStatus
catalogsProductGroupStatusVariants =
    [ CatalogsProductGroupStatusACTIVE
    , CatalogsProductGroupStatusINACTIVE
    ]


{-| Catalog product group type
-}
type CatalogsProductGroupType
    = CatalogsProductGroupTypeMERCHANTCREATED
    | CatalogsProductGroupTypeALLPRODUCTS
    | CatalogsProductGroupTypeBESTDEALS
    | CatalogsProductGroupTypePINNERFAVORITES
    | CatalogsProductGroupTypeTOPSELLERS
    | CatalogsProductGroupTypeBACKINSTOCK
    | CatalogsProductGroupTypeNEWARRIVALS


catalogsProductGroupTypeVariants : List CatalogsProductGroupType
catalogsProductGroupTypeVariants =
    [ CatalogsProductGroupTypeMERCHANTCREATED
    , CatalogsProductGroupTypeALLPRODUCTS
    , CatalogsProductGroupTypeBESTDEALS
    , CatalogsProductGroupTypePINNERFAVORITES
    , CatalogsProductGroupTypeTOPSELLERS
    , CatalogsProductGroupTypeBACKINSTOCK
    , CatalogsProductGroupTypeNEWARRIVALS
    ]


{-| Request object for updating a product group.
-}
type alias CatalogsProductGroupUpdateRequest =
    { feedId : String
    , name : String
    , description : Maybe String
    , filters : CatalogsProductGroupFilters
    }


{-| Status for catalogs entities. Present in catalogs_feed values. When a feed is deleted, the response will inform DELETED as status.
-}
type CatalogsStatus
    = CatalogsStatusACTIVE
    | CatalogsStatusINACTIVE


catalogsStatusVariants : List CatalogsStatus
catalogsStatusVariants =
    [ CatalogsStatusACTIVE
    , CatalogsStatusINACTIVE
    ]


type alias ConditionFilter =
    { cONDITION : CatalogsProductGroupMultipleStringCriteria
    }


type ConversionAttributionWindowDays
    = ConversionAttributionWindowDays1
    | ConversionAttributionWindowDays7
    | ConversionAttributionWindowDays30
    | ConversionAttributionWindowDays60


conversionAttributionWindowDaysVariants : List ConversionAttributionWindowDays
conversionAttributionWindowDaysVariants =
    [ ConversionAttributionWindowDays1
    , ConversionAttributionWindowDays7
    , ConversionAttributionWindowDays30
    , ConversionAttributionWindowDays60
    ]


{-| Attribution type. Refers to the Pinterest Tag endpoints
-}
type ConversionReportAttributionType
    = ConversionReportAttributionTypeINDIVIDUAL
    | ConversionReportAttributionTypeHOUSEHOLD


conversionReportAttributionTypeVariants : List ConversionReportAttributionType
conversionReportAttributionTypeVariants =
    [ ConversionReportAttributionTypeINDIVIDUAL
    , ConversionReportAttributionTypeHOUSEHOLD
    ]


{-| Conversion report time type
-}
type ConversionReportTimeType
    = ConversionReportTimeTypeADACTION
    | ConversionReportTimeTypeCONVERSION


conversionReportTimeTypeVariants : List ConversionReportTimeType
conversionReportTimeTypeVariants =
    [ ConversionReportTimeTypeADACTION
    , ConversionReportTimeTypeCONVERSION
    ]


{-| Country ID from ISO 3166-1 alpha-2.
-}
type Country
    = CountryAD
    | CountryAE
    | CountryAF
    | CountryAG
    | CountryAI
    | CountryAL
    | CountryAM
    | CountryAO
    | CountryAQ
    | CountryAR
    | CountryAS
    | CountryAT
    | CountryAU
    | CountryAW
    | CountryAX
    | CountryAZ
    | CountryBA
    | CountryBB
    | CountryBD
    | CountryBE
    | CountryBF
    | CountryBG
    | CountryBH
    | CountryBI
    | CountryBJ
    | CountryBL
    | CountryBM
    | CountryBN
    | CountryBO
    | CountryBQ
    | CountryBR
    | CountryBS
    | CountryBT
    | CountryBV
    | CountryBW
    | CountryBY
    | CountryBZ
    | CountryCA
    | CountryCC
    | CountryCD
    | CountryCF
    | CountryCG
    | CountryCH
    | CountryCI
    | CountryCK
    | CountryCL
    | CountryCM
    | CountryCO
    | CountryCR
    | CountryCU
    | CountryCV
    | CountryCW
    | CountryCX
    | CountryCY
    | CountryCZ
    | CountryDE
    | CountryDJ
    | CountryDK
    | CountryDM
    | CountryDO
    | CountryDZ
    | CountryEC
    | CountryEE
    | CountryEG
    | CountryEH
    | CountryER
    | CountryES
    | CountryET
    | CountryFI
    | CountryFJ
    | CountryFK
    | CountryFM
    | CountryFO
    | CountryFR
    | CountryGA
    | CountryGB
    | CountryGD
    | CountryGE
    | CountryGF
    | CountryGG
    | CountryGH
    | CountryGI
    | CountryGL
    | CountryGM
    | CountryGN
    | CountryGP
    | CountryGQ
    | CountryGR
    | CountryGS
    | CountryGT
    | CountryGU
    | CountryGW
    | CountryGY
    | CountryHK
    | CountryHM
    | CountryHN
    | CountryHR
    | CountryHT
    | CountryHU
    | CountryID
    | CountryIE
    | CountryIL
    | CountryIM
    | CountryIN
    | CountryIO
    | CountryIQ
    | CountryIR
    | CountryIS
    | CountryIT
    | CountryJE
    | CountryJM
    | CountryJO
    | CountryJP
    | CountryKE
    | CountryKG
    | CountryKH
    | CountryKI
    | CountryKM
    | CountryKN
    | CountryKR
    | CountryKW
    | CountryKY
    | CountryKZ
    | CountryLA
    | CountryLB
    | CountryLC
    | CountryLI
    | CountryLK
    | CountryLR
    | CountryLS
    | CountryLT
    | CountryLU
    | CountryLV
    | CountryLY
    | CountryMA
    | CountryMC
    | CountryMD
    | CountryME
    | CountryMF
    | CountryMG
    | CountryMH
    | CountryMK
    | CountryML
    | CountryMM
    | CountryMN
    | CountryMO
    | CountryMP
    | CountryMQ
    | CountryMR
    | CountryMS
    | CountryMT
    | CountryMU
    | CountryMV
    | CountryMW
    | CountryMX
    | CountryMY
    | CountryMZ
    | CountryNA
    | CountryNC
    | CountryNE
    | CountryNF
    | CountryNG
    | CountryNI
    | CountryNL
    | CountryNO
    | CountryNP
    | CountryNR
    | CountryNU
    | CountryNZ
    | CountryOM
    | CountryPA
    | CountryPE
    | CountryPF
    | CountryPG
    | CountryPH
    | CountryPK
    | CountryPL
    | CountryPM
    | CountryPN
    | CountryPR
    | CountryPS
    | CountryPT
    | CountryPW
    | CountryPY
    | CountryQA
    | CountryRE
    | CountryRO
    | CountryRS
    | CountryRU
    | CountryRW
    | CountrySA
    | CountrySB
    | CountrySC
    | CountrySD
    | CountrySE
    | CountrySG
    | CountrySH
    | CountrySI
    | CountrySJ
    | CountrySK
    | CountrySL
    | CountrySM
    | CountrySN
    | CountrySO
    | CountrySR
    | CountrySS
    | CountryST
    | CountrySV
    | CountrySX
    | CountrySY
    | CountrySZ
    | CountryTC
    | CountryTD
    | CountryTF
    | CountryTG
    | CountryTH
    | CountryTJ
    | CountryTK
    | CountryTL
    | CountryTM
    | CountryTN
    | CountryTO
    | CountryTR
    | CountryTT
    | CountryTV
    | CountryTW
    | CountryTZ
    | CountryUA
    | CountryUG
    | CountryUM
    | CountryUS
    | CountryUY
    | CountryUZ
    | CountryVA
    | CountryVC
    | CountryVE
    | CountryVG
    | CountryVI
    | CountryVN
    | CountryVU
    | CountryWF
    | CountryWS
    | CountryYE
    | CountryYT
    | CountryZA
    | CountryZM
    | CountryZW


countryVariants : List Country
countryVariants =
    [ CountryAD
    , CountryAE
    , CountryAF
    , CountryAG
    , CountryAI
    , CountryAL
    , CountryAM
    , CountryAO
    , CountryAQ
    , CountryAR
    , CountryAS
    , CountryAT
    , CountryAU
    , CountryAW
    , CountryAX
    , CountryAZ
    , CountryBA
    , CountryBB
    , CountryBD
    , CountryBE
    , CountryBF
    , CountryBG
    , CountryBH
    , CountryBI
    , CountryBJ
    , CountryBL
    , CountryBM
    , CountryBN
    , CountryBO
    , CountryBQ
    , CountryBR
    , CountryBS
    , CountryBT
    , CountryBV
    , CountryBW
    , CountryBY
    , CountryBZ
    , CountryCA
    , CountryCC
    , CountryCD
    , CountryCF
    , CountryCG
    , CountryCH
    , CountryCI
    , CountryCK
    , CountryCL
    , CountryCM
    , CountryCO
    , CountryCR
    , CountryCU
    , CountryCV
    , CountryCW
    , CountryCX
    , CountryCY
    , CountryCZ
    , CountryDE
    , CountryDJ
    , CountryDK
    , CountryDM
    , CountryDO
    , CountryDZ
    , CountryEC
    , CountryEE
    , CountryEG
    , CountryEH
    , CountryER
    , CountryES
    , CountryET
    , CountryFI
    , CountryFJ
    , CountryFK
    , CountryFM
    , CountryFO
    , CountryFR
    , CountryGA
    , CountryGB
    , CountryGD
    , CountryGE
    , CountryGF
    , CountryGG
    , CountryGH
    , CountryGI
    , CountryGL
    , CountryGM
    , CountryGN
    , CountryGP
    , CountryGQ
    , CountryGR
    , CountryGS
    , CountryGT
    , CountryGU
    , CountryGW
    , CountryGY
    , CountryHK
    , CountryHM
    , CountryHN
    , CountryHR
    , CountryHT
    , CountryHU
    , CountryID
    , CountryIE
    , CountryIL
    , CountryIM
    , CountryIN
    , CountryIO
    , CountryIQ
    , CountryIR
    , CountryIS
    , CountryIT
    , CountryJE
    , CountryJM
    , CountryJO
    , CountryJP
    , CountryKE
    , CountryKG
    , CountryKH
    , CountryKI
    , CountryKM
    , CountryKN
    , CountryKR
    , CountryKW
    , CountryKY
    , CountryKZ
    , CountryLA
    , CountryLB
    , CountryLC
    , CountryLI
    , CountryLK
    , CountryLR
    , CountryLS
    , CountryLT
    , CountryLU
    , CountryLV
    , CountryLY
    , CountryMA
    , CountryMC
    , CountryMD
    , CountryME
    , CountryMF
    , CountryMG
    , CountryMH
    , CountryMK
    , CountryML
    , CountryMM
    , CountryMN
    , CountryMO
    , CountryMP
    , CountryMQ
    , CountryMR
    , CountryMS
    , CountryMT
    , CountryMU
    , CountryMV
    , CountryMW
    , CountryMX
    , CountryMY
    , CountryMZ
    , CountryNA
    , CountryNC
    , CountryNE
    , CountryNF
    , CountryNG
    , CountryNI
    , CountryNL
    , CountryNO
    , CountryNP
    , CountryNR
    , CountryNU
    , CountryNZ
    , CountryOM
    , CountryPA
    , CountryPE
    , CountryPF
    , CountryPG
    , CountryPH
    , CountryPK
    , CountryPL
    , CountryPM
    , CountryPN
    , CountryPR
    , CountryPS
    , CountryPT
    , CountryPW
    , CountryPY
    , CountryQA
    , CountryRE
    , CountryRO
    , CountryRS
    , CountryRU
    , CountryRW
    , CountrySA
    , CountrySB
    , CountrySC
    , CountrySD
    , CountrySE
    , CountrySG
    , CountrySH
    , CountrySI
    , CountrySJ
    , CountrySK
    , CountrySL
    , CountrySM
    , CountrySN
    , CountrySO
    , CountrySR
    , CountrySS
    , CountryST
    , CountrySV
    , CountrySX
    , CountrySY
    , CountrySZ
    , CountryTC
    , CountryTD
    , CountryTF
    , CountryTG
    , CountryTH
    , CountryTJ
    , CountryTK
    , CountryTL
    , CountryTM
    , CountryTN
    , CountryTO
    , CountryTR
    , CountryTT
    , CountryTV
    , CountryTW
    , CountryTZ
    , CountryUA
    , CountryUG
    , CountryUM
    , CountryUS
    , CountryUY
    , CountryUZ
    , CountryVA
    , CountryVC
    , CountryVE
    , CountryVG
    , CountryVI
    , CountryVN
    , CountryVU
    , CountryWF
    , CountryWS
    , CountryYE
    , CountryYT
    , CountryZA
    , CountryZM
    , CountryZW
    ]


{-| Currency Codes from ISO 4217
-}
type Currency
    = CurrencyUNK
    | CurrencyUSD
    | CurrencyGBP
    | CurrencyCAD
    | CurrencyEUR
    | CurrencyAUD
    | CurrencyNZD
    | CurrencySEK
    | CurrencyILS
    | CurrencyCHF
    | CurrencyHKD
    | CurrencyJPY
    | CurrencySGD
    | CurrencyKRW
    | CurrencyNOK
    | CurrencyDKK
    | CurrencyPLN
    | CurrencyRON
    | CurrencyHUF
    | CurrencyCZK
    | CurrencyBRL
    | CurrencyMXN
    | CurrencyARS
    | CurrencyCLP
    | CurrencyCOP


currencyVariants : List Currency
currencyVariants =
    [ CurrencyUNK
    , CurrencyUSD
    , CurrencyGBP
    , CurrencyCAD
    , CurrencyEUR
    , CurrencyAUD
    , CurrencyNZD
    , CurrencySEK
    , CurrencyILS
    , CurrencyCHF
    , CurrencyHKD
    , CurrencyJPY
    , CurrencySGD
    , CurrencyKRW
    , CurrencyNOK
    , CurrencyDKK
    , CurrencyPLN
    , CurrencyRON
    , CurrencyHUF
    , CurrencyCZK
    , CurrencyBRL
    , CurrencyMXN
    , CurrencyARS
    , CurrencyCLP
    , CurrencyCOP
    ]


type alias CurrencyFilter =
    { cURRENCY : CatalogsProductGroupCurrencyCriteria
    }


type alias CustomLabel0Filter =
    { cUSTOMLABEL0 : CatalogsProductGroupMultipleStringCriteria
    }


type alias CustomLabel1Filter =
    { cUSTOMLABEL1 : CatalogsProductGroupMultipleStringCriteria
    }


type alias CustomLabel2Filter =
    { cUSTOMLABEL2 : CatalogsProductGroupMultipleStringCriteria
    }


type alias CustomLabel3Filter =
    { cUSTOMLABEL3 : CatalogsProductGroupMultipleStringCriteria
    }


type alias CustomLabel4Filter =
    { cUSTOMLABEL4 : CatalogsProductGroupMultipleStringCriteria
    }


{-| Format of generated report
-}
type DataOutputFormat
    = DataOutputFormatJSON
    | DataOutputFormatCSV


dataOutputFormatVariants : List DataOutputFormat
dataOutputFormatVariants =
    [ DataOutputFormatJSON
    , DataOutputFormatCSV
    ]


{-| Entity status
-}
type EntityStatus
    = EntityStatusACTIVE
    | EntityStatusPAUSED
    | EntityStatusARCHIVED


entityStatusVariants : List EntityStatus
entityStatusVariants =
    [ EntityStatusACTIVE
    , EntityStatusPAUSED
    , EntityStatusARCHIVED
    ]


type alias Error =
    { code : Int
    , message : String
    }


type alias FeedFields =
    { defaultCountry : Country
    , defaultAvailability : Maybe ProductAvailabilityType
    , defaultCurrency : Maybe NullableCurrency
    , name : Maybe String
    , format : CatalogsFormat
    , defaultLocale : String
    , credentials : Maybe CatalogsFeedCredentials
    , location : String
    , preferredProcessingSchedule : Maybe CatalogsFeedProcessingSchedule
    , status : CatalogsStatus
    }


type alias GenderFilter =
    { gENDER : CatalogsProductGroupMultipleStringCriteria
    }


type alias GoogleProductCategory0Filter =
    { gOOGLEPRODUCTCATEGORY0 : CatalogsProductGroupMultipleStringListCriteria
    }


type alias GoogleProductCategory1Filter =
    { gOOGLEPRODUCTCATEGORY1 : CatalogsProductGroupMultipleStringListCriteria
    }


type alias GoogleProductCategory2Filter =
    { gOOGLEPRODUCTCATEGORY2 : CatalogsProductGroupMultipleStringListCriteria
    }


type alias GoogleProductCategory3Filter =
    { gOOGLEPRODUCTCATEGORY3 : CatalogsProductGroupMultipleStringListCriteria
    }


type alias GoogleProductCategory4Filter =
    { gOOGLEPRODUCTCATEGORY4 : CatalogsProductGroupMultipleStringListCriteria
    }


type alias GoogleProductCategory5Filter =
    { gOOGLEPRODUCTCATEGORY5 : CatalogsProductGroupMultipleStringListCriteria
    }


type alias GoogleProductCategory6Filter =
    { gOOGLEPRODUCTCATEGORY6 : CatalogsProductGroupMultipleStringListCriteria
    }


type Granularity
    = GranularityTOTAL
    | GranularityDAY
    | GranularityHOUR
    | GranularityWEEK
    | GranularityMONTH


granularityVariants : List Granularity
granularityVariants =
    [ GranularityTOTAL
    , GranularityDAY
    , GranularityHOUR
    , GranularityWEEK
    , GranularityMONTH
    ]


type alias ImageDetails =
    { width : Int
    , height : Maybe Int
    , url : String
    }


type alias ItemAttributes =
    { adLink : Maybe String
    , additionalImageLink : Maybe (List (String))
    , adult : Maybe Bool
    , ageGroup : Maybe String
    , availability : Maybe String
    , averageReviewRating : Maybe Float
    , brand : Maybe String
    , color : Maybe String
    , condition : Maybe String
    , customLabel0 : Maybe String
    , customLabel1 : Maybe String
    , customLabel2 : Maybe String
    , customLabel3 : Maybe String
    , customLabel4 : Maybe String
    , description : Maybe String
    , freeShippingLabel : Maybe Bool
    , freeShippingLimit : Maybe String
    , gender : Maybe String
    , googleProductCategory : Maybe String
    , gtin : Maybe Int
    , id : Maybe String
    , imageLink : Maybe (List (String))
    , itemGroupId : Maybe String
    , lastUpdatedTime : Maybe Int
    , link : Maybe String
    , material : Maybe String
    , minAdPrice : Maybe String
    , mobileLink : Maybe String
    , mpn : Maybe String
    , numberOfRatings : Maybe Int
    , numberOfReviews : Maybe Int
    , pattern : Maybe String
    , price : Maybe String
    , productType : Maybe String
    , salePrice : Maybe String
    , shipping : Maybe String
    , shippingHeight : Maybe String
    , shippingWeight : Maybe String
    , shippingWidth : Maybe String
    , size : Maybe String
    , sizeSystem : Maybe String
    , sizeType : Maybe String
    , tax : Maybe String
    , title : Maybe String
    }


{-| Object describing an item batch record
-}
type alias ItemBatchRecord =
    { itemId : Maybe String
    , attributes : Maybe ItemAttributes
    }


type alias ItemGroupIdFilter =
    { iTEMGROUPID : CatalogsProductGroupMultipleStringCriteria
    }


type alias ItemIdFilter =
    { iTEMID : CatalogsProductGroupCurrencyCriteria
    }


{-| Object describing an item processing record
-}
type alias ItemProcessingRecord =
    { itemId : Maybe String
    , errors : Maybe (List (ItemValidationEvent))
    , warnings : Maybe (List (ItemValidationEvent))
    , status : Maybe ItemProcessingStatus
    }


{-| The status of the item processing record
-}
type ItemProcessingStatus
    = ItemProcessingStatusSUCCESS
    | ItemProcessingStatusFAILURE
    | ItemProcessingStatusPROCESSING


itemProcessingStatusVariants : List ItemProcessingStatus
itemProcessingStatusVariants =
    [ ItemProcessingStatusSUCCESS
    , ItemProcessingStatusFAILURE
    , ItemProcessingStatusPROCESSING
    ]


{-| Object describing an item validation event
-}
type alias ItemValidationEvent =
    { attribute : Maybe String
    , code : Maybe Int
    , message : Maybe String
    }


{-| Language code, which is among the offical ISO 639-1 language list.
-}
type Language
    = LanguageAM
    | LanguageAR
    | LanguageAZ
    | LanguageBG
    | LanguageBN
    | LanguageBS
    | LanguageCA
    | LanguageCS
    | LanguageDA
    | LanguageDV
    | LanguageDZ
    | LanguageDE
    | LanguageEL
    | LanguageEN
    | LanguageES
    | LanguageET
    | LanguageFA
    | LanguageFI
    | LanguageFR
    | LanguageHE
    | LanguageHI
    | LanguageHR
    | LanguageHU
    | LanguageHY
    | LanguageID
    | LanguageIN
    | LanguageIS
    | LanguageIT
    | LanguageIW
    | LanguageJA
    | LanguageKA
    | LanguageKM
    | LanguageKO
    | LanguageLO
    | LanguageLT
    | LanguageLV
    | LanguageMK
    | LanguageMN
    | LanguageMS
    | LanguageMY
    | LanguageNB
    | LanguageNE
    | LanguageNL
    | LanguageNO
    | LanguagePL
    | LanguagePT
    | LanguageRO
    | LanguageRU
    | LanguageSK
    | LanguageSL
    | LanguageSQ
    | LanguageSR
    | LanguageSV
    | LanguageTL
    | LanguageUK
    | LanguageVI
    | LanguageTE
    | LanguageTH
    | LanguageTR
    | LanguageXX
    | LanguageZH


languageVariants : List Language
languageVariants =
    [ LanguageAM
    , LanguageAR
    , LanguageAZ
    , LanguageBG
    , LanguageBN
    , LanguageBS
    , LanguageCA
    , LanguageCS
    , LanguageDA
    , LanguageDV
    , LanguageDZ
    , LanguageDE
    , LanguageEL
    , LanguageEN
    , LanguageES
    , LanguageET
    , LanguageFA
    , LanguageFI
    , LanguageFR
    , LanguageHE
    , LanguageHI
    , LanguageHR
    , LanguageHU
    , LanguageHY
    , LanguageID
    , LanguageIN
    , LanguageIS
    , LanguageIT
    , LanguageIW
    , LanguageJA
    , LanguageKA
    , LanguageKM
    , LanguageKO
    , LanguageLO
    , LanguageLT
    , LanguageLV
    , LanguageMK
    , LanguageMN
    , LanguageMS
    , LanguageMY
    , LanguageNB
    , LanguageNE
    , LanguageNL
    , LanguageNO
    , LanguagePL
    , LanguagePT
    , LanguageRO
    , LanguageRU
    , LanguageSK
    , LanguageSL
    , LanguageSQ
    , LanguageSR
    , LanguageSV
    , LanguageTL
    , LanguageUK
    , LanguageVI
    , LanguageTE
    , LanguageTH
    , LanguageTR
    , LanguageXX
    , LanguageZH
    ]


type alias MaxPriceFilter =
    { mAXPRICE : CatalogsProductGroupPricingCriteria
    }


{-| Media upload that has been registered but not uploaded/processed yet.
-}
type alias MediaUpload =
    { mediaId : Maybe String
    , mediaType : Maybe MediaUploadType
    , uploadUrl : Maybe String
    , uploadParameters : Maybe MediaUploadAllOfUploadParameters
    }


{-| The list of parameter key/value pairs you will need to send with your POST request to upload your media file.
-}
type alias MediaUploadAllOfUploadParameters =
    { xamzdate : Maybe String
    , xamzsignature : Maybe String
    , xamzsecuritytoken : Maybe String
    , xamzalgorithm : Maybe String
    , key : Maybe String
    , policy : Maybe String
    , xamzcredential : Maybe String
    , contentType : Maybe String
    }


{-| Media upload details
-}
type alias MediaUploadDetails =
    { mediaId : Maybe String
    , mediaType : Maybe MediaUploadType
    , status : Maybe MediaUploadStatus
    }


{-| Media upload request
-}
type alias MediaUploadRequest =
    { mediaType : MediaUploadType
    }


{-| Media upload status
-}
type MediaUploadStatus
    = MediaUploadStatusRegistered
    | MediaUploadStatusProcessing
    | MediaUploadStatusSucceeded
    | MediaUploadStatusFailed


mediaUploadStatusVariants : List MediaUploadStatus
mediaUploadStatusVariants =
    [ MediaUploadStatusRegistered
    , MediaUploadStatusProcessing
    , MediaUploadStatusSucceeded
    , MediaUploadStatusFailed
    ]


type MediaUploadType
    = MediaUploadTypeVideo


mediaUploadTypeVariants : List MediaUploadType
mediaUploadTypeVariants =
    [ MediaUploadTypeVideo
    ]


{-| Level of the reporting request
-}
type MetricsReportingLevel
    = MetricsReportingLevelADVERTISER
    | MetricsReportingLevelADVERTISERTARGETING
    | MetricsReportingLevelCAMPAIGN
    | MetricsReportingLevelCAMPAIGNTARGETING
    | MetricsReportingLevelADGROUP
    | MetricsReportingLevelADGROUPTARGETING
    | MetricsReportingLevelPINPROMOTION
    | MetricsReportingLevelPINPROMOTIONTARGETING
    | MetricsReportingLevelKEYWORD
    | MetricsReportingLevelPRODUCTGROUP
    | MetricsReportingLevelPRODUCTGROUPTARGETING
    | MetricsReportingLevelPRODUCTITEM


metricsReportingLevelVariants : List MetricsReportingLevel
metricsReportingLevelVariants =
    [ MetricsReportingLevelADVERTISER
    , MetricsReportingLevelADVERTISERTARGETING
    , MetricsReportingLevelCAMPAIGN
    , MetricsReportingLevelCAMPAIGNTARGETING
    , MetricsReportingLevelADGROUP
    , MetricsReportingLevelADGROUPTARGETING
    , MetricsReportingLevelPINPROMOTION
    , MetricsReportingLevelPINPROMOTIONTARGETING
    , MetricsReportingLevelKEYWORD
    , MetricsReportingLevelPRODUCTGROUP
    , MetricsReportingLevelPRODUCTGROUPTARGETING
    , MetricsReportingLevelPRODUCTITEM
    ]


type alias MinPriceFilter =
    { mINPRICE : CatalogsProductGroupPricingCriteria
    }


{-| Currency Codes from ISO 4217.
-}
type NonNullableCatalogsCurrency
    = NonNullableCatalogsCurrencyAED
    | NonNullableCatalogsCurrencyAFN
    | NonNullableCatalogsCurrencyALL
    | NonNullableCatalogsCurrencyAMD
    | NonNullableCatalogsCurrencyANG
    | NonNullableCatalogsCurrencyAOA
    | NonNullableCatalogsCurrencyARS
    | NonNullableCatalogsCurrencyAUD
    | NonNullableCatalogsCurrencyAWG
    | NonNullableCatalogsCurrencyAZN
    | NonNullableCatalogsCurrencyBAM
    | NonNullableCatalogsCurrencyBBD
    | NonNullableCatalogsCurrencyBDT
    | NonNullableCatalogsCurrencyBGN
    | NonNullableCatalogsCurrencyBHD
    | NonNullableCatalogsCurrencyBIF
    | NonNullableCatalogsCurrencyBMD
    | NonNullableCatalogsCurrencyBND
    | NonNullableCatalogsCurrencyBOB
    | NonNullableCatalogsCurrencyBRL
    | NonNullableCatalogsCurrencyBSD
    | NonNullableCatalogsCurrencyBTN
    | NonNullableCatalogsCurrencyBWP
    | NonNullableCatalogsCurrencyBYN
    | NonNullableCatalogsCurrencyBYR
    | NonNullableCatalogsCurrencyBZD
    | NonNullableCatalogsCurrencyCAD
    | NonNullableCatalogsCurrencyCDF
    | NonNullableCatalogsCurrencyCHF
    | NonNullableCatalogsCurrencyCLP
    | NonNullableCatalogsCurrencyCNY
    | NonNullableCatalogsCurrencyCOP
    | NonNullableCatalogsCurrencyCRC
    | NonNullableCatalogsCurrencyCUC
    | NonNullableCatalogsCurrencyCUP
    | NonNullableCatalogsCurrencyCVE
    | NonNullableCatalogsCurrencyCZK
    | NonNullableCatalogsCurrencyDJF
    | NonNullableCatalogsCurrencyDKK
    | NonNullableCatalogsCurrencyDOP
    | NonNullableCatalogsCurrencyDZD
    | NonNullableCatalogsCurrencyEGP
    | NonNullableCatalogsCurrencyERN
    | NonNullableCatalogsCurrencyETB
    | NonNullableCatalogsCurrencyEUR
    | NonNullableCatalogsCurrencyFJD
    | NonNullableCatalogsCurrencyFKP
    | NonNullableCatalogsCurrencyGBP
    | NonNullableCatalogsCurrencyGEL
    | NonNullableCatalogsCurrencyGGP
    | NonNullableCatalogsCurrencyGHS
    | NonNullableCatalogsCurrencyGIP
    | NonNullableCatalogsCurrencyGMD
    | NonNullableCatalogsCurrencyGNF
    | NonNullableCatalogsCurrencyGTQ
    | NonNullableCatalogsCurrencyGYD
    | NonNullableCatalogsCurrencyHKD
    | NonNullableCatalogsCurrencyHNL
    | NonNullableCatalogsCurrencyHRK
    | NonNullableCatalogsCurrencyHTG
    | NonNullableCatalogsCurrencyHUF
    | NonNullableCatalogsCurrencyIDR
    | NonNullableCatalogsCurrencyILS
    | NonNullableCatalogsCurrencyIMP
    | NonNullableCatalogsCurrencyINR
    | NonNullableCatalogsCurrencyIQD
    | NonNullableCatalogsCurrencyIRR
    | NonNullableCatalogsCurrencyISK
    | NonNullableCatalogsCurrencyJEP
    | NonNullableCatalogsCurrencyJMD
    | NonNullableCatalogsCurrencyJOD
    | NonNullableCatalogsCurrencyJPY
    | NonNullableCatalogsCurrencyKES
    | NonNullableCatalogsCurrencyKGS
    | NonNullableCatalogsCurrencyKHR
    | NonNullableCatalogsCurrencyKMF
    | NonNullableCatalogsCurrencyKPW
    | NonNullableCatalogsCurrencyKRW
    | NonNullableCatalogsCurrencyKWD
    | NonNullableCatalogsCurrencyKYD
    | NonNullableCatalogsCurrencyKZT
    | NonNullableCatalogsCurrencyLAK
    | NonNullableCatalogsCurrencyLBP
    | NonNullableCatalogsCurrencyLKR
    | NonNullableCatalogsCurrencyLRD
    | NonNullableCatalogsCurrencyLSL
    | NonNullableCatalogsCurrencyLYD
    | NonNullableCatalogsCurrencyMAD
    | NonNullableCatalogsCurrencyMDL
    | NonNullableCatalogsCurrencyMGA
    | NonNullableCatalogsCurrencyMKD
    | NonNullableCatalogsCurrencyMMK
    | NonNullableCatalogsCurrencyMNT
    | NonNullableCatalogsCurrencyMOP
    | NonNullableCatalogsCurrencyMRO
    | NonNullableCatalogsCurrencyMUR
    | NonNullableCatalogsCurrencyMVR
    | NonNullableCatalogsCurrencyMWK
    | NonNullableCatalogsCurrencyMXN
    | NonNullableCatalogsCurrencyMYR
    | NonNullableCatalogsCurrencyMZN
    | NonNullableCatalogsCurrencyNAD
    | NonNullableCatalogsCurrencyNGN
    | NonNullableCatalogsCurrencyNIO
    | NonNullableCatalogsCurrencyNOK
    | NonNullableCatalogsCurrencyNPR
    | NonNullableCatalogsCurrencyNZD
    | NonNullableCatalogsCurrencyOMR
    | NonNullableCatalogsCurrencyPAB
    | NonNullableCatalogsCurrencyPEN
    | NonNullableCatalogsCurrencyPGK
    | NonNullableCatalogsCurrencyPHP
    | NonNullableCatalogsCurrencyPKR
    | NonNullableCatalogsCurrencyPLN
    | NonNullableCatalogsCurrencyPYG
    | NonNullableCatalogsCurrencyQAR
    | NonNullableCatalogsCurrencyRON
    | NonNullableCatalogsCurrencyRSD
    | NonNullableCatalogsCurrencyRUB
    | NonNullableCatalogsCurrencyRWF
    | NonNullableCatalogsCurrencySAR
    | NonNullableCatalogsCurrencySBD
    | NonNullableCatalogsCurrencySCR
    | NonNullableCatalogsCurrencySDG
    | NonNullableCatalogsCurrencySEK
    | NonNullableCatalogsCurrencySGD
    | NonNullableCatalogsCurrencySHP
    | NonNullableCatalogsCurrencySLL
    | NonNullableCatalogsCurrencySOS
    | NonNullableCatalogsCurrencySPL
    | NonNullableCatalogsCurrencySRD
    | NonNullableCatalogsCurrencySTD
    | NonNullableCatalogsCurrencySVC
    | NonNullableCatalogsCurrencySYP
    | NonNullableCatalogsCurrencySZL
    | NonNullableCatalogsCurrencyTHB
    | NonNullableCatalogsCurrencyTJS
    | NonNullableCatalogsCurrencyTMT
    | NonNullableCatalogsCurrencyTND
    | NonNullableCatalogsCurrencyTOP
    | NonNullableCatalogsCurrencyTRY
    | NonNullableCatalogsCurrencyTTD
    | NonNullableCatalogsCurrencyTVD
    | NonNullableCatalogsCurrencyTWD
    | NonNullableCatalogsCurrencyTZS
    | NonNullableCatalogsCurrencyUAH
    | NonNullableCatalogsCurrencyUGX
    | NonNullableCatalogsCurrencyUSD
    | NonNullableCatalogsCurrencyUYU
    | NonNullableCatalogsCurrencyUZS
    | NonNullableCatalogsCurrencyVEF
    | NonNullableCatalogsCurrencyVND
    | NonNullableCatalogsCurrencyVUV
    | NonNullableCatalogsCurrencyWST
    | NonNullableCatalogsCurrencyXAF
    | NonNullableCatalogsCurrencyXCD
    | NonNullableCatalogsCurrencyXDR
    | NonNullableCatalogsCurrencyXOF
    | NonNullableCatalogsCurrencyXPF
    | NonNullableCatalogsCurrencyYER
    | NonNullableCatalogsCurrencyZAR
    | NonNullableCatalogsCurrencyZMW
    | NonNullableCatalogsCurrencyZWD


nonNullableCatalogsCurrencyVariants : List NonNullableCatalogsCurrency
nonNullableCatalogsCurrencyVariants =
    [ NonNullableCatalogsCurrencyAED
    , NonNullableCatalogsCurrencyAFN
    , NonNullableCatalogsCurrencyALL
    , NonNullableCatalogsCurrencyAMD
    , NonNullableCatalogsCurrencyANG
    , NonNullableCatalogsCurrencyAOA
    , NonNullableCatalogsCurrencyARS
    , NonNullableCatalogsCurrencyAUD
    , NonNullableCatalogsCurrencyAWG
    , NonNullableCatalogsCurrencyAZN
    , NonNullableCatalogsCurrencyBAM
    , NonNullableCatalogsCurrencyBBD
    , NonNullableCatalogsCurrencyBDT
    , NonNullableCatalogsCurrencyBGN
    , NonNullableCatalogsCurrencyBHD
    , NonNullableCatalogsCurrencyBIF
    , NonNullableCatalogsCurrencyBMD
    , NonNullableCatalogsCurrencyBND
    , NonNullableCatalogsCurrencyBOB
    , NonNullableCatalogsCurrencyBRL
    , NonNullableCatalogsCurrencyBSD
    , NonNullableCatalogsCurrencyBTN
    , NonNullableCatalogsCurrencyBWP
    , NonNullableCatalogsCurrencyBYN
    , NonNullableCatalogsCurrencyBYR
    , NonNullableCatalogsCurrencyBZD
    , NonNullableCatalogsCurrencyCAD
    , NonNullableCatalogsCurrencyCDF
    , NonNullableCatalogsCurrencyCHF
    , NonNullableCatalogsCurrencyCLP
    , NonNullableCatalogsCurrencyCNY
    , NonNullableCatalogsCurrencyCOP
    , NonNullableCatalogsCurrencyCRC
    , NonNullableCatalogsCurrencyCUC
    , NonNullableCatalogsCurrencyCUP
    , NonNullableCatalogsCurrencyCVE
    , NonNullableCatalogsCurrencyCZK
    , NonNullableCatalogsCurrencyDJF
    , NonNullableCatalogsCurrencyDKK
    , NonNullableCatalogsCurrencyDOP
    , NonNullableCatalogsCurrencyDZD
    , NonNullableCatalogsCurrencyEGP
    , NonNullableCatalogsCurrencyERN
    , NonNullableCatalogsCurrencyETB
    , NonNullableCatalogsCurrencyEUR
    , NonNullableCatalogsCurrencyFJD
    , NonNullableCatalogsCurrencyFKP
    , NonNullableCatalogsCurrencyGBP
    , NonNullableCatalogsCurrencyGEL
    , NonNullableCatalogsCurrencyGGP
    , NonNullableCatalogsCurrencyGHS
    , NonNullableCatalogsCurrencyGIP
    , NonNullableCatalogsCurrencyGMD
    , NonNullableCatalogsCurrencyGNF
    , NonNullableCatalogsCurrencyGTQ
    , NonNullableCatalogsCurrencyGYD
    , NonNullableCatalogsCurrencyHKD
    , NonNullableCatalogsCurrencyHNL
    , NonNullableCatalogsCurrencyHRK
    , NonNullableCatalogsCurrencyHTG
    , NonNullableCatalogsCurrencyHUF
    , NonNullableCatalogsCurrencyIDR
    , NonNullableCatalogsCurrencyILS
    , NonNullableCatalogsCurrencyIMP
    , NonNullableCatalogsCurrencyINR
    , NonNullableCatalogsCurrencyIQD
    , NonNullableCatalogsCurrencyIRR
    , NonNullableCatalogsCurrencyISK
    , NonNullableCatalogsCurrencyJEP
    , NonNullableCatalogsCurrencyJMD
    , NonNullableCatalogsCurrencyJOD
    , NonNullableCatalogsCurrencyJPY
    , NonNullableCatalogsCurrencyKES
    , NonNullableCatalogsCurrencyKGS
    , NonNullableCatalogsCurrencyKHR
    , NonNullableCatalogsCurrencyKMF
    , NonNullableCatalogsCurrencyKPW
    , NonNullableCatalogsCurrencyKRW
    , NonNullableCatalogsCurrencyKWD
    , NonNullableCatalogsCurrencyKYD
    , NonNullableCatalogsCurrencyKZT
    , NonNullableCatalogsCurrencyLAK
    , NonNullableCatalogsCurrencyLBP
    , NonNullableCatalogsCurrencyLKR
    , NonNullableCatalogsCurrencyLRD
    , NonNullableCatalogsCurrencyLSL
    , NonNullableCatalogsCurrencyLYD
    , NonNullableCatalogsCurrencyMAD
    , NonNullableCatalogsCurrencyMDL
    , NonNullableCatalogsCurrencyMGA
    , NonNullableCatalogsCurrencyMKD
    , NonNullableCatalogsCurrencyMMK
    , NonNullableCatalogsCurrencyMNT
    , NonNullableCatalogsCurrencyMOP
    , NonNullableCatalogsCurrencyMRO
    , NonNullableCatalogsCurrencyMUR
    , NonNullableCatalogsCurrencyMVR
    , NonNullableCatalogsCurrencyMWK
    , NonNullableCatalogsCurrencyMXN
    , NonNullableCatalogsCurrencyMYR
    , NonNullableCatalogsCurrencyMZN
    , NonNullableCatalogsCurrencyNAD
    , NonNullableCatalogsCurrencyNGN
    , NonNullableCatalogsCurrencyNIO
    , NonNullableCatalogsCurrencyNOK
    , NonNullableCatalogsCurrencyNPR
    , NonNullableCatalogsCurrencyNZD
    , NonNullableCatalogsCurrencyOMR
    , NonNullableCatalogsCurrencyPAB
    , NonNullableCatalogsCurrencyPEN
    , NonNullableCatalogsCurrencyPGK
    , NonNullableCatalogsCurrencyPHP
    , NonNullableCatalogsCurrencyPKR
    , NonNullableCatalogsCurrencyPLN
    , NonNullableCatalogsCurrencyPYG
    , NonNullableCatalogsCurrencyQAR
    , NonNullableCatalogsCurrencyRON
    , NonNullableCatalogsCurrencyRSD
    , NonNullableCatalogsCurrencyRUB
    , NonNullableCatalogsCurrencyRWF
    , NonNullableCatalogsCurrencySAR
    , NonNullableCatalogsCurrencySBD
    , NonNullableCatalogsCurrencySCR
    , NonNullableCatalogsCurrencySDG
    , NonNullableCatalogsCurrencySEK
    , NonNullableCatalogsCurrencySGD
    , NonNullableCatalogsCurrencySHP
    , NonNullableCatalogsCurrencySLL
    , NonNullableCatalogsCurrencySOS
    , NonNullableCatalogsCurrencySPL
    , NonNullableCatalogsCurrencySRD
    , NonNullableCatalogsCurrencySTD
    , NonNullableCatalogsCurrencySVC
    , NonNullableCatalogsCurrencySYP
    , NonNullableCatalogsCurrencySZL
    , NonNullableCatalogsCurrencyTHB
    , NonNullableCatalogsCurrencyTJS
    , NonNullableCatalogsCurrencyTMT
    , NonNullableCatalogsCurrencyTND
    , NonNullableCatalogsCurrencyTOP
    , NonNullableCatalogsCurrencyTRY
    , NonNullableCatalogsCurrencyTTD
    , NonNullableCatalogsCurrencyTVD
    , NonNullableCatalogsCurrencyTWD
    , NonNullableCatalogsCurrencyTZS
    , NonNullableCatalogsCurrencyUAH
    , NonNullableCatalogsCurrencyUGX
    , NonNullableCatalogsCurrencyUSD
    , NonNullableCatalogsCurrencyUYU
    , NonNullableCatalogsCurrencyUZS
    , NonNullableCatalogsCurrencyVEF
    , NonNullableCatalogsCurrencyVND
    , NonNullableCatalogsCurrencyVUV
    , NonNullableCatalogsCurrencyWST
    , NonNullableCatalogsCurrencyXAF
    , NonNullableCatalogsCurrencyXCD
    , NonNullableCatalogsCurrencyXDR
    , NonNullableCatalogsCurrencyXOF
    , NonNullableCatalogsCurrencyXPF
    , NonNullableCatalogsCurrencyYER
    , NonNullableCatalogsCurrencyZAR
    , NonNullableCatalogsCurrencyZMW
    , NonNullableCatalogsCurrencyZWD
    ]


{-| Currency Codes from ISO 4217.
-}
type NullableCurrency
    = NullableCurrencyAED
    | NullableCurrencyAFN
    | NullableCurrencyALL
    | NullableCurrencyAMD
    | NullableCurrencyANG
    | NullableCurrencyAOA
    | NullableCurrencyARS
    | NullableCurrencyAUD
    | NullableCurrencyAWG
    | NullableCurrencyAZN
    | NullableCurrencyBAM
    | NullableCurrencyBBD
    | NullableCurrencyBDT
    | NullableCurrencyBGN
    | NullableCurrencyBHD
    | NullableCurrencyBIF
    | NullableCurrencyBMD
    | NullableCurrencyBND
    | NullableCurrencyBOB
    | NullableCurrencyBRL
    | NullableCurrencyBSD
    | NullableCurrencyBTN
    | NullableCurrencyBWP
    | NullableCurrencyBYN
    | NullableCurrencyBYR
    | NullableCurrencyBZD
    | NullableCurrencyCAD
    | NullableCurrencyCDF
    | NullableCurrencyCHF
    | NullableCurrencyCLP
    | NullableCurrencyCNY
    | NullableCurrencyCOP
    | NullableCurrencyCRC
    | NullableCurrencyCUC
    | NullableCurrencyCUP
    | NullableCurrencyCVE
    | NullableCurrencyCZK
    | NullableCurrencyDJF
    | NullableCurrencyDKK
    | NullableCurrencyDOP
    | NullableCurrencyDZD
    | NullableCurrencyEGP
    | NullableCurrencyERN
    | NullableCurrencyETB
    | NullableCurrencyEUR
    | NullableCurrencyFJD
    | NullableCurrencyFKP
    | NullableCurrencyGBP
    | NullableCurrencyGEL
    | NullableCurrencyGGP
    | NullableCurrencyGHS
    | NullableCurrencyGIP
    | NullableCurrencyGMD
    | NullableCurrencyGNF
    | NullableCurrencyGTQ
    | NullableCurrencyGYD
    | NullableCurrencyHKD
    | NullableCurrencyHNL
    | NullableCurrencyHRK
    | NullableCurrencyHTG
    | NullableCurrencyHUF
    | NullableCurrencyIDR
    | NullableCurrencyILS
    | NullableCurrencyIMP
    | NullableCurrencyINR
    | NullableCurrencyIQD
    | NullableCurrencyIRR
    | NullableCurrencyISK
    | NullableCurrencyJEP
    | NullableCurrencyJMD
    | NullableCurrencyJOD
    | NullableCurrencyJPY
    | NullableCurrencyKES
    | NullableCurrencyKGS
    | NullableCurrencyKHR
    | NullableCurrencyKMF
    | NullableCurrencyKPW
    | NullableCurrencyKRW
    | NullableCurrencyKWD
    | NullableCurrencyKYD
    | NullableCurrencyKZT
    | NullableCurrencyLAK
    | NullableCurrencyLBP
    | NullableCurrencyLKR
    | NullableCurrencyLRD
    | NullableCurrencyLSL
    | NullableCurrencyLYD
    | NullableCurrencyMAD
    | NullableCurrencyMDL
    | NullableCurrencyMGA
    | NullableCurrencyMKD
    | NullableCurrencyMMK
    | NullableCurrencyMNT
    | NullableCurrencyMOP
    | NullableCurrencyMRO
    | NullableCurrencyMUR
    | NullableCurrencyMVR
    | NullableCurrencyMWK
    | NullableCurrencyMXN
    | NullableCurrencyMYR
    | NullableCurrencyMZN
    | NullableCurrencyNAD
    | NullableCurrencyNGN
    | NullableCurrencyNIO
    | NullableCurrencyNOK
    | NullableCurrencyNPR
    | NullableCurrencyNZD
    | NullableCurrencyOMR
    | NullableCurrencyPAB
    | NullableCurrencyPEN
    | NullableCurrencyPGK
    | NullableCurrencyPHP
    | NullableCurrencyPKR
    | NullableCurrencyPLN
    | NullableCurrencyPYG
    | NullableCurrencyQAR
    | NullableCurrencyRON
    | NullableCurrencyRSD
    | NullableCurrencyRUB
    | NullableCurrencyRWF
    | NullableCurrencySAR
    | NullableCurrencySBD
    | NullableCurrencySCR
    | NullableCurrencySDG
    | NullableCurrencySEK
    | NullableCurrencySGD
    | NullableCurrencySHP
    | NullableCurrencySLL
    | NullableCurrencySOS
    | NullableCurrencySPL
    | NullableCurrencySRD
    | NullableCurrencySTD
    | NullableCurrencySVC
    | NullableCurrencySYP
    | NullableCurrencySZL
    | NullableCurrencyTHB
    | NullableCurrencyTJS
    | NullableCurrencyTMT
    | NullableCurrencyTND
    | NullableCurrencyTOP
    | NullableCurrencyTRY
    | NullableCurrencyTTD
    | NullableCurrencyTVD
    | NullableCurrencyTWD
    | NullableCurrencyTZS
    | NullableCurrencyUAH
    | NullableCurrencyUGX
    | NullableCurrencyUSD
    | NullableCurrencyUYU
    | NullableCurrencyUZS
    | NullableCurrencyVEF
    | NullableCurrencyVND
    | NullableCurrencyVUV
    | NullableCurrencyWST
    | NullableCurrencyXAF
    | NullableCurrencyXCD
    | NullableCurrencyXDR
    | NullableCurrencyXOF
    | NullableCurrencyXPF
    | NullableCurrencyYER
    | NullableCurrencyZAR
    | NullableCurrencyZMW
    | NullableCurrencyZWD
    | NullableCurrencyNull


nullableCurrencyVariants : List NullableCurrency
nullableCurrencyVariants =
    [ NullableCurrencyAED
    , NullableCurrencyAFN
    , NullableCurrencyALL
    , NullableCurrencyAMD
    , NullableCurrencyANG
    , NullableCurrencyAOA
    , NullableCurrencyARS
    , NullableCurrencyAUD
    , NullableCurrencyAWG
    , NullableCurrencyAZN
    , NullableCurrencyBAM
    , NullableCurrencyBBD
    , NullableCurrencyBDT
    , NullableCurrencyBGN
    , NullableCurrencyBHD
    , NullableCurrencyBIF
    , NullableCurrencyBMD
    , NullableCurrencyBND
    , NullableCurrencyBOB
    , NullableCurrencyBRL
    , NullableCurrencyBSD
    , NullableCurrencyBTN
    , NullableCurrencyBWP
    , NullableCurrencyBYN
    , NullableCurrencyBYR
    , NullableCurrencyBZD
    , NullableCurrencyCAD
    , NullableCurrencyCDF
    , NullableCurrencyCHF
    , NullableCurrencyCLP
    , NullableCurrencyCNY
    , NullableCurrencyCOP
    , NullableCurrencyCRC
    , NullableCurrencyCUC
    , NullableCurrencyCUP
    , NullableCurrencyCVE
    , NullableCurrencyCZK
    , NullableCurrencyDJF
    , NullableCurrencyDKK
    , NullableCurrencyDOP
    , NullableCurrencyDZD
    , NullableCurrencyEGP
    , NullableCurrencyERN
    , NullableCurrencyETB
    , NullableCurrencyEUR
    , NullableCurrencyFJD
    , NullableCurrencyFKP
    , NullableCurrencyGBP
    , NullableCurrencyGEL
    , NullableCurrencyGGP
    , NullableCurrencyGHS
    , NullableCurrencyGIP
    , NullableCurrencyGMD
    , NullableCurrencyGNF
    , NullableCurrencyGTQ
    , NullableCurrencyGYD
    , NullableCurrencyHKD
    , NullableCurrencyHNL
    , NullableCurrencyHRK
    , NullableCurrencyHTG
    , NullableCurrencyHUF
    , NullableCurrencyIDR
    , NullableCurrencyILS
    , NullableCurrencyIMP
    , NullableCurrencyINR
    , NullableCurrencyIQD
    , NullableCurrencyIRR
    , NullableCurrencyISK
    , NullableCurrencyJEP
    , NullableCurrencyJMD
    , NullableCurrencyJOD
    , NullableCurrencyJPY
    , NullableCurrencyKES
    , NullableCurrencyKGS
    , NullableCurrencyKHR
    , NullableCurrencyKMF
    , NullableCurrencyKPW
    , NullableCurrencyKRW
    , NullableCurrencyKWD
    , NullableCurrencyKYD
    , NullableCurrencyKZT
    , NullableCurrencyLAK
    , NullableCurrencyLBP
    , NullableCurrencyLKR
    , NullableCurrencyLRD
    , NullableCurrencyLSL
    , NullableCurrencyLYD
    , NullableCurrencyMAD
    , NullableCurrencyMDL
    , NullableCurrencyMGA
    , NullableCurrencyMKD
    , NullableCurrencyMMK
    , NullableCurrencyMNT
    , NullableCurrencyMOP
    , NullableCurrencyMRO
    , NullableCurrencyMUR
    , NullableCurrencyMVR
    , NullableCurrencyMWK
    , NullableCurrencyMXN
    , NullableCurrencyMYR
    , NullableCurrencyMZN
    , NullableCurrencyNAD
    , NullableCurrencyNGN
    , NullableCurrencyNIO
    , NullableCurrencyNOK
    , NullableCurrencyNPR
    , NullableCurrencyNZD
    , NullableCurrencyOMR
    , NullableCurrencyPAB
    , NullableCurrencyPEN
    , NullableCurrencyPGK
    , NullableCurrencyPHP
    , NullableCurrencyPKR
    , NullableCurrencyPLN
    , NullableCurrencyPYG
    , NullableCurrencyQAR
    , NullableCurrencyRON
    , NullableCurrencyRSD
    , NullableCurrencyRUB
    , NullableCurrencyRWF
    , NullableCurrencySAR
    , NullableCurrencySBD
    , NullableCurrencySCR
    , NullableCurrencySDG
    , NullableCurrencySEK
    , NullableCurrencySGD
    , NullableCurrencySHP
    , NullableCurrencySLL
    , NullableCurrencySOS
    , NullableCurrencySPL
    , NullableCurrencySRD
    , NullableCurrencySTD
    , NullableCurrencySVC
    , NullableCurrencySYP
    , NullableCurrencySZL
    , NullableCurrencyTHB
    , NullableCurrencyTJS
    , NullableCurrencyTMT
    , NullableCurrencyTND
    , NullableCurrencyTOP
    , NullableCurrencyTRY
    , NullableCurrencyTTD
    , NullableCurrencyTVD
    , NullableCurrencyTWD
    , NullableCurrencyTZS
    , NullableCurrencyUAH
    , NullableCurrencyUGX
    , NullableCurrencyUSD
    , NullableCurrencyUYU
    , NullableCurrencyUZS
    , NullableCurrencyVEF
    , NullableCurrencyVND
    , NullableCurrencyVUV
    , NullableCurrencyWST
    , NullableCurrencyXAF
    , NullableCurrencyXCD
    , NullableCurrencyXDR
    , NullableCurrencyXOF
    , NullableCurrencyXPF
    , NullableCurrencyYER
    , NullableCurrencyZAR
    , NullableCurrencyZMW
    , NullableCurrencyZWD
    , NullableCurrencyNull
    ]


{-| Describes the valid schema for possible OAuth access token requests.
-}
type OauthAccessTokenRequest
    = OauthAccessTokenRequest BaseOauthAccessTokenRequest
    | OauthAccessTokenRequestOauthAccessTokenRequestCode OauthAccessTokenRequestCode
    | OauthAccessTokenRequestOauthAccessTokenRequestRefresh OauthAccessTokenRequestRefresh


type alias BaseOauthAccessTokenRequest =
    { grantType : OauthAccessTokenRequestGrantType
    }


type OauthAccessTokenRequestGrantType
    = OauthAccessTokenRequestGrantTypeAuthorizationCode
    | OauthAccessTokenRequestGrantTypeRefreshToken


oauthAccessTokenRequestGrantTypeVariants : List OauthAccessTokenRequestGrantType
oauthAccessTokenRequestGrantTypeVariants =
    [ OauthAccessTokenRequestGrantTypeAuthorizationCode
    , OauthAccessTokenRequestGrantTypeRefreshToken
    ]


{-| A request to exchange an authorization code for an access token.
-}
type alias OauthAccessTokenRequestCode =
    { baseOauthAccessTokenRequest: BaseOauthAccessTokenRequest
    , code : String
    , redirectUri : String
    }


{-| A request to exchange a refresh token for a new access token.
-}
type alias OauthAccessTokenRequestRefresh =
    { baseOauthAccessTokenRequest: BaseOauthAccessTokenRequest
    , refreshToken : String
    , scope : Maybe String
    }


{-| A successful OAuth access token response.
-}
type OauthAccessTokenResponse
    = OauthAccessTokenResponse BaseOauthAccessTokenResponse
    | OauthAccessTokenResponseOauthAccessTokenResponseCode OauthAccessTokenResponseCode
    | OauthAccessTokenResponseOauthAccessTokenResponseRefresh OauthAccessTokenResponseRefresh


type alias BaseOauthAccessTokenResponse =
    { responseType : Maybe OauthAccessTokenResponseResponseType
    , accessToken : String
    , tokenType : String
    , expiresIn : Int
    , scope : String
    }


type OauthAccessTokenResponseResponseType
    = OauthAccessTokenResponseResponseTypeAuthorizationCode
    | OauthAccessTokenResponseResponseTypeRefreshToken


oauthAccessTokenResponseResponseTypeVariants : List OauthAccessTokenResponseResponseType
oauthAccessTokenResponseResponseTypeVariants =
    [ OauthAccessTokenResponseResponseTypeAuthorizationCode
    , OauthAccessTokenResponseResponseTypeRefreshToken
    ]


{-| A successful OAuth access token response for the authorization code flow.
-}
type alias OauthAccessTokenResponseCode =
    { baseOauthAccessTokenResponse: BaseOauthAccessTokenResponse
    , refreshToken : String
    , refreshTokenExpiresIn : Int
    }


{-| A successful OAuth access token response for the refresh token flow.
-}
type alias OauthAccessTokenResponseRefresh =
    { baseOauthAccessTokenResponse: BaseOauthAccessTokenResponse
    , }


{-| Campaign objective type.
-}
type ObjectiveType
    = ObjectiveTypeAWARENESS
    | ObjectiveTypeCONSIDERATION
    | ObjectiveTypeVIDEOVIEW
    | ObjectiveTypeWEBCONVERSION
    | ObjectiveTypeCATALOGSALES
    | ObjectiveTypeWEBSESSIONS
    | ObjectiveTypeAWARENESSRESERVED
    | ObjectiveTypeENGAGEMENT


objectiveTypeVariants : List ObjectiveType
objectiveTypeVariants =
    [ ObjectiveTypeAWARENESS
    , ObjectiveTypeCONSIDERATION
    , ObjectiveTypeVIDEOVIEW
    , ObjectiveTypeWEBCONVERSION
    , ObjectiveTypeCATALOGSALES
    , ObjectiveTypeWEBSESSIONS
    , ObjectiveTypeAWARENESSRESERVED
    , ObjectiveTypeENGAGEMENT
    ]


{-| Ad group pacing delivery type
-}
type PacingDeliveryType
    = PacingDeliveryTypeSTANDARD
    | PacingDeliveryTypeACCELERATED


pacingDeliveryTypeVariants : List PacingDeliveryType
pacingDeliveryTypeVariants =
    [ PacingDeliveryTypeSTANDARD
    , PacingDeliveryTypeACCELERATED
    ]


type alias Paginated =
    { items : List (Object)
    , bookmark : Maybe String
    }


{-| Pin
-}
type alias Pin =
    { id : Maybe String
    , createdAt : Maybe Posix
    , link : Maybe String
    , title : Maybe String
    , description : Maybe String
    , altText : Maybe String
    , boardId : Maybe String
    , boardSectionId : Maybe String
    , boardOwner : Maybe Dict.Dict String BoardOwner
    , media : Maybe Dict.Dict String PinMedia
    , mediaSource : Maybe Dict.Dict String PinMediaSource
    }


{-| Pin media objects.
-}
type PinMedia
    = PinMedia BasePinMedia
    | PinMediaPinMediaWithImage PinMediaWithImage


type alias BasePinMedia =
    { mediaType : Maybe String
    }


{-| Pin media source.
-}
type PinMediaSource
    = PinMediaSourcePinMediaSourceImageBase64 PinMediaSourceImageBase64
    | PinMediaSourcePinMediaSourceImageURL PinMediaSourceImageURL
    | PinMediaSourcePinMediaSourceVideoID PinMediaSourceVideoID



{-| Base64-encoded image media source
-}
type alias PinMediaSourceImageBase64 =
    { sourceType : PinMediaSourceImageBase64SourceType
    , contentType : PinMediaSourceImageBase64ContentType
    , data : String
    }


type PinMediaSourceImageBase64SourceType
    = PinMediaSourceImageBase64SourceTypeImageBase64


pinMediaSourceImageBase64SourceTypeVariants : List PinMediaSourceImageBase64SourceType
pinMediaSourceImageBase64SourceTypeVariants =
    [ PinMediaSourceImageBase64SourceTypeImageBase64
    ]


type PinMediaSourceImageBase64ContentType
    = PinMediaSourceImageBase64ContentTypeJpeg
    | PinMediaSourceImageBase64ContentTypePng


pinMediaSourceImageBase64ContentTypeVariants : List PinMediaSourceImageBase64ContentType
pinMediaSourceImageBase64ContentTypeVariants =
    [ PinMediaSourceImageBase64ContentTypeJpeg
    , PinMediaSourceImageBase64ContentTypePng
    ]


{-| Image URL-based media source
-}
type alias PinMediaSourceImageURL =
    { sourceType : PinMediaSourceImageURLSourceType
    , url : String
    }


type PinMediaSourceImageURLSourceType
    = PinMediaSourceImageURLSourceTypeImageUrl


pinMediaSourceImageURLSourceTypeVariants : List PinMediaSourceImageURLSourceType
pinMediaSourceImageURLSourceTypeVariants =
    [ PinMediaSourceImageURLSourceTypeImageUrl
    ]


{-| Video ID-based media source
-}
type alias PinMediaSourceVideoID =
    { sourceType : PinMediaSourceVideoIDSourceType
    , coverImageUrl : String
    , mediaId : String
    }


type PinMediaSourceVideoIDSourceType
    = PinMediaSourceVideoIDSourceTypeVideoId


pinMediaSourceVideoIDSourceTypeVariants : List PinMediaSourceVideoIDSourceType
pinMediaSourceVideoIDSourceTypeVariants =
    [ PinMediaSourceVideoIDSourceTypeVideoId
    ]


{-| Pin with image.
-}
type alias PinMediaWithImage =
    { basePinMedia: BasePinMedia
    , images : Maybe (Dict.Dict String (ImageDetails))
    }


{-| Summary status for pin promotions
-}
type PinPromotionSummaryStatus
    = PinPromotionSummaryStatusAPPROVED
    | PinPromotionSummaryStatusPAUSED
    | PinPromotionSummaryStatusPENDING
    | PinPromotionSummaryStatusREJECTED
    | PinPromotionSummaryStatusADVERTISERDISABLED
    | PinPromotionSummaryStatusARCHIVED


pinPromotionSummaryStatusVariants : List PinPromotionSummaryStatus
pinPromotionSummaryStatusVariants =
    [ PinPromotionSummaryStatusAPPROVED
    , PinPromotionSummaryStatusPAUSED
    , PinPromotionSummaryStatusPENDING
    , PinPromotionSummaryStatusREJECTED
    , PinPromotionSummaryStatusADVERTISERDISABLED
    , PinPromotionSummaryStatusARCHIVED
    ]


{-| Campaign placement group type
-}
type PlacementGroupType
    = PlacementGroupTypeALL
    | PlacementGroupTypeSEARCH
    | PlacementGroupTypeBROWSE
    | PlacementGroupTypeOTHER


placementGroupTypeVariants : List PlacementGroupType
placementGroupTypeVariants =
    [ PlacementGroupTypeALL
    , PlacementGroupTypeSEARCH
    , PlacementGroupTypeBROWSE
    , PlacementGroupTypeOTHER
    ]


{-| Default availability for products in a feed.
-}
type ProductAvailabilityType
    = ProductAvailabilityTypeINSTOCK
    | ProductAvailabilityTypeOUTOFSTOCK
    | ProductAvailabilityTypePREORDER
    | ProductAvailabilityTypeNull


productAvailabilityTypeVariants : List ProductAvailabilityType
productAvailabilityTypeVariants =
    [ ProductAvailabilityTypeINSTOCK
    , ProductAvailabilityTypeOUTOFSTOCK
    , ProductAvailabilityTypePREORDER
    , ProductAvailabilityTypeNull
    ]


{-| Summary status for product group
-}
type ProductGroupSummaryStatus
    = ProductGroupSummaryStatusRUNNING
    | ProductGroupSummaryStatusPAUSED
    | ProductGroupSummaryStatusEXCLUDED
    | ProductGroupSummaryStatusARCHIVED


productGroupSummaryStatusVariants : List ProductGroupSummaryStatus
productGroupSummaryStatusVariants =
    [ ProductGroupSummaryStatusRUNNING
    , ProductGroupSummaryStatusPAUSED
    , ProductGroupSummaryStatusEXCLUDED
    , ProductGroupSummaryStatusARCHIVED
    ]


type alias ProductType0Filter =
    { pRODUCTTYPE0 : CatalogsProductGroupMultipleStringListCriteria
    }


type alias ProductType1Filter =
    { pRODUCTTYPE1 : CatalogsProductGroupMultipleStringListCriteria
    }


type alias ProductType2Filter =
    { pRODUCTTYPE2 : CatalogsProductGroupMultipleStringListCriteria
    }


type alias ProductType3Filter =
    { pRODUCTTYPE3 : CatalogsProductGroupMultipleStringListCriteria
    }


type alias ProductType4Filter =
    { pRODUCTTYPE4 : CatalogsProductGroupMultipleStringListCriteria
    }


{-| Reporting columns
-}
type ReportingColumnAsync
    = ReportingColumnAsyncSPENDINMICRODOLLAR
    | ReportingColumnAsyncPAIDIMPRESSION
    | ReportingColumnAsyncCPCINMICRODOLLAR
    | ReportingColumnAsyncECPCINMICRODOLLAR
    | ReportingColumnAsyncCTR
    | ReportingColumnAsyncECTR
    | ReportingColumnAsyncCAMPAIGNNAME
    | ReportingColumnAsyncCAMPAIGNSTATUS
    | ReportingColumnAsyncADSTATUS
    | ReportingColumnAsyncPINPROMOTIONSTATUS
    | ReportingColumnAsyncPINID
    | ReportingColumnAsyncTOTALENGAGEMENT
    | ReportingColumnAsyncENGAGEMENT1
    | ReportingColumnAsyncENGAGEMENT2
    | ReportingColumnAsyncECPMINMICRODOLLAR
    | ReportingColumnAsyncCTR2
    | ReportingColumnAsyncCAMPAIGNID
    | ReportingColumnAsyncADVERTISERID
    | ReportingColumnAsyncADACCOUNTID
    | ReportingColumnAsyncPINPROMOTIONID
    | ReportingColumnAsyncADID
    | ReportingColumnAsyncADGROUPID
    | ReportingColumnAsyncCAMPAIGNMANAGEDSTATUS
    | ReportingColumnAsyncCPMINMICRODOLLAR
    | ReportingColumnAsyncADGROUPNAME
    | ReportingColumnAsyncADGROUPSTATUS
    | ReportingColumnAsyncPRODUCTGROUPID
    | ReportingColumnAsyncCLICKTHROUGH1
    | ReportingColumnAsyncREPIN1
    | ReportingColumnAsyncIMPRESSION1
    | ReportingColumnAsyncIMPRESSION1GROSS
    | ReportingColumnAsyncCLICKTHROUGH1GROSS
    | ReportingColumnAsyncOUTBOUNDCLICK1
    | ReportingColumnAsyncCLICKTHROUGH2
    | ReportingColumnAsyncREPIN2
    | ReportingColumnAsyncIMPRESSION2
    | ReportingColumnAsyncOUTBOUNDCLICK2
    | ReportingColumnAsyncTOTALIMPRESSIONUSER
    | ReportingColumnAsyncTOTALIMPRESSIONFREQUENCY
    | ReportingColumnAsyncTOTALENGAGEMENTPAGEVISIT
    | ReportingColumnAsyncTOTALENGAGEMENTSIGNUP
    | ReportingColumnAsyncTOTALENGAGEMENTCHECKOUT
    | ReportingColumnAsyncTOTALENGAGEMENTCUSTOM
    | ReportingColumnAsyncTOTALENGAGEMENTADDTOCART
    | ReportingColumnAsyncTOTALENGAGEMENTLEAD
    | ReportingColumnAsyncTOTALENGAGEMENTSEARCH
    | ReportingColumnAsyncTOTALENGAGEMENTWATCHVIDEO
    | ReportingColumnAsyncTOTALENGAGEMENTVIEWCATEGORY
    | ReportingColumnAsyncTOTALENGAGEMENTAPPINSTALL
    | ReportingColumnAsyncTOTALENGAGEMENTUNKNOWN
    | ReportingColumnAsyncTOTALCLICKPAGEVISIT
    | ReportingColumnAsyncTOTALCLICKSIGNUP
    | ReportingColumnAsyncTOTALCLICKCHECKOUT
    | ReportingColumnAsyncTOTALCLICKCUSTOM
    | ReportingColumnAsyncTOTALCLICKADDTOCART
    | ReportingColumnAsyncTOTALCLICKLEAD
    | ReportingColumnAsyncTOTALCLICKSEARCH
    | ReportingColumnAsyncTOTALCLICKWATCHVIDEO
    | ReportingColumnAsyncTOTALCLICKVIEWCATEGORY
    | ReportingColumnAsyncTOTALCLICKAPPINSTALL
    | ReportingColumnAsyncTOTALCLICKUNKNOWN
    | ReportingColumnAsyncTOTALVIEWPAGEVISIT
    | ReportingColumnAsyncTOTALVIEWSIGNUP
    | ReportingColumnAsyncTOTALVIEWCHECKOUT
    | ReportingColumnAsyncTOTALVIEWCUSTOM
    | ReportingColumnAsyncTOTALVIEWADDTOCART
    | ReportingColumnAsyncTOTALVIEWLEAD
    | ReportingColumnAsyncTOTALVIEWSEARCH
    | ReportingColumnAsyncTOTALVIEWWATCHVIDEO
    | ReportingColumnAsyncTOTALVIEWVIEWCATEGORY
    | ReportingColumnAsyncTOTALVIEWAPPINSTALL
    | ReportingColumnAsyncTOTALVIEWUNKNOWN
    | ReportingColumnAsyncTOTALCONVERSIONS
    | ReportingColumnAsyncTOTALENGAGEMENTPAGEVISITVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALENGAGEMENTSIGNUPVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALENGAGEMENTCHECKOUTVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALENGAGEMENTCUSTOMVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALENGAGEMENTADDTOCARTVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALENGAGEMENTLEADVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALENGAGEMENTSEARCHVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALENGAGEMENTWATCHVIDEOVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALENGAGEMENTVIEWCATEGORYVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALENGAGEMENTAPPINSTALLVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALENGAGEMENTUNKNOWNVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALCLICKPAGEVISITVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALCLICKSIGNUPVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALCLICKCHECKOUTVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALCLICKCUSTOMVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALCLICKADDTOCARTVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALCLICKLEADVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALCLICKSEARCHVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALCLICKWATCHVIDEOVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALCLICKVIEWCATEGORYVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALCLICKAPPINSTALLVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALCLICKUNKNOWNVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALVIEWPAGEVISITVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALVIEWSIGNUPVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALVIEWCHECKOUTVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALVIEWCUSTOMVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALVIEWADDTOCARTVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALVIEWLEADVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALVIEWSEARCHVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALVIEWWATCHVIDEOVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALVIEWVIEWCATEGORYVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALVIEWAPPINSTALLVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALVIEWUNKNOWNVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALCONVERSIONSVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALENGAGEMENTPAGEVISITQUANTITY
    | ReportingColumnAsyncTOTALENGAGEMENTSIGNUPQUANTITY
    | ReportingColumnAsyncTOTALENGAGEMENTCHECKOUTQUANTITY
    | ReportingColumnAsyncTOTALENGAGEMENTCUSTOMQUANTITY
    | ReportingColumnAsyncTOTALENGAGEMENTADDTOCARTQUANTITY
    | ReportingColumnAsyncTOTALENGAGEMENTLEADQUANTITY
    | ReportingColumnAsyncTOTALENGAGEMENTSEARCHQUANTITY
    | ReportingColumnAsyncTOTALENGAGEMENTWATCHVIDEOQUANTITY
    | ReportingColumnAsyncTOTALENGAGEMENTVIEWCATEGORYQUANTITY
    | ReportingColumnAsyncTOTALENGAGEMENTUNKNOWNQUANTITY
    | ReportingColumnAsyncTOTALCLICKPAGEVISITQUANTITY
    | ReportingColumnAsyncTOTALCLICKSIGNUPQUANTITY
    | ReportingColumnAsyncTOTALCLICKCHECKOUTQUANTITY
    | ReportingColumnAsyncTOTALCLICKCUSTOMQUANTITY
    | ReportingColumnAsyncTOTALCLICKADDTOCARTQUANTITY
    | ReportingColumnAsyncTOTALCLICKLEADQUANTITY
    | ReportingColumnAsyncTOTALCLICKSEARCHQUANTITY
    | ReportingColumnAsyncTOTALCLICKWATCHVIDEOQUANTITY
    | ReportingColumnAsyncTOTALCLICKVIEWCATEGORYQUANTITY
    | ReportingColumnAsyncTOTALCLICKUNKNOWNQUANTITY
    | ReportingColumnAsyncTOTALVIEWPAGEVISITQUANTITY
    | ReportingColumnAsyncTOTALVIEWSIGNUPQUANTITY
    | ReportingColumnAsyncTOTALVIEWCHECKOUTQUANTITY
    | ReportingColumnAsyncTOTALVIEWCUSTOMQUANTITY
    | ReportingColumnAsyncTOTALVIEWADDTOCARTQUANTITY
    | ReportingColumnAsyncTOTALVIEWLEADQUANTITY
    | ReportingColumnAsyncTOTALVIEWSEARCHQUANTITY
    | ReportingColumnAsyncTOTALVIEWWATCHVIDEOQUANTITY
    | ReportingColumnAsyncTOTALVIEWVIEWCATEGORYQUANTITY
    | ReportingColumnAsyncTOTALVIEWUNKNOWNQUANTITY
    | ReportingColumnAsyncTOTALCONVERSIONSQUANTITY
    | ReportingColumnAsyncONSITECHECKOUTS1
    | ReportingColumnAsyncPINPROMOTIONNAME
    | ReportingColumnAsyncADNAME
    | ReportingColumnAsyncCAMPAIGNLIFETIMESPENDCAP
    | ReportingColumnAsyncCAMPAIGNDAILYSPENDCAP
    | ReportingColumnAsyncTOTALPAGEVISITDESKTOPACTIONTODESKTOPCONVERSION
    | ReportingColumnAsyncTOTALPAGEVISITDESKTOPACTIONTOMOBILECONVERSION
    | ReportingColumnAsyncTOTALPAGEVISITDESKTOPACTIONTOTABLETCONVERSION
    | ReportingColumnAsyncTOTALPAGEVISITMOBILEACTIONTODESKTOPCONVERSION
    | ReportingColumnAsyncTOTALPAGEVISITMOBILEACTIONTOMOBILECONVERSION
    | ReportingColumnAsyncTOTALPAGEVISITMOBILEACTIONTOTABLETCONVERSION
    | ReportingColumnAsyncTOTALPAGEVISITTABLETACTIONTODESKTOPCONVERSION
    | ReportingColumnAsyncTOTALPAGEVISITTABLETACTIONTOMOBILECONVERSION
    | ReportingColumnAsyncTOTALPAGEVISITTABLETACTIONTOTABLETCONVERSION
    | ReportingColumnAsyncTOTALSIGNUPDESKTOPACTIONTODESKTOPCONVERSION
    | ReportingColumnAsyncTOTALSIGNUPDESKTOPACTIONTOMOBILECONVERSION
    | ReportingColumnAsyncTOTALSIGNUPDESKTOPACTIONTOTABLETCONVERSION
    | ReportingColumnAsyncTOTALSIGNUPMOBILEACTIONTODESKTOPCONVERSION
    | ReportingColumnAsyncTOTALSIGNUPMOBILEACTIONTOMOBILECONVERSION
    | ReportingColumnAsyncTOTALSIGNUPMOBILEACTIONTOTABLETCONVERSION
    | ReportingColumnAsyncTOTALSIGNUPTABLETACTIONTODESKTOPCONVERSION
    | ReportingColumnAsyncTOTALSIGNUPTABLETACTIONTOMOBILECONVERSION
    | ReportingColumnAsyncTOTALSIGNUPTABLETACTIONTOTABLETCONVERSION
    | ReportingColumnAsyncTOTALCHECKOUTDESKTOPACTIONTODESKTOPCONVERSION
    | ReportingColumnAsyncTOTALCHECKOUTDESKTOPACTIONTOMOBILECONVERSION
    | ReportingColumnAsyncTOTALCHECKOUTDESKTOPACTIONTOTABLETCONVERSION
    | ReportingColumnAsyncTOTALCHECKOUTMOBILEACTIONTODESKTOPCONVERSION
    | ReportingColumnAsyncTOTALCHECKOUTMOBILEACTIONTOMOBILECONVERSION
    | ReportingColumnAsyncTOTALCHECKOUTMOBILEACTIONTOTABLETCONVERSION
    | ReportingColumnAsyncTOTALCHECKOUTTABLETACTIONTODESKTOPCONVERSION
    | ReportingColumnAsyncTOTALCHECKOUTTABLETACTIONTOMOBILECONVERSION
    | ReportingColumnAsyncTOTALCHECKOUTTABLETACTIONTOTABLETCONVERSION
    | ReportingColumnAsyncTOTALCUSTOMDESKTOPACTIONTODESKTOPCONVERSION
    | ReportingColumnAsyncTOTALCUSTOMDESKTOPACTIONTOMOBILECONVERSION
    | ReportingColumnAsyncTOTALCUSTOMDESKTOPACTIONTOTABLETCONVERSION
    | ReportingColumnAsyncTOTALCUSTOMMOBILEACTIONTODESKTOPCONVERSION
    | ReportingColumnAsyncTOTALCUSTOMMOBILEACTIONTOMOBILECONVERSION
    | ReportingColumnAsyncTOTALCUSTOMMOBILEACTIONTOTABLETCONVERSION
    | ReportingColumnAsyncTOTALCUSTOMTABLETACTIONTODESKTOPCONVERSION
    | ReportingColumnAsyncTOTALCUSTOMTABLETACTIONTOMOBILECONVERSION
    | ReportingColumnAsyncTOTALCUSTOMTABLETACTIONTOTABLETCONVERSION
    | ReportingColumnAsyncTOTALADDTOCARTDESKTOPACTIONTODESKTOPCONVERSION
    | ReportingColumnAsyncTOTALADDTOCARTDESKTOPACTIONTOMOBILECONVERSION
    | ReportingColumnAsyncTOTALADDTOCARTDESKTOPACTIONTOTABLETCONVERSION
    | ReportingColumnAsyncTOTALADDTOCARTMOBILEACTIONTODESKTOPCONVERSION
    | ReportingColumnAsyncTOTALADDTOCARTMOBILEACTIONTOMOBILECONVERSION
    | ReportingColumnAsyncTOTALADDTOCARTMOBILEACTIONTOTABLETCONVERSION
    | ReportingColumnAsyncTOTALADDTOCARTTABLETACTIONTODESKTOPCONVERSION
    | ReportingColumnAsyncTOTALADDTOCARTTABLETACTIONTOMOBILECONVERSION
    | ReportingColumnAsyncTOTALADDTOCARTTABLETACTIONTOTABLETCONVERSION
    | ReportingColumnAsyncTOTALLEADDESKTOPACTIONTODESKTOPCONVERSION
    | ReportingColumnAsyncTOTALLEADDESKTOPACTIONTOMOBILECONVERSION
    | ReportingColumnAsyncTOTALLEADDESKTOPACTIONTOTABLETCONVERSION
    | ReportingColumnAsyncTOTALLEADMOBILEACTIONTODESKTOPCONVERSION
    | ReportingColumnAsyncTOTALLEADMOBILEACTIONTOMOBILECONVERSION
    | ReportingColumnAsyncTOTALLEADMOBILEACTIONTOTABLETCONVERSION
    | ReportingColumnAsyncTOTALLEADTABLETACTIONTODESKTOPCONVERSION
    | ReportingColumnAsyncTOTALLEADTABLETACTIONTOMOBILECONVERSION
    | ReportingColumnAsyncTOTALLEADTABLETACTIONTOTABLETCONVERSION
    | ReportingColumnAsyncTOTALSEARCHDESKTOPACTIONTODESKTOPCONVERSION
    | ReportingColumnAsyncTOTALSEARCHDESKTOPACTIONTOMOBILECONVERSION
    | ReportingColumnAsyncTOTALSEARCHDESKTOPACTIONTOTABLETCONVERSION
    | ReportingColumnAsyncTOTALSEARCHMOBILEACTIONTODESKTOPCONVERSION
    | ReportingColumnAsyncTOTALSEARCHMOBILEACTIONTOMOBILECONVERSION
    | ReportingColumnAsyncTOTALSEARCHMOBILEACTIONTOTABLETCONVERSION
    | ReportingColumnAsyncTOTALSEARCHTABLETACTIONTODESKTOPCONVERSION
    | ReportingColumnAsyncTOTALSEARCHTABLETACTIONTOMOBILECONVERSION
    | ReportingColumnAsyncTOTALSEARCHTABLETACTIONTOTABLETCONVERSION
    | ReportingColumnAsyncTOTALWATCHVIDEODESKTOPACTIONTODESKTOPCONVERSION
    | ReportingColumnAsyncTOTALWATCHVIDEODESKTOPACTIONTOMOBILECONVERSION
    | ReportingColumnAsyncTOTALWATCHVIDEODESKTOPACTIONTOTABLETCONVERSION
    | ReportingColumnAsyncTOTALWATCHVIDEOMOBILEACTIONTODESKTOPCONVERSION
    | ReportingColumnAsyncTOTALWATCHVIDEOMOBILEACTIONTOMOBILECONVERSION
    | ReportingColumnAsyncTOTALWATCHVIDEOMOBILEACTIONTOTABLETCONVERSION
    | ReportingColumnAsyncTOTALWATCHVIDEOTABLETACTIONTODESKTOPCONVERSION
    | ReportingColumnAsyncTOTALWATCHVIDEOTABLETACTIONTOMOBILECONVERSION
    | ReportingColumnAsyncTOTALWATCHVIDEOTABLETACTIONTOTABLETCONVERSION
    | ReportingColumnAsyncTOTALVIEWCATEGORYDESKTOPACTIONTODESKTOPCONVERSION
    | ReportingColumnAsyncTOTALVIEWCATEGORYDESKTOPACTIONTOMOBILECONVERSION
    | ReportingColumnAsyncTOTALVIEWCATEGORYDESKTOPACTIONTOTABLETCONVERSION
    | ReportingColumnAsyncTOTALVIEWCATEGORYMOBILEACTIONTODESKTOPCONVERSION
    | ReportingColumnAsyncTOTALVIEWCATEGORYMOBILEACTIONTOMOBILECONVERSION
    | ReportingColumnAsyncTOTALVIEWCATEGORYMOBILEACTIONTOTABLETCONVERSION
    | ReportingColumnAsyncTOTALVIEWCATEGORYTABLETACTIONTODESKTOPCONVERSION
    | ReportingColumnAsyncTOTALVIEWCATEGORYTABLETACTIONTOMOBILECONVERSION
    | ReportingColumnAsyncTOTALVIEWCATEGORYTABLETACTIONTOTABLETCONVERSION
    | ReportingColumnAsyncTOTALAPPINSTALLDESKTOPACTIONTODESKTOPCONVERSION
    | ReportingColumnAsyncTOTALAPPINSTALLDESKTOPACTIONTOMOBILECONVERSION
    | ReportingColumnAsyncTOTALAPPINSTALLDESKTOPACTIONTOTABLETCONVERSION
    | ReportingColumnAsyncTOTALAPPINSTALLMOBILEACTIONTODESKTOPCONVERSION
    | ReportingColumnAsyncTOTALAPPINSTALLMOBILEACTIONTOMOBILECONVERSION
    | ReportingColumnAsyncTOTALAPPINSTALLMOBILEACTIONTOTABLETCONVERSION
    | ReportingColumnAsyncTOTALAPPINSTALLTABLETACTIONTODESKTOPCONVERSION
    | ReportingColumnAsyncTOTALAPPINSTALLTABLETACTIONTOMOBILECONVERSION
    | ReportingColumnAsyncTOTALAPPINSTALLTABLETACTIONTOTABLETCONVERSION
    | ReportingColumnAsyncTOTALUNKNOWNDESKTOPACTIONTODESKTOPCONVERSION
    | ReportingColumnAsyncTOTALUNKNOWNDESKTOPACTIONTOMOBILECONVERSION
    | ReportingColumnAsyncTOTALUNKNOWNDESKTOPACTIONTOTABLETCONVERSION
    | ReportingColumnAsyncTOTALUNKNOWNMOBILEACTIONTODESKTOPCONVERSION
    | ReportingColumnAsyncTOTALUNKNOWNMOBILEACTIONTOMOBILECONVERSION
    | ReportingColumnAsyncTOTALUNKNOWNMOBILEACTIONTOTABLETCONVERSION
    | ReportingColumnAsyncTOTALUNKNOWNTABLETACTIONTODESKTOPCONVERSION
    | ReportingColumnAsyncTOTALUNKNOWNTABLETACTIONTOMOBILECONVERSION
    | ReportingColumnAsyncTOTALUNKNOWNTABLETACTIONTOTABLETCONVERSION
    | ReportingColumnAsyncTOTALCHECKOUT
    | ReportingColumnAsyncTOTALCUSTOM
    | ReportingColumnAsyncTOTALLEAD
    | ReportingColumnAsyncTOTALAPPINSTALL
    | ReportingColumnAsyncTOTALCHECKOUTVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALAPPINSTALLVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALCHECKOUTQUANTITY
    | ReportingColumnAsyncAPPINSTALLCOSTPERACTION
    | ReportingColumnAsyncVIDEO3SECVIEWS1
    | ReportingColumnAsyncVIDEOP100COMPLETE1
    | ReportingColumnAsyncVIDEOP0COMBINED1
    | ReportingColumnAsyncVIDEOP25COMBINED1
    | ReportingColumnAsyncVIDEOP50COMBINED1
    | ReportingColumnAsyncVIDEOP75COMBINED1
    | ReportingColumnAsyncVIDEOP95COMBINED1
    | ReportingColumnAsyncVIDEOMRCVIEWS1
    | ReportingColumnAsyncVIDEO3SECVIEWS2
    | ReportingColumnAsyncVIDEOP100COMPLETE2
    | ReportingColumnAsyncVIDEOP0COMBINED2
    | ReportingColumnAsyncVIDEOP25COMBINED2
    | ReportingColumnAsyncVIDEOP50COMBINED2
    | ReportingColumnAsyncVIDEOP75COMBINED2
    | ReportingColumnAsyncVIDEOP95COMBINED2
    | ReportingColumnAsyncVIDEOMRCVIEWS2
    | ReportingColumnAsyncVIDEOLENGTH
    | ReportingColumnAsyncCPVINMICRODOLLAR
    | ReportingColumnAsyncCPCVINMICRODOLLAR
    | ReportingColumnAsyncCPCVP95INMICRODOLLAR
    | ReportingColumnAsyncTOTALVIDEO3SECVIEWS
    | ReportingColumnAsyncVIDEOAVGWATCHTIMEINSECOND1
    | ReportingColumnAsyncVIDEOAVGWATCHTIMEINSECOND2
    | ReportingColumnAsyncTOTALVIDEOAVGWATCHTIMEINSECOND
    | ReportingColumnAsyncWEBCHECKOUTCOSTPERACTION
    | ReportingColumnAsyncWEBCHECKOUTROAS
    | ReportingColumnAsyncTOTALWEBCHECKOUT
    | ReportingColumnAsyncTOTALWEBCHECKOUTVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALWEBCLICKCHECKOUT
    | ReportingColumnAsyncTOTALWEBCLICKCHECKOUTVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALWEBENGAGEMENTCHECKOUT
    | ReportingColumnAsyncTOTALWEBENGAGEMENTCHECKOUTVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALWEBVIEWCHECKOUT
    | ReportingColumnAsyncTOTALWEBVIEWCHECKOUTVALUEINMICRODOLLAR
    | ReportingColumnAsyncINAPPCHECKOUTCOSTPERACTION
    | ReportingColumnAsyncINAPPCHECKOUTROAS
    | ReportingColumnAsyncTOTALINAPPCHECKOUT
    | ReportingColumnAsyncTOTALINAPPCHECKOUTVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALINAPPCLICKCHECKOUT
    | ReportingColumnAsyncTOTALINAPPCLICKCHECKOUTVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALINAPPENGAGEMENTCHECKOUT
    | ReportingColumnAsyncTOTALINAPPENGAGEMENTCHECKOUTVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALINAPPVIEWCHECKOUT
    | ReportingColumnAsyncTOTALINAPPVIEWCHECKOUTVALUEINMICRODOLLAR
    | ReportingColumnAsyncOFFLINECHECKOUTCOSTPERACTION
    | ReportingColumnAsyncOFFLINECHECKOUTROAS
    | ReportingColumnAsyncTOTALOFFLINECHECKOUT
    | ReportingColumnAsyncTOTALOFFLINECHECKOUTVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALOFFLINECLICKCHECKOUT
    | ReportingColumnAsyncTOTALOFFLINECLICKCHECKOUTVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALOFFLINEENGAGEMENTCHECKOUT
    | ReportingColumnAsyncTOTALOFFLINEENGAGEMENTCHECKOUTVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALOFFLINEVIEWCHECKOUT
    | ReportingColumnAsyncTOTALOFFLINEVIEWCHECKOUTVALUEINMICRODOLLAR
    | ReportingColumnAsyncWEBADDTOCARTCOSTPERACTION
    | ReportingColumnAsyncWEBADDTOCARTROAS
    | ReportingColumnAsyncTOTALWEBADDTOCART
    | ReportingColumnAsyncTOTALWEBADDTOCARTVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALWEBCLICKADDTOCART
    | ReportingColumnAsyncTOTALWEBCLICKADDTOCARTVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALWEBENGAGEMENTADDTOCART
    | ReportingColumnAsyncTOTALWEBENGAGEMENTADDTOCARTVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALWEBVIEWADDTOCART
    | ReportingColumnAsyncTOTALWEBVIEWADDTOCARTVALUEINMICRODOLLAR
    | ReportingColumnAsyncINAPPADDTOCARTCOSTPERACTION
    | ReportingColumnAsyncINAPPADDTOCARTROAS
    | ReportingColumnAsyncTOTALINAPPADDTOCART
    | ReportingColumnAsyncTOTALINAPPADDTOCARTVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALINAPPCLICKADDTOCART
    | ReportingColumnAsyncTOTALINAPPCLICKADDTOCARTVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALINAPPENGAGEMENTADDTOCART
    | ReportingColumnAsyncTOTALINAPPENGAGEMENTADDTOCARTVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALINAPPVIEWADDTOCART
    | ReportingColumnAsyncTOTALINAPPVIEWADDTOCARTVALUEINMICRODOLLAR
    | ReportingColumnAsyncWEBPAGEVISITCOSTPERACTION
    | ReportingColumnAsyncWEBPAGEVISITROAS
    | ReportingColumnAsyncTOTALWEBPAGEVISIT
    | ReportingColumnAsyncTOTALWEBPAGEVISITVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALWEBCLICKPAGEVISIT
    | ReportingColumnAsyncTOTALWEBCLICKPAGEVISITVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALWEBENGAGEMENTPAGEVISIT
    | ReportingColumnAsyncTOTALWEBENGAGEMENTPAGEVISITVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALWEBVIEWPAGEVISIT
    | ReportingColumnAsyncTOTALWEBVIEWPAGEVISITVALUEINMICRODOLLAR
    | ReportingColumnAsyncWEBSIGNUPCOSTPERACTION
    | ReportingColumnAsyncWEBSIGNUPROAS
    | ReportingColumnAsyncTOTALWEBSIGNUP
    | ReportingColumnAsyncTOTALWEBSIGNUPVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALWEBCLICKSIGNUP
    | ReportingColumnAsyncTOTALWEBCLICKSIGNUPVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALWEBENGAGEMENTSIGNUP
    | ReportingColumnAsyncTOTALWEBENGAGEMENTSIGNUPVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALWEBVIEWSIGNUP
    | ReportingColumnAsyncTOTALWEBVIEWSIGNUPVALUEINMICRODOLLAR
    | ReportingColumnAsyncINAPPSIGNUPCOSTPERACTION
    | ReportingColumnAsyncINAPPSIGNUPROAS
    | ReportingColumnAsyncTOTALINAPPSIGNUP
    | ReportingColumnAsyncTOTALINAPPSIGNUPVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALINAPPCLICKSIGNUP
    | ReportingColumnAsyncTOTALINAPPCLICKSIGNUPVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALINAPPENGAGEMENTSIGNUP
    | ReportingColumnAsyncTOTALINAPPENGAGEMENTSIGNUPVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALINAPPVIEWSIGNUP
    | ReportingColumnAsyncTOTALINAPPVIEWSIGNUPVALUEINMICRODOLLAR
    | ReportingColumnAsyncOFFLINESIGNUPCOSTPERACTION
    | ReportingColumnAsyncOFFLINESIGNUPROAS
    | ReportingColumnAsyncTOTALOFFLINESIGNUP
    | ReportingColumnAsyncTOTALOFFLINESIGNUPVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALOFFLINECLICKSIGNUP
    | ReportingColumnAsyncTOTALOFFLINECLICKSIGNUPVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALOFFLINEENGAGEMENTSIGNUP
    | ReportingColumnAsyncTOTALOFFLINEENGAGEMENTSIGNUPVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALOFFLINEVIEWSIGNUP
    | ReportingColumnAsyncTOTALOFFLINEVIEWSIGNUPVALUEINMICRODOLLAR
    | ReportingColumnAsyncWEBWATCHVIDEOCOSTPERACTION
    | ReportingColumnAsyncWEBWATCHVIDEOROAS
    | ReportingColumnAsyncTOTALWEBWATCHVIDEO
    | ReportingColumnAsyncTOTALWEBWATCHVIDEOVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALWEBCLICKWATCHVIDEO
    | ReportingColumnAsyncTOTALWEBCLICKWATCHVIDEOVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALWEBENGAGEMENTWATCHVIDEO
    | ReportingColumnAsyncTOTALWEBENGAGEMENTWATCHVIDEOVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALWEBVIEWWATCHVIDEO
    | ReportingColumnAsyncTOTALWEBVIEWWATCHVIDEOVALUEINMICRODOLLAR
    | ReportingColumnAsyncWEBLEADCOSTPERACTION
    | ReportingColumnAsyncWEBLEADROAS
    | ReportingColumnAsyncTOTALWEBLEAD
    | ReportingColumnAsyncTOTALWEBLEADVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALWEBCLICKLEAD
    | ReportingColumnAsyncTOTALWEBCLICKLEADVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALWEBENGAGEMENTLEAD
    | ReportingColumnAsyncTOTALWEBENGAGEMENTLEADVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALWEBVIEWLEAD
    | ReportingColumnAsyncTOTALWEBVIEWLEADVALUEINMICRODOLLAR
    | ReportingColumnAsyncOFFLINELEADCOSTPERACTION
    | ReportingColumnAsyncOFFLINELEADROAS
    | ReportingColumnAsyncTOTALOFFLINELEAD
    | ReportingColumnAsyncTOTALOFFLINELEADVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALOFFLINECLICKLEAD
    | ReportingColumnAsyncTOTALOFFLINECLICKLEADVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALOFFLINEENGAGEMENTLEAD
    | ReportingColumnAsyncTOTALOFFLINEENGAGEMENTLEADVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALOFFLINEVIEWLEAD
    | ReportingColumnAsyncTOTALOFFLINEVIEWLEADVALUEINMICRODOLLAR
    | ReportingColumnAsyncWEBSEARCHCOSTPERACTION
    | ReportingColumnAsyncWEBSEARCHROAS
    | ReportingColumnAsyncTOTALWEBSEARCH
    | ReportingColumnAsyncTOTALWEBSEARCHVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALWEBCLICKSEARCH
    | ReportingColumnAsyncTOTALWEBCLICKSEARCHVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALWEBENGAGEMENTSEARCH
    | ReportingColumnAsyncTOTALWEBENGAGEMENTSEARCHVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALWEBVIEWSEARCH
    | ReportingColumnAsyncTOTALWEBVIEWSEARCHVALUEINMICRODOLLAR
    | ReportingColumnAsyncINAPPSEARCHCOSTPERACTION
    | ReportingColumnAsyncINAPPSEARCHROAS
    | ReportingColumnAsyncTOTALINAPPSEARCH
    | ReportingColumnAsyncTOTALINAPPSEARCHVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALINAPPCLICKSEARCH
    | ReportingColumnAsyncTOTALINAPPCLICKSEARCHVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALINAPPENGAGEMENTSEARCH
    | ReportingColumnAsyncTOTALINAPPENGAGEMENTSEARCHVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALINAPPVIEWSEARCH
    | ReportingColumnAsyncTOTALINAPPVIEWSEARCHVALUEINMICRODOLLAR
    | ReportingColumnAsyncWEBVIEWCATEGORYCOSTPERACTION
    | ReportingColumnAsyncWEBVIEWCATEGORYROAS
    | ReportingColumnAsyncTOTALWEBVIEWCATEGORY
    | ReportingColumnAsyncTOTALWEBVIEWCATEGORYVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALWEBCLICKVIEWCATEGORY
    | ReportingColumnAsyncTOTALWEBCLICKVIEWCATEGORYVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALWEBENGAGEMENTVIEWCATEGORY
    | ReportingColumnAsyncTOTALWEBENGAGEMENTVIEWCATEGORYVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALWEBVIEWVIEWCATEGORY
    | ReportingColumnAsyncTOTALWEBVIEWVIEWCATEGORYVALUEINMICRODOLLAR
    | ReportingColumnAsyncWEBCUSTOMCOSTPERACTION
    | ReportingColumnAsyncWEBCUSTOMROAS
    | ReportingColumnAsyncTOTALWEBCUSTOM
    | ReportingColumnAsyncTOTALWEBCUSTOMVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALWEBCLICKCUSTOM
    | ReportingColumnAsyncTOTALWEBCLICKCUSTOMVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALWEBENGAGEMENTCUSTOM
    | ReportingColumnAsyncTOTALWEBENGAGEMENTCUSTOMVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALWEBVIEWCUSTOM
    | ReportingColumnAsyncTOTALWEBVIEWCUSTOMVALUEINMICRODOLLAR
    | ReportingColumnAsyncOFFLINECUSTOMCOSTPERACTION
    | ReportingColumnAsyncOFFLINECUSTOMROAS
    | ReportingColumnAsyncTOTALOFFLINECUSTOM
    | ReportingColumnAsyncTOTALOFFLINECUSTOMVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALOFFLINECLICKCUSTOM
    | ReportingColumnAsyncTOTALOFFLINECLICKCUSTOMVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALOFFLINEENGAGEMENTCUSTOM
    | ReportingColumnAsyncTOTALOFFLINEENGAGEMENTCUSTOMVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALOFFLINEVIEWCUSTOM
    | ReportingColumnAsyncTOTALOFFLINEVIEWCUSTOMVALUEINMICRODOLLAR
    | ReportingColumnAsyncWEBUNKNOWNCOSTPERACTION
    | ReportingColumnAsyncWEBUNKNOWNROAS
    | ReportingColumnAsyncTOTALWEBUNKNOWN
    | ReportingColumnAsyncTOTALWEBUNKNOWNVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALWEBCLICKUNKNOWN
    | ReportingColumnAsyncTOTALWEBCLICKUNKNOWNVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALWEBENGAGEMENTUNKNOWN
    | ReportingColumnAsyncTOTALWEBENGAGEMENTUNKNOWNVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALWEBVIEWUNKNOWN
    | ReportingColumnAsyncTOTALWEBVIEWUNKNOWNVALUEINMICRODOLLAR
    | ReportingColumnAsyncINAPPUNKNOWNCOSTPERACTION
    | ReportingColumnAsyncINAPPUNKNOWNROAS
    | ReportingColumnAsyncTOTALINAPPUNKNOWN
    | ReportingColumnAsyncTOTALINAPPUNKNOWNVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALINAPPCLICKUNKNOWN
    | ReportingColumnAsyncTOTALINAPPCLICKUNKNOWNVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALINAPPENGAGEMENTUNKNOWN
    | ReportingColumnAsyncTOTALINAPPENGAGEMENTUNKNOWNVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALINAPPVIEWUNKNOWN
    | ReportingColumnAsyncTOTALINAPPVIEWUNKNOWNVALUEINMICRODOLLAR
    | ReportingColumnAsyncOFFLINEUNKNOWNCOSTPERACTION
    | ReportingColumnAsyncOFFLINEUNKNOWNROAS
    | ReportingColumnAsyncTOTALOFFLINEUNKNOWN
    | ReportingColumnAsyncTOTALOFFLINEUNKNOWNVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALOFFLINECLICKUNKNOWN
    | ReportingColumnAsyncTOTALOFFLINECLICKUNKNOWNVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALOFFLINEENGAGEMENTUNKNOWN
    | ReportingColumnAsyncTOTALOFFLINEENGAGEMENTUNKNOWNVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALOFFLINEVIEWUNKNOWN
    | ReportingColumnAsyncTOTALOFFLINEVIEWUNKNOWNVALUEINMICRODOLLAR
    | ReportingColumnAsyncINAPPAPPINSTALLCOSTPERACTION
    | ReportingColumnAsyncINAPPAPPINSTALLROAS
    | ReportingColumnAsyncTOTALINAPPAPPINSTALL
    | ReportingColumnAsyncTOTALINAPPAPPINSTALLVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALINAPPCLICKAPPINSTALL
    | ReportingColumnAsyncTOTALINAPPCLICKAPPINSTALLVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALINAPPENGAGEMENTAPPINSTALL
    | ReportingColumnAsyncTOTALINAPPENGAGEMENTAPPINSTALLVALUEINMICRODOLLAR
    | ReportingColumnAsyncTOTALINAPPVIEWAPPINSTALL
    | ReportingColumnAsyncTOTALINAPPVIEWAPPINSTALLVALUEINMICRODOLLAR
    | ReportingColumnAsyncIDEAPINPRODUCTTAGVISIT1
    | ReportingColumnAsyncIDEAPINPRODUCTTAGVISIT2
    | ReportingColumnAsyncREPINRATE
    | ReportingColumnAsyncTOTALVIDEOP95COMBINED
    | ReportingColumnAsyncADGROUPENTITYSTATUS
    | ReportingColumnAsyncECPCVP95INDOLLAR
    | ReportingColumnAsyncENGAGEMENTRATE
    | ReportingColumnAsyncPAGEVISITCOSTPERACTION
    | ReportingColumnAsyncTOTALPAGEVISIT
    | ReportingColumnAsyncCHECKOUTROAS
    | ReportingColumnAsyncTOTALSIGNUPVALUEINMICRODOLLAR
    | ReportingColumnAsyncECPCVINDOLLAR
    | ReportingColumnAsyncTOTALVIDEOP75COMBINED
    | ReportingColumnAsyncTOTALVIDEOP50COMBINED
    | ReportingColumnAsyncTOTALSIGNUP
    | ReportingColumnAsyncTOTALVIDEOP0COMBINED
    | ReportingColumnAsyncSPENDINDOLLAR
    | ReportingColumnAsyncEENGAGEMENTRATE
    | ReportingColumnAsyncTOTALVIDEOP25COMBINED
    | ReportingColumnAsyncCPMINDOLLAR
    | ReportingColumnAsyncECPVINDOLLAR
    | ReportingColumnAsyncTOTALCLICKTHROUGH
    | ReportingColumnAsyncECPEINDOLLAR
    | ReportingColumnAsyncTOTALVIDEOP100COMPLETE
    | ReportingColumnAsyncCAMPAIGNENTITYSTATUS
    | ReportingColumnAsyncPAGEVISITROAS
    | ReportingColumnAsyncTOTALREPINRATE
    | ReportingColumnAsyncTOTALVIDEOMRCVIEWS
    | ReportingColumnAsyncTOTALIDEAPINPRODUCTTAGVISIT
    | ReportingColumnAsyncECPCINDOLLAR


reportingColumnAsyncVariants : List ReportingColumnAsync
reportingColumnAsyncVariants =
    [ ReportingColumnAsyncSPENDINMICRODOLLAR
    , ReportingColumnAsyncPAIDIMPRESSION
    , ReportingColumnAsyncCPCINMICRODOLLAR
    , ReportingColumnAsyncECPCINMICRODOLLAR
    , ReportingColumnAsyncCTR
    , ReportingColumnAsyncECTR
    , ReportingColumnAsyncCAMPAIGNNAME
    , ReportingColumnAsyncCAMPAIGNSTATUS
    , ReportingColumnAsyncADSTATUS
    , ReportingColumnAsyncPINPROMOTIONSTATUS
    , ReportingColumnAsyncPINID
    , ReportingColumnAsyncTOTALENGAGEMENT
    , ReportingColumnAsyncENGAGEMENT1
    , ReportingColumnAsyncENGAGEMENT2
    , ReportingColumnAsyncECPMINMICRODOLLAR
    , ReportingColumnAsyncCTR2
    , ReportingColumnAsyncCAMPAIGNID
    , ReportingColumnAsyncADVERTISERID
    , ReportingColumnAsyncADACCOUNTID
    , ReportingColumnAsyncPINPROMOTIONID
    , ReportingColumnAsyncADID
    , ReportingColumnAsyncADGROUPID
    , ReportingColumnAsyncCAMPAIGNMANAGEDSTATUS
    , ReportingColumnAsyncCPMINMICRODOLLAR
    , ReportingColumnAsyncADGROUPNAME
    , ReportingColumnAsyncADGROUPSTATUS
    , ReportingColumnAsyncPRODUCTGROUPID
    , ReportingColumnAsyncCLICKTHROUGH1
    , ReportingColumnAsyncREPIN1
    , ReportingColumnAsyncIMPRESSION1
    , ReportingColumnAsyncIMPRESSION1GROSS
    , ReportingColumnAsyncCLICKTHROUGH1GROSS
    , ReportingColumnAsyncOUTBOUNDCLICK1
    , ReportingColumnAsyncCLICKTHROUGH2
    , ReportingColumnAsyncREPIN2
    , ReportingColumnAsyncIMPRESSION2
    , ReportingColumnAsyncOUTBOUNDCLICK2
    , ReportingColumnAsyncTOTALIMPRESSIONUSER
    , ReportingColumnAsyncTOTALIMPRESSIONFREQUENCY
    , ReportingColumnAsyncTOTALENGAGEMENTPAGEVISIT
    , ReportingColumnAsyncTOTALENGAGEMENTSIGNUP
    , ReportingColumnAsyncTOTALENGAGEMENTCHECKOUT
    , ReportingColumnAsyncTOTALENGAGEMENTCUSTOM
    , ReportingColumnAsyncTOTALENGAGEMENTADDTOCART
    , ReportingColumnAsyncTOTALENGAGEMENTLEAD
    , ReportingColumnAsyncTOTALENGAGEMENTSEARCH
    , ReportingColumnAsyncTOTALENGAGEMENTWATCHVIDEO
    , ReportingColumnAsyncTOTALENGAGEMENTVIEWCATEGORY
    , ReportingColumnAsyncTOTALENGAGEMENTAPPINSTALL
    , ReportingColumnAsyncTOTALENGAGEMENTUNKNOWN
    , ReportingColumnAsyncTOTALCLICKPAGEVISIT
    , ReportingColumnAsyncTOTALCLICKSIGNUP
    , ReportingColumnAsyncTOTALCLICKCHECKOUT
    , ReportingColumnAsyncTOTALCLICKCUSTOM
    , ReportingColumnAsyncTOTALCLICKADDTOCART
    , ReportingColumnAsyncTOTALCLICKLEAD
    , ReportingColumnAsyncTOTALCLICKSEARCH
    , ReportingColumnAsyncTOTALCLICKWATCHVIDEO
    , ReportingColumnAsyncTOTALCLICKVIEWCATEGORY
    , ReportingColumnAsyncTOTALCLICKAPPINSTALL
    , ReportingColumnAsyncTOTALCLICKUNKNOWN
    , ReportingColumnAsyncTOTALVIEWPAGEVISIT
    , ReportingColumnAsyncTOTALVIEWSIGNUP
    , ReportingColumnAsyncTOTALVIEWCHECKOUT
    , ReportingColumnAsyncTOTALVIEWCUSTOM
    , ReportingColumnAsyncTOTALVIEWADDTOCART
    , ReportingColumnAsyncTOTALVIEWLEAD
    , ReportingColumnAsyncTOTALVIEWSEARCH
    , ReportingColumnAsyncTOTALVIEWWATCHVIDEO
    , ReportingColumnAsyncTOTALVIEWVIEWCATEGORY
    , ReportingColumnAsyncTOTALVIEWAPPINSTALL
    , ReportingColumnAsyncTOTALVIEWUNKNOWN
    , ReportingColumnAsyncTOTALCONVERSIONS
    , ReportingColumnAsyncTOTALENGAGEMENTPAGEVISITVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALENGAGEMENTSIGNUPVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALENGAGEMENTCHECKOUTVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALENGAGEMENTCUSTOMVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALENGAGEMENTADDTOCARTVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALENGAGEMENTLEADVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALENGAGEMENTSEARCHVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALENGAGEMENTWATCHVIDEOVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALENGAGEMENTVIEWCATEGORYVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALENGAGEMENTAPPINSTALLVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALENGAGEMENTUNKNOWNVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALCLICKPAGEVISITVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALCLICKSIGNUPVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALCLICKCHECKOUTVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALCLICKCUSTOMVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALCLICKADDTOCARTVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALCLICKLEADVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALCLICKSEARCHVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALCLICKWATCHVIDEOVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALCLICKVIEWCATEGORYVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALCLICKAPPINSTALLVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALCLICKUNKNOWNVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALVIEWPAGEVISITVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALVIEWSIGNUPVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALVIEWCHECKOUTVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALVIEWCUSTOMVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALVIEWADDTOCARTVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALVIEWLEADVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALVIEWSEARCHVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALVIEWWATCHVIDEOVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALVIEWVIEWCATEGORYVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALVIEWAPPINSTALLVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALVIEWUNKNOWNVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALCONVERSIONSVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALENGAGEMENTPAGEVISITQUANTITY
    , ReportingColumnAsyncTOTALENGAGEMENTSIGNUPQUANTITY
    , ReportingColumnAsyncTOTALENGAGEMENTCHECKOUTQUANTITY
    , ReportingColumnAsyncTOTALENGAGEMENTCUSTOMQUANTITY
    , ReportingColumnAsyncTOTALENGAGEMENTADDTOCARTQUANTITY
    , ReportingColumnAsyncTOTALENGAGEMENTLEADQUANTITY
    , ReportingColumnAsyncTOTALENGAGEMENTSEARCHQUANTITY
    , ReportingColumnAsyncTOTALENGAGEMENTWATCHVIDEOQUANTITY
    , ReportingColumnAsyncTOTALENGAGEMENTVIEWCATEGORYQUANTITY
    , ReportingColumnAsyncTOTALENGAGEMENTUNKNOWNQUANTITY
    , ReportingColumnAsyncTOTALCLICKPAGEVISITQUANTITY
    , ReportingColumnAsyncTOTALCLICKSIGNUPQUANTITY
    , ReportingColumnAsyncTOTALCLICKCHECKOUTQUANTITY
    , ReportingColumnAsyncTOTALCLICKCUSTOMQUANTITY
    , ReportingColumnAsyncTOTALCLICKADDTOCARTQUANTITY
    , ReportingColumnAsyncTOTALCLICKLEADQUANTITY
    , ReportingColumnAsyncTOTALCLICKSEARCHQUANTITY
    , ReportingColumnAsyncTOTALCLICKWATCHVIDEOQUANTITY
    , ReportingColumnAsyncTOTALCLICKVIEWCATEGORYQUANTITY
    , ReportingColumnAsyncTOTALCLICKUNKNOWNQUANTITY
    , ReportingColumnAsyncTOTALVIEWPAGEVISITQUANTITY
    , ReportingColumnAsyncTOTALVIEWSIGNUPQUANTITY
    , ReportingColumnAsyncTOTALVIEWCHECKOUTQUANTITY
    , ReportingColumnAsyncTOTALVIEWCUSTOMQUANTITY
    , ReportingColumnAsyncTOTALVIEWADDTOCARTQUANTITY
    , ReportingColumnAsyncTOTALVIEWLEADQUANTITY
    , ReportingColumnAsyncTOTALVIEWSEARCHQUANTITY
    , ReportingColumnAsyncTOTALVIEWWATCHVIDEOQUANTITY
    , ReportingColumnAsyncTOTALVIEWVIEWCATEGORYQUANTITY
    , ReportingColumnAsyncTOTALVIEWUNKNOWNQUANTITY
    , ReportingColumnAsyncTOTALCONVERSIONSQUANTITY
    , ReportingColumnAsyncONSITECHECKOUTS1
    , ReportingColumnAsyncPINPROMOTIONNAME
    , ReportingColumnAsyncADNAME
    , ReportingColumnAsyncCAMPAIGNLIFETIMESPENDCAP
    , ReportingColumnAsyncCAMPAIGNDAILYSPENDCAP
    , ReportingColumnAsyncTOTALPAGEVISITDESKTOPACTIONTODESKTOPCONVERSION
    , ReportingColumnAsyncTOTALPAGEVISITDESKTOPACTIONTOMOBILECONVERSION
    , ReportingColumnAsyncTOTALPAGEVISITDESKTOPACTIONTOTABLETCONVERSION
    , ReportingColumnAsyncTOTALPAGEVISITMOBILEACTIONTODESKTOPCONVERSION
    , ReportingColumnAsyncTOTALPAGEVISITMOBILEACTIONTOMOBILECONVERSION
    , ReportingColumnAsyncTOTALPAGEVISITMOBILEACTIONTOTABLETCONVERSION
    , ReportingColumnAsyncTOTALPAGEVISITTABLETACTIONTODESKTOPCONVERSION
    , ReportingColumnAsyncTOTALPAGEVISITTABLETACTIONTOMOBILECONVERSION
    , ReportingColumnAsyncTOTALPAGEVISITTABLETACTIONTOTABLETCONVERSION
    , ReportingColumnAsyncTOTALSIGNUPDESKTOPACTIONTODESKTOPCONVERSION
    , ReportingColumnAsyncTOTALSIGNUPDESKTOPACTIONTOMOBILECONVERSION
    , ReportingColumnAsyncTOTALSIGNUPDESKTOPACTIONTOTABLETCONVERSION
    , ReportingColumnAsyncTOTALSIGNUPMOBILEACTIONTODESKTOPCONVERSION
    , ReportingColumnAsyncTOTALSIGNUPMOBILEACTIONTOMOBILECONVERSION
    , ReportingColumnAsyncTOTALSIGNUPMOBILEACTIONTOTABLETCONVERSION
    , ReportingColumnAsyncTOTALSIGNUPTABLETACTIONTODESKTOPCONVERSION
    , ReportingColumnAsyncTOTALSIGNUPTABLETACTIONTOMOBILECONVERSION
    , ReportingColumnAsyncTOTALSIGNUPTABLETACTIONTOTABLETCONVERSION
    , ReportingColumnAsyncTOTALCHECKOUTDESKTOPACTIONTODESKTOPCONVERSION
    , ReportingColumnAsyncTOTALCHECKOUTDESKTOPACTIONTOMOBILECONVERSION
    , ReportingColumnAsyncTOTALCHECKOUTDESKTOPACTIONTOTABLETCONVERSION
    , ReportingColumnAsyncTOTALCHECKOUTMOBILEACTIONTODESKTOPCONVERSION
    , ReportingColumnAsyncTOTALCHECKOUTMOBILEACTIONTOMOBILECONVERSION
    , ReportingColumnAsyncTOTALCHECKOUTMOBILEACTIONTOTABLETCONVERSION
    , ReportingColumnAsyncTOTALCHECKOUTTABLETACTIONTODESKTOPCONVERSION
    , ReportingColumnAsyncTOTALCHECKOUTTABLETACTIONTOMOBILECONVERSION
    , ReportingColumnAsyncTOTALCHECKOUTTABLETACTIONTOTABLETCONVERSION
    , ReportingColumnAsyncTOTALCUSTOMDESKTOPACTIONTODESKTOPCONVERSION
    , ReportingColumnAsyncTOTALCUSTOMDESKTOPACTIONTOMOBILECONVERSION
    , ReportingColumnAsyncTOTALCUSTOMDESKTOPACTIONTOTABLETCONVERSION
    , ReportingColumnAsyncTOTALCUSTOMMOBILEACTIONTODESKTOPCONVERSION
    , ReportingColumnAsyncTOTALCUSTOMMOBILEACTIONTOMOBILECONVERSION
    , ReportingColumnAsyncTOTALCUSTOMMOBILEACTIONTOTABLETCONVERSION
    , ReportingColumnAsyncTOTALCUSTOMTABLETACTIONTODESKTOPCONVERSION
    , ReportingColumnAsyncTOTALCUSTOMTABLETACTIONTOMOBILECONVERSION
    , ReportingColumnAsyncTOTALCUSTOMTABLETACTIONTOTABLETCONVERSION
    , ReportingColumnAsyncTOTALADDTOCARTDESKTOPACTIONTODESKTOPCONVERSION
    , ReportingColumnAsyncTOTALADDTOCARTDESKTOPACTIONTOMOBILECONVERSION
    , ReportingColumnAsyncTOTALADDTOCARTDESKTOPACTIONTOTABLETCONVERSION
    , ReportingColumnAsyncTOTALADDTOCARTMOBILEACTIONTODESKTOPCONVERSION
    , ReportingColumnAsyncTOTALADDTOCARTMOBILEACTIONTOMOBILECONVERSION
    , ReportingColumnAsyncTOTALADDTOCARTMOBILEACTIONTOTABLETCONVERSION
    , ReportingColumnAsyncTOTALADDTOCARTTABLETACTIONTODESKTOPCONVERSION
    , ReportingColumnAsyncTOTALADDTOCARTTABLETACTIONTOMOBILECONVERSION
    , ReportingColumnAsyncTOTALADDTOCARTTABLETACTIONTOTABLETCONVERSION
    , ReportingColumnAsyncTOTALLEADDESKTOPACTIONTODESKTOPCONVERSION
    , ReportingColumnAsyncTOTALLEADDESKTOPACTIONTOMOBILECONVERSION
    , ReportingColumnAsyncTOTALLEADDESKTOPACTIONTOTABLETCONVERSION
    , ReportingColumnAsyncTOTALLEADMOBILEACTIONTODESKTOPCONVERSION
    , ReportingColumnAsyncTOTALLEADMOBILEACTIONTOMOBILECONVERSION
    , ReportingColumnAsyncTOTALLEADMOBILEACTIONTOTABLETCONVERSION
    , ReportingColumnAsyncTOTALLEADTABLETACTIONTODESKTOPCONVERSION
    , ReportingColumnAsyncTOTALLEADTABLETACTIONTOMOBILECONVERSION
    , ReportingColumnAsyncTOTALLEADTABLETACTIONTOTABLETCONVERSION
    , ReportingColumnAsyncTOTALSEARCHDESKTOPACTIONTODESKTOPCONVERSION
    , ReportingColumnAsyncTOTALSEARCHDESKTOPACTIONTOMOBILECONVERSION
    , ReportingColumnAsyncTOTALSEARCHDESKTOPACTIONTOTABLETCONVERSION
    , ReportingColumnAsyncTOTALSEARCHMOBILEACTIONTODESKTOPCONVERSION
    , ReportingColumnAsyncTOTALSEARCHMOBILEACTIONTOMOBILECONVERSION
    , ReportingColumnAsyncTOTALSEARCHMOBILEACTIONTOTABLETCONVERSION
    , ReportingColumnAsyncTOTALSEARCHTABLETACTIONTODESKTOPCONVERSION
    , ReportingColumnAsyncTOTALSEARCHTABLETACTIONTOMOBILECONVERSION
    , ReportingColumnAsyncTOTALSEARCHTABLETACTIONTOTABLETCONVERSION
    , ReportingColumnAsyncTOTALWATCHVIDEODESKTOPACTIONTODESKTOPCONVERSION
    , ReportingColumnAsyncTOTALWATCHVIDEODESKTOPACTIONTOMOBILECONVERSION
    , ReportingColumnAsyncTOTALWATCHVIDEODESKTOPACTIONTOTABLETCONVERSION
    , ReportingColumnAsyncTOTALWATCHVIDEOMOBILEACTIONTODESKTOPCONVERSION
    , ReportingColumnAsyncTOTALWATCHVIDEOMOBILEACTIONTOMOBILECONVERSION
    , ReportingColumnAsyncTOTALWATCHVIDEOMOBILEACTIONTOTABLETCONVERSION
    , ReportingColumnAsyncTOTALWATCHVIDEOTABLETACTIONTODESKTOPCONVERSION
    , ReportingColumnAsyncTOTALWATCHVIDEOTABLETACTIONTOMOBILECONVERSION
    , ReportingColumnAsyncTOTALWATCHVIDEOTABLETACTIONTOTABLETCONVERSION
    , ReportingColumnAsyncTOTALVIEWCATEGORYDESKTOPACTIONTODESKTOPCONVERSION
    , ReportingColumnAsyncTOTALVIEWCATEGORYDESKTOPACTIONTOMOBILECONVERSION
    , ReportingColumnAsyncTOTALVIEWCATEGORYDESKTOPACTIONTOTABLETCONVERSION
    , ReportingColumnAsyncTOTALVIEWCATEGORYMOBILEACTIONTODESKTOPCONVERSION
    , ReportingColumnAsyncTOTALVIEWCATEGORYMOBILEACTIONTOMOBILECONVERSION
    , ReportingColumnAsyncTOTALVIEWCATEGORYMOBILEACTIONTOTABLETCONVERSION
    , ReportingColumnAsyncTOTALVIEWCATEGORYTABLETACTIONTODESKTOPCONVERSION
    , ReportingColumnAsyncTOTALVIEWCATEGORYTABLETACTIONTOMOBILECONVERSION
    , ReportingColumnAsyncTOTALVIEWCATEGORYTABLETACTIONTOTABLETCONVERSION
    , ReportingColumnAsyncTOTALAPPINSTALLDESKTOPACTIONTODESKTOPCONVERSION
    , ReportingColumnAsyncTOTALAPPINSTALLDESKTOPACTIONTOMOBILECONVERSION
    , ReportingColumnAsyncTOTALAPPINSTALLDESKTOPACTIONTOTABLETCONVERSION
    , ReportingColumnAsyncTOTALAPPINSTALLMOBILEACTIONTODESKTOPCONVERSION
    , ReportingColumnAsyncTOTALAPPINSTALLMOBILEACTIONTOMOBILECONVERSION
    , ReportingColumnAsyncTOTALAPPINSTALLMOBILEACTIONTOTABLETCONVERSION
    , ReportingColumnAsyncTOTALAPPINSTALLTABLETACTIONTODESKTOPCONVERSION
    , ReportingColumnAsyncTOTALAPPINSTALLTABLETACTIONTOMOBILECONVERSION
    , ReportingColumnAsyncTOTALAPPINSTALLTABLETACTIONTOTABLETCONVERSION
    , ReportingColumnAsyncTOTALUNKNOWNDESKTOPACTIONTODESKTOPCONVERSION
    , ReportingColumnAsyncTOTALUNKNOWNDESKTOPACTIONTOMOBILECONVERSION
    , ReportingColumnAsyncTOTALUNKNOWNDESKTOPACTIONTOTABLETCONVERSION
    , ReportingColumnAsyncTOTALUNKNOWNMOBILEACTIONTODESKTOPCONVERSION
    , ReportingColumnAsyncTOTALUNKNOWNMOBILEACTIONTOMOBILECONVERSION
    , ReportingColumnAsyncTOTALUNKNOWNMOBILEACTIONTOTABLETCONVERSION
    , ReportingColumnAsyncTOTALUNKNOWNTABLETACTIONTODESKTOPCONVERSION
    , ReportingColumnAsyncTOTALUNKNOWNTABLETACTIONTOMOBILECONVERSION
    , ReportingColumnAsyncTOTALUNKNOWNTABLETACTIONTOTABLETCONVERSION
    , ReportingColumnAsyncTOTALCHECKOUT
    , ReportingColumnAsyncTOTALCUSTOM
    , ReportingColumnAsyncTOTALLEAD
    , ReportingColumnAsyncTOTALAPPINSTALL
    , ReportingColumnAsyncTOTALCHECKOUTVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALAPPINSTALLVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALCHECKOUTQUANTITY
    , ReportingColumnAsyncAPPINSTALLCOSTPERACTION
    , ReportingColumnAsyncVIDEO3SECVIEWS1
    , ReportingColumnAsyncVIDEOP100COMPLETE1
    , ReportingColumnAsyncVIDEOP0COMBINED1
    , ReportingColumnAsyncVIDEOP25COMBINED1
    , ReportingColumnAsyncVIDEOP50COMBINED1
    , ReportingColumnAsyncVIDEOP75COMBINED1
    , ReportingColumnAsyncVIDEOP95COMBINED1
    , ReportingColumnAsyncVIDEOMRCVIEWS1
    , ReportingColumnAsyncVIDEO3SECVIEWS2
    , ReportingColumnAsyncVIDEOP100COMPLETE2
    , ReportingColumnAsyncVIDEOP0COMBINED2
    , ReportingColumnAsyncVIDEOP25COMBINED2
    , ReportingColumnAsyncVIDEOP50COMBINED2
    , ReportingColumnAsyncVIDEOP75COMBINED2
    , ReportingColumnAsyncVIDEOP95COMBINED2
    , ReportingColumnAsyncVIDEOMRCVIEWS2
    , ReportingColumnAsyncVIDEOLENGTH
    , ReportingColumnAsyncCPVINMICRODOLLAR
    , ReportingColumnAsyncCPCVINMICRODOLLAR
    , ReportingColumnAsyncCPCVP95INMICRODOLLAR
    , ReportingColumnAsyncTOTALVIDEO3SECVIEWS
    , ReportingColumnAsyncVIDEOAVGWATCHTIMEINSECOND1
    , ReportingColumnAsyncVIDEOAVGWATCHTIMEINSECOND2
    , ReportingColumnAsyncTOTALVIDEOAVGWATCHTIMEINSECOND
    , ReportingColumnAsyncWEBCHECKOUTCOSTPERACTION
    , ReportingColumnAsyncWEBCHECKOUTROAS
    , ReportingColumnAsyncTOTALWEBCHECKOUT
    , ReportingColumnAsyncTOTALWEBCHECKOUTVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALWEBCLICKCHECKOUT
    , ReportingColumnAsyncTOTALWEBCLICKCHECKOUTVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALWEBENGAGEMENTCHECKOUT
    , ReportingColumnAsyncTOTALWEBENGAGEMENTCHECKOUTVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALWEBVIEWCHECKOUT
    , ReportingColumnAsyncTOTALWEBVIEWCHECKOUTVALUEINMICRODOLLAR
    , ReportingColumnAsyncINAPPCHECKOUTCOSTPERACTION
    , ReportingColumnAsyncINAPPCHECKOUTROAS
    , ReportingColumnAsyncTOTALINAPPCHECKOUT
    , ReportingColumnAsyncTOTALINAPPCHECKOUTVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALINAPPCLICKCHECKOUT
    , ReportingColumnAsyncTOTALINAPPCLICKCHECKOUTVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALINAPPENGAGEMENTCHECKOUT
    , ReportingColumnAsyncTOTALINAPPENGAGEMENTCHECKOUTVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALINAPPVIEWCHECKOUT
    , ReportingColumnAsyncTOTALINAPPVIEWCHECKOUTVALUEINMICRODOLLAR
    , ReportingColumnAsyncOFFLINECHECKOUTCOSTPERACTION
    , ReportingColumnAsyncOFFLINECHECKOUTROAS
    , ReportingColumnAsyncTOTALOFFLINECHECKOUT
    , ReportingColumnAsyncTOTALOFFLINECHECKOUTVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALOFFLINECLICKCHECKOUT
    , ReportingColumnAsyncTOTALOFFLINECLICKCHECKOUTVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALOFFLINEENGAGEMENTCHECKOUT
    , ReportingColumnAsyncTOTALOFFLINEENGAGEMENTCHECKOUTVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALOFFLINEVIEWCHECKOUT
    , ReportingColumnAsyncTOTALOFFLINEVIEWCHECKOUTVALUEINMICRODOLLAR
    , ReportingColumnAsyncWEBADDTOCARTCOSTPERACTION
    , ReportingColumnAsyncWEBADDTOCARTROAS
    , ReportingColumnAsyncTOTALWEBADDTOCART
    , ReportingColumnAsyncTOTALWEBADDTOCARTVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALWEBCLICKADDTOCART
    , ReportingColumnAsyncTOTALWEBCLICKADDTOCARTVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALWEBENGAGEMENTADDTOCART
    , ReportingColumnAsyncTOTALWEBENGAGEMENTADDTOCARTVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALWEBVIEWADDTOCART
    , ReportingColumnAsyncTOTALWEBVIEWADDTOCARTVALUEINMICRODOLLAR
    , ReportingColumnAsyncINAPPADDTOCARTCOSTPERACTION
    , ReportingColumnAsyncINAPPADDTOCARTROAS
    , ReportingColumnAsyncTOTALINAPPADDTOCART
    , ReportingColumnAsyncTOTALINAPPADDTOCARTVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALINAPPCLICKADDTOCART
    , ReportingColumnAsyncTOTALINAPPCLICKADDTOCARTVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALINAPPENGAGEMENTADDTOCART
    , ReportingColumnAsyncTOTALINAPPENGAGEMENTADDTOCARTVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALINAPPVIEWADDTOCART
    , ReportingColumnAsyncTOTALINAPPVIEWADDTOCARTVALUEINMICRODOLLAR
    , ReportingColumnAsyncWEBPAGEVISITCOSTPERACTION
    , ReportingColumnAsyncWEBPAGEVISITROAS
    , ReportingColumnAsyncTOTALWEBPAGEVISIT
    , ReportingColumnAsyncTOTALWEBPAGEVISITVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALWEBCLICKPAGEVISIT
    , ReportingColumnAsyncTOTALWEBCLICKPAGEVISITVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALWEBENGAGEMENTPAGEVISIT
    , ReportingColumnAsyncTOTALWEBENGAGEMENTPAGEVISITVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALWEBVIEWPAGEVISIT
    , ReportingColumnAsyncTOTALWEBVIEWPAGEVISITVALUEINMICRODOLLAR
    , ReportingColumnAsyncWEBSIGNUPCOSTPERACTION
    , ReportingColumnAsyncWEBSIGNUPROAS
    , ReportingColumnAsyncTOTALWEBSIGNUP
    , ReportingColumnAsyncTOTALWEBSIGNUPVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALWEBCLICKSIGNUP
    , ReportingColumnAsyncTOTALWEBCLICKSIGNUPVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALWEBENGAGEMENTSIGNUP
    , ReportingColumnAsyncTOTALWEBENGAGEMENTSIGNUPVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALWEBVIEWSIGNUP
    , ReportingColumnAsyncTOTALWEBVIEWSIGNUPVALUEINMICRODOLLAR
    , ReportingColumnAsyncINAPPSIGNUPCOSTPERACTION
    , ReportingColumnAsyncINAPPSIGNUPROAS
    , ReportingColumnAsyncTOTALINAPPSIGNUP
    , ReportingColumnAsyncTOTALINAPPSIGNUPVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALINAPPCLICKSIGNUP
    , ReportingColumnAsyncTOTALINAPPCLICKSIGNUPVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALINAPPENGAGEMENTSIGNUP
    , ReportingColumnAsyncTOTALINAPPENGAGEMENTSIGNUPVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALINAPPVIEWSIGNUP
    , ReportingColumnAsyncTOTALINAPPVIEWSIGNUPVALUEINMICRODOLLAR
    , ReportingColumnAsyncOFFLINESIGNUPCOSTPERACTION
    , ReportingColumnAsyncOFFLINESIGNUPROAS
    , ReportingColumnAsyncTOTALOFFLINESIGNUP
    , ReportingColumnAsyncTOTALOFFLINESIGNUPVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALOFFLINECLICKSIGNUP
    , ReportingColumnAsyncTOTALOFFLINECLICKSIGNUPVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALOFFLINEENGAGEMENTSIGNUP
    , ReportingColumnAsyncTOTALOFFLINEENGAGEMENTSIGNUPVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALOFFLINEVIEWSIGNUP
    , ReportingColumnAsyncTOTALOFFLINEVIEWSIGNUPVALUEINMICRODOLLAR
    , ReportingColumnAsyncWEBWATCHVIDEOCOSTPERACTION
    , ReportingColumnAsyncWEBWATCHVIDEOROAS
    , ReportingColumnAsyncTOTALWEBWATCHVIDEO
    , ReportingColumnAsyncTOTALWEBWATCHVIDEOVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALWEBCLICKWATCHVIDEO
    , ReportingColumnAsyncTOTALWEBCLICKWATCHVIDEOVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALWEBENGAGEMENTWATCHVIDEO
    , ReportingColumnAsyncTOTALWEBENGAGEMENTWATCHVIDEOVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALWEBVIEWWATCHVIDEO
    , ReportingColumnAsyncTOTALWEBVIEWWATCHVIDEOVALUEINMICRODOLLAR
    , ReportingColumnAsyncWEBLEADCOSTPERACTION
    , ReportingColumnAsyncWEBLEADROAS
    , ReportingColumnAsyncTOTALWEBLEAD
    , ReportingColumnAsyncTOTALWEBLEADVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALWEBCLICKLEAD
    , ReportingColumnAsyncTOTALWEBCLICKLEADVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALWEBENGAGEMENTLEAD
    , ReportingColumnAsyncTOTALWEBENGAGEMENTLEADVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALWEBVIEWLEAD
    , ReportingColumnAsyncTOTALWEBVIEWLEADVALUEINMICRODOLLAR
    , ReportingColumnAsyncOFFLINELEADCOSTPERACTION
    , ReportingColumnAsyncOFFLINELEADROAS
    , ReportingColumnAsyncTOTALOFFLINELEAD
    , ReportingColumnAsyncTOTALOFFLINELEADVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALOFFLINECLICKLEAD
    , ReportingColumnAsyncTOTALOFFLINECLICKLEADVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALOFFLINEENGAGEMENTLEAD
    , ReportingColumnAsyncTOTALOFFLINEENGAGEMENTLEADVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALOFFLINEVIEWLEAD
    , ReportingColumnAsyncTOTALOFFLINEVIEWLEADVALUEINMICRODOLLAR
    , ReportingColumnAsyncWEBSEARCHCOSTPERACTION
    , ReportingColumnAsyncWEBSEARCHROAS
    , ReportingColumnAsyncTOTALWEBSEARCH
    , ReportingColumnAsyncTOTALWEBSEARCHVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALWEBCLICKSEARCH
    , ReportingColumnAsyncTOTALWEBCLICKSEARCHVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALWEBENGAGEMENTSEARCH
    , ReportingColumnAsyncTOTALWEBENGAGEMENTSEARCHVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALWEBVIEWSEARCH
    , ReportingColumnAsyncTOTALWEBVIEWSEARCHVALUEINMICRODOLLAR
    , ReportingColumnAsyncINAPPSEARCHCOSTPERACTION
    , ReportingColumnAsyncINAPPSEARCHROAS
    , ReportingColumnAsyncTOTALINAPPSEARCH
    , ReportingColumnAsyncTOTALINAPPSEARCHVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALINAPPCLICKSEARCH
    , ReportingColumnAsyncTOTALINAPPCLICKSEARCHVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALINAPPENGAGEMENTSEARCH
    , ReportingColumnAsyncTOTALINAPPENGAGEMENTSEARCHVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALINAPPVIEWSEARCH
    , ReportingColumnAsyncTOTALINAPPVIEWSEARCHVALUEINMICRODOLLAR
    , ReportingColumnAsyncWEBVIEWCATEGORYCOSTPERACTION
    , ReportingColumnAsyncWEBVIEWCATEGORYROAS
    , ReportingColumnAsyncTOTALWEBVIEWCATEGORY
    , ReportingColumnAsyncTOTALWEBVIEWCATEGORYVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALWEBCLICKVIEWCATEGORY
    , ReportingColumnAsyncTOTALWEBCLICKVIEWCATEGORYVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALWEBENGAGEMENTVIEWCATEGORY
    , ReportingColumnAsyncTOTALWEBENGAGEMENTVIEWCATEGORYVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALWEBVIEWVIEWCATEGORY
    , ReportingColumnAsyncTOTALWEBVIEWVIEWCATEGORYVALUEINMICRODOLLAR
    , ReportingColumnAsyncWEBCUSTOMCOSTPERACTION
    , ReportingColumnAsyncWEBCUSTOMROAS
    , ReportingColumnAsyncTOTALWEBCUSTOM
    , ReportingColumnAsyncTOTALWEBCUSTOMVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALWEBCLICKCUSTOM
    , ReportingColumnAsyncTOTALWEBCLICKCUSTOMVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALWEBENGAGEMENTCUSTOM
    , ReportingColumnAsyncTOTALWEBENGAGEMENTCUSTOMVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALWEBVIEWCUSTOM
    , ReportingColumnAsyncTOTALWEBVIEWCUSTOMVALUEINMICRODOLLAR
    , ReportingColumnAsyncOFFLINECUSTOMCOSTPERACTION
    , ReportingColumnAsyncOFFLINECUSTOMROAS
    , ReportingColumnAsyncTOTALOFFLINECUSTOM
    , ReportingColumnAsyncTOTALOFFLINECUSTOMVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALOFFLINECLICKCUSTOM
    , ReportingColumnAsyncTOTALOFFLINECLICKCUSTOMVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALOFFLINEENGAGEMENTCUSTOM
    , ReportingColumnAsyncTOTALOFFLINEENGAGEMENTCUSTOMVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALOFFLINEVIEWCUSTOM
    , ReportingColumnAsyncTOTALOFFLINEVIEWCUSTOMVALUEINMICRODOLLAR
    , ReportingColumnAsyncWEBUNKNOWNCOSTPERACTION
    , ReportingColumnAsyncWEBUNKNOWNROAS
    , ReportingColumnAsyncTOTALWEBUNKNOWN
    , ReportingColumnAsyncTOTALWEBUNKNOWNVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALWEBCLICKUNKNOWN
    , ReportingColumnAsyncTOTALWEBCLICKUNKNOWNVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALWEBENGAGEMENTUNKNOWN
    , ReportingColumnAsyncTOTALWEBENGAGEMENTUNKNOWNVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALWEBVIEWUNKNOWN
    , ReportingColumnAsyncTOTALWEBVIEWUNKNOWNVALUEINMICRODOLLAR
    , ReportingColumnAsyncINAPPUNKNOWNCOSTPERACTION
    , ReportingColumnAsyncINAPPUNKNOWNROAS
    , ReportingColumnAsyncTOTALINAPPUNKNOWN
    , ReportingColumnAsyncTOTALINAPPUNKNOWNVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALINAPPCLICKUNKNOWN
    , ReportingColumnAsyncTOTALINAPPCLICKUNKNOWNVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALINAPPENGAGEMENTUNKNOWN
    , ReportingColumnAsyncTOTALINAPPENGAGEMENTUNKNOWNVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALINAPPVIEWUNKNOWN
    , ReportingColumnAsyncTOTALINAPPVIEWUNKNOWNVALUEINMICRODOLLAR
    , ReportingColumnAsyncOFFLINEUNKNOWNCOSTPERACTION
    , ReportingColumnAsyncOFFLINEUNKNOWNROAS
    , ReportingColumnAsyncTOTALOFFLINEUNKNOWN
    , ReportingColumnAsyncTOTALOFFLINEUNKNOWNVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALOFFLINECLICKUNKNOWN
    , ReportingColumnAsyncTOTALOFFLINECLICKUNKNOWNVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALOFFLINEENGAGEMENTUNKNOWN
    , ReportingColumnAsyncTOTALOFFLINEENGAGEMENTUNKNOWNVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALOFFLINEVIEWUNKNOWN
    , ReportingColumnAsyncTOTALOFFLINEVIEWUNKNOWNVALUEINMICRODOLLAR
    , ReportingColumnAsyncINAPPAPPINSTALLCOSTPERACTION
    , ReportingColumnAsyncINAPPAPPINSTALLROAS
    , ReportingColumnAsyncTOTALINAPPAPPINSTALL
    , ReportingColumnAsyncTOTALINAPPAPPINSTALLVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALINAPPCLICKAPPINSTALL
    , ReportingColumnAsyncTOTALINAPPCLICKAPPINSTALLVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALINAPPENGAGEMENTAPPINSTALL
    , ReportingColumnAsyncTOTALINAPPENGAGEMENTAPPINSTALLVALUEINMICRODOLLAR
    , ReportingColumnAsyncTOTALINAPPVIEWAPPINSTALL
    , ReportingColumnAsyncTOTALINAPPVIEWAPPINSTALLVALUEINMICRODOLLAR
    , ReportingColumnAsyncIDEAPINPRODUCTTAGVISIT1
    , ReportingColumnAsyncIDEAPINPRODUCTTAGVISIT2
    , ReportingColumnAsyncREPINRATE
    , ReportingColumnAsyncTOTALVIDEOP95COMBINED
    , ReportingColumnAsyncADGROUPENTITYSTATUS
    , ReportingColumnAsyncECPCVP95INDOLLAR
    , ReportingColumnAsyncENGAGEMENTRATE
    , ReportingColumnAsyncPAGEVISITCOSTPERACTION
    , ReportingColumnAsyncTOTALPAGEVISIT
    , ReportingColumnAsyncCHECKOUTROAS
    , ReportingColumnAsyncTOTALSIGNUPVALUEINMICRODOLLAR
    , ReportingColumnAsyncECPCVINDOLLAR
    , ReportingColumnAsyncTOTALVIDEOP75COMBINED
    , ReportingColumnAsyncTOTALVIDEOP50COMBINED
    , ReportingColumnAsyncTOTALSIGNUP
    , ReportingColumnAsyncTOTALVIDEOP0COMBINED
    , ReportingColumnAsyncSPENDINDOLLAR
    , ReportingColumnAsyncEENGAGEMENTRATE
    , ReportingColumnAsyncTOTALVIDEOP25COMBINED
    , ReportingColumnAsyncCPMINDOLLAR
    , ReportingColumnAsyncECPVINDOLLAR
    , ReportingColumnAsyncTOTALCLICKTHROUGH
    , ReportingColumnAsyncECPEINDOLLAR
    , ReportingColumnAsyncTOTALVIDEOP100COMPLETE
    , ReportingColumnAsyncCAMPAIGNENTITYSTATUS
    , ReportingColumnAsyncPAGEVISITROAS
    , ReportingColumnAsyncTOTALREPINRATE
    , ReportingColumnAsyncTOTALVIDEOMRCVIEWS
    , ReportingColumnAsyncTOTALIDEAPINPRODUCTTAGVISIT
    , ReportingColumnAsyncECPCINDOLLAR
    ]


type alias TargetingTypeFilter =
    { targetingTypes : Maybe (List (AdsAnalyticsTargetingType))
    }


{-| Third-party tracking URLs. Up to three tracking URLs are supported for each event type. Tracking URLs set at the ad group or ad level can override those set at the campaign level. For more information, see <a href=\"https://help.pinterest.com/en/business/article/third-party-and-dynamic-tracking\" target=\"_blank\">Third-party and dynamic tracking</a>.
-}
type alias TrackingUrls =
    { impression : Maybe (List (String))
    , click : Maybe (List (String))
    , engagement : Maybe (List (String))
    , buyableButton : Maybe (List (String))
    , audienceVerification : Maybe (List (String))
    }


-- ENCODER


encodeAccount : Account -> Json.Encode.Value
encodeAccount =
    encodeObject << encodeAccountPairs


encodeAccountWithTag : ( String, String ) -> Account -> Json.Encode.Value
encodeAccountWithTag (tagField, tag) model =
    encodeObject (encodeAccountPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAccountPairs : Account -> List EncodedField
encodeAccountPairs model =
    let
        pairs =
            [ maybeEncode "account_type" encodeAccountAccountType model.accountType
            , maybeEncode "profile_image" Json.Encode.string model.profileImage
            , maybeEncode "website_url" Json.Encode.string model.websiteUrl
            , maybeEncode "username" Json.Encode.string model.username
            ]
    in
    pairs

stringFromAccountAccountType : AccountAccountType -> String
stringFromAccountAccountType model =
    case model of
        AccountAccountTypePINNER ->
            "PINNER"

        AccountAccountTypeBUSINESS ->
            "BUSINESS"


encodeAccountAccountType : AccountAccountType -> Json.Encode.Value
encodeAccountAccountType =
    Json.Encode.string << stringFromAccountAccountType



stringFromActionType : ActionType -> String
stringFromActionType model =
    case model of
        ActionTypeCLICKTHROUGH ->
            "CLICKTHROUGH"

        ActionTypeIMPRESSION ->
            "IMPRESSION"

        ActionTypeVIDEOV50MRC ->
            "VIDEO_V_50_MRC"

        ActionTypeBILLABLEENGAGEMENT ->
            "BILLABLE_ENGAGEMENT"


encodeActionType : ActionType -> Json.Encode.Value
encodeActionType =
    Json.Encode.string << stringFromActionType


encodeAdAccount : AdAccount -> Json.Encode.Value
encodeAdAccount =
    encodeObject << encodeAdAccountPairs


encodeAdAccountWithTag : ( String, String ) -> AdAccount -> Json.Encode.Value
encodeAdAccountWithTag (tagField, tag) model =
    encodeObject (encodeAdAccountPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdAccountPairs : AdAccount -> List EncodedField
encodeAdAccountPairs model =
    let
        pairs =
            [ maybeEncode "id" Json.Encode.string model.id
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "owner" encodeAdAccountOwner model.owner
            , maybeEncode "country" encodeCountry model.country
            , maybeEncode "currency" encodeCurrency model.currency
            ]
    in
    pairs


encodeAdAccountOwner : AdAccountOwner -> Json.Encode.Value
encodeAdAccountOwner =
    encodeObject << encodeAdAccountOwnerPairs


encodeAdAccountOwnerWithTag : ( String, String ) -> AdAccountOwner -> Json.Encode.Value
encodeAdAccountOwnerWithTag (tagField, tag) model =
    encodeObject (encodeAdAccountOwnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdAccountOwnerPairs : AdAccountOwner -> List EncodedField
encodeAdAccountOwnerPairs model =
    let
        pairs =
            [ maybeEncode "username" Json.Encode.string model.username
            ]
    in
    pairs


encodeAdGroupResponse : AdGroupResponse -> Json.Encode.Value
encodeAdGroupResponse =
    encodeObject << encodeAdGroupResponsePairs


encodeAdGroupResponseWithTag : ( String, String ) -> AdGroupResponse -> Json.Encode.Value
encodeAdGroupResponseWithTag (tagField, tag) model =
    encodeObject (encodeAdGroupResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdGroupResponsePairs : AdGroupResponse -> List EncodedField
encodeAdGroupResponsePairs model =
    let
        pairs =
            [ maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "status" Json.Encode.string model.status
            , maybeEncodeNullable "budget_in_micro_currency" Json.Encode.int model.budgetInMicroCurrency
            , maybeEncodeNullable "bid_in_micro_currency" Json.Encode.int model.bidInMicroCurrency
            , maybeEncode "budget_type" encodeAdGroupResponseBudgetType model.budgetType
            , maybeEncodeNullable "start_time" Json.Encode.int model.startTime
            , maybeEncodeNullable "end_time" Json.Encode.int model.endTime
            , maybeEncode "targeting_spec" (Json.Encode.dict identity (Json.Encode.list Json.Encode.string)) model.targetingSpec
            , maybeEncode "lifetime_frequency_cap" Json.Encode.int model.lifetimeFrequencyCap
            , maybeEncodeNullable "tracking_urls" encodeTrackingUrls model.trackingUrls
            , maybeEncodeNullable "auto_targeting_enabled" Json.Encode.bool model.autoTargetingEnabled
            , maybeEncode "placement_group" Json.Encode.string model.placementGroup
            , maybeEncode "pacing_delivery_type" Json.Encode.string model.pacingDeliveryType
            , maybeEncodeNullable "conversion_learning_mode_type" encodeAdGroupResponseConversionLearningModeType model.conversionLearningModeType
            , maybeEncode "summary_status" Json.Encode.string model.summaryStatus
            , maybeEncode "feed_profile_id" Json.Encode.string model.feedProfileId
            , maybeEncode "campaign_id" Json.Encode.string model.campaignId
            , maybeEncode "billable_event" encodeActionType model.billableEvent
            , maybeEncode "id" Json.Encode.string model.id
            , maybeEncode "type" Json.Encode.string model.type_
            , maybeEncode "ad_account_id" Json.Encode.string model.adAccountId
            , maybeEncode "created_time" Json.Encode.int model.createdTime
            , maybeEncode "updated_time" Json.Encode.int model.updatedTime
            ]
    in
    pairs

stringFromAdGroupResponseBudgetType : AdGroupResponseBudgetType -> String
stringFromAdGroupResponseBudgetType model =
    case model of
        AdGroupResponseBudgetTypeDAILY ->
            "DAILY"

        AdGroupResponseBudgetTypeLIFETIME ->
            "LIFETIME"

        AdGroupResponseBudgetTypeCBOADGROUP ->
            "CBO_ADGROUP"


encodeAdGroupResponseBudgetType : AdGroupResponseBudgetType -> Json.Encode.Value
encodeAdGroupResponseBudgetType =
    Json.Encode.string << stringFromAdGroupResponseBudgetType


stringFromAdGroupResponseConversionLearningModeType : AdGroupResponseConversionLearningModeType -> String
stringFromAdGroupResponseConversionLearningModeType model =
    case model of
        AdGroupResponseConversionLearningModeTypeNOTACTIVE ->
            "NOT_ACTIVE"

        AdGroupResponseConversionLearningModeTypeACTIVE ->
            "ACTIVE"

        AdGroupResponseConversionLearningModeTypeNull ->
            "null"


encodeAdGroupResponseConversionLearningModeType : AdGroupResponseConversionLearningModeType -> Json.Encode.Value
encodeAdGroupResponseConversionLearningModeType =
    Json.Encode.string << stringFromAdGroupResponseConversionLearningModeType



encodeAdGroupResponseAllOf1 : AdGroupResponseAllOf1 -> Json.Encode.Value
encodeAdGroupResponseAllOf1 =
    encodeObject << encodeAdGroupResponseAllOf1Pairs


encodeAdGroupResponseAllOf1WithTag : ( String, String ) -> AdGroupResponseAllOf1 -> Json.Encode.Value
encodeAdGroupResponseAllOf1WithTag (tagField, tag) model =
    encodeObject (encodeAdGroupResponseAllOf1Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdGroupResponseAllOf1Pairs : AdGroupResponseAllOf1 -> List EncodedField
encodeAdGroupResponseAllOf1Pairs model =
    let
        pairs =
            [ maybeEncode "campaign_id" Json.Encode.string model.campaignId
            , maybeEncode "billable_event" encodeActionType model.billableEvent
            , maybeEncode "id" Json.Encode.string model.id
            , maybeEncode "type" Json.Encode.string model.type_
            , maybeEncode "ad_account_id" Json.Encode.string model.adAccountId
            , maybeEncode "created_time" Json.Encode.int model.createdTime
            , maybeEncode "updated_time" Json.Encode.int model.updatedTime
            ]
    in
    pairs


stringFromAdGroupSummaryStatus : AdGroupSummaryStatus -> String
stringFromAdGroupSummaryStatus model =
    case model of
        AdGroupSummaryStatusRUNNING ->
            "RUNNING"

        AdGroupSummaryStatusPAUSED ->
            "PAUSED"

        AdGroupSummaryStatusNOTSTARTED ->
            "NOT_STARTED"

        AdGroupSummaryStatusCOMPLETED ->
            "COMPLETED"

        AdGroupSummaryStatusADVERTISERDISABLED ->
            "ADVERTISER_DISABLED"

        AdGroupSummaryStatusARCHIVED ->
            "ARCHIVED"


encodeAdGroupSummaryStatus : AdGroupSummaryStatus -> Json.Encode.Value
encodeAdGroupSummaryStatus =
    Json.Encode.string << stringFromAdGroupSummaryStatus


encodeAdResponse : AdResponse -> Json.Encode.Value
encodeAdResponse =
    encodeObject << encodeAdResponsePairs


encodeAdResponseWithTag : ( String, String ) -> AdResponse -> Json.Encode.Value
encodeAdResponseWithTag (tagField, tag) model =
    encodeObject (encodeAdResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdResponsePairs : AdResponse -> List EncodedField
encodeAdResponsePairs model =
    let
        pairs =
            [ maybeEncode "ad_group_id" Json.Encode.string model.adGroupId
            , maybeEncodeNullable "android_deep_link" Json.Encode.string model.androidDeepLink
            , maybeEncodeNullable "carousel_android_deep_links" (Json.Encode.list Json.Encode.string) model.carouselAndroidDeepLinks
            , maybeEncodeNullable "carousel_destination_urls" (Json.Encode.list Json.Encode.string) model.carouselDestinationUrls
            , maybeEncodeNullable "carousel_ios_deep_links" (Json.Encode.list Json.Encode.string) model.carouselIosDeepLinks
            , maybeEncodeNullable "click_tracking_url" Json.Encode.string model.clickTrackingUrl
            , maybeEncode "creative_type" encodeAdResponseCreativeType model.creativeType
            , maybeEncodeNullable "destination_url" Json.Encode.string model.destinationUrl
            , maybeEncodeNullable "ios_deep_link" Json.Encode.string model.iosDeepLink
            , maybeEncode "is_pin_deleted" Json.Encode.bool model.isPinDeleted
            , maybeEncode "is_removable" Json.Encode.bool model.isRemovable
            , maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncode "pin_id" Json.Encode.string model.pinId
            , maybeEncode "status" encodeEntityStatus model.status
            , maybeEncodeNullable "tracking_urls" encodeTrackingUrls model.trackingUrls
            , maybeEncodeNullable "view_tracking_url" Json.Encode.string model.viewTrackingUrl
            , maybeEncode "ad_account_id" Json.Encode.string model.adAccountId
            , maybeEncode "campaign_id" Json.Encode.string model.campaignId
            , maybeEncodeNullable "collection_items_destination_url_template" Json.Encode.string model.collectionItemsDestinationUrlTemplate
            , maybeEncode "created_time" Json.Encode.int model.createdTime
            , maybeEncode "id" Json.Encode.string model.id
            , maybeEncode "rejected_reasons" (Json.Encode.list encodeAdResponseRejectedReasons) model.rejectedReasons
            , maybeEncode "rejection_labels" (Json.Encode.list Json.Encode.string) model.rejectionLabels
            , maybeEncode "review_status" encodeAdResponseReviewStatus model.reviewStatus
            , maybeEncode "type" Json.Encode.string model.type_
            , maybeEncode "updated_time" Json.Encode.int model.updatedTime
            , maybeEncode "summary_status" Json.Encode.string model.summaryStatus
            ]
    in
    pairs

stringFromAdResponseCreativeType : AdResponseCreativeType -> String
stringFromAdResponseCreativeType model =
    case model of
        AdResponseCreativeTypeREGULAR ->
            "REGULAR"

        AdResponseCreativeTypeVIDEO ->
            "VIDEO"

        AdResponseCreativeTypeSHOPPING ->
            "SHOPPING"

        AdResponseCreativeTypeCAROUSEL ->
            "CAROUSEL"

        AdResponseCreativeTypeMAXVIDEO ->
            "MAX_VIDEO"

        AdResponseCreativeTypeSHOPTHEPIN ->
            "SHOP_THE_PIN"

        AdResponseCreativeTypeSTORY ->
            "STORY"


encodeAdResponseCreativeType : AdResponseCreativeType -> Json.Encode.Value
encodeAdResponseCreativeType =
    Json.Encode.string << stringFromAdResponseCreativeType


stringFromAdResponseRejectedReasons : AdResponseRejectedReasons -> String
stringFromAdResponseRejectedReasons model =
    case model of
        AdResponseRejectedReasonsHASHTAGS ->
            "HASHTAGS"

        AdResponseRejectedReasonsPROMOTIONSANDPRICES ->
            "PROMOTIONS_AND_PRICES"

        AdResponseRejectedReasonsTARGETING ->
            "TARGETING"

        AdResponseRejectedReasonsLANDINGPAGE ->
            "LANDING_PAGE"

        AdResponseRejectedReasonsCAPSANDSYMBOLS ->
            "CAPS_AND_SYMBOLS"

        AdResponseRejectedReasonsSHOCKING ->
            "SHOCKING"

        AdResponseRejectedReasonsWEIGHTLOSS ->
            "WEIGHT_LOSS"

        AdResponseRejectedReasonsPROHIBITEDPRODUCT ->
            "PROHIBITED_PRODUCT"

        AdResponseRejectedReasonsAUTHENTICITY ->
            "AUTHENTICITY"

        AdResponseRejectedReasonsNUDITY ->
            "NUDITY"

        AdResponseRejectedReasonsCONFUSINGDESIGN ->
            "CONFUSING_DESIGN"

        AdResponseRejectedReasonsURGENCY ->
            "URGENCY"

        AdResponseRejectedReasonsRATINGS ->
            "RATINGS"

        AdResponseRejectedReasonsAPP ->
            "APP"

        AdResponseRejectedReasonsALCOHOL ->
            "ALCOHOL"

        AdResponseRejectedReasonsCONTESTS ->
            "CONTESTS"

        AdResponseRejectedReasonsPOLITICAL ->
            "POLITICAL"

        AdResponseRejectedReasonsOTHER ->
            "OTHER"

        AdResponseRejectedReasonsIMAGE ->
            "IMAGE"

        AdResponseRejectedReasonsNAR ->
            "NAR"

        AdResponseRejectedReasonsINCONSISTENT ->
            "INCONSISTENT"

        AdResponseRejectedReasonsCLICKBAIT ->
            "CLICKBAIT"

        AdResponseRejectedReasonsNODESCRIPTION ->
            "NO_DESCRIPTION"

        AdResponseRejectedReasonsLOWQUALITY ->
            "LOW_QUALITY"

        AdResponseRejectedReasonsEXAGGERATEDCLAIMS ->
            "EXAGGERATED_CLAIMS"

        AdResponseRejectedReasonsPINTERESTBRAND ->
            "PINTEREST_BRAND"

        AdResponseRejectedReasonsALCOHOLNOSALE ->
            "ALCOHOL_NO_SALE"

        AdResponseRejectedReasonsLANDINGPAGESPEED ->
            "LANDING_PAGE_SPEED"

        AdResponseRejectedReasonsLANDINGPAGEHARDWALL ->
            "LANDING_PAGE_HARDWALL"

        AdResponseRejectedReasonsLANDINGPAGEBROKEN ->
            "LANDING_PAGE_BROKEN"

        AdResponseRejectedReasonsLANDINGPAGEQUALITY ->
            "LANDING_PAGE_QUALITY"

        AdResponseRejectedReasonsOUTOFSTOCK ->
            "OUT_OF_STOCK"

        AdResponseRejectedReasonsIMAGELOWQUALITY ->
            "IMAGE_LOW_QUALITY"

        AdResponseRejectedReasonsIMAGEBUSY ->
            "IMAGE_BUSY"

        AdResponseRejectedReasonsIMAGEPOORLYEDITED ->
            "IMAGE_POORLY_EDITED"

        AdResponseRejectedReasonsIMAGEBEFOREAFTER ->
            "IMAGE_BEFORE_AFTER"

        AdResponseRejectedReasonsUGC ->
            "UGC"

        AdResponseRejectedReasonsFAKEBUTTONS ->
            "FAKE_BUTTONS"

        AdResponseRejectedReasonsWEAPONS ->
            "WEAPONS"

        AdResponseRejectedReasonsSENSITIVE ->
            "SENSITIVE"

        AdResponseRejectedReasonsUNACCEPTABLEBUSINESS ->
            "UNACCEPTABLE_BUSINESS"

        AdResponseRejectedReasonsSUSPICIOUSCLAIMS ->
            "SUSPICIOUS_CLAIMS"

        AdResponseRejectedReasonsPHARMA ->
            "PHARMA"

        AdResponseRejectedReasonsSUSPICIOUSSUPPLEMENTS ->
            "SUSPICIOUS_SUPPLEMENTS"

        AdResponseRejectedReasonsILLEGALRECREATIONALDRUG ->
            "ILLEGAL_RECREATIONAL_DRUG"

        AdResponseRejectedReasonsLOWQUALITYLANDINGPAGE ->
            "LOW_QUALITY_LANDING_PAGE"

        AdResponseRejectedReasonsRESTRICTEDHEALTHCARE ->
            "RESTRICTED_HEALTHCARE"

        AdResponseRejectedReasonsINCONSISTENTLANGFR ->
            "INCONSISTENT_LANG_FR"


encodeAdResponseRejectedReasons : AdResponseRejectedReasons -> Json.Encode.Value
encodeAdResponseRejectedReasons =
    Json.Encode.int << intFromAdResponseRejectedReasons


stringFromAdResponseReviewStatus : AdResponseReviewStatus -> String
stringFromAdResponseReviewStatus model =
    case model of
        AdResponseReviewStatusOTHER ->
            "OTHER"

        AdResponseReviewStatusPENDING ->
            "PENDING"

        AdResponseReviewStatusREJECTED ->
            "REJECTED"

        AdResponseReviewStatusAPPROVED ->
            "APPROVED"


encodeAdResponseReviewStatus : AdResponseReviewStatus -> Json.Encode.Value
encodeAdResponseReviewStatus =
    Json.Encode.string << stringFromAdResponseReviewStatus



encodeAdResponseAllOf1 : AdResponseAllOf1 -> Json.Encode.Value
encodeAdResponseAllOf1 =
    encodeObject << encodeAdResponseAllOf1Pairs


encodeAdResponseAllOf1WithTag : ( String, String ) -> AdResponseAllOf1 -> Json.Encode.Value
encodeAdResponseAllOf1WithTag (tagField, tag) model =
    encodeObject (encodeAdResponseAllOf1Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdResponseAllOf1Pairs : AdResponseAllOf1 -> List EncodedField
encodeAdResponseAllOf1Pairs model =
    let
        pairs =
            [ maybeEncode "ad_account_id" Json.Encode.string model.adAccountId
            , maybeEncode "campaign_id" Json.Encode.string model.campaignId
            , maybeEncodeNullable "collection_items_destination_url_template" Json.Encode.string model.collectionItemsDestinationUrlTemplate
            , maybeEncode "created_time" Json.Encode.int model.createdTime
            , maybeEncode "id" Json.Encode.string model.id
            , maybeEncode "rejected_reasons" (Json.Encode.list encodeAdResponseAllOf1RejectedReasons) model.rejectedReasons
            , maybeEncode "rejection_labels" (Json.Encode.list Json.Encode.string) model.rejectionLabels
            , maybeEncode "review_status" encodeAdResponseAllOf1ReviewStatus model.reviewStatus
            , maybeEncode "type" Json.Encode.string model.type_
            , maybeEncode "updated_time" Json.Encode.int model.updatedTime
            , maybeEncode "summary_status" Json.Encode.string model.summaryStatus
            ]
    in
    pairs

stringFromAdResponseAllOf1RejectedReasons : AdResponseAllOf1RejectedReasons -> String
stringFromAdResponseAllOf1RejectedReasons model =
    case model of
        AdResponseAllOf1RejectedReasonsHASHTAGS ->
            "HASHTAGS"

        AdResponseAllOf1RejectedReasonsPROMOTIONSANDPRICES ->
            "PROMOTIONS_AND_PRICES"

        AdResponseAllOf1RejectedReasonsTARGETING ->
            "TARGETING"

        AdResponseAllOf1RejectedReasonsLANDINGPAGE ->
            "LANDING_PAGE"

        AdResponseAllOf1RejectedReasonsCAPSANDSYMBOLS ->
            "CAPS_AND_SYMBOLS"

        AdResponseAllOf1RejectedReasonsSHOCKING ->
            "SHOCKING"

        AdResponseAllOf1RejectedReasonsWEIGHTLOSS ->
            "WEIGHT_LOSS"

        AdResponseAllOf1RejectedReasonsPROHIBITEDPRODUCT ->
            "PROHIBITED_PRODUCT"

        AdResponseAllOf1RejectedReasonsAUTHENTICITY ->
            "AUTHENTICITY"

        AdResponseAllOf1RejectedReasonsNUDITY ->
            "NUDITY"

        AdResponseAllOf1RejectedReasonsCONFUSINGDESIGN ->
            "CONFUSING_DESIGN"

        AdResponseAllOf1RejectedReasonsURGENCY ->
            "URGENCY"

        AdResponseAllOf1RejectedReasonsRATINGS ->
            "RATINGS"

        AdResponseAllOf1RejectedReasonsAPP ->
            "APP"

        AdResponseAllOf1RejectedReasonsALCOHOL ->
            "ALCOHOL"

        AdResponseAllOf1RejectedReasonsCONTESTS ->
            "CONTESTS"

        AdResponseAllOf1RejectedReasonsPOLITICAL ->
            "POLITICAL"

        AdResponseAllOf1RejectedReasonsOTHER ->
            "OTHER"

        AdResponseAllOf1RejectedReasonsIMAGE ->
            "IMAGE"

        AdResponseAllOf1RejectedReasonsNAR ->
            "NAR"

        AdResponseAllOf1RejectedReasonsINCONSISTENT ->
            "INCONSISTENT"

        AdResponseAllOf1RejectedReasonsCLICKBAIT ->
            "CLICKBAIT"

        AdResponseAllOf1RejectedReasonsNODESCRIPTION ->
            "NO_DESCRIPTION"

        AdResponseAllOf1RejectedReasonsLOWQUALITY ->
            "LOW_QUALITY"

        AdResponseAllOf1RejectedReasonsEXAGGERATEDCLAIMS ->
            "EXAGGERATED_CLAIMS"

        AdResponseAllOf1RejectedReasonsPINTERESTBRAND ->
            "PINTEREST_BRAND"

        AdResponseAllOf1RejectedReasonsALCOHOLNOSALE ->
            "ALCOHOL_NO_SALE"

        AdResponseAllOf1RejectedReasonsLANDINGPAGESPEED ->
            "LANDING_PAGE_SPEED"

        AdResponseAllOf1RejectedReasonsLANDINGPAGEHARDWALL ->
            "LANDING_PAGE_HARDWALL"

        AdResponseAllOf1RejectedReasonsLANDINGPAGEBROKEN ->
            "LANDING_PAGE_BROKEN"

        AdResponseAllOf1RejectedReasonsLANDINGPAGEQUALITY ->
            "LANDING_PAGE_QUALITY"

        AdResponseAllOf1RejectedReasonsOUTOFSTOCK ->
            "OUT_OF_STOCK"

        AdResponseAllOf1RejectedReasonsIMAGELOWQUALITY ->
            "IMAGE_LOW_QUALITY"

        AdResponseAllOf1RejectedReasonsIMAGEBUSY ->
            "IMAGE_BUSY"

        AdResponseAllOf1RejectedReasonsIMAGEPOORLYEDITED ->
            "IMAGE_POORLY_EDITED"

        AdResponseAllOf1RejectedReasonsIMAGEBEFOREAFTER ->
            "IMAGE_BEFORE_AFTER"

        AdResponseAllOf1RejectedReasonsUGC ->
            "UGC"

        AdResponseAllOf1RejectedReasonsFAKEBUTTONS ->
            "FAKE_BUTTONS"

        AdResponseAllOf1RejectedReasonsWEAPONS ->
            "WEAPONS"

        AdResponseAllOf1RejectedReasonsSENSITIVE ->
            "SENSITIVE"

        AdResponseAllOf1RejectedReasonsUNACCEPTABLEBUSINESS ->
            "UNACCEPTABLE_BUSINESS"

        AdResponseAllOf1RejectedReasonsSUSPICIOUSCLAIMS ->
            "SUSPICIOUS_CLAIMS"

        AdResponseAllOf1RejectedReasonsPHARMA ->
            "PHARMA"

        AdResponseAllOf1RejectedReasonsSUSPICIOUSSUPPLEMENTS ->
            "SUSPICIOUS_SUPPLEMENTS"

        AdResponseAllOf1RejectedReasonsILLEGALRECREATIONALDRUG ->
            "ILLEGAL_RECREATIONAL_DRUG"

        AdResponseAllOf1RejectedReasonsLOWQUALITYLANDINGPAGE ->
            "LOW_QUALITY_LANDING_PAGE"

        AdResponseAllOf1RejectedReasonsRESTRICTEDHEALTHCARE ->
            "RESTRICTED_HEALTHCARE"

        AdResponseAllOf1RejectedReasonsINCONSISTENTLANGFR ->
            "INCONSISTENT_LANG_FR"


encodeAdResponseAllOf1RejectedReasons : AdResponseAllOf1RejectedReasons -> Json.Encode.Value
encodeAdResponseAllOf1RejectedReasons =
    Json.Encode.int << intFromAdResponseAllOf1RejectedReasons


stringFromAdResponseAllOf1ReviewStatus : AdResponseAllOf1ReviewStatus -> String
stringFromAdResponseAllOf1ReviewStatus model =
    case model of
        AdResponseAllOf1ReviewStatusOTHER ->
            "OTHER"

        AdResponseAllOf1ReviewStatusPENDING ->
            "PENDING"

        AdResponseAllOf1ReviewStatusREJECTED ->
            "REJECTED"

        AdResponseAllOf1ReviewStatusAPPROVED ->
            "APPROVED"


encodeAdResponseAllOf1ReviewStatus : AdResponseAllOf1ReviewStatus -> Json.Encode.Value
encodeAdResponseAllOf1ReviewStatus =
    Json.Encode.string << stringFromAdResponseAllOf1ReviewStatus



encodeAdsAnalyticsCreateAsyncRequest : AdsAnalyticsCreateAsyncRequest -> Json.Encode.Value
encodeAdsAnalyticsCreateAsyncRequest =
    encodeObject << encodeAdsAnalyticsCreateAsyncRequestPairs


encodeAdsAnalyticsCreateAsyncRequestWithTag : ( String, String ) -> AdsAnalyticsCreateAsyncRequest -> Json.Encode.Value
encodeAdsAnalyticsCreateAsyncRequestWithTag (tagField, tag) model =
    encodeObject (encodeAdsAnalyticsCreateAsyncRequestPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdsAnalyticsCreateAsyncRequestPairs : AdsAnalyticsCreateAsyncRequest -> List EncodedField
encodeAdsAnalyticsCreateAsyncRequestPairs model =
    let
        pairs =
            [ encode "start_date" Json.Encode.string model.startDate
            , encode "end_date" Json.Encode.string model.endDate
            , encode "granularity" Json.Encode.string model.granularity
            , maybeEncode "click_window_days" Json.Encode.int model.clickWindowDays
            , maybeEncode "engagement_window_days" Json.Encode.int model.engagementWindowDays
            , maybeEncode "view_window_days" Json.Encode.int model.viewWindowDays
            , maybeEncode "conversion_report_time" Json.Encode.string model.conversionReportTime
            , maybeEncode "attribution_types" (Json.Encode.list encodeConversionReportAttributionType) model.attributionTypes
            , encode "columns" (Json.Encode.list encodeReportingColumnAsync) model.columns
            , encode "level" Json.Encode.string model.level
            , maybeEncode "report_format" Json.Encode.string model.reportFormat
            , maybeEncode "campaign_ids" (Json.Encode.list Json.Encode.string) model.campaignIds
            , maybeEncode "campaign_statuses" (Json.Encode.list encodeCampaignSummaryStatus) model.campaignStatuses
            , maybeEncode "campaign_objective_types" (Json.Encode.list encodeObjectiveType) model.campaignObjectiveTypes
            , maybeEncode "ad_group_ids" (Json.Encode.list Json.Encode.string) model.adGroupIds
            , maybeEncode "ad_group_statuses" (Json.Encode.list encodeAdGroupSummaryStatus) model.adGroupStatuses
            , maybeEncode "ad_ids" (Json.Encode.list Json.Encode.string) model.adIds
            , maybeEncode "ad_statuses" (Json.Encode.list encodePinPromotionSummaryStatus) model.adStatuses
            , maybeEncode "product_group_ids" (Json.Encode.list Json.Encode.string) model.productGroupIds
            , maybeEncode "product_group_statuses" (Json.Encode.list encodeProductGroupSummaryStatus) model.productGroupStatuses
            , maybeEncode "product_item_ids" (Json.Encode.list Json.Encode.string) model.productItemIds
            , maybeEncode "targeting_types" (Json.Encode.list encodeAdsAnalyticsTargetingType) model.targetingTypes
            , maybeEncode "metrics_filters" (Json.Encode.list encodeAdsAnalyticsMetricsFilter) model.metricsFilters
            ]
    in
    pairs


encodeAdsAnalyticsCreateAsyncRequestAllOf1 : AdsAnalyticsCreateAsyncRequestAllOf1 -> Json.Encode.Value
encodeAdsAnalyticsCreateAsyncRequestAllOf1 =
    encodeObject << encodeAdsAnalyticsCreateAsyncRequestAllOf1Pairs


encodeAdsAnalyticsCreateAsyncRequestAllOf1WithTag : ( String, String ) -> AdsAnalyticsCreateAsyncRequestAllOf1 -> Json.Encode.Value
encodeAdsAnalyticsCreateAsyncRequestAllOf1WithTag (tagField, tag) model =
    encodeObject (encodeAdsAnalyticsCreateAsyncRequestAllOf1Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdsAnalyticsCreateAsyncRequestAllOf1Pairs : AdsAnalyticsCreateAsyncRequestAllOf1 -> List EncodedField
encodeAdsAnalyticsCreateAsyncRequestAllOf1Pairs model =
    let
        pairs =
            [ encode "columns" (Json.Encode.list encodeReportingColumnAsync) model.columns
            , encode "level" Json.Encode.string model.level
            , maybeEncode "report_format" Json.Encode.string model.reportFormat
            ]
    in
    pairs


encodeAdsAnalyticsCreateAsyncResponse : AdsAnalyticsCreateAsyncResponse -> Json.Encode.Value
encodeAdsAnalyticsCreateAsyncResponse =
    encodeObject << encodeAdsAnalyticsCreateAsyncResponsePairs


encodeAdsAnalyticsCreateAsyncResponseWithTag : ( String, String ) -> AdsAnalyticsCreateAsyncResponse -> Json.Encode.Value
encodeAdsAnalyticsCreateAsyncResponseWithTag (tagField, tag) model =
    encodeObject (encodeAdsAnalyticsCreateAsyncResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdsAnalyticsCreateAsyncResponsePairs : AdsAnalyticsCreateAsyncResponse -> List EncodedField
encodeAdsAnalyticsCreateAsyncResponsePairs model =
    let
        pairs =
            [ maybeEncode "report_status" Json.Encode.string model.reportStatus
            , maybeEncode "token" Json.Encode.string model.token
            , maybeEncodeNullable "message" Json.Encode.string model.message
            ]
    in
    pairs


stringFromAdsAnalyticsFilterColumn : AdsAnalyticsFilterColumn -> String
stringFromAdsAnalyticsFilterColumn model =
    case model of
        AdsAnalyticsFilterColumnSPENDINDOLLAR ->
            "SPEND_IN_DOLLAR"

        AdsAnalyticsFilterColumnTOTALIMPRESSION ->
            "TOTAL_IMPRESSION"


encodeAdsAnalyticsFilterColumn : AdsAnalyticsFilterColumn -> Json.Encode.Value
encodeAdsAnalyticsFilterColumn =
    Json.Encode.string << stringFromAdsAnalyticsFilterColumn


stringFromAdsAnalyticsFilterOperator : AdsAnalyticsFilterOperator -> String
stringFromAdsAnalyticsFilterOperator model =
    case model of
        AdsAnalyticsFilterOperatorLESSTHAN ->
            "LESS_THAN"

        AdsAnalyticsFilterOperatorGREATERTHAN ->
            "GREATER_THAN"


encodeAdsAnalyticsFilterOperator : AdsAnalyticsFilterOperator -> Json.Encode.Value
encodeAdsAnalyticsFilterOperator =
    Json.Encode.string << stringFromAdsAnalyticsFilterOperator


encodeAdsAnalyticsGetAsyncResponse : AdsAnalyticsGetAsyncResponse -> Json.Encode.Value
encodeAdsAnalyticsGetAsyncResponse =
    encodeObject << encodeAdsAnalyticsGetAsyncResponsePairs


encodeAdsAnalyticsGetAsyncResponseWithTag : ( String, String ) -> AdsAnalyticsGetAsyncResponse -> Json.Encode.Value
encodeAdsAnalyticsGetAsyncResponseWithTag (tagField, tag) model =
    encodeObject (encodeAdsAnalyticsGetAsyncResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdsAnalyticsGetAsyncResponsePairs : AdsAnalyticsGetAsyncResponse -> List EncodedField
encodeAdsAnalyticsGetAsyncResponsePairs model =
    let
        pairs =
            [ maybeEncode "report_status" Json.Encode.string model.reportStatus
            , maybeEncodeNullable "url" Json.Encode.string model.url
            , maybeEncodeNullable "size" Json.Encode.float model.size
            ]
    in
    pairs


encodeAdsAnalyticsMetricsFilter : AdsAnalyticsMetricsFilter -> Json.Encode.Value
encodeAdsAnalyticsMetricsFilter =
    encodeObject << encodeAdsAnalyticsMetricsFilterPairs


encodeAdsAnalyticsMetricsFilterWithTag : ( String, String ) -> AdsAnalyticsMetricsFilter -> Json.Encode.Value
encodeAdsAnalyticsMetricsFilterWithTag (tagField, tag) model =
    encodeObject (encodeAdsAnalyticsMetricsFilterPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdsAnalyticsMetricsFilterPairs : AdsAnalyticsMetricsFilter -> List EncodedField
encodeAdsAnalyticsMetricsFilterPairs model =
    let
        pairs =
            [ maybeEncode "field" encodeAdsAnalyticsFilterColumn model.field
            , maybeEncode "operator" encodeAdsAnalyticsFilterOperator model.operator
            , maybeEncode "values" (Json.Encode.list Json.Encode.float) model.values
            ]
    in
    pairs


stringFromAdsAnalyticsTargetingType : AdsAnalyticsTargetingType -> String
stringFromAdsAnalyticsTargetingType model =
    case model of
        AdsAnalyticsTargetingTypeKEYWORD ->
            "KEYWORD"

        AdsAnalyticsTargetingTypeAPPTYPE ->
            "APPTYPE"

        AdsAnalyticsTargetingTypeGENDER ->
            "GENDER"

        AdsAnalyticsTargetingTypeLOCATION ->
            "LOCATION"

        AdsAnalyticsTargetingTypePLACEMENT ->
            "PLACEMENT"

        AdsAnalyticsTargetingTypeCOUNTRY ->
            "COUNTRY"

        AdsAnalyticsTargetingTypeTARGETEDINTEREST ->
            "TARGETED_INTEREST"

        AdsAnalyticsTargetingTypePINNERINTEREST ->
            "PINNER_INTEREST"

        AdsAnalyticsTargetingTypeAUDIENCEINCLUDE ->
            "AUDIENCE_INCLUDE"

        AdsAnalyticsTargetingTypeAUDIENCEEXCLUDE ->
            "AUDIENCE_EXCLUDE"

        AdsAnalyticsTargetingTypeGEO ->
            "GEO"

        AdsAnalyticsTargetingTypeAGEBUCKET ->
            "AGE_BUCKET"

        AdsAnalyticsTargetingTypeREGION ->
            "REGION"


encodeAdsAnalyticsTargetingType : AdsAnalyticsTargetingType -> Json.Encode.Value
encodeAdsAnalyticsTargetingType =
    Json.Encode.string << stringFromAdsAnalyticsTargetingType


encodeAnalyticsMetricsResponse : AnalyticsMetricsResponse -> Json.Encode.Value
encodeAnalyticsMetricsResponse =
    encodeObject << encodeAnalyticsMetricsResponsePairs


encodeAnalyticsMetricsResponseWithTag : ( String, String ) -> AnalyticsMetricsResponse -> Json.Encode.Value
encodeAnalyticsMetricsResponseWithTag (tagField, tag) model =
    encodeObject (encodeAnalyticsMetricsResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAnalyticsMetricsResponsePairs : AnalyticsMetricsResponse -> List EncodedField
encodeAnalyticsMetricsResponsePairs model =
    let
        pairs =
            [ maybeEncode "daily_metrics" (Json.Encode.list encodeAnalyticsMetricsResponseDailyMetrics) model.dailyMetrics
            , maybeEncode "summary_metrics" (Json.Encode.dict identity Json.Encode.float) model.summaryMetrics
            ]
    in
    pairs


encodeAnalyticsMetricsResponseDailyMetrics : AnalyticsMetricsResponseDailyMetrics -> Json.Encode.Value
encodeAnalyticsMetricsResponseDailyMetrics =
    encodeObject << encodeAnalyticsMetricsResponseDailyMetricsPairs


encodeAnalyticsMetricsResponseDailyMetricsWithTag : ( String, String ) -> AnalyticsMetricsResponseDailyMetrics -> Json.Encode.Value
encodeAnalyticsMetricsResponseDailyMetricsWithTag (tagField, tag) model =
    encodeObject (encodeAnalyticsMetricsResponseDailyMetricsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAnalyticsMetricsResponseDailyMetricsPairs : AnalyticsMetricsResponseDailyMetrics -> List EncodedField
encodeAnalyticsMetricsResponseDailyMetricsPairs model =
    let
        pairs =
            [ maybeEncode "data_status" encodeAnalyticsMetricsResponseDailyMetricsDataStatus model.dataStatus
            , maybeEncode "date" Json.Encode.string model.date
            , maybeEncode "metrics" (Json.Encode.dict identity Json.Encode.float) model.metrics
            ]
    in
    pairs

stringFromAnalyticsMetricsResponseDailyMetricsDataStatus : AnalyticsMetricsResponseDailyMetricsDataStatus -> String
stringFromAnalyticsMetricsResponseDailyMetricsDataStatus model =
    case model of
        AnalyticsMetricsResponseDailyMetricsDataStatusPROCESSING ->
            "PROCESSING"

        AnalyticsMetricsResponseDailyMetricsDataStatusREADY ->
            "READY"

        AnalyticsMetricsResponseDailyMetricsDataStatusESTIMATE ->
            "ESTIMATE"

        AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREBUSINESSCREATED ->
            "BEFORE_BUSINESS_CREATED"

        AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREDATARETENTIONPERIOD ->
            "BEFORE_DATA_RETENTION_PERIOD"

        AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREPINDATARETENTIONPERIOD ->
            "BEFORE_PIN_DATA_RETENTION_PERIOD"

        AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREMETRICSTARTDATE ->
            "BEFORE_METRIC_START_DATE"

        AnalyticsMetricsResponseDailyMetricsDataStatusBEFORECOREMETRICSTARTDATE ->
            "BEFORE_CORE_METRIC_START_DATE"

        AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREPINFORMATMETRICSTARTDATE ->
            "BEFORE_PIN_FORMAT_METRIC_START_DATE"

        AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREAUDIENCEMETRICSTARTDATE ->
            "BEFORE_AUDIENCE_METRIC_START_DATE"

        AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREAUDIENCEMONTHLYMETRICSTARTDATE ->
            "BEFORE_AUDIENCE_MONTHLY_METRIC_START_DATE"

        AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREVIDEOMETRICSTARTDATE ->
            "BEFORE_VIDEO_METRIC_START_DATE"

        AnalyticsMetricsResponseDailyMetricsDataStatusBEFORECONVERSIONMETRICSTARTDATE ->
            "BEFORE_CONVERSION_METRIC_START_DATE"

        AnalyticsMetricsResponseDailyMetricsDataStatusPURCHASERSMETRICSMALLERTHANTHRESHOLD ->
            "PURCHASERS_METRIC_SMALLER_THAN_THRESHOLD"

        AnalyticsMetricsResponseDailyMetricsDataStatusINBADTAGDATE ->
            "IN_BAD_TAG_DATE"

        AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREPUBLISHEDMETRICSTARTDATE ->
            "BEFORE_PUBLISHED_METRIC_START_DATE"

        AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREASSISTMETRICSTARTDATE ->
            "BEFORE_ASSIST_METRIC_START_DATE"

        AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREPINCREATED ->
            "BEFORE_PIN_CREATED"

        AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREACCOUNTCLAIMED ->
            "BEFORE_ACCOUNT_CLAIMED"

        AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREDEMOGRAPHICFILTERSSTARTDATE ->
            "BEFORE_DEMOGRAPHIC_FILTERS_START_DATE"

        AnalyticsMetricsResponseDailyMetricsDataStatusAUDIENCESEGMENTSMALLERTHANTHRESHOLD ->
            "AUDIENCE_SEGMENT_SMALLER_THAN_THRESHOLD"

        AnalyticsMetricsResponseDailyMetricsDataStatusAUDIENCETOTALSMALLERTHANTHRESHOLD ->
            "AUDIENCE_TOTAL_SMALLER_THAN_THRESHOLD"

        AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREPRODUCTGROUPFILTERSTARTDATE ->
            "BEFORE_PRODUCT_GROUP_FILTER_START_DATE"


encodeAnalyticsMetricsResponseDailyMetricsDataStatus : AnalyticsMetricsResponseDailyMetricsDataStatus -> Json.Encode.Value
encodeAnalyticsMetricsResponseDailyMetricsDataStatus =
    Json.Encode.string << stringFromAnalyticsMetricsResponseDailyMetricsDataStatus



encodeAvailabilityFilter : AvailabilityFilter -> Json.Encode.Value
encodeAvailabilityFilter =
    encodeObject << encodeAvailabilityFilterPairs


encodeAvailabilityFilterWithTag : ( String, String ) -> AvailabilityFilter -> Json.Encode.Value
encodeAvailabilityFilterWithTag (tagField, tag) model =
    encodeObject (encodeAvailabilityFilterPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAvailabilityFilterPairs : AvailabilityFilter -> List EncodedField
encodeAvailabilityFilterPairs model =
    let
        pairs =
            [ encode "AVAILABILITY" encodeCatalogsProductGroupMultipleStringCriteria model.aVAILABILITY
            ]
    in
    pairs


stringFromBatchOperation : BatchOperation -> String
stringFromBatchOperation model =
    case model of
        BatchOperationUPDATE ->
            "UPDATE"

        BatchOperationCREATE ->
            "CREATE"

        BatchOperationUPSERT ->
            "UPSERT"


encodeBatchOperation : BatchOperation -> Json.Encode.Value
encodeBatchOperation =
    Json.Encode.string << stringFromBatchOperation


stringFromBatchOperationStatus : BatchOperationStatus -> String
stringFromBatchOperationStatus model =
    case model of
        BatchOperationStatusPROCESSING ->
            "PROCESSING"

        BatchOperationStatusCOMPLETED ->
            "COMPLETED"


encodeBatchOperationStatus : BatchOperationStatus -> Json.Encode.Value
encodeBatchOperationStatus =
    Json.Encode.string << stringFromBatchOperationStatus


encodeBoard : Board -> Json.Encode.Value
encodeBoard =
    encodeObject << encodeBoardPairs


encodeBoardWithTag : ( String, String ) -> Board -> Json.Encode.Value
encodeBoardWithTag (tagField, tag) model =
    encodeObject (encodeBoardPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeBoardPairs : Board -> List EncodedField
encodeBoardPairs model =
    let
        pairs =
            [ maybeEncode "id" Json.Encode.string model.id
            , encode "name" Json.Encode.string model.name
            , maybeEncodeNullable "description" Json.Encode.string model.description
            , maybeEncode "owner" encodeBoardOwner model.owner
            , maybeEncode "privacy" encodeBoardPrivacy model.privacy
            ]
    in
    pairs

stringFromBoardPrivacy : BoardPrivacy -> String
stringFromBoardPrivacy model =
    case model of
        BoardPrivacyPUBLIC ->
            "PUBLIC"

        BoardPrivacyPROTECTED ->
            "PROTECTED"

        BoardPrivacySECRET ->
            "SECRET"


encodeBoardPrivacy : BoardPrivacy -> Json.Encode.Value
encodeBoardPrivacy =
    Json.Encode.string << stringFromBoardPrivacy



encodeBoardOwner : BoardOwner -> Json.Encode.Value
encodeBoardOwner =
    encodeObject << encodeBoardOwnerPairs


encodeBoardOwnerWithTag : ( String, String ) -> BoardOwner -> Json.Encode.Value
encodeBoardOwnerWithTag (tagField, tag) model =
    encodeObject (encodeBoardOwnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeBoardOwnerPairs : BoardOwner -> List EncodedField
encodeBoardOwnerPairs model =
    let
        pairs =
            [ maybeEncode "username" Json.Encode.string model.username
            ]
    in
    pairs


encodeBoardSection : BoardSection -> Json.Encode.Value
encodeBoardSection =
    encodeObject << encodeBoardSectionPairs


encodeBoardSectionWithTag : ( String, String ) -> BoardSection -> Json.Encode.Value
encodeBoardSectionWithTag (tagField, tag) model =
    encodeObject (encodeBoardSectionPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeBoardSectionPairs : BoardSection -> List EncodedField
encodeBoardSectionPairs model =
    let
        pairs =
            [ maybeEncode "id" Json.Encode.string model.id
            , maybeEncode "name" Json.Encode.string model.name
            ]
    in
    pairs


encodeBoardUpdate : BoardUpdate -> Json.Encode.Value
encodeBoardUpdate =
    encodeObject << encodeBoardUpdatePairs


encodeBoardUpdateWithTag : ( String, String ) -> BoardUpdate -> Json.Encode.Value
encodeBoardUpdateWithTag (tagField, tag) model =
    encodeObject (encodeBoardUpdatePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeBoardUpdatePairs : BoardUpdate -> List EncodedField
encodeBoardUpdatePairs model =
    let
        pairs =
            [ maybeEncode "name" Json.Encode.string model.name
            , maybeEncodeNullable "description" Json.Encode.string model.description
            , maybeEncode "privacy" encodeBoardUpdatePrivacy model.privacy
            ]
    in
    pairs

stringFromBoardUpdatePrivacy : BoardUpdatePrivacy -> String
stringFromBoardUpdatePrivacy model =
    case model of
        BoardUpdatePrivacyPUBLIC ->
            "PUBLIC"

        BoardUpdatePrivacySECRET ->
            "SECRET"


encodeBoardUpdatePrivacy : BoardUpdatePrivacy -> Json.Encode.Value
encodeBoardUpdatePrivacy =
    Json.Encode.string << stringFromBoardUpdatePrivacy



encodeBrandFilter : BrandFilter -> Json.Encode.Value
encodeBrandFilter =
    encodeObject << encodeBrandFilterPairs


encodeBrandFilterWithTag : ( String, String ) -> BrandFilter -> Json.Encode.Value
encodeBrandFilterWithTag (tagField, tag) model =
    encodeObject (encodeBrandFilterPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeBrandFilterPairs : BrandFilter -> List EncodedField
encodeBrandFilterPairs model =
    let
        pairs =
            [ encode "BRAND" encodeCatalogsProductGroupMultipleStringCriteria model.bRAND
            ]
    in
    pairs


encodeCampaignCommon : CampaignCommon -> Json.Encode.Value
encodeCampaignCommon =
    encodeObject << encodeCampaignCommonPairs


encodeCampaignCommonWithTag : ( String, String ) -> CampaignCommon -> Json.Encode.Value
encodeCampaignCommonWithTag (tagField, tag) model =
    encodeObject (encodeCampaignCommonPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCampaignCommonPairs : CampaignCommon -> List EncodedField
encodeCampaignCommonPairs model =
    let
        pairs =
            [ encode "ad_account_id" Json.Encode.string model.adAccountId
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "status" Json.Encode.string model.status
            , maybeEncodeNullable "lifetime_spend_cap" Json.Encode.int model.lifetimeSpendCap
            , maybeEncodeNullable "daily_spend_cap" Json.Encode.int model.dailySpendCap
            , maybeEncodeNullable "order_line_id" Json.Encode.string model.orderLineId
            , maybeEncodeNullable "tracking_urls" encodeTrackingUrls model.trackingUrls
            , maybeEncodeNullable "start_time" Json.Encode.int model.startTime
            , maybeEncodeNullable "end_time" Json.Encode.int model.endTime
            ]
    in
    pairs


encodeCampaignResponse : CampaignResponse -> Json.Encode.Value
encodeCampaignResponse =
    encodeObject << encodeCampaignResponsePairs


encodeCampaignResponseWithTag : ( String, String ) -> CampaignResponse -> Json.Encode.Value
encodeCampaignResponseWithTag (tagField, tag) model =
    encodeObject (encodeCampaignResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCampaignResponsePairs : CampaignResponse -> List EncodedField
encodeCampaignResponsePairs model =
    let
        pairs =
            [ encode "id" Json.Encode.string model.id
            , encode "ad_account_id" Json.Encode.string model.adAccountId
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "status" Json.Encode.string model.status
            , maybeEncodeNullable "lifetime_spend_cap" Json.Encode.int model.lifetimeSpendCap
            , maybeEncodeNullable "daily_spend_cap" Json.Encode.int model.dailySpendCap
            , maybeEncodeNullable "order_line_id" Json.Encode.string model.orderLineId
            , maybeEncodeNullable "tracking_urls" encodeTrackingUrls model.trackingUrls
            , maybeEncodeNullable "start_time" Json.Encode.int model.startTime
            , maybeEncodeNullable "end_time" Json.Encode.int model.endTime
            , maybeEncode "objective_type" encodeObjectiveType model.objectiveType
            , maybeEncode "created_time" Json.Encode.int model.createdTime
            , maybeEncode "updated_time" Json.Encode.int model.updatedTime
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCampaignResponseAllOf1 : CampaignResponseAllOf1 -> Json.Encode.Value
encodeCampaignResponseAllOf1 =
    encodeObject << encodeCampaignResponseAllOf1Pairs


encodeCampaignResponseAllOf1WithTag : ( String, String ) -> CampaignResponseAllOf1 -> Json.Encode.Value
encodeCampaignResponseAllOf1WithTag (tagField, tag) model =
    encodeObject (encodeCampaignResponseAllOf1Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCampaignResponseAllOf1Pairs : CampaignResponseAllOf1 -> List EncodedField
encodeCampaignResponseAllOf1Pairs model =
    let
        pairs =
            [ maybeEncode "objective_type" encodeObjectiveType model.objectiveType
            , maybeEncode "created_time" Json.Encode.int model.createdTime
            , maybeEncode "updated_time" Json.Encode.int model.updatedTime
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


stringFromCampaignSummaryStatus : CampaignSummaryStatus -> String
stringFromCampaignSummaryStatus model =
    case model of
        CampaignSummaryStatusRUNNING ->
            "RUNNING"

        CampaignSummaryStatusPAUSED ->
            "PAUSED"

        CampaignSummaryStatusNOTSTARTED ->
            "NOT_STARTED"

        CampaignSummaryStatusCOMPLETED ->
            "COMPLETED"

        CampaignSummaryStatusADVERTISERDISABLED ->
            "ADVERTISER_DISABLED"

        CampaignSummaryStatusARCHIVED ->
            "ARCHIVED"


encodeCampaignSummaryStatus : CampaignSummaryStatus -> Json.Encode.Value
encodeCampaignSummaryStatus =
    Json.Encode.string << stringFromCampaignSummaryStatus


encodeCatalogsDbItem : CatalogsDbItem -> Json.Encode.Value
encodeCatalogsDbItem =
    encodeObject << encodeCatalogsDbItemPairs


encodeCatalogsDbItemWithTag : ( String, String ) -> CatalogsDbItem -> Json.Encode.Value
encodeCatalogsDbItemWithTag (tagField, tag) model =
    encodeObject (encodeCatalogsDbItemPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCatalogsDbItemPairs : CatalogsDbItem -> List EncodedField
encodeCatalogsDbItemPairs model =
    let
        pairs =
            [ maybeEncode "created_at" Api.Time.encodeDateTime model.createdAt
            , maybeEncode "id" Json.Encode.string model.id
            , maybeEncode "updated_at" Api.Time.encodeDateTime model.updatedAt
            ]
    in
    pairs


encodeCatalogsFeed : CatalogsFeed -> Json.Encode.Value
encodeCatalogsFeed =
    encodeObject << encodeCatalogsFeedPairs


encodeCatalogsFeedWithTag : ( String, String ) -> CatalogsFeed -> Json.Encode.Value
encodeCatalogsFeedWithTag (tagField, tag) model =
    encodeObject (encodeCatalogsFeedPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCatalogsFeedPairs : CatalogsFeed -> List EncodedField
encodeCatalogsFeedPairs model =
    let
        pairs =
            [ maybeEncode "created_at" Api.Time.encodeDateTime model.createdAt
            , maybeEncode "id" Json.Encode.string model.id
            , maybeEncode "updated_at" Api.Time.encodeDateTime model.updatedAt
            , encode "default_country" encodeCountry model.defaultCountry
            , encodeNullable "default_availability" encodeProductAvailabilityType model.defaultAvailability
            , encodeNullable "default_currency" encodeNullableCurrency model.defaultCurrency
            , encodeNullable "name" Json.Encode.string model.name
            , encode "format" encodeCatalogsFormat model.format
            , encode "default_locale" Json.Encode.string model.defaultLocale
            , encodeNullable "credentials" encodeCatalogsFeedCredentials model.credentials
            , encode "location" Json.Encode.string model.location
            , encodeNullable "preferred_processing_schedule" encodeCatalogsFeedProcessingSchedule model.preferredProcessingSchedule
            , encode "status" encodeCatalogsStatus model.status
            ]
    in
    pairs


encodeCatalogsFeedCredentials : CatalogsFeedCredentials -> Json.Encode.Value
encodeCatalogsFeedCredentials =
    encodeObject << encodeCatalogsFeedCredentialsPairs


encodeCatalogsFeedCredentialsWithTag : ( String, String ) -> CatalogsFeedCredentials -> Json.Encode.Value
encodeCatalogsFeedCredentialsWithTag (tagField, tag) model =
    encodeObject (encodeCatalogsFeedCredentialsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCatalogsFeedCredentialsPairs : CatalogsFeedCredentials -> List EncodedField
encodeCatalogsFeedCredentialsPairs model =
    let
        pairs =
            [ encode "password" Json.Encode.string model.password
            , encode "username" Json.Encode.string model.username
            ]
    in
    pairs


encodeCatalogsFeedIngestionDetails : CatalogsFeedIngestionDetails -> Json.Encode.Value
encodeCatalogsFeedIngestionDetails =
    encodeObject << encodeCatalogsFeedIngestionDetailsPairs


encodeCatalogsFeedIngestionDetailsWithTag : ( String, String ) -> CatalogsFeedIngestionDetails -> Json.Encode.Value
encodeCatalogsFeedIngestionDetailsWithTag (tagField, tag) model =
    encodeObject (encodeCatalogsFeedIngestionDetailsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCatalogsFeedIngestionDetailsPairs : CatalogsFeedIngestionDetails -> List EncodedField
encodeCatalogsFeedIngestionDetailsPairs model =
    let
        pairs =
            [ encode "errors" encodeCatalogsFeedIngestionErrors model.errors
            , encode "info" encodeCatalogsFeedIngestionInfo model.info
            ]
    in
    pairs


encodeCatalogsFeedIngestionErrors : CatalogsFeedIngestionErrors -> Json.Encode.Value
encodeCatalogsFeedIngestionErrors =
    encodeObject << encodeCatalogsFeedIngestionErrorsPairs


encodeCatalogsFeedIngestionErrorsWithTag : ( String, String ) -> CatalogsFeedIngestionErrors -> Json.Encode.Value
encodeCatalogsFeedIngestionErrorsWithTag (tagField, tag) model =
    encodeObject (encodeCatalogsFeedIngestionErrorsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCatalogsFeedIngestionErrorsPairs : CatalogsFeedIngestionErrors -> List EncodedField
encodeCatalogsFeedIngestionErrorsPairs model =
    let
        pairs =
            [ maybeEncode "image_download_error" Json.Encode.int model.imageDownloadError
            , maybeEncode "image_download_connection_timeout" Json.Encode.int model.imageDownloadConnectionTimeout
            , maybeEncode "image_format_unrecognize" Json.Encode.int model.imageFormatUnrecognize
            , maybeEncode "line_level_internal_error" Json.Encode.int model.lineLevelInternalError
            , maybeEncode "large_product_count_decrease" Json.Encode.intencodeCatalogsFeedIngestionErrorsLargeProductCountDecrease model.largeProductCountDecrease
            ]
    in
    pairs

stringFromCatalogsFeedIngestionErrorsLargeProductCountDecrease : CatalogsFeedIngestionErrorsLargeProductCountDecrease -> String
stringFromCatalogsFeedIngestionErrorsLargeProductCountDecrease =
    String.fromInt << intFromCatalogsFeedIngestionErrorsLargeProductCountDecrease


intFromCatalogsFeedIngestionErrorsLargeProductCountDecrease : CatalogsFeedIngestionErrorsLargeProductCountDecrease -> Int
intFromCatalogsFeedIngestionErrorsLargeProductCountDecrease model =
    case model of
        CatalogsFeedIngestionErrorsLargeProductCountDecrease1 ->
            1


encodeCatalogsFeedIngestionErrorsLargeProductCountDecrease : CatalogsFeedIngestionErrorsLargeProductCountDecrease -> Json.Encode.Value
encodeCatalogsFeedIngestionErrorsLargeProductCountDecrease =
    Json.Encode.int << intFromCatalogsFeedIngestionErrorsLargeProductCountDecrease



encodeCatalogsFeedIngestionInfo : CatalogsFeedIngestionInfo -> Json.Encode.Value
encodeCatalogsFeedIngestionInfo =
    encodeObject << encodeCatalogsFeedIngestionInfoPairs


encodeCatalogsFeedIngestionInfoWithTag : ( String, String ) -> CatalogsFeedIngestionInfo -> Json.Encode.Value
encodeCatalogsFeedIngestionInfoWithTag (tagField, tag) model =
    encodeObject (encodeCatalogsFeedIngestionInfoPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCatalogsFeedIngestionInfoPairs : CatalogsFeedIngestionInfo -> List EncodedField
encodeCatalogsFeedIngestionInfoPairs model =
    let
        pairs =
            [ maybeEncode "in_stock" Json.Encode.int model.inStock
            , maybeEncode "out_of_stock" Json.Encode.int model.outOfStock
            , maybeEncode "preorder" Json.Encode.int model.preorder
            ]
    in
    pairs


encodeCatalogsFeedProcessingResult : CatalogsFeedProcessingResult -> Json.Encode.Value
encodeCatalogsFeedProcessingResult =
    encodeObject << encodeCatalogsFeedProcessingResultPairs


encodeCatalogsFeedProcessingResultWithTag : ( String, String ) -> CatalogsFeedProcessingResult -> Json.Encode.Value
encodeCatalogsFeedProcessingResultWithTag (tagField, tag) model =
    encodeObject (encodeCatalogsFeedProcessingResultPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCatalogsFeedProcessingResultPairs : CatalogsFeedProcessingResult -> List EncodedField
encodeCatalogsFeedProcessingResultPairs model =
    let
        pairs =
            [ maybeEncode "created_at" Api.Time.encodeDateTime model.createdAt
            , maybeEncode "id" Json.Encode.string model.id
            , maybeEncode "updated_at" Api.Time.encodeDateTime model.updatedAt
            , encode "ingestion_details" encodeCatalogsFeedIngestionDetails model.ingestionDetails
            , encode "status" encodeCatalogsFeedProcessingStatus model.status
            , encodeNullable "product_counts" encodeCatalogsFeedProductCounts model.productCounts
            , encode "validation_details" encodeCatalogsFeedValidationDetails model.validationDetails
            ]
    in
    pairs


encodeCatalogsFeedProcessingResultFields : CatalogsFeedProcessingResultFields -> Json.Encode.Value
encodeCatalogsFeedProcessingResultFields =
    encodeObject << encodeCatalogsFeedProcessingResultFieldsPairs


encodeCatalogsFeedProcessingResultFieldsWithTag : ( String, String ) -> CatalogsFeedProcessingResultFields -> Json.Encode.Value
encodeCatalogsFeedProcessingResultFieldsWithTag (tagField, tag) model =
    encodeObject (encodeCatalogsFeedProcessingResultFieldsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCatalogsFeedProcessingResultFieldsPairs : CatalogsFeedProcessingResultFields -> List EncodedField
encodeCatalogsFeedProcessingResultFieldsPairs model =
    let
        pairs =
            [ encode "ingestion_details" encodeCatalogsFeedIngestionDetails model.ingestionDetails
            , encode "status" encodeCatalogsFeedProcessingStatus model.status
            , encodeNullable "product_counts" encodeCatalogsFeedProductCounts model.productCounts
            , encode "validation_details" encodeCatalogsFeedValidationDetails model.validationDetails
            ]
    in
    pairs


encodeCatalogsFeedProcessingSchedule : CatalogsFeedProcessingSchedule -> Json.Encode.Value
encodeCatalogsFeedProcessingSchedule =
    encodeObject << encodeCatalogsFeedProcessingSchedulePairs


encodeCatalogsFeedProcessingScheduleWithTag : ( String, String ) -> CatalogsFeedProcessingSchedule -> Json.Encode.Value
encodeCatalogsFeedProcessingScheduleWithTag (tagField, tag) model =
    encodeObject (encodeCatalogsFeedProcessingSchedulePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCatalogsFeedProcessingSchedulePairs : CatalogsFeedProcessingSchedule -> List EncodedField
encodeCatalogsFeedProcessingSchedulePairs model =
    let
        pairs =
            [ encode "time" Json.Encode.string model.time
            , encodeNullable "timezone" encodeCatalogsFeedProcessingScheduleTimezone model.timezone
            ]
    in
    pairs

stringFromCatalogsFeedProcessingScheduleTimezone : CatalogsFeedProcessingScheduleTimezone -> String
stringFromCatalogsFeedProcessingScheduleTimezone model =
    case model of
        CatalogsFeedProcessingScheduleTimezoneAfricaAbidjan ->
            "Africa/Abidjan"

        CatalogsFeedProcessingScheduleTimezoneAfricaAccra ->
            "Africa/Accra"

        CatalogsFeedProcessingScheduleTimezoneAfricaAlgiers ->
            "Africa/Algiers"

        CatalogsFeedProcessingScheduleTimezoneAfricaBissau ->
            "Africa/Bissau"

        CatalogsFeedProcessingScheduleTimezoneAfricaCairo ->
            "Africa/Cairo"

        CatalogsFeedProcessingScheduleTimezoneAfricaCasablanca ->
            "Africa/Casablanca"

        CatalogsFeedProcessingScheduleTimezoneAfricaCeuta ->
            "Africa/Ceuta"

        CatalogsFeedProcessingScheduleTimezoneAfricaElAaiun ->
            "Africa/El_Aaiun"

        CatalogsFeedProcessingScheduleTimezoneAfricaJohannesburg ->
            "Africa/Johannesburg"

        CatalogsFeedProcessingScheduleTimezoneAfricaJuba ->
            "Africa/Juba"

        CatalogsFeedProcessingScheduleTimezoneAfricaKhartoum ->
            "Africa/Khartoum"

        CatalogsFeedProcessingScheduleTimezoneAfricaLagos ->
            "Africa/Lagos"

        CatalogsFeedProcessingScheduleTimezoneAfricaMaputo ->
            "Africa/Maputo"

        CatalogsFeedProcessingScheduleTimezoneAfricaMonrovia ->
            "Africa/Monrovia"

        CatalogsFeedProcessingScheduleTimezoneAfricaNairobi ->
            "Africa/Nairobi"

        CatalogsFeedProcessingScheduleTimezoneAfricaNdjamena ->
            "Africa/Ndjamena"

        CatalogsFeedProcessingScheduleTimezoneAfricaSaoTome ->
            "Africa/Sao_Tome"

        CatalogsFeedProcessingScheduleTimezoneAfricaTripoli ->
            "Africa/Tripoli"

        CatalogsFeedProcessingScheduleTimezoneAfricaTunis ->
            "Africa/Tunis"

        CatalogsFeedProcessingScheduleTimezoneAfricaWindhoek ->
            "Africa/Windhoek"

        CatalogsFeedProcessingScheduleTimezoneAmericaAdak ->
            "America/Adak"

        CatalogsFeedProcessingScheduleTimezoneAmericaAnchorage ->
            "America/Anchorage"

        CatalogsFeedProcessingScheduleTimezoneAmericaAraguaina ->
            "America/Araguaina"

        CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaBuenosAires ->
            "America/Argentina/Buenos_Aires"

        CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaCatamarca ->
            "America/Argentina/Catamarca"

        CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaCordoba ->
            "America/Argentina/Cordoba"

        CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaJujuy ->
            "America/Argentina/Jujuy"

        CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaLaRioja ->
            "America/Argentina/La_Rioja"

        CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaMendoza ->
            "America/Argentina/Mendoza"

        CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaRioGallegos ->
            "America/Argentina/Rio_Gallegos"

        CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaSalta ->
            "America/Argentina/Salta"

        CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaSanJuan ->
            "America/Argentina/San_Juan"

        CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaSanLuis ->
            "America/Argentina/San_Luis"

        CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaTucuman ->
            "America/Argentina/Tucuman"

        CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaUshuaia ->
            "America/Argentina/Ushuaia"

        CatalogsFeedProcessingScheduleTimezoneAmericaAsuncion ->
            "America/Asuncion"

        CatalogsFeedProcessingScheduleTimezoneAmericaAtikokan ->
            "America/Atikokan"

        CatalogsFeedProcessingScheduleTimezoneAmericaBahia ->
            "America/Bahia"

        CatalogsFeedProcessingScheduleTimezoneAmericaBahiaBanderas ->
            "America/Bahia_Banderas"

        CatalogsFeedProcessingScheduleTimezoneAmericaBarbados ->
            "America/Barbados"

        CatalogsFeedProcessingScheduleTimezoneAmericaBelem ->
            "America/Belem"

        CatalogsFeedProcessingScheduleTimezoneAmericaBelize ->
            "America/Belize"

        CatalogsFeedProcessingScheduleTimezoneAmericaBlancSablon ->
            "America/Blanc-Sablon"

        CatalogsFeedProcessingScheduleTimezoneAmericaBoaVista ->
            "America/Boa_Vista"

        CatalogsFeedProcessingScheduleTimezoneAmericaBogota ->
            "America/Bogota"

        CatalogsFeedProcessingScheduleTimezoneAmericaBoise ->
            "America/Boise"

        CatalogsFeedProcessingScheduleTimezoneAmericaCambridgeBay ->
            "America/Cambridge_Bay"

        CatalogsFeedProcessingScheduleTimezoneAmericaCampoGrande ->
            "America/Campo_Grande"

        CatalogsFeedProcessingScheduleTimezoneAmericaCancun ->
            "America/Cancun"

        CatalogsFeedProcessingScheduleTimezoneAmericaCaracas ->
            "America/Caracas"

        CatalogsFeedProcessingScheduleTimezoneAmericaCayenne ->
            "America/Cayenne"

        CatalogsFeedProcessingScheduleTimezoneAmericaChicago ->
            "America/Chicago"

        CatalogsFeedProcessingScheduleTimezoneAmericaChihuahua ->
            "America/Chihuahua"

        CatalogsFeedProcessingScheduleTimezoneAmericaCostaRica ->
            "America/Costa_Rica"

        CatalogsFeedProcessingScheduleTimezoneAmericaCreston ->
            "America/Creston"

        CatalogsFeedProcessingScheduleTimezoneAmericaCuiaba ->
            "America/Cuiaba"

        CatalogsFeedProcessingScheduleTimezoneAmericaCuracao ->
            "America/Curacao"

        CatalogsFeedProcessingScheduleTimezoneAmericaDanmarkshavn ->
            "America/Danmarkshavn"

        CatalogsFeedProcessingScheduleTimezoneAmericaDawson ->
            "America/Dawson"

        CatalogsFeedProcessingScheduleTimezoneAmericaDawsonCreek ->
            "America/Dawson_Creek"

        CatalogsFeedProcessingScheduleTimezoneAmericaDenver ->
            "America/Denver"

        CatalogsFeedProcessingScheduleTimezoneAmericaDetroit ->
            "America/Detroit"

        CatalogsFeedProcessingScheduleTimezoneAmericaEdmonton ->
            "America/Edmonton"

        CatalogsFeedProcessingScheduleTimezoneAmericaEirunepe ->
            "America/Eirunepe"

        CatalogsFeedProcessingScheduleTimezoneAmericaElSalvador ->
            "America/El_Salvador"

        CatalogsFeedProcessingScheduleTimezoneAmericaFortNelson ->
            "America/Fort_Nelson"

        CatalogsFeedProcessingScheduleTimezoneAmericaFortaleza ->
            "America/Fortaleza"

        CatalogsFeedProcessingScheduleTimezoneAmericaGlaceBay ->
            "America/Glace_Bay"

        CatalogsFeedProcessingScheduleTimezoneAmericaGooseBay ->
            "America/Goose_Bay"

        CatalogsFeedProcessingScheduleTimezoneAmericaGrandTurk ->
            "America/Grand_Turk"

        CatalogsFeedProcessingScheduleTimezoneAmericaGuatemala ->
            "America/Guatemala"

        CatalogsFeedProcessingScheduleTimezoneAmericaGuayaquil ->
            "America/Guayaquil"

        CatalogsFeedProcessingScheduleTimezoneAmericaGuyana ->
            "America/Guyana"

        CatalogsFeedProcessingScheduleTimezoneAmericaHalifax ->
            "America/Halifax"

        CatalogsFeedProcessingScheduleTimezoneAmericaHavana ->
            "America/Havana"

        CatalogsFeedProcessingScheduleTimezoneAmericaHermosillo ->
            "America/Hermosillo"

        CatalogsFeedProcessingScheduleTimezoneAmericaIndianaIndianapolis ->
            "America/Indiana/Indianapolis"

        CatalogsFeedProcessingScheduleTimezoneAmericaIndianaKnox ->
            "America/Indiana/Knox"

        CatalogsFeedProcessingScheduleTimezoneAmericaIndianaMarengo ->
            "America/Indiana/Marengo"

        CatalogsFeedProcessingScheduleTimezoneAmericaIndianaPetersburg ->
            "America/Indiana/Petersburg"

        CatalogsFeedProcessingScheduleTimezoneAmericaIndianaTellCity ->
            "America/Indiana/Tell_City"

        CatalogsFeedProcessingScheduleTimezoneAmericaIndianaVevay ->
            "America/Indiana/Vevay"

        CatalogsFeedProcessingScheduleTimezoneAmericaIndianaVincennes ->
            "America/Indiana/Vincennes"

        CatalogsFeedProcessingScheduleTimezoneAmericaIndianaWinamac ->
            "America/Indiana/Winamac"

        CatalogsFeedProcessingScheduleTimezoneAmericaInuvik ->
            "America/Inuvik"

        CatalogsFeedProcessingScheduleTimezoneAmericaIqaluit ->
            "America/Iqaluit"

        CatalogsFeedProcessingScheduleTimezoneAmericaJamaica ->
            "America/Jamaica"

        CatalogsFeedProcessingScheduleTimezoneAmericaJuneau ->
            "America/Juneau"

        CatalogsFeedProcessingScheduleTimezoneAmericaKentuckyLouisville ->
            "America/Kentucky/Louisville"

        CatalogsFeedProcessingScheduleTimezoneAmericaKentuckyMonticello ->
            "America/Kentucky/Monticello"

        CatalogsFeedProcessingScheduleTimezoneAmericaLaPaz ->
            "America/La_Paz"

        CatalogsFeedProcessingScheduleTimezoneAmericaLima ->
            "America/Lima"

        CatalogsFeedProcessingScheduleTimezoneAmericaLosAngeles ->
            "America/Los_Angeles"

        CatalogsFeedProcessingScheduleTimezoneAmericaMaceio ->
            "America/Maceio"

        CatalogsFeedProcessingScheduleTimezoneAmericaManagua ->
            "America/Managua"

        CatalogsFeedProcessingScheduleTimezoneAmericaManaus ->
            "America/Manaus"

        CatalogsFeedProcessingScheduleTimezoneAmericaMartinique ->
            "America/Martinique"

        CatalogsFeedProcessingScheduleTimezoneAmericaMatamoros ->
            "America/Matamoros"

        CatalogsFeedProcessingScheduleTimezoneAmericaMazatlan ->
            "America/Mazatlan"

        CatalogsFeedProcessingScheduleTimezoneAmericaMenominee ->
            "America/Menominee"

        CatalogsFeedProcessingScheduleTimezoneAmericaMerida ->
            "America/Merida"

        CatalogsFeedProcessingScheduleTimezoneAmericaMetlakatla ->
            "America/Metlakatla"

        CatalogsFeedProcessingScheduleTimezoneAmericaMexicoCity ->
            "America/Mexico_City"

        CatalogsFeedProcessingScheduleTimezoneAmericaMiquelon ->
            "America/Miquelon"

        CatalogsFeedProcessingScheduleTimezoneAmericaMoncton ->
            "America/Moncton"

        CatalogsFeedProcessingScheduleTimezoneAmericaMonterrey ->
            "America/Monterrey"

        CatalogsFeedProcessingScheduleTimezoneAmericaMontevideo ->
            "America/Montevideo"

        CatalogsFeedProcessingScheduleTimezoneAmericaNassau ->
            "America/Nassau"

        CatalogsFeedProcessingScheduleTimezoneAmericaNewYork ->
            "America/New_York"

        CatalogsFeedProcessingScheduleTimezoneAmericaNipigon ->
            "America/Nipigon"

        CatalogsFeedProcessingScheduleTimezoneAmericaNome ->
            "America/Nome"

        CatalogsFeedProcessingScheduleTimezoneAmericaNoronha ->
            "America/Noronha"

        CatalogsFeedProcessingScheduleTimezoneAmericaNorthDakotaBeulah ->
            "America/North_Dakota/Beulah"

        CatalogsFeedProcessingScheduleTimezoneAmericaNorthDakotaCenter ->
            "America/North_Dakota/Center"

        CatalogsFeedProcessingScheduleTimezoneAmericaNorthDakotaNewSalem ->
            "America/North_Dakota/New_Salem"

        CatalogsFeedProcessingScheduleTimezoneAmericaNuuk ->
            "America/Nuuk"

        CatalogsFeedProcessingScheduleTimezoneAmericaOjinaga ->
            "America/Ojinaga"

        CatalogsFeedProcessingScheduleTimezoneAmericaPanama ->
            "America/Panama"

        CatalogsFeedProcessingScheduleTimezoneAmericaPangnirtung ->
            "America/Pangnirtung"

        CatalogsFeedProcessingScheduleTimezoneAmericaParamaribo ->
            "America/Paramaribo"

        CatalogsFeedProcessingScheduleTimezoneAmericaPhoenix ->
            "America/Phoenix"

        CatalogsFeedProcessingScheduleTimezoneAmericaPortAuPrince ->
            "America/Port-au-Prince"

        CatalogsFeedProcessingScheduleTimezoneAmericaPortOfSpain ->
            "America/Port_of_Spain"

        CatalogsFeedProcessingScheduleTimezoneAmericaPortoVelho ->
            "America/Porto_Velho"

        CatalogsFeedProcessingScheduleTimezoneAmericaPuertoRico ->
            "America/Puerto_Rico"

        CatalogsFeedProcessingScheduleTimezoneAmericaPuntaArenas ->
            "America/Punta_Arenas"

        CatalogsFeedProcessingScheduleTimezoneAmericaRainyRiver ->
            "America/Rainy_River"

        CatalogsFeedProcessingScheduleTimezoneAmericaRankinInlet ->
            "America/Rankin_Inlet"

        CatalogsFeedProcessingScheduleTimezoneAmericaRecife ->
            "America/Recife"

        CatalogsFeedProcessingScheduleTimezoneAmericaRegina ->
            "America/Regina"

        CatalogsFeedProcessingScheduleTimezoneAmericaResolute ->
            "America/Resolute"

        CatalogsFeedProcessingScheduleTimezoneAmericaRioBranco ->
            "America/Rio_Branco"

        CatalogsFeedProcessingScheduleTimezoneAmericaSantarem ->
            "America/Santarem"

        CatalogsFeedProcessingScheduleTimezoneAmericaSantiago ->
            "America/Santiago"

        CatalogsFeedProcessingScheduleTimezoneAmericaSantoDomingo ->
            "America/Santo_Domingo"

        CatalogsFeedProcessingScheduleTimezoneAmericaSaoPaulo ->
            "America/Sao_Paulo"

        CatalogsFeedProcessingScheduleTimezoneAmericaScoresbysund ->
            "America/Scoresbysund"

        CatalogsFeedProcessingScheduleTimezoneAmericaSitka ->
            "America/Sitka"

        CatalogsFeedProcessingScheduleTimezoneAmericaStJohns ->
            "America/St_Johns"

        CatalogsFeedProcessingScheduleTimezoneAmericaSwiftCurrent ->
            "America/Swift_Current"

        CatalogsFeedProcessingScheduleTimezoneAmericaTegucigalpa ->
            "America/Tegucigalpa"

        CatalogsFeedProcessingScheduleTimezoneAmericaThule ->
            "America/Thule"

        CatalogsFeedProcessingScheduleTimezoneAmericaThunderBay ->
            "America/Thunder_Bay"

        CatalogsFeedProcessingScheduleTimezoneAmericaTijuana ->
            "America/Tijuana"

        CatalogsFeedProcessingScheduleTimezoneAmericaToronto ->
            "America/Toronto"

        CatalogsFeedProcessingScheduleTimezoneAmericaVancouver ->
            "America/Vancouver"

        CatalogsFeedProcessingScheduleTimezoneAmericaWhitehorse ->
            "America/Whitehorse"

        CatalogsFeedProcessingScheduleTimezoneAmericaWinnipeg ->
            "America/Winnipeg"

        CatalogsFeedProcessingScheduleTimezoneAmericaYakutat ->
            "America/Yakutat"

        CatalogsFeedProcessingScheduleTimezoneAmericaYellowknife ->
            "America/Yellowknife"

        CatalogsFeedProcessingScheduleTimezoneAntarcticaCasey ->
            "Antarctica/Casey"

        CatalogsFeedProcessingScheduleTimezoneAntarcticaDavis ->
            "Antarctica/Davis"

        CatalogsFeedProcessingScheduleTimezoneAntarcticaDumontDUrville ->
            "Antarctica/DumontDUrville"

        CatalogsFeedProcessingScheduleTimezoneAntarcticaMacquarie ->
            "Antarctica/Macquarie"

        CatalogsFeedProcessingScheduleTimezoneAntarcticaMawson ->
            "Antarctica/Mawson"

        CatalogsFeedProcessingScheduleTimezoneAntarcticaPalmer ->
            "Antarctica/Palmer"

        CatalogsFeedProcessingScheduleTimezoneAntarcticaRothera ->
            "Antarctica/Rothera"

        CatalogsFeedProcessingScheduleTimezoneAntarcticaSyowa ->
            "Antarctica/Syowa"

        CatalogsFeedProcessingScheduleTimezoneAntarcticaTroll ->
            "Antarctica/Troll"

        CatalogsFeedProcessingScheduleTimezoneAntarcticaVostok ->
            "Antarctica/Vostok"

        CatalogsFeedProcessingScheduleTimezoneAsiaAlmaty ->
            "Asia/Almaty"

        CatalogsFeedProcessingScheduleTimezoneAsiaAmman ->
            "Asia/Amman"

        CatalogsFeedProcessingScheduleTimezoneAsiaAnadyr ->
            "Asia/Anadyr"

        CatalogsFeedProcessingScheduleTimezoneAsiaAqtau ->
            "Asia/Aqtau"

        CatalogsFeedProcessingScheduleTimezoneAsiaAqtobe ->
            "Asia/Aqtobe"

        CatalogsFeedProcessingScheduleTimezoneAsiaAshgabat ->
            "Asia/Ashgabat"

        CatalogsFeedProcessingScheduleTimezoneAsiaAtyrau ->
            "Asia/Atyrau"

        CatalogsFeedProcessingScheduleTimezoneAsiaBaghdad ->
            "Asia/Baghdad"

        CatalogsFeedProcessingScheduleTimezoneAsiaBaku ->
            "Asia/Baku"

        CatalogsFeedProcessingScheduleTimezoneAsiaBangkok ->
            "Asia/Bangkok"

        CatalogsFeedProcessingScheduleTimezoneAsiaBarnaul ->
            "Asia/Barnaul"

        CatalogsFeedProcessingScheduleTimezoneAsiaBeirut ->
            "Asia/Beirut"

        CatalogsFeedProcessingScheduleTimezoneAsiaBishkek ->
            "Asia/Bishkek"

        CatalogsFeedProcessingScheduleTimezoneAsiaBrunei ->
            "Asia/Brunei"

        CatalogsFeedProcessingScheduleTimezoneAsiaChita ->
            "Asia/Chita"

        CatalogsFeedProcessingScheduleTimezoneAsiaChoibalsan ->
            "Asia/Choibalsan"

        CatalogsFeedProcessingScheduleTimezoneAsiaColombo ->
            "Asia/Colombo"

        CatalogsFeedProcessingScheduleTimezoneAsiaDamascus ->
            "Asia/Damascus"

        CatalogsFeedProcessingScheduleTimezoneAsiaDhaka ->
            "Asia/Dhaka"

        CatalogsFeedProcessingScheduleTimezoneAsiaDili ->
            "Asia/Dili"

        CatalogsFeedProcessingScheduleTimezoneAsiaDubai ->
            "Asia/Dubai"

        CatalogsFeedProcessingScheduleTimezoneAsiaDushanbe ->
            "Asia/Dushanbe"

        CatalogsFeedProcessingScheduleTimezoneAsiaFamagusta ->
            "Asia/Famagusta"

        CatalogsFeedProcessingScheduleTimezoneAsiaGaza ->
            "Asia/Gaza"

        CatalogsFeedProcessingScheduleTimezoneAsiaHebron ->
            "Asia/Hebron"

        CatalogsFeedProcessingScheduleTimezoneAsiaHoChiMinh ->
            "Asia/Ho_Chi_Minh"

        CatalogsFeedProcessingScheduleTimezoneAsiaHongKong ->
            "Asia/Hong_Kong"

        CatalogsFeedProcessingScheduleTimezoneAsiaHovd ->
            "Asia/Hovd"

        CatalogsFeedProcessingScheduleTimezoneAsiaIrkutsk ->
            "Asia/Irkutsk"

        CatalogsFeedProcessingScheduleTimezoneAsiaJakarta ->
            "Asia/Jakarta"

        CatalogsFeedProcessingScheduleTimezoneAsiaJayapura ->
            "Asia/Jayapura"

        CatalogsFeedProcessingScheduleTimezoneAsiaJerusalem ->
            "Asia/Jerusalem"

        CatalogsFeedProcessingScheduleTimezoneAsiaKabul ->
            "Asia/Kabul"

        CatalogsFeedProcessingScheduleTimezoneAsiaKamchatka ->
            "Asia/Kamchatka"

        CatalogsFeedProcessingScheduleTimezoneAsiaKarachi ->
            "Asia/Karachi"

        CatalogsFeedProcessingScheduleTimezoneAsiaKathmandu ->
            "Asia/Kathmandu"

        CatalogsFeedProcessingScheduleTimezoneAsiaKhandyga ->
            "Asia/Khandyga"

        CatalogsFeedProcessingScheduleTimezoneAsiaKolkata ->
            "Asia/Kolkata"

        CatalogsFeedProcessingScheduleTimezoneAsiaKrasnoyarsk ->
            "Asia/Krasnoyarsk"

        CatalogsFeedProcessingScheduleTimezoneAsiaKualaLumpur ->
            "Asia/Kuala_Lumpur"

        CatalogsFeedProcessingScheduleTimezoneAsiaKuching ->
            "Asia/Kuching"

        CatalogsFeedProcessingScheduleTimezoneAsiaMacau ->
            "Asia/Macau"

        CatalogsFeedProcessingScheduleTimezoneAsiaMagadan ->
            "Asia/Magadan"

        CatalogsFeedProcessingScheduleTimezoneAsiaMakassar ->
            "Asia/Makassar"

        CatalogsFeedProcessingScheduleTimezoneAsiaManila ->
            "Asia/Manila"

        CatalogsFeedProcessingScheduleTimezoneAsiaNicosia ->
            "Asia/Nicosia"

        CatalogsFeedProcessingScheduleTimezoneAsiaNovokuznetsk ->
            "Asia/Novokuznetsk"

        CatalogsFeedProcessingScheduleTimezoneAsiaNovosibirsk ->
            "Asia/Novosibirsk"

        CatalogsFeedProcessingScheduleTimezoneAsiaOmsk ->
            "Asia/Omsk"

        CatalogsFeedProcessingScheduleTimezoneAsiaOral ->
            "Asia/Oral"

        CatalogsFeedProcessingScheduleTimezoneAsiaPontianak ->
            "Asia/Pontianak"

        CatalogsFeedProcessingScheduleTimezoneAsiaPyongyang ->
            "Asia/Pyongyang"

        CatalogsFeedProcessingScheduleTimezoneAsiaQatar ->
            "Asia/Qatar"

        CatalogsFeedProcessingScheduleTimezoneAsiaQostanay ->
            "Asia/Qostanay"

        CatalogsFeedProcessingScheduleTimezoneAsiaQyzylorda ->
            "Asia/Qyzylorda"

        CatalogsFeedProcessingScheduleTimezoneAsiaRiyadh ->
            "Asia/Riyadh"

        CatalogsFeedProcessingScheduleTimezoneAsiaSakhalin ->
            "Asia/Sakhalin"

        CatalogsFeedProcessingScheduleTimezoneAsiaSamarkand ->
            "Asia/Samarkand"

        CatalogsFeedProcessingScheduleTimezoneAsiaSeoul ->
            "Asia/Seoul"

        CatalogsFeedProcessingScheduleTimezoneAsiaShanghai ->
            "Asia/Shanghai"

        CatalogsFeedProcessingScheduleTimezoneAsiaSingapore ->
            "Asia/Singapore"

        CatalogsFeedProcessingScheduleTimezoneAsiaSrednekolymsk ->
            "Asia/Srednekolymsk"

        CatalogsFeedProcessingScheduleTimezoneAsiaTaipei ->
            "Asia/Taipei"

        CatalogsFeedProcessingScheduleTimezoneAsiaTashkent ->
            "Asia/Tashkent"

        CatalogsFeedProcessingScheduleTimezoneAsiaTbilisi ->
            "Asia/Tbilisi"

        CatalogsFeedProcessingScheduleTimezoneAsiaTehran ->
            "Asia/Tehran"

        CatalogsFeedProcessingScheduleTimezoneAsiaThimphu ->
            "Asia/Thimphu"

        CatalogsFeedProcessingScheduleTimezoneAsiaTokyo ->
            "Asia/Tokyo"

        CatalogsFeedProcessingScheduleTimezoneAsiaTomsk ->
            "Asia/Tomsk"

        CatalogsFeedProcessingScheduleTimezoneAsiaUlaanbaatar ->
            "Asia/Ulaanbaatar"

        CatalogsFeedProcessingScheduleTimezoneAsiaUrumqi ->
            "Asia/Urumqi"

        CatalogsFeedProcessingScheduleTimezoneAsiaUstNera ->
            "Asia/Ust-Nera"

        CatalogsFeedProcessingScheduleTimezoneAsiaVladivostok ->
            "Asia/Vladivostok"

        CatalogsFeedProcessingScheduleTimezoneAsiaYakutsk ->
            "Asia/Yakutsk"

        CatalogsFeedProcessingScheduleTimezoneAsiaYangon ->
            "Asia/Yangon"

        CatalogsFeedProcessingScheduleTimezoneAsiaYekaterinburg ->
            "Asia/Yekaterinburg"

        CatalogsFeedProcessingScheduleTimezoneAsiaYerevan ->
            "Asia/Yerevan"

        CatalogsFeedProcessingScheduleTimezoneAtlanticAzores ->
            "Atlantic/Azores"

        CatalogsFeedProcessingScheduleTimezoneAtlanticBermuda ->
            "Atlantic/Bermuda"

        CatalogsFeedProcessingScheduleTimezoneAtlanticCanary ->
            "Atlantic/Canary"

        CatalogsFeedProcessingScheduleTimezoneAtlanticCapeVerde ->
            "Atlantic/Cape_Verde"

        CatalogsFeedProcessingScheduleTimezoneAtlanticFaroe ->
            "Atlantic/Faroe"

        CatalogsFeedProcessingScheduleTimezoneAtlanticMadeira ->
            "Atlantic/Madeira"

        CatalogsFeedProcessingScheduleTimezoneAtlanticReykjavik ->
            "Atlantic/Reykjavik"

        CatalogsFeedProcessingScheduleTimezoneAtlanticSouthGeorgia ->
            "Atlantic/South_Georgia"

        CatalogsFeedProcessingScheduleTimezoneAtlanticStanley ->
            "Atlantic/Stanley"

        CatalogsFeedProcessingScheduleTimezoneAustraliaAdelaide ->
            "Australia/Adelaide"

        CatalogsFeedProcessingScheduleTimezoneAustraliaBrisbane ->
            "Australia/Brisbane"

        CatalogsFeedProcessingScheduleTimezoneAustraliaBrokenHill ->
            "Australia/Broken_Hill"

        CatalogsFeedProcessingScheduleTimezoneAustraliaCurrie ->
            "Australia/Currie"

        CatalogsFeedProcessingScheduleTimezoneAustraliaDarwin ->
            "Australia/Darwin"

        CatalogsFeedProcessingScheduleTimezoneAustraliaEucla ->
            "Australia/Eucla"

        CatalogsFeedProcessingScheduleTimezoneAustraliaHobart ->
            "Australia/Hobart"

        CatalogsFeedProcessingScheduleTimezoneAustraliaLindeman ->
            "Australia/Lindeman"

        CatalogsFeedProcessingScheduleTimezoneAustraliaLordHowe ->
            "Australia/Lord_Howe"

        CatalogsFeedProcessingScheduleTimezoneAustraliaMelbourne ->
            "Australia/Melbourne"

        CatalogsFeedProcessingScheduleTimezoneAustraliaPerth ->
            "Australia/Perth"

        CatalogsFeedProcessingScheduleTimezoneAustraliaSydney ->
            "Australia/Sydney"

        CatalogsFeedProcessingScheduleTimezoneCET ->
            "CET"

        CatalogsFeedProcessingScheduleTimezoneCST6CDT ->
            "CST6CDT"

        CatalogsFeedProcessingScheduleTimezoneEET ->
            "EET"

        CatalogsFeedProcessingScheduleTimezoneEST ->
            "EST"

        CatalogsFeedProcessingScheduleTimezoneEST5EDT ->
            "EST5EDT"

        CatalogsFeedProcessingScheduleTimezoneEtcGMT ->
            "Etc/GMT"

        CatalogsFeedProcessingScheduleTimezoneEtcGMT+1 ->
            "Etc/GMT+1"

        CatalogsFeedProcessingScheduleTimezoneEtcGMT+10 ->
            "Etc/GMT+10"

        CatalogsFeedProcessingScheduleTimezoneEtcGMT+11 ->
            "Etc/GMT+11"

        CatalogsFeedProcessingScheduleTimezoneEtcGMT+12 ->
            "Etc/GMT+12"

        CatalogsFeedProcessingScheduleTimezoneEtcGMT+2 ->
            "Etc/GMT+2"

        CatalogsFeedProcessingScheduleTimezoneEtcGMT+3 ->
            "Etc/GMT+3"

        CatalogsFeedProcessingScheduleTimezoneEtcGMT+4 ->
            "Etc/GMT+4"

        CatalogsFeedProcessingScheduleTimezoneEtcGMT+5 ->
            "Etc/GMT+5"

        CatalogsFeedProcessingScheduleTimezoneEtcGMT+6 ->
            "Etc/GMT+6"

        CatalogsFeedProcessingScheduleTimezoneEtcGMT+7 ->
            "Etc/GMT+7"

        CatalogsFeedProcessingScheduleTimezoneEtcGMT+8 ->
            "Etc/GMT+8"

        CatalogsFeedProcessingScheduleTimezoneEtcGMT+9 ->
            "Etc/GMT+9"

        CatalogsFeedProcessingScheduleTimezoneEtcGMT1 ->
            "Etc/GMT-1"

        CatalogsFeedProcessingScheduleTimezoneEtcGMT10 ->
            "Etc/GMT-10"

        CatalogsFeedProcessingScheduleTimezoneEtcGMT11 ->
            "Etc/GMT-11"

        CatalogsFeedProcessingScheduleTimezoneEtcGMT12 ->
            "Etc/GMT-12"

        CatalogsFeedProcessingScheduleTimezoneEtcGMT13 ->
            "Etc/GMT-13"

        CatalogsFeedProcessingScheduleTimezoneEtcGMT14 ->
            "Etc/GMT-14"

        CatalogsFeedProcessingScheduleTimezoneEtcGMT2 ->
            "Etc/GMT-2"

        CatalogsFeedProcessingScheduleTimezoneEtcGMT3 ->
            "Etc/GMT-3"

        CatalogsFeedProcessingScheduleTimezoneEtcGMT4 ->
            "Etc/GMT-4"

        CatalogsFeedProcessingScheduleTimezoneEtcGMT5 ->
            "Etc/GMT-5"

        CatalogsFeedProcessingScheduleTimezoneEtcGMT6 ->
            "Etc/GMT-6"

        CatalogsFeedProcessingScheduleTimezoneEtcGMT7 ->
            "Etc/GMT-7"

        CatalogsFeedProcessingScheduleTimezoneEtcGMT8 ->
            "Etc/GMT-8"

        CatalogsFeedProcessingScheduleTimezoneEtcGMT9 ->
            "Etc/GMT-9"

        CatalogsFeedProcessingScheduleTimezoneEtcUTC ->
            "Etc/UTC"

        CatalogsFeedProcessingScheduleTimezoneEuropeAmsterdam ->
            "Europe/Amsterdam"

        CatalogsFeedProcessingScheduleTimezoneEuropeAndorra ->
            "Europe/Andorra"

        CatalogsFeedProcessingScheduleTimezoneEuropeAstrakhan ->
            "Europe/Astrakhan"

        CatalogsFeedProcessingScheduleTimezoneEuropeAthens ->
            "Europe/Athens"

        CatalogsFeedProcessingScheduleTimezoneEuropeBelgrade ->
            "Europe/Belgrade"

        CatalogsFeedProcessingScheduleTimezoneEuropeBerlin ->
            "Europe/Berlin"

        CatalogsFeedProcessingScheduleTimezoneEuropeBrussels ->
            "Europe/Brussels"

        CatalogsFeedProcessingScheduleTimezoneEuropeBucharest ->
            "Europe/Bucharest"

        CatalogsFeedProcessingScheduleTimezoneEuropeBudapest ->
            "Europe/Budapest"

        CatalogsFeedProcessingScheduleTimezoneEuropeChisinau ->
            "Europe/Chisinau"

        CatalogsFeedProcessingScheduleTimezoneEuropeCopenhagen ->
            "Europe/Copenhagen"

        CatalogsFeedProcessingScheduleTimezoneEuropeDublin ->
            "Europe/Dublin"

        CatalogsFeedProcessingScheduleTimezoneEuropeGibraltar ->
            "Europe/Gibraltar"

        CatalogsFeedProcessingScheduleTimezoneEuropeHelsinki ->
            "Europe/Helsinki"

        CatalogsFeedProcessingScheduleTimezoneEuropeIstanbul ->
            "Europe/Istanbul"

        CatalogsFeedProcessingScheduleTimezoneEuropeKaliningrad ->
            "Europe/Kaliningrad"

        CatalogsFeedProcessingScheduleTimezoneEuropeKiev ->
            "Europe/Kiev"

        CatalogsFeedProcessingScheduleTimezoneEuropeKirov ->
            "Europe/Kirov"

        CatalogsFeedProcessingScheduleTimezoneEuropeLisbon ->
            "Europe/Lisbon"

        CatalogsFeedProcessingScheduleTimezoneEuropeLondon ->
            "Europe/London"

        CatalogsFeedProcessingScheduleTimezoneEuropeLuxembourg ->
            "Europe/Luxembourg"

        CatalogsFeedProcessingScheduleTimezoneEuropeMadrid ->
            "Europe/Madrid"

        CatalogsFeedProcessingScheduleTimezoneEuropeMalta ->
            "Europe/Malta"

        CatalogsFeedProcessingScheduleTimezoneEuropeMinsk ->
            "Europe/Minsk"

        CatalogsFeedProcessingScheduleTimezoneEuropeMonaco ->
            "Europe/Monaco"

        CatalogsFeedProcessingScheduleTimezoneEuropeMoscow ->
            "Europe/Moscow"

        CatalogsFeedProcessingScheduleTimezoneEuropeOslo ->
            "Europe/Oslo"

        CatalogsFeedProcessingScheduleTimezoneEuropeParis ->
            "Europe/Paris"

        CatalogsFeedProcessingScheduleTimezoneEuropePrague ->
            "Europe/Prague"

        CatalogsFeedProcessingScheduleTimezoneEuropeRiga ->
            "Europe/Riga"

        CatalogsFeedProcessingScheduleTimezoneEuropeRome ->
            "Europe/Rome"

        CatalogsFeedProcessingScheduleTimezoneEuropeSamara ->
            "Europe/Samara"

        CatalogsFeedProcessingScheduleTimezoneEuropeSaratov ->
            "Europe/Saratov"

        CatalogsFeedProcessingScheduleTimezoneEuropeSimferopol ->
            "Europe/Simferopol"

        CatalogsFeedProcessingScheduleTimezoneEuropeSofia ->
            "Europe/Sofia"

        CatalogsFeedProcessingScheduleTimezoneEuropeStockholm ->
            "Europe/Stockholm"

        CatalogsFeedProcessingScheduleTimezoneEuropeTallinn ->
            "Europe/Tallinn"

        CatalogsFeedProcessingScheduleTimezoneEuropeTirane ->
            "Europe/Tirane"

        CatalogsFeedProcessingScheduleTimezoneEuropeUlyanovsk ->
            "Europe/Ulyanovsk"

        CatalogsFeedProcessingScheduleTimezoneEuropeUzhgorod ->
            "Europe/Uzhgorod"

        CatalogsFeedProcessingScheduleTimezoneEuropeVienna ->
            "Europe/Vienna"

        CatalogsFeedProcessingScheduleTimezoneEuropeVilnius ->
            "Europe/Vilnius"

        CatalogsFeedProcessingScheduleTimezoneEuropeVolgograd ->
            "Europe/Volgograd"

        CatalogsFeedProcessingScheduleTimezoneEuropeWarsaw ->
            "Europe/Warsaw"

        CatalogsFeedProcessingScheduleTimezoneEuropeZaporozhye ->
            "Europe/Zaporozhye"

        CatalogsFeedProcessingScheduleTimezoneEuropeZurich ->
            "Europe/Zurich"

        CatalogsFeedProcessingScheduleTimezoneHST ->
            "HST"

        CatalogsFeedProcessingScheduleTimezoneIndianChagos ->
            "Indian/Chagos"

        CatalogsFeedProcessingScheduleTimezoneIndianChristmas ->
            "Indian/Christmas"

        CatalogsFeedProcessingScheduleTimezoneIndianCocos ->
            "Indian/Cocos"

        CatalogsFeedProcessingScheduleTimezoneIndianKerguelen ->
            "Indian/Kerguelen"

        CatalogsFeedProcessingScheduleTimezoneIndianMahe ->
            "Indian/Mahe"

        CatalogsFeedProcessingScheduleTimezoneIndianMaldives ->
            "Indian/Maldives"

        CatalogsFeedProcessingScheduleTimezoneIndianMauritius ->
            "Indian/Mauritius"

        CatalogsFeedProcessingScheduleTimezoneIndianReunion ->
            "Indian/Reunion"

        CatalogsFeedProcessingScheduleTimezoneMET ->
            "MET"

        CatalogsFeedProcessingScheduleTimezoneMST ->
            "MST"

        CatalogsFeedProcessingScheduleTimezoneMST7MDT ->
            "MST7MDT"

        CatalogsFeedProcessingScheduleTimezonePST8PDT ->
            "PST8PDT"

        CatalogsFeedProcessingScheduleTimezonePacificApia ->
            "Pacific/Apia"

        CatalogsFeedProcessingScheduleTimezonePacificAuckland ->
            "Pacific/Auckland"

        CatalogsFeedProcessingScheduleTimezonePacificBougainville ->
            "Pacific/Bougainville"

        CatalogsFeedProcessingScheduleTimezonePacificChatham ->
            "Pacific/Chatham"

        CatalogsFeedProcessingScheduleTimezonePacificChuuk ->
            "Pacific/Chuuk"

        CatalogsFeedProcessingScheduleTimezonePacificEaster ->
            "Pacific/Easter"

        CatalogsFeedProcessingScheduleTimezonePacificEfate ->
            "Pacific/Efate"

        CatalogsFeedProcessingScheduleTimezonePacificEnderbury ->
            "Pacific/Enderbury"

        CatalogsFeedProcessingScheduleTimezonePacificFakaofo ->
            "Pacific/Fakaofo"

        CatalogsFeedProcessingScheduleTimezonePacificFiji ->
            "Pacific/Fiji"

        CatalogsFeedProcessingScheduleTimezonePacificFunafuti ->
            "Pacific/Funafuti"

        CatalogsFeedProcessingScheduleTimezonePacificGalapagos ->
            "Pacific/Galapagos"

        CatalogsFeedProcessingScheduleTimezonePacificGambier ->
            "Pacific/Gambier"

        CatalogsFeedProcessingScheduleTimezonePacificGuadalcanal ->
            "Pacific/Guadalcanal"

        CatalogsFeedProcessingScheduleTimezonePacificGuam ->
            "Pacific/Guam"

        CatalogsFeedProcessingScheduleTimezonePacificHonolulu ->
            "Pacific/Honolulu"

        CatalogsFeedProcessingScheduleTimezonePacificKiritimati ->
            "Pacific/Kiritimati"

        CatalogsFeedProcessingScheduleTimezonePacificKosrae ->
            "Pacific/Kosrae"

        CatalogsFeedProcessingScheduleTimezonePacificKwajalein ->
            "Pacific/Kwajalein"

        CatalogsFeedProcessingScheduleTimezonePacificMajuro ->
            "Pacific/Majuro"

        CatalogsFeedProcessingScheduleTimezonePacificMarquesas ->
            "Pacific/Marquesas"

        CatalogsFeedProcessingScheduleTimezonePacificNauru ->
            "Pacific/Nauru"

        CatalogsFeedProcessingScheduleTimezonePacificNiue ->
            "Pacific/Niue"

        CatalogsFeedProcessingScheduleTimezonePacificNorfolk ->
            "Pacific/Norfolk"

        CatalogsFeedProcessingScheduleTimezonePacificNoumea ->
            "Pacific/Noumea"

        CatalogsFeedProcessingScheduleTimezonePacificPagoPago ->
            "Pacific/Pago_Pago"

        CatalogsFeedProcessingScheduleTimezonePacificPalau ->
            "Pacific/Palau"

        CatalogsFeedProcessingScheduleTimezonePacificPitcairn ->
            "Pacific/Pitcairn"

        CatalogsFeedProcessingScheduleTimezonePacificPohnpei ->
            "Pacific/Pohnpei"

        CatalogsFeedProcessingScheduleTimezonePacificPortMoresby ->
            "Pacific/Port_Moresby"

        CatalogsFeedProcessingScheduleTimezonePacificRarotonga ->
            "Pacific/Rarotonga"

        CatalogsFeedProcessingScheduleTimezonePacificTahiti ->
            "Pacific/Tahiti"

        CatalogsFeedProcessingScheduleTimezonePacificTarawa ->
            "Pacific/Tarawa"

        CatalogsFeedProcessingScheduleTimezonePacificTongatapu ->
            "Pacific/Tongatapu"

        CatalogsFeedProcessingScheduleTimezonePacificWake ->
            "Pacific/Wake"

        CatalogsFeedProcessingScheduleTimezonePacificWallis ->
            "Pacific/Wallis"

        CatalogsFeedProcessingScheduleTimezoneWET ->
            "WET"

        CatalogsFeedProcessingScheduleTimezoneNull ->
            "null"


encodeCatalogsFeedProcessingScheduleTimezone : CatalogsFeedProcessingScheduleTimezone -> Json.Encode.Value
encodeCatalogsFeedProcessingScheduleTimezone =
    Json.Encode.string << stringFromCatalogsFeedProcessingScheduleTimezone



stringFromCatalogsFeedProcessingStatus : CatalogsFeedProcessingStatus -> String
stringFromCatalogsFeedProcessingStatus model =
    case model of
        CatalogsFeedProcessingStatusCOMPLETED ->
            "COMPLETED"

        CatalogsFeedProcessingStatusCOMPLETEDEARLY ->
            "COMPLETED_EARLY"

        CatalogsFeedProcessingStatusDISAPPROVED ->
            "DISAPPROVED"

        CatalogsFeedProcessingStatusFAILED ->
            "FAILED"

        CatalogsFeedProcessingStatusPROCESSING ->
            "PROCESSING"

        CatalogsFeedProcessingStatusQUEUEDFORPROCESSING ->
            "QUEUED_FOR_PROCESSING"

        CatalogsFeedProcessingStatusUNDERAPPEAL ->
            "UNDER_APPEAL"

        CatalogsFeedProcessingStatusUNDERREVIEW ->
            "UNDER_REVIEW"


encodeCatalogsFeedProcessingStatus : CatalogsFeedProcessingStatus -> Json.Encode.Value
encodeCatalogsFeedProcessingStatus =
    Json.Encode.string << stringFromCatalogsFeedProcessingStatus


encodeCatalogsFeedProductCounts : CatalogsFeedProductCounts -> Json.Encode.Value
encodeCatalogsFeedProductCounts =
    encodeObject << encodeCatalogsFeedProductCountsPairs


encodeCatalogsFeedProductCountsWithTag : ( String, String ) -> CatalogsFeedProductCounts -> Json.Encode.Value
encodeCatalogsFeedProductCountsWithTag (tagField, tag) model =
    encodeObject (encodeCatalogsFeedProductCountsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCatalogsFeedProductCountsPairs : CatalogsFeedProductCounts -> List EncodedField
encodeCatalogsFeedProductCountsPairs model =
    let
        pairs =
            [ maybeEncode "original" Json.Encode.int model.original
            ]
    in
    pairs


encodeCatalogsFeedValidationDetails : CatalogsFeedValidationDetails -> Json.Encode.Value
encodeCatalogsFeedValidationDetails =
    encodeObject << encodeCatalogsFeedValidationDetailsPairs


encodeCatalogsFeedValidationDetailsWithTag : ( String, String ) -> CatalogsFeedValidationDetails -> Json.Encode.Value
encodeCatalogsFeedValidationDetailsWithTag (tagField, tag) model =
    encodeObject (encodeCatalogsFeedValidationDetailsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCatalogsFeedValidationDetailsPairs : CatalogsFeedValidationDetails -> List EncodedField
encodeCatalogsFeedValidationDetailsPairs model =
    let
        pairs =
            [ encode "errors" encodeCatalogsFeedValidationErrors model.errors
            , encode "warnings" encodeCatalogsFeedValidationWarnings model.warnings
            ]
    in
    pairs


encodeCatalogsFeedValidationErrors : CatalogsFeedValidationErrors -> Json.Encode.Value
encodeCatalogsFeedValidationErrors =
    encodeObject << encodeCatalogsFeedValidationErrorsPairs


encodeCatalogsFeedValidationErrorsWithTag : ( String, String ) -> CatalogsFeedValidationErrors -> Json.Encode.Value
encodeCatalogsFeedValidationErrorsWithTag (tagField, tag) model =
    encodeObject (encodeCatalogsFeedValidationErrorsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCatalogsFeedValidationErrorsPairs : CatalogsFeedValidationErrors -> List EncodedField
encodeCatalogsFeedValidationErrorsPairs model =
    let
        pairs =
            [ maybeEncode "fetch_error" Json.Encode.int model.fetchError
            , maybeEncode "fetch_inactive_feed_error" Json.Encode.int model.fetchInactiveFeedError
            , maybeEncode "encoding_error" Json.Encode.int model.encodingError
            , maybeEncode "delimiter_error" Json.Encode.int model.delimiterError
            , maybeEncode "required_columns_missing" Json.Encode.int model.requiredColumnsMissing
            , maybeEncode "image_link_invalid" Json.Encode.int model.imageLinkInvalid
            , maybeEncode "itemid_missing" Json.Encode.int model.itemidMissing
            , maybeEncode "title_missing" Json.Encode.int model.titleMissing
            , maybeEncode "description_missing" Json.Encode.int model.descriptionMissing
            , maybeEncode "product_category_invalid" Json.Encode.int model.productCategoryInvalid
            , maybeEncode "product_link_missing" Json.Encode.int model.productLinkMissing
            , maybeEncode "image_link_missing" Json.Encode.int model.imageLinkMissing
            , maybeEncode "availability_invalid" Json.Encode.int model.availabilityInvalid
            , maybeEncode "product_price_invalid" Json.Encode.int model.productPriceInvalid
            , maybeEncode "link_format_invalid" Json.Encode.int model.linkFormatInvalid
            , maybeEncode "parse_line_error" Json.Encode.int model.parseLineError
            , maybeEncode "adwords_format_invalid" Json.Encode.int model.adwordsFormatInvalid
            , maybeEncode "product_category_missing" Json.Encode.int model.productCategoryMissing
            , maybeEncode "internal_service_error" Json.Encode.int model.internalServiceError
            , maybeEncode "no_verified_domain" Json.Encode.int model.noVerifiedDomain
            , maybeEncode "adult_invalid" Json.Encode.int model.adultInvalid
            , maybeEncode "invalid_domain" Json.Encode.int model.invalidDomain
            , maybeEncode "feed_length_too_long" Json.Encode.int model.feedLengthTooLong
            , maybeEncode "link_length_too_long" Json.Encode.int model.linkLengthTooLong
            , maybeEncode "malformed_xml" Json.Encode.int model.malformedXml
            , maybeEncode "redirect_invalid" Json.Encode.int model.redirectInvalid
            , maybeEncode "price_missing" Json.Encode.int model.priceMissing
            , maybeEncode "feed_too_small" Json.Encode.int model.feedTooSmall
            , maybeEncode "condition_invalid" Json.Encode.int model.conditionInvalid
            , maybeEncode "shopify_no_products" Json.Encode.int model.shopifyNoProducts
            , maybeEncode "max_items_per_item_group_exceeded" Json.Encode.int model.maxItemsPerItemGroupExceeded
            , maybeEncode "item_main_image_download_failure" Json.Encode.int model.itemMainImageDownloadFailure
            , maybeEncode "pinjoin_content_unsafe" Json.Encode.int model.pinjoinContentUnsafe
            , maybeEncode "blocklisted_image_signature" Json.Encode.int model.blocklistedImageSignature
            ]
    in
    pairs


encodeCatalogsFeedValidationWarnings : CatalogsFeedValidationWarnings -> Json.Encode.Value
encodeCatalogsFeedValidationWarnings =
    encodeObject << encodeCatalogsFeedValidationWarningsPairs


encodeCatalogsFeedValidationWarningsWithTag : ( String, String ) -> CatalogsFeedValidationWarnings -> Json.Encode.Value
encodeCatalogsFeedValidationWarningsWithTag (tagField, tag) model =
    encodeObject (encodeCatalogsFeedValidationWarningsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCatalogsFeedValidationWarningsPairs : CatalogsFeedValidationWarnings -> List EncodedField
encodeCatalogsFeedValidationWarningsPairs model =
    let
        pairs =
            [ maybeEncode "title_length_too_long" Json.Encode.int model.titleLengthTooLong
            , maybeEncode "description_length_too_long" Json.Encode.int model.descriptionLengthTooLong
            , maybeEncode "gender_invalid" Json.Encode.int model.genderInvalid
            , maybeEncode "age_group_invalid" Json.Encode.int model.ageGroupInvalid
            , maybeEncode "size_type_invalid" Json.Encode.int model.sizeTypeInvalid
            , maybeEncode "link_format_warning" Json.Encode.int model.linkFormatWarning
            , maybeEncode "duplicate_products" Json.Encode.int model.duplicateProducts
            , maybeEncode "duplicate_links" Json.Encode.int model.duplicateLinks
            , maybeEncode "sales_price_invalid" Json.Encode.int model.salesPriceInvalid
            , maybeEncode "product_category_depth_warning" Json.Encode.int model.productCategoryDepthWarning
            , maybeEncode "adwords_same_as_link" Json.Encode.int model.adwordsSameAsLink
            , maybeEncode "duplicate_headers" Json.Encode.int model.duplicateHeaders
            , maybeEncode "fetch_same_signature" Json.Encode.int model.fetchSameSignature
            , maybeEncode "adwords_format_warning" Json.Encode.int model.adwordsFormatWarning
            , maybeEncode "additional_image_link_warning" Json.Encode.int model.additionalImageLinkWarning
            , maybeEncode "image_link_warning" Json.Encode.int model.imageLinkWarning
            , maybeEncode "shipping_invalid" Json.Encode.int model.shippingInvalid
            , maybeEncode "tax_invalid" Json.Encode.int model.taxInvalid
            , maybeEncode "shipping_weight_invalid" Json.Encode.int model.shippingWeightInvalid
            , maybeEncode "expiration_date_invalid" Json.Encode.int model.expirationDateInvalid
            , maybeEncode "availability_date_invalid" Json.Encode.int model.availabilityDateInvalid
            , maybeEncode "sale_date_invalid" Json.Encode.int model.saleDateInvalid
            , maybeEncode "weight_unit_invalid" Json.Encode.int model.weightUnitInvalid
            , maybeEncode "is_bundle_invalid" Json.Encode.int model.isBundleInvalid
            , maybeEncode "updated_time_invalid" Json.Encode.int model.updatedTimeInvalid
            , maybeEncode "custom_label_length_too_long" Json.Encode.int model.customLabelLengthTooLong
            , maybeEncode "product_type_length_too_long" Json.Encode.int model.productTypeLengthTooLong
            , maybeEncode "too_many_additional_image_links" Json.Encode.int model.tooManyAdditionalImageLinks
            , maybeEncode "multipack_invalid" Json.Encode.int model.multipackInvalid
            , maybeEncode "indexed_product_count_large_delta" Json.Encode.int model.indexedProductCountLargeDelta
            , maybeEncode "item_additional_image_download_failure" Json.Encode.int model.itemAdditionalImageDownloadFailure
            , maybeEncode "optional_product_category_missing" Json.Encode.int model.optionalProductCategoryMissing
            , maybeEncode "optional_product_category_invalid" Json.Encode.int model.optionalProductCategoryInvalid
            , maybeEncode "optional_condition_missing" Json.Encode.int model.optionalConditionMissing
            , maybeEncode "optional_condition_invalid" Json.Encode.int model.optionalConditionInvalid
            , maybeEncode "ios_deep_link_invalid" Json.Encode.int model.iosDeepLinkInvalid
            , maybeEncode "android_deep_link_invalid" Json.Encode.int model.androidDeepLinkInvalid
            , maybeEncode "availability_normalized" Json.Encode.int model.availabilityNormalized
            , maybeEncode "condition_normalized" Json.Encode.int model.conditionNormalized
            , maybeEncode "gender_normalized" Json.Encode.int model.genderNormalized
            , maybeEncode "size_type_normalized" Json.Encode.int model.sizeTypeNormalized
            , maybeEncode "age_group_normalized" Json.Encode.int model.ageGroupNormalized
            , maybeEncode "utm_source_auto_corrected" Json.Encode.int model.utmSourceAutoCorrected
            , maybeEncode "country_does_not_map_to_currency" Json.Encode.int model.countryDoesNotMapToCurrency
            , maybeEncode "min_ad_price_invalid" Json.Encode.int model.minAdPriceInvalid
            ]
    in
    pairs


encodeCatalogsFeedsCreateRequest : CatalogsFeedsCreateRequest -> Json.Encode.Value
encodeCatalogsFeedsCreateRequest =
    encodeObject << encodeCatalogsFeedsCreateRequestPairs


encodeCatalogsFeedsCreateRequestWithTag : ( String, String ) -> CatalogsFeedsCreateRequest -> Json.Encode.Value
encodeCatalogsFeedsCreateRequestWithTag (tagField, tag) model =
    encodeObject (encodeCatalogsFeedsCreateRequestPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCatalogsFeedsCreateRequestPairs : CatalogsFeedsCreateRequest -> List EncodedField
encodeCatalogsFeedsCreateRequestPairs model =
    let
        pairs =
            [ maybeEncode "default_country" encodeCountry model.defaultCountry
            , maybeEncodeNullable "default_availability" encodeProductAvailabilityType model.defaultAvailability
            , maybeEncodeNullable "default_currency" encodeNullableCurrency model.defaultCurrency
            , encode "name" Json.Encode.string model.name
            , encode "format" encodeCatalogsFormat model.format
            , maybeEncode "default_locale" Json.Encode.string model.defaultLocale
            , maybeEncodeNullable "credentials" encodeCatalogsFeedCredentials model.credentials
            , encode "location" Json.Encode.string model.location
            , maybeEncodeNullable "preferred_processing_schedule" encodeCatalogsFeedProcessingSchedule model.preferredProcessingSchedule
            ]
    in
    pairs


encodeCatalogsFeedsUpdateRequest : CatalogsFeedsUpdateRequest -> Json.Encode.Value
encodeCatalogsFeedsUpdateRequest =
    encodeObject << encodeCatalogsFeedsUpdateRequestPairs


encodeCatalogsFeedsUpdateRequestWithTag : ( String, String ) -> CatalogsFeedsUpdateRequest -> Json.Encode.Value
encodeCatalogsFeedsUpdateRequestWithTag (tagField, tag) model =
    encodeObject (encodeCatalogsFeedsUpdateRequestPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCatalogsFeedsUpdateRequestPairs : CatalogsFeedsUpdateRequest -> List EncodedField
encodeCatalogsFeedsUpdateRequestPairs model =
    let
        pairs =
            [ maybeEncodeNullable "default_availability" encodeProductAvailabilityType model.defaultAvailability
            , maybeEncodeNullable "default_currency" encodeNullableCurrency model.defaultCurrency
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "format" encodeCatalogsFormat model.format
            , maybeEncodeNullable "credentials" encodeCatalogsFeedCredentials model.credentials
            , maybeEncode "location" Json.Encode.string model.location
            , maybeEncodeNullable "preferred_processing_schedule" encodeCatalogsFeedProcessingSchedule model.preferredProcessingSchedule
            , maybeEncode "status" encodeCatalogsStatus model.status
            ]
    in
    pairs


stringFromCatalogsFormat : CatalogsFormat -> String
stringFromCatalogsFormat model =
    case model of
        CatalogsFormatTSV ->
            "TSV"

        CatalogsFormatCSV ->
            "CSV"

        CatalogsFormatXML ->
            "XML"


encodeCatalogsFormat : CatalogsFormat -> Json.Encode.Value
encodeCatalogsFormat =
    Json.Encode.string << stringFromCatalogsFormat


encodeCatalogsItems : CatalogsItems -> Json.Encode.Value
encodeCatalogsItems =
    encodeObject << encodeCatalogsItemsPairs


encodeCatalogsItemsWithTag : ( String, String ) -> CatalogsItems -> Json.Encode.Value
encodeCatalogsItemsWithTag (tagField, tag) model =
    encodeObject (encodeCatalogsItemsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCatalogsItemsPairs : CatalogsItems -> List EncodedField
encodeCatalogsItemsPairs model =
    let
        pairs =
            [ maybeEncode "items" (Json.Encode.list encodeItemBatchRecord) model.items
            ]
    in
    pairs


encodeCatalogsItemsBatch : CatalogsItemsBatch -> Json.Encode.Value
encodeCatalogsItemsBatch =
    encodeObject << encodeCatalogsItemsBatchPairs


encodeCatalogsItemsBatchWithTag : ( String, String ) -> CatalogsItemsBatch -> Json.Encode.Value
encodeCatalogsItemsBatchWithTag (tagField, tag) model =
    encodeObject (encodeCatalogsItemsBatchPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCatalogsItemsBatchPairs : CatalogsItemsBatch -> List EncodedField
encodeCatalogsItemsBatchPairs model =
    let
        pairs =
            [ maybeEncode "items" (Json.Encode.list encodeItemProcessingRecord) model.items
            , maybeEncode "batch_id" Json.Encode.string model.batchId
            , maybeEncode "created_time" Api.Time.encodeDateTime model.createdTime
            , maybeEncodeNullable "completed_time" Api.Time.encodeDateTime model.completedTime
            , maybeEncode "status" encodeBatchOperationStatus model.status
            ]
    in
    pairs


encodeCatalogsItemsBatchRequest : CatalogsItemsBatchRequest -> Json.Encode.Value
encodeCatalogsItemsBatchRequest =
    encodeObject << encodeCatalogsItemsBatchRequestPairs


encodeCatalogsItemsBatchRequestWithTag : ( String, String ) -> CatalogsItemsBatchRequest -> Json.Encode.Value
encodeCatalogsItemsBatchRequestWithTag (tagField, tag) model =
    encodeObject (encodeCatalogsItemsBatchRequestPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCatalogsItemsBatchRequestPairs : CatalogsItemsBatchRequest -> List EncodedField
encodeCatalogsItemsBatchRequestPairs model =
    let
        pairs =
            [ maybeEncode "country" encodeCountry model.country
            , maybeEncode "language" encodeLanguage model.language
            , maybeEncode "operation" encodeBatchOperation model.operation
            , maybeEncode "items" (Json.Encode.list encodeItemBatchRecord) model.items
            ]
    in
    pairs


encodeCatalogsProductGroup : CatalogsProductGroup -> Json.Encode.Value
encodeCatalogsProductGroup =
    encodeObject << encodeCatalogsProductGroupPairs


encodeCatalogsProductGroupWithTag : ( String, String ) -> CatalogsProductGroup -> Json.Encode.Value
encodeCatalogsProductGroupWithTag (tagField, tag) model =
    encodeObject (encodeCatalogsProductGroupPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCatalogsProductGroupPairs : CatalogsProductGroup -> List EncodedField
encodeCatalogsProductGroupPairs model =
    let
        pairs =
            [ encode "id" Json.Encode.string model.id
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncodeNullable "description" Json.Encode.string model.description
            , encode "filters" encodeCatalogsProductGroupFilters model.filters
            , maybeEncode "type" encodeCatalogsProductGroupType model.type_
            , maybeEncode "status" encodeCatalogsProductGroupStatus model.status
            , maybeEncode "feed_id" Json.Encode.string model.feedId
            , maybeEncode "created_at" Json.Encode.int model.createdAt
            , maybeEncode "updated_at" Json.Encode.int model.updatedAt
            ]
    in
    pairs


encodeCatalogsProductGroupCreateRequest : CatalogsProductGroupCreateRequest -> Json.Encode.Value
encodeCatalogsProductGroupCreateRequest =
    encodeObject << encodeCatalogsProductGroupCreateRequestPairs


encodeCatalogsProductGroupCreateRequestWithTag : ( String, String ) -> CatalogsProductGroupCreateRequest -> Json.Encode.Value
encodeCatalogsProductGroupCreateRequestWithTag (tagField, tag) model =
    encodeObject (encodeCatalogsProductGroupCreateRequestPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCatalogsProductGroupCreateRequestPairs : CatalogsProductGroupCreateRequest -> List EncodedField
encodeCatalogsProductGroupCreateRequestPairs model =
    let
        pairs =
            [ encode "feed_id" Json.Encode.string model.feedId
            , encode "name" Json.Encode.string model.name
            , maybeEncodeNullable "description" Json.Encode.string model.description
            , encode "filters" encodeCatalogsProductGroupFilters model.filters
            ]
    in
    pairs


encodeCatalogsProductGroupCurrencyCriteria : CatalogsProductGroupCurrencyCriteria -> Json.Encode.Value
encodeCatalogsProductGroupCurrencyCriteria =
    encodeObject << encodeCatalogsProductGroupCurrencyCriteriaPairs


encodeCatalogsProductGroupCurrencyCriteriaWithTag : ( String, String ) -> CatalogsProductGroupCurrencyCriteria -> Json.Encode.Value
encodeCatalogsProductGroupCurrencyCriteriaWithTag (tagField, tag) model =
    encodeObject (encodeCatalogsProductGroupCurrencyCriteriaPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCatalogsProductGroupCurrencyCriteriaPairs : CatalogsProductGroupCurrencyCriteria -> List EncodedField
encodeCatalogsProductGroupCurrencyCriteriaPairs model =
    let
        pairs =
            [ encode "values" encodeNonNullableCatalogsCurrency model.values
            , encode "negated" Json.Encode.bool model.negated
            ]
    in
    pairs


encodeCatalogsProductGroupFilterKeys : CatalogsProductGroupFilterKeys -> Json.Encode.Value
encodeCatalogsProductGroupFilterKeys =
    encodeObject << encodeCatalogsProductGroupFilterKeysPairs


encodeCatalogsProductGroupFilterKeysWithTag : ( String, String ) -> CatalogsProductGroupFilterKeys -> Json.Encode.Value
encodeCatalogsProductGroupFilterKeysWithTag (tagField, tag) model =
    encodeObject (encodeCatalogsProductGroupFilterKeysPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCatalogsProductGroupFilterKeysPairs : CatalogsProductGroupFilterKeys -> List EncodedField
encodeCatalogsProductGroupFilterKeysPairs model =
    let
        pairs =
            [ encode "MIN_PRICE" encodeCatalogsProductGroupPricingCriteria model.mINPRICE
            , encode "MAX_PRICE" encodeCatalogsProductGroupPricingCriteria model.mAXPRICE
            , encode "CURRENCY" encodeCatalogsProductGroupCurrencyCriteria model.cURRENCY
            , encode "ITEM_ID" encodeCatalogsProductGroupCurrencyCriteria model.iTEMID
            , encode "AVAILABILITY" encodeCatalogsProductGroupMultipleStringCriteria model.aVAILABILITY
            , encode "BRAND" encodeCatalogsProductGroupMultipleStringCriteria model.bRAND
            , encode "CONDITION" encodeCatalogsProductGroupMultipleStringCriteria model.cONDITION
            , encode "CUSTOM_LABEL_0" encodeCatalogsProductGroupMultipleStringCriteria model.cUSTOMLABEL0
            , encode "CUSTOM_LABEL_1" encodeCatalogsProductGroupMultipleStringCriteria model.cUSTOMLABEL1
            , encode "CUSTOM_LABEL_2" encodeCatalogsProductGroupMultipleStringCriteria model.cUSTOMLABEL2
            , encode "CUSTOM_LABEL_3" encodeCatalogsProductGroupMultipleStringCriteria model.cUSTOMLABEL3
            , encode "CUSTOM_LABEL_4" encodeCatalogsProductGroupMultipleStringCriteria model.cUSTOMLABEL4
            , encode "ITEM_GROUP_ID" encodeCatalogsProductGroupMultipleStringCriteria model.iTEMGROUPID
            , encode "GENDER" encodeCatalogsProductGroupMultipleStringCriteria model.gENDER
            , encode "PRODUCT_TYPE_4" encodeCatalogsProductGroupMultipleStringListCriteria model.pRODUCTTYPE4
            , encode "PRODUCT_TYPE_3" encodeCatalogsProductGroupMultipleStringListCriteria model.pRODUCTTYPE3
            , encode "PRODUCT_TYPE_2" encodeCatalogsProductGroupMultipleStringListCriteria model.pRODUCTTYPE2
            , encode "PRODUCT_TYPE_1" encodeCatalogsProductGroupMultipleStringListCriteria model.pRODUCTTYPE1
            , encode "PRODUCT_TYPE_0" encodeCatalogsProductGroupMultipleStringListCriteria model.pRODUCTTYPE0
            , encode "GOOGLE_PRODUCT_CATEGORY_6" encodeCatalogsProductGroupMultipleStringListCriteria model.gOOGLEPRODUCTCATEGORY6
            , encode "GOOGLE_PRODUCT_CATEGORY_5" encodeCatalogsProductGroupMultipleStringListCriteria model.gOOGLEPRODUCTCATEGORY5
            , encode "GOOGLE_PRODUCT_CATEGORY_4" encodeCatalogsProductGroupMultipleStringListCriteria model.gOOGLEPRODUCTCATEGORY4
            , encode "GOOGLE_PRODUCT_CATEGORY_3" encodeCatalogsProductGroupMultipleStringListCriteria model.gOOGLEPRODUCTCATEGORY3
            , encode "GOOGLE_PRODUCT_CATEGORY_2" encodeCatalogsProductGroupMultipleStringListCriteria model.gOOGLEPRODUCTCATEGORY2
            , encode "GOOGLE_PRODUCT_CATEGORY_1" encodeCatalogsProductGroupMultipleStringListCriteria model.gOOGLEPRODUCTCATEGORY1
            , encode "GOOGLE_PRODUCT_CATEGORY_0" encodeCatalogsProductGroupMultipleStringListCriteria model.gOOGLEPRODUCTCATEGORY0
            ]
    in
    pairs


encodeCatalogsProductGroupFilters : CatalogsProductGroupFilters -> Json.Encode.Value
encodeCatalogsProductGroupFilters =
    encodeObject << encodeCatalogsProductGroupFiltersPairs


encodeCatalogsProductGroupFiltersWithTag : ( String, String ) -> CatalogsProductGroupFilters -> Json.Encode.Value
encodeCatalogsProductGroupFiltersWithTag (tagField, tag) model =
    encodeObject (encodeCatalogsProductGroupFiltersPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCatalogsProductGroupFiltersPairs : CatalogsProductGroupFilters -> List EncodedField
encodeCatalogsProductGroupFiltersPairs model =
    let
        pairs =
            [ maybeEncode "any_of" (Json.Encode.list encodeCatalogsProductGroupFilterKeys) model.anyOf
            , maybeEncode "all_of" (Json.Encode.list encodeCatalogsProductGroupFilterKeys) model.allOf
            ]
    in
    pairs


encodeCatalogsProductGroupFiltersAnyOf : CatalogsProductGroupFiltersAnyOf -> Json.Encode.Value
encodeCatalogsProductGroupFiltersAnyOf =
    encodeObject << encodeCatalogsProductGroupFiltersAnyOfPairs


encodeCatalogsProductGroupFiltersAnyOfWithTag : ( String, String ) -> CatalogsProductGroupFiltersAnyOf -> Json.Encode.Value
encodeCatalogsProductGroupFiltersAnyOfWithTag (tagField, tag) model =
    encodeObject (encodeCatalogsProductGroupFiltersAnyOfPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCatalogsProductGroupFiltersAnyOfPairs : CatalogsProductGroupFiltersAnyOf -> List EncodedField
encodeCatalogsProductGroupFiltersAnyOfPairs model =
    let
        pairs =
            [ maybeEncode "any_of" (Json.Encode.list encodeCatalogsProductGroupFilterKeys) model.anyOf
            ]
    in
    pairs


encodeCatalogsProductGroupMultipleStringCriteria : CatalogsProductGroupMultipleStringCriteria -> Json.Encode.Value
encodeCatalogsProductGroupMultipleStringCriteria =
    encodeObject << encodeCatalogsProductGroupMultipleStringCriteriaPairs


encodeCatalogsProductGroupMultipleStringCriteriaWithTag : ( String, String ) -> CatalogsProductGroupMultipleStringCriteria -> Json.Encode.Value
encodeCatalogsProductGroupMultipleStringCriteriaWithTag (tagField, tag) model =
    encodeObject (encodeCatalogsProductGroupMultipleStringCriteriaPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCatalogsProductGroupMultipleStringCriteriaPairs : CatalogsProductGroupMultipleStringCriteria -> List EncodedField
encodeCatalogsProductGroupMultipleStringCriteriaPairs model =
    let
        pairs =
            [ encode "values" (Json.Encode.list Json.Encode.string) model.values
            , encode "negated" Json.Encode.bool model.negated
            ]
    in
    pairs


encodeCatalogsProductGroupMultipleStringListCriteria : CatalogsProductGroupMultipleStringListCriteria -> Json.Encode.Value
encodeCatalogsProductGroupMultipleStringListCriteria =
    encodeObject << encodeCatalogsProductGroupMultipleStringListCriteriaPairs


encodeCatalogsProductGroupMultipleStringListCriteriaWithTag : ( String, String ) -> CatalogsProductGroupMultipleStringListCriteria -> Json.Encode.Value
encodeCatalogsProductGroupMultipleStringListCriteriaWithTag (tagField, tag) model =
    encodeObject (encodeCatalogsProductGroupMultipleStringListCriteriaPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCatalogsProductGroupMultipleStringListCriteriaPairs : CatalogsProductGroupMultipleStringListCriteria -> List EncodedField
encodeCatalogsProductGroupMultipleStringListCriteriaPairs model =
    let
        pairs =
            [ encode "values" (Json.Encode.list (Json.Encode.list Json.Encode.string)) model.values
            , encode "negated" Json.Encode.bool model.negated
            ]
    in
    pairs


encodeCatalogsProductGroupPricingCriteria : CatalogsProductGroupPricingCriteria -> Json.Encode.Value
encodeCatalogsProductGroupPricingCriteria =
    encodeObject << encodeCatalogsProductGroupPricingCriteriaPairs


encodeCatalogsProductGroupPricingCriteriaWithTag : ( String, String ) -> CatalogsProductGroupPricingCriteria -> Json.Encode.Value
encodeCatalogsProductGroupPricingCriteriaWithTag (tagField, tag) model =
    encodeObject (encodeCatalogsProductGroupPricingCriteriaPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCatalogsProductGroupPricingCriteriaPairs : CatalogsProductGroupPricingCriteria -> List EncodedField
encodeCatalogsProductGroupPricingCriteriaPairs model =
    let
        pairs =
            [ encode "inclusion" Json.Encode.bool model.inclusion
            , encode "values" Json.Encode.float model.values
            , encode "negated" Json.Encode.bool model.negated
            ]
    in
    pairs


stringFromCatalogsProductGroupStatus : CatalogsProductGroupStatus -> String
stringFromCatalogsProductGroupStatus model =
    case model of
        CatalogsProductGroupStatusACTIVE ->
            "ACTIVE"

        CatalogsProductGroupStatusINACTIVE ->
            "INACTIVE"


encodeCatalogsProductGroupStatus : CatalogsProductGroupStatus -> Json.Encode.Value
encodeCatalogsProductGroupStatus =
    Json.Encode.string << stringFromCatalogsProductGroupStatus


stringFromCatalogsProductGroupType : CatalogsProductGroupType -> String
stringFromCatalogsProductGroupType model =
    case model of
        CatalogsProductGroupTypeMERCHANTCREATED ->
            "MERCHANT_CREATED"

        CatalogsProductGroupTypeALLPRODUCTS ->
            "ALL_PRODUCTS"

        CatalogsProductGroupTypeBESTDEALS ->
            "BEST_DEALS"

        CatalogsProductGroupTypePINNERFAVORITES ->
            "PINNER_FAVORITES"

        CatalogsProductGroupTypeTOPSELLERS ->
            "TOP_SELLERS"

        CatalogsProductGroupTypeBACKINSTOCK ->
            "BACK_IN_STOCK"

        CatalogsProductGroupTypeNEWARRIVALS ->
            "NEW_ARRIVALS"


encodeCatalogsProductGroupType : CatalogsProductGroupType -> Json.Encode.Value
encodeCatalogsProductGroupType =
    Json.Encode.string << stringFromCatalogsProductGroupType


encodeCatalogsProductGroupUpdateRequest : CatalogsProductGroupUpdateRequest -> Json.Encode.Value
encodeCatalogsProductGroupUpdateRequest =
    encodeObject << encodeCatalogsProductGroupUpdateRequestPairs


encodeCatalogsProductGroupUpdateRequestWithTag : ( String, String ) -> CatalogsProductGroupUpdateRequest -> Json.Encode.Value
encodeCatalogsProductGroupUpdateRequestWithTag (tagField, tag) model =
    encodeObject (encodeCatalogsProductGroupUpdateRequestPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCatalogsProductGroupUpdateRequestPairs : CatalogsProductGroupUpdateRequest -> List EncodedField
encodeCatalogsProductGroupUpdateRequestPairs model =
    let
        pairs =
            [ encode "feed_id" Json.Encode.string model.feedId
            , encode "name" Json.Encode.string model.name
            , maybeEncodeNullable "description" Json.Encode.string model.description
            , encode "filters" encodeCatalogsProductGroupFilters model.filters
            ]
    in
    pairs


stringFromCatalogsStatus : CatalogsStatus -> String
stringFromCatalogsStatus model =
    case model of
        CatalogsStatusACTIVE ->
            "ACTIVE"

        CatalogsStatusINACTIVE ->
            "INACTIVE"


encodeCatalogsStatus : CatalogsStatus -> Json.Encode.Value
encodeCatalogsStatus =
    Json.Encode.string << stringFromCatalogsStatus


encodeConditionFilter : ConditionFilter -> Json.Encode.Value
encodeConditionFilter =
    encodeObject << encodeConditionFilterPairs


encodeConditionFilterWithTag : ( String, String ) -> ConditionFilter -> Json.Encode.Value
encodeConditionFilterWithTag (tagField, tag) model =
    encodeObject (encodeConditionFilterPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeConditionFilterPairs : ConditionFilter -> List EncodedField
encodeConditionFilterPairs model =
    let
        pairs =
            [ encode "CONDITION" encodeCatalogsProductGroupMultipleStringCriteria model.cONDITION
            ]
    in
    pairs


stringFromConversionAttributionWindowDays : ConversionAttributionWindowDays -> String
stringFromConversionAttributionWindowDays =
    String.fromInt << intFromConversionAttributionWindowDays


intFromConversionAttributionWindowDays : ConversionAttributionWindowDays -> Int
intFromConversionAttributionWindowDays model =
    case model of
        ConversionAttributionWindowDays1 ->
            1

        ConversionAttributionWindowDays7 ->
            7

        ConversionAttributionWindowDays30 ->
            30

        ConversionAttributionWindowDays60 ->
            60


encodeConversionAttributionWindowDays : ConversionAttributionWindowDays -> Json.Encode.Value
encodeConversionAttributionWindowDays =
    Json.Encode.int << intFromConversionAttributionWindowDays


stringFromConversionReportAttributionType : ConversionReportAttributionType -> String
stringFromConversionReportAttributionType model =
    case model of
        ConversionReportAttributionTypeINDIVIDUAL ->
            "INDIVIDUAL"

        ConversionReportAttributionTypeHOUSEHOLD ->
            "HOUSEHOLD"


encodeConversionReportAttributionType : ConversionReportAttributionType -> Json.Encode.Value
encodeConversionReportAttributionType =
    Json.Encode.string << stringFromConversionReportAttributionType


stringFromConversionReportTimeType : ConversionReportTimeType -> String
stringFromConversionReportTimeType model =
    case model of
        ConversionReportTimeTypeADACTION ->
            "TIME_OF_AD_ACTION"

        ConversionReportTimeTypeCONVERSION ->
            "TIME_OF_CONVERSION"


encodeConversionReportTimeType : ConversionReportTimeType -> Json.Encode.Value
encodeConversionReportTimeType =
    Json.Encode.string << stringFromConversionReportTimeType


stringFromCountry : Country -> String
stringFromCountry model =
    case model of
        CountryAD ->
            "AD"

        CountryAE ->
            "AE"

        CountryAF ->
            "AF"

        CountryAG ->
            "AG"

        CountryAI ->
            "AI"

        CountryAL ->
            "AL"

        CountryAM ->
            "AM"

        CountryAO ->
            "AO"

        CountryAQ ->
            "AQ"

        CountryAR ->
            "AR"

        CountryAS ->
            "AS"

        CountryAT ->
            "AT"

        CountryAU ->
            "AU"

        CountryAW ->
            "AW"

        CountryAX ->
            "AX"

        CountryAZ ->
            "AZ"

        CountryBA ->
            "BA"

        CountryBB ->
            "BB"

        CountryBD ->
            "BD"

        CountryBE ->
            "BE"

        CountryBF ->
            "BF"

        CountryBG ->
            "BG"

        CountryBH ->
            "BH"

        CountryBI ->
            "BI"

        CountryBJ ->
            "BJ"

        CountryBL ->
            "BL"

        CountryBM ->
            "BM"

        CountryBN ->
            "BN"

        CountryBO ->
            "BO"

        CountryBQ ->
            "BQ"

        CountryBR ->
            "BR"

        CountryBS ->
            "BS"

        CountryBT ->
            "BT"

        CountryBV ->
            "BV"

        CountryBW ->
            "BW"

        CountryBY ->
            "BY"

        CountryBZ ->
            "BZ"

        CountryCA ->
            "CA"

        CountryCC ->
            "CC"

        CountryCD ->
            "CD"

        CountryCF ->
            "CF"

        CountryCG ->
            "CG"

        CountryCH ->
            "CH"

        CountryCI ->
            "CI"

        CountryCK ->
            "CK"

        CountryCL ->
            "CL"

        CountryCM ->
            "CM"

        CountryCO ->
            "CO"

        CountryCR ->
            "CR"

        CountryCU ->
            "CU"

        CountryCV ->
            "CV"

        CountryCW ->
            "CW"

        CountryCX ->
            "CX"

        CountryCY ->
            "CY"

        CountryCZ ->
            "CZ"

        CountryDE ->
            "DE"

        CountryDJ ->
            "DJ"

        CountryDK ->
            "DK"

        CountryDM ->
            "DM"

        CountryDO ->
            "DO"

        CountryDZ ->
            "DZ"

        CountryEC ->
            "EC"

        CountryEE ->
            "EE"

        CountryEG ->
            "EG"

        CountryEH ->
            "EH"

        CountryER ->
            "ER"

        CountryES ->
            "ES"

        CountryET ->
            "ET"

        CountryFI ->
            "FI"

        CountryFJ ->
            "FJ"

        CountryFK ->
            "FK"

        CountryFM ->
            "FM"

        CountryFO ->
            "FO"

        CountryFR ->
            "FR"

        CountryGA ->
            "GA"

        CountryGB ->
            "GB"

        CountryGD ->
            "GD"

        CountryGE ->
            "GE"

        CountryGF ->
            "GF"

        CountryGG ->
            "GG"

        CountryGH ->
            "GH"

        CountryGI ->
            "GI"

        CountryGL ->
            "GL"

        CountryGM ->
            "GM"

        CountryGN ->
            "GN"

        CountryGP ->
            "GP"

        CountryGQ ->
            "GQ"

        CountryGR ->
            "GR"

        CountryGS ->
            "GS"

        CountryGT ->
            "GT"

        CountryGU ->
            "GU"

        CountryGW ->
            "GW"

        CountryGY ->
            "GY"

        CountryHK ->
            "HK"

        CountryHM ->
            "HM"

        CountryHN ->
            "HN"

        CountryHR ->
            "HR"

        CountryHT ->
            "HT"

        CountryHU ->
            "HU"

        CountryID ->
            "ID"

        CountryIE ->
            "IE"

        CountryIL ->
            "IL"

        CountryIM ->
            "IM"

        CountryIN ->
            "IN"

        CountryIO ->
            "IO"

        CountryIQ ->
            "IQ"

        CountryIR ->
            "IR"

        CountryIS ->
            "IS"

        CountryIT ->
            "IT"

        CountryJE ->
            "JE"

        CountryJM ->
            "JM"

        CountryJO ->
            "JO"

        CountryJP ->
            "JP"

        CountryKE ->
            "KE"

        CountryKG ->
            "KG"

        CountryKH ->
            "KH"

        CountryKI ->
            "KI"

        CountryKM ->
            "KM"

        CountryKN ->
            "KN"

        CountryKR ->
            "KR"

        CountryKW ->
            "KW"

        CountryKY ->
            "KY"

        CountryKZ ->
            "KZ"

        CountryLA ->
            "LA"

        CountryLB ->
            "LB"

        CountryLC ->
            "LC"

        CountryLI ->
            "LI"

        CountryLK ->
            "LK"

        CountryLR ->
            "LR"

        CountryLS ->
            "LS"

        CountryLT ->
            "LT"

        CountryLU ->
            "LU"

        CountryLV ->
            "LV"

        CountryLY ->
            "LY"

        CountryMA ->
            "MA"

        CountryMC ->
            "MC"

        CountryMD ->
            "MD"

        CountryME ->
            "ME"

        CountryMF ->
            "MF"

        CountryMG ->
            "MG"

        CountryMH ->
            "MH"

        CountryMK ->
            "MK"

        CountryML ->
            "ML"

        CountryMM ->
            "MM"

        CountryMN ->
            "MN"

        CountryMO ->
            "MO"

        CountryMP ->
            "MP"

        CountryMQ ->
            "MQ"

        CountryMR ->
            "MR"

        CountryMS ->
            "MS"

        CountryMT ->
            "MT"

        CountryMU ->
            "MU"

        CountryMV ->
            "MV"

        CountryMW ->
            "MW"

        CountryMX ->
            "MX"

        CountryMY ->
            "MY"

        CountryMZ ->
            "MZ"

        CountryNA ->
            "NA"

        CountryNC ->
            "NC"

        CountryNE ->
            "NE"

        CountryNF ->
            "NF"

        CountryNG ->
            "NG"

        CountryNI ->
            "NI"

        CountryNL ->
            "NL"

        CountryNO ->
            "NO"

        CountryNP ->
            "NP"

        CountryNR ->
            "NR"

        CountryNU ->
            "NU"

        CountryNZ ->
            "NZ"

        CountryOM ->
            "OM"

        CountryPA ->
            "PA"

        CountryPE ->
            "PE"

        CountryPF ->
            "PF"

        CountryPG ->
            "PG"

        CountryPH ->
            "PH"

        CountryPK ->
            "PK"

        CountryPL ->
            "PL"

        CountryPM ->
            "PM"

        CountryPN ->
            "PN"

        CountryPR ->
            "PR"

        CountryPS ->
            "PS"

        CountryPT ->
            "PT"

        CountryPW ->
            "PW"

        CountryPY ->
            "PY"

        CountryQA ->
            "QA"

        CountryRE ->
            "RE"

        CountryRO ->
            "RO"

        CountryRS ->
            "RS"

        CountryRU ->
            "RU"

        CountryRW ->
            "RW"

        CountrySA ->
            "SA"

        CountrySB ->
            "SB"

        CountrySC ->
            "SC"

        CountrySD ->
            "SD"

        CountrySE ->
            "SE"

        CountrySG ->
            "SG"

        CountrySH ->
            "SH"

        CountrySI ->
            "SI"

        CountrySJ ->
            "SJ"

        CountrySK ->
            "SK"

        CountrySL ->
            "SL"

        CountrySM ->
            "SM"

        CountrySN ->
            "SN"

        CountrySO ->
            "SO"

        CountrySR ->
            "SR"

        CountrySS ->
            "SS"

        CountryST ->
            "ST"

        CountrySV ->
            "SV"

        CountrySX ->
            "SX"

        CountrySY ->
            "SY"

        CountrySZ ->
            "SZ"

        CountryTC ->
            "TC"

        CountryTD ->
            "TD"

        CountryTF ->
            "TF"

        CountryTG ->
            "TG"

        CountryTH ->
            "TH"

        CountryTJ ->
            "TJ"

        CountryTK ->
            "TK"

        CountryTL ->
            "TL"

        CountryTM ->
            "TM"

        CountryTN ->
            "TN"

        CountryTO ->
            "TO"

        CountryTR ->
            "TR"

        CountryTT ->
            "TT"

        CountryTV ->
            "TV"

        CountryTW ->
            "TW"

        CountryTZ ->
            "TZ"

        CountryUA ->
            "UA"

        CountryUG ->
            "UG"

        CountryUM ->
            "UM"

        CountryUS ->
            "US"

        CountryUY ->
            "UY"

        CountryUZ ->
            "UZ"

        CountryVA ->
            "VA"

        CountryVC ->
            "VC"

        CountryVE ->
            "VE"

        CountryVG ->
            "VG"

        CountryVI ->
            "VI"

        CountryVN ->
            "VN"

        CountryVU ->
            "VU"

        CountryWF ->
            "WF"

        CountryWS ->
            "WS"

        CountryYE ->
            "YE"

        CountryYT ->
            "YT"

        CountryZA ->
            "ZA"

        CountryZM ->
            "ZM"

        CountryZW ->
            "ZW"


encodeCountry : Country -> Json.Encode.Value
encodeCountry =
    Json.Encode.string << stringFromCountry


stringFromCurrency : Currency -> String
stringFromCurrency model =
    case model of
        CurrencyUNK ->
            "UNK"

        CurrencyUSD ->
            "USD"

        CurrencyGBP ->
            "GBP"

        CurrencyCAD ->
            "CAD"

        CurrencyEUR ->
            "EUR"

        CurrencyAUD ->
            "AUD"

        CurrencyNZD ->
            "NZD"

        CurrencySEK ->
            "SEK"

        CurrencyILS ->
            "ILS"

        CurrencyCHF ->
            "CHF"

        CurrencyHKD ->
            "HKD"

        CurrencyJPY ->
            "JPY"

        CurrencySGD ->
            "SGD"

        CurrencyKRW ->
            "KRW"

        CurrencyNOK ->
            "NOK"

        CurrencyDKK ->
            "DKK"

        CurrencyPLN ->
            "PLN"

        CurrencyRON ->
            "RON"

        CurrencyHUF ->
            "HUF"

        CurrencyCZK ->
            "CZK"

        CurrencyBRL ->
            "BRL"

        CurrencyMXN ->
            "MXN"

        CurrencyARS ->
            "ARS"

        CurrencyCLP ->
            "CLP"

        CurrencyCOP ->
            "COP"


encodeCurrency : Currency -> Json.Encode.Value
encodeCurrency =
    Json.Encode.string << stringFromCurrency


encodeCurrencyFilter : CurrencyFilter -> Json.Encode.Value
encodeCurrencyFilter =
    encodeObject << encodeCurrencyFilterPairs


encodeCurrencyFilterWithTag : ( String, String ) -> CurrencyFilter -> Json.Encode.Value
encodeCurrencyFilterWithTag (tagField, tag) model =
    encodeObject (encodeCurrencyFilterPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurrencyFilterPairs : CurrencyFilter -> List EncodedField
encodeCurrencyFilterPairs model =
    let
        pairs =
            [ encode "CURRENCY" encodeCatalogsProductGroupCurrencyCriteria model.cURRENCY
            ]
    in
    pairs


encodeCustomLabel0Filter : CustomLabel0Filter -> Json.Encode.Value
encodeCustomLabel0Filter =
    encodeObject << encodeCustomLabel0FilterPairs


encodeCustomLabel0FilterWithTag : ( String, String ) -> CustomLabel0Filter -> Json.Encode.Value
encodeCustomLabel0FilterWithTag (tagField, tag) model =
    encodeObject (encodeCustomLabel0FilterPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCustomLabel0FilterPairs : CustomLabel0Filter -> List EncodedField
encodeCustomLabel0FilterPairs model =
    let
        pairs =
            [ encode "CUSTOM_LABEL_0" encodeCatalogsProductGroupMultipleStringCriteria model.cUSTOMLABEL0
            ]
    in
    pairs


encodeCustomLabel1Filter : CustomLabel1Filter -> Json.Encode.Value
encodeCustomLabel1Filter =
    encodeObject << encodeCustomLabel1FilterPairs


encodeCustomLabel1FilterWithTag : ( String, String ) -> CustomLabel1Filter -> Json.Encode.Value
encodeCustomLabel1FilterWithTag (tagField, tag) model =
    encodeObject (encodeCustomLabel1FilterPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCustomLabel1FilterPairs : CustomLabel1Filter -> List EncodedField
encodeCustomLabel1FilterPairs model =
    let
        pairs =
            [ encode "CUSTOM_LABEL_1" encodeCatalogsProductGroupMultipleStringCriteria model.cUSTOMLABEL1
            ]
    in
    pairs


encodeCustomLabel2Filter : CustomLabel2Filter -> Json.Encode.Value
encodeCustomLabel2Filter =
    encodeObject << encodeCustomLabel2FilterPairs


encodeCustomLabel2FilterWithTag : ( String, String ) -> CustomLabel2Filter -> Json.Encode.Value
encodeCustomLabel2FilterWithTag (tagField, tag) model =
    encodeObject (encodeCustomLabel2FilterPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCustomLabel2FilterPairs : CustomLabel2Filter -> List EncodedField
encodeCustomLabel2FilterPairs model =
    let
        pairs =
            [ encode "CUSTOM_LABEL_2" encodeCatalogsProductGroupMultipleStringCriteria model.cUSTOMLABEL2
            ]
    in
    pairs


encodeCustomLabel3Filter : CustomLabel3Filter -> Json.Encode.Value
encodeCustomLabel3Filter =
    encodeObject << encodeCustomLabel3FilterPairs


encodeCustomLabel3FilterWithTag : ( String, String ) -> CustomLabel3Filter -> Json.Encode.Value
encodeCustomLabel3FilterWithTag (tagField, tag) model =
    encodeObject (encodeCustomLabel3FilterPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCustomLabel3FilterPairs : CustomLabel3Filter -> List EncodedField
encodeCustomLabel3FilterPairs model =
    let
        pairs =
            [ encode "CUSTOM_LABEL_3" encodeCatalogsProductGroupMultipleStringCriteria model.cUSTOMLABEL3
            ]
    in
    pairs


encodeCustomLabel4Filter : CustomLabel4Filter -> Json.Encode.Value
encodeCustomLabel4Filter =
    encodeObject << encodeCustomLabel4FilterPairs


encodeCustomLabel4FilterWithTag : ( String, String ) -> CustomLabel4Filter -> Json.Encode.Value
encodeCustomLabel4FilterWithTag (tagField, tag) model =
    encodeObject (encodeCustomLabel4FilterPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCustomLabel4FilterPairs : CustomLabel4Filter -> List EncodedField
encodeCustomLabel4FilterPairs model =
    let
        pairs =
            [ encode "CUSTOM_LABEL_4" encodeCatalogsProductGroupMultipleStringCriteria model.cUSTOMLABEL4
            ]
    in
    pairs


stringFromDataOutputFormat : DataOutputFormat -> String
stringFromDataOutputFormat model =
    case model of
        DataOutputFormatJSON ->
            "JSON"

        DataOutputFormatCSV ->
            "CSV"


encodeDataOutputFormat : DataOutputFormat -> Json.Encode.Value
encodeDataOutputFormat =
    Json.Encode.string << stringFromDataOutputFormat


stringFromEntityStatus : EntityStatus -> String
stringFromEntityStatus model =
    case model of
        EntityStatusACTIVE ->
            "ACTIVE"

        EntityStatusPAUSED ->
            "PAUSED"

        EntityStatusARCHIVED ->
            "ARCHIVED"


encodeEntityStatus : EntityStatus -> Json.Encode.Value
encodeEntityStatus =
    Json.Encode.string << stringFromEntityStatus


encodeError : Error -> Json.Encode.Value
encodeError =
    encodeObject << encodeErrorPairs


encodeErrorWithTag : ( String, String ) -> Error -> Json.Encode.Value
encodeErrorWithTag (tagField, tag) model =
    encodeObject (encodeErrorPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeErrorPairs : Error -> List EncodedField
encodeErrorPairs model =
    let
        pairs =
            [ encode "code" Json.Encode.int model.code
            , encode "message" Json.Encode.string model.message
            ]
    in
    pairs


encodeFeedFields : FeedFields -> Json.Encode.Value
encodeFeedFields =
    encodeObject << encodeFeedFieldsPairs


encodeFeedFieldsWithTag : ( String, String ) -> FeedFields -> Json.Encode.Value
encodeFeedFieldsWithTag (tagField, tag) model =
    encodeObject (encodeFeedFieldsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeFeedFieldsPairs : FeedFields -> List EncodedField
encodeFeedFieldsPairs model =
    let
        pairs =
            [ encode "default_country" encodeCountry model.defaultCountry
            , encodeNullable "default_availability" encodeProductAvailabilityType model.defaultAvailability
            , encodeNullable "default_currency" encodeNullableCurrency model.defaultCurrency
            , encodeNullable "name" Json.Encode.string model.name
            , encode "format" encodeCatalogsFormat model.format
            , encode "default_locale" Json.Encode.string model.defaultLocale
            , encodeNullable "credentials" encodeCatalogsFeedCredentials model.credentials
            , encode "location" Json.Encode.string model.location
            , encodeNullable "preferred_processing_schedule" encodeCatalogsFeedProcessingSchedule model.preferredProcessingSchedule
            , encode "status" encodeCatalogsStatus model.status
            ]
    in
    pairs


encodeGenderFilter : GenderFilter -> Json.Encode.Value
encodeGenderFilter =
    encodeObject << encodeGenderFilterPairs


encodeGenderFilterWithTag : ( String, String ) -> GenderFilter -> Json.Encode.Value
encodeGenderFilterWithTag (tagField, tag) model =
    encodeObject (encodeGenderFilterPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeGenderFilterPairs : GenderFilter -> List EncodedField
encodeGenderFilterPairs model =
    let
        pairs =
            [ encode "GENDER" encodeCatalogsProductGroupMultipleStringCriteria model.gENDER
            ]
    in
    pairs


encodeGoogleProductCategory0Filter : GoogleProductCategory0Filter -> Json.Encode.Value
encodeGoogleProductCategory0Filter =
    encodeObject << encodeGoogleProductCategory0FilterPairs


encodeGoogleProductCategory0FilterWithTag : ( String, String ) -> GoogleProductCategory0Filter -> Json.Encode.Value
encodeGoogleProductCategory0FilterWithTag (tagField, tag) model =
    encodeObject (encodeGoogleProductCategory0FilterPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeGoogleProductCategory0FilterPairs : GoogleProductCategory0Filter -> List EncodedField
encodeGoogleProductCategory0FilterPairs model =
    let
        pairs =
            [ encode "GOOGLE_PRODUCT_CATEGORY_0" encodeCatalogsProductGroupMultipleStringListCriteria model.gOOGLEPRODUCTCATEGORY0
            ]
    in
    pairs


encodeGoogleProductCategory1Filter : GoogleProductCategory1Filter -> Json.Encode.Value
encodeGoogleProductCategory1Filter =
    encodeObject << encodeGoogleProductCategory1FilterPairs


encodeGoogleProductCategory1FilterWithTag : ( String, String ) -> GoogleProductCategory1Filter -> Json.Encode.Value
encodeGoogleProductCategory1FilterWithTag (tagField, tag) model =
    encodeObject (encodeGoogleProductCategory1FilterPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeGoogleProductCategory1FilterPairs : GoogleProductCategory1Filter -> List EncodedField
encodeGoogleProductCategory1FilterPairs model =
    let
        pairs =
            [ encode "GOOGLE_PRODUCT_CATEGORY_1" encodeCatalogsProductGroupMultipleStringListCriteria model.gOOGLEPRODUCTCATEGORY1
            ]
    in
    pairs


encodeGoogleProductCategory2Filter : GoogleProductCategory2Filter -> Json.Encode.Value
encodeGoogleProductCategory2Filter =
    encodeObject << encodeGoogleProductCategory2FilterPairs


encodeGoogleProductCategory2FilterWithTag : ( String, String ) -> GoogleProductCategory2Filter -> Json.Encode.Value
encodeGoogleProductCategory2FilterWithTag (tagField, tag) model =
    encodeObject (encodeGoogleProductCategory2FilterPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeGoogleProductCategory2FilterPairs : GoogleProductCategory2Filter -> List EncodedField
encodeGoogleProductCategory2FilterPairs model =
    let
        pairs =
            [ encode "GOOGLE_PRODUCT_CATEGORY_2" encodeCatalogsProductGroupMultipleStringListCriteria model.gOOGLEPRODUCTCATEGORY2
            ]
    in
    pairs


encodeGoogleProductCategory3Filter : GoogleProductCategory3Filter -> Json.Encode.Value
encodeGoogleProductCategory3Filter =
    encodeObject << encodeGoogleProductCategory3FilterPairs


encodeGoogleProductCategory3FilterWithTag : ( String, String ) -> GoogleProductCategory3Filter -> Json.Encode.Value
encodeGoogleProductCategory3FilterWithTag (tagField, tag) model =
    encodeObject (encodeGoogleProductCategory3FilterPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeGoogleProductCategory3FilterPairs : GoogleProductCategory3Filter -> List EncodedField
encodeGoogleProductCategory3FilterPairs model =
    let
        pairs =
            [ encode "GOOGLE_PRODUCT_CATEGORY_3" encodeCatalogsProductGroupMultipleStringListCriteria model.gOOGLEPRODUCTCATEGORY3
            ]
    in
    pairs


encodeGoogleProductCategory4Filter : GoogleProductCategory4Filter -> Json.Encode.Value
encodeGoogleProductCategory4Filter =
    encodeObject << encodeGoogleProductCategory4FilterPairs


encodeGoogleProductCategory4FilterWithTag : ( String, String ) -> GoogleProductCategory4Filter -> Json.Encode.Value
encodeGoogleProductCategory4FilterWithTag (tagField, tag) model =
    encodeObject (encodeGoogleProductCategory4FilterPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeGoogleProductCategory4FilterPairs : GoogleProductCategory4Filter -> List EncodedField
encodeGoogleProductCategory4FilterPairs model =
    let
        pairs =
            [ encode "GOOGLE_PRODUCT_CATEGORY_4" encodeCatalogsProductGroupMultipleStringListCriteria model.gOOGLEPRODUCTCATEGORY4
            ]
    in
    pairs


encodeGoogleProductCategory5Filter : GoogleProductCategory5Filter -> Json.Encode.Value
encodeGoogleProductCategory5Filter =
    encodeObject << encodeGoogleProductCategory5FilterPairs


encodeGoogleProductCategory5FilterWithTag : ( String, String ) -> GoogleProductCategory5Filter -> Json.Encode.Value
encodeGoogleProductCategory5FilterWithTag (tagField, tag) model =
    encodeObject (encodeGoogleProductCategory5FilterPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeGoogleProductCategory5FilterPairs : GoogleProductCategory5Filter -> List EncodedField
encodeGoogleProductCategory5FilterPairs model =
    let
        pairs =
            [ encode "GOOGLE_PRODUCT_CATEGORY_5" encodeCatalogsProductGroupMultipleStringListCriteria model.gOOGLEPRODUCTCATEGORY5
            ]
    in
    pairs


encodeGoogleProductCategory6Filter : GoogleProductCategory6Filter -> Json.Encode.Value
encodeGoogleProductCategory6Filter =
    encodeObject << encodeGoogleProductCategory6FilterPairs


encodeGoogleProductCategory6FilterWithTag : ( String, String ) -> GoogleProductCategory6Filter -> Json.Encode.Value
encodeGoogleProductCategory6FilterWithTag (tagField, tag) model =
    encodeObject (encodeGoogleProductCategory6FilterPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeGoogleProductCategory6FilterPairs : GoogleProductCategory6Filter -> List EncodedField
encodeGoogleProductCategory6FilterPairs model =
    let
        pairs =
            [ encode "GOOGLE_PRODUCT_CATEGORY_6" encodeCatalogsProductGroupMultipleStringListCriteria model.gOOGLEPRODUCTCATEGORY6
            ]
    in
    pairs


stringFromGranularity : Granularity -> String
stringFromGranularity model =
    case model of
        GranularityTOTAL ->
            "TOTAL"

        GranularityDAY ->
            "DAY"

        GranularityHOUR ->
            "HOUR"

        GranularityWEEK ->
            "WEEK"

        GranularityMONTH ->
            "MONTH"


encodeGranularity : Granularity -> Json.Encode.Value
encodeGranularity =
    Json.Encode.string << stringFromGranularity


encodeImageDetails : ImageDetails -> Json.Encode.Value
encodeImageDetails =
    encodeObject << encodeImageDetailsPairs


encodeImageDetailsWithTag : ( String, String ) -> ImageDetails -> Json.Encode.Value
encodeImageDetailsWithTag (tagField, tag) model =
    encodeObject (encodeImageDetailsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeImageDetailsPairs : ImageDetails -> List EncodedField
encodeImageDetailsPairs model =
    let
        pairs =
            [ encode "width" Json.Encode.int model.width
            , encodeNullable "height" Json.Encode.int model.height
            , encode "url" Json.Encode.string model.url
            ]
    in
    pairs


encodeItemAttributes : ItemAttributes -> Json.Encode.Value
encodeItemAttributes =
    encodeObject << encodeItemAttributesPairs


encodeItemAttributesWithTag : ( String, String ) -> ItemAttributes -> Json.Encode.Value
encodeItemAttributesWithTag (tagField, tag) model =
    encodeObject (encodeItemAttributesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeItemAttributesPairs : ItemAttributes -> List EncodedField
encodeItemAttributesPairs model =
    let
        pairs =
            [ maybeEncode "ad_link" Json.Encode.string model.adLink
            , maybeEncode "additional_image_link" (Json.Encode.list Json.Encode.string) model.additionalImageLink
            , maybeEncode "adult" Json.Encode.bool model.adult
            , maybeEncode "age_group" Json.Encode.string model.ageGroup
            , maybeEncode "availability" Json.Encode.string model.availability
            , maybeEncode "average_review_rating" Json.Encode.float model.averageReviewRating
            , maybeEncode "brand" Json.Encode.string model.brand
            , maybeEncode "color" Json.Encode.string model.color
            , maybeEncode "condition" Json.Encode.string model.condition
            , maybeEncode "custom_label_0" Json.Encode.string model.customLabel0
            , maybeEncode "custom_label_1" Json.Encode.string model.customLabel1
            , maybeEncode "custom_label_2" Json.Encode.string model.customLabel2
            , maybeEncode "custom_label_3" Json.Encode.string model.customLabel3
            , maybeEncode "custom_label_4" Json.Encode.string model.customLabel4
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "free_shipping_label" Json.Encode.bool model.freeShippingLabel
            , maybeEncode "free_shipping_limit" Json.Encode.string model.freeShippingLimit
            , maybeEncode "gender" Json.Encode.string model.gender
            , maybeEncode "google_product_category" Json.Encode.string model.googleProductCategory
            , maybeEncode "gtin" Json.Encode.int model.gtin
            , maybeEncode "id" Json.Encode.string model.id
            , maybeEncode "image_link" (Json.Encode.list Json.Encode.string) model.imageLink
            , maybeEncode "item_group_id" Json.Encode.string model.itemGroupId
            , maybeEncode "last_updated_time" Json.Encode.int model.lastUpdatedTime
            , maybeEncode "link" Json.Encode.string model.link
            , maybeEncode "material" Json.Encode.string model.material
            , maybeEncode "min_ad_price" Json.Encode.string model.minAdPrice
            , maybeEncode "mobile_link" Json.Encode.string model.mobileLink
            , maybeEncode "mpn" Json.Encode.string model.mpn
            , maybeEncode "number_of_ratings" Json.Encode.int model.numberOfRatings
            , maybeEncode "number_of_reviews" Json.Encode.int model.numberOfReviews
            , maybeEncode "pattern" Json.Encode.string model.pattern
            , maybeEncode "price" Json.Encode.string model.price
            , maybeEncode "product_type" Json.Encode.string model.productType
            , maybeEncode "sale_price" Json.Encode.string model.salePrice
            , maybeEncode "shipping" Json.Encode.string model.shipping
            , maybeEncode "shipping_height" Json.Encode.string model.shippingHeight
            , maybeEncode "shipping_weight" Json.Encode.string model.shippingWeight
            , maybeEncode "shipping_width" Json.Encode.string model.shippingWidth
            , maybeEncode "size" Json.Encode.string model.size
            , maybeEncode "size_system" Json.Encode.string model.sizeSystem
            , maybeEncode "size_type" Json.Encode.string model.sizeType
            , maybeEncode "tax" Json.Encode.string model.tax
            , maybeEncode "title" Json.Encode.string model.title
            ]
    in
    pairs


encodeItemBatchRecord : ItemBatchRecord -> Json.Encode.Value
encodeItemBatchRecord =
    encodeObject << encodeItemBatchRecordPairs


encodeItemBatchRecordWithTag : ( String, String ) -> ItemBatchRecord -> Json.Encode.Value
encodeItemBatchRecordWithTag (tagField, tag) model =
    encodeObject (encodeItemBatchRecordPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeItemBatchRecordPairs : ItemBatchRecord -> List EncodedField
encodeItemBatchRecordPairs model =
    let
        pairs =
            [ maybeEncode "item_id" Json.Encode.string model.itemId
            , maybeEncode "attributes" encodeItemAttributes model.attributes
            ]
    in
    pairs


encodeItemGroupIdFilter : ItemGroupIdFilter -> Json.Encode.Value
encodeItemGroupIdFilter =
    encodeObject << encodeItemGroupIdFilterPairs


encodeItemGroupIdFilterWithTag : ( String, String ) -> ItemGroupIdFilter -> Json.Encode.Value
encodeItemGroupIdFilterWithTag (tagField, tag) model =
    encodeObject (encodeItemGroupIdFilterPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeItemGroupIdFilterPairs : ItemGroupIdFilter -> List EncodedField
encodeItemGroupIdFilterPairs model =
    let
        pairs =
            [ encode "ITEM_GROUP_ID" encodeCatalogsProductGroupMultipleStringCriteria model.iTEMGROUPID
            ]
    in
    pairs


encodeItemIdFilter : ItemIdFilter -> Json.Encode.Value
encodeItemIdFilter =
    encodeObject << encodeItemIdFilterPairs


encodeItemIdFilterWithTag : ( String, String ) -> ItemIdFilter -> Json.Encode.Value
encodeItemIdFilterWithTag (tagField, tag) model =
    encodeObject (encodeItemIdFilterPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeItemIdFilterPairs : ItemIdFilter -> List EncodedField
encodeItemIdFilterPairs model =
    let
        pairs =
            [ encode "ITEM_ID" encodeCatalogsProductGroupCurrencyCriteria model.iTEMID
            ]
    in
    pairs


encodeItemProcessingRecord : ItemProcessingRecord -> Json.Encode.Value
encodeItemProcessingRecord =
    encodeObject << encodeItemProcessingRecordPairs


encodeItemProcessingRecordWithTag : ( String, String ) -> ItemProcessingRecord -> Json.Encode.Value
encodeItemProcessingRecordWithTag (tagField, tag) model =
    encodeObject (encodeItemProcessingRecordPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeItemProcessingRecordPairs : ItemProcessingRecord -> List EncodedField
encodeItemProcessingRecordPairs model =
    let
        pairs =
            [ maybeEncode "item_id" Json.Encode.string model.itemId
            , maybeEncode "errors" (Json.Encode.list encodeItemValidationEvent) model.errors
            , maybeEncode "warnings" (Json.Encode.list encodeItemValidationEvent) model.warnings
            , maybeEncode "status" encodeItemProcessingStatus model.status
            ]
    in
    pairs


stringFromItemProcessingStatus : ItemProcessingStatus -> String
stringFromItemProcessingStatus model =
    case model of
        ItemProcessingStatusSUCCESS ->
            "SUCCESS"

        ItemProcessingStatusFAILURE ->
            "FAILURE"

        ItemProcessingStatusPROCESSING ->
            "PROCESSING"


encodeItemProcessingStatus : ItemProcessingStatus -> Json.Encode.Value
encodeItemProcessingStatus =
    Json.Encode.string << stringFromItemProcessingStatus


encodeItemValidationEvent : ItemValidationEvent -> Json.Encode.Value
encodeItemValidationEvent =
    encodeObject << encodeItemValidationEventPairs


encodeItemValidationEventWithTag : ( String, String ) -> ItemValidationEvent -> Json.Encode.Value
encodeItemValidationEventWithTag (tagField, tag) model =
    encodeObject (encodeItemValidationEventPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeItemValidationEventPairs : ItemValidationEvent -> List EncodedField
encodeItemValidationEventPairs model =
    let
        pairs =
            [ maybeEncode "attribute" Json.Encode.string model.attribute
            , maybeEncode "code" Json.Encode.int model.code
            , maybeEncode "message" Json.Encode.string model.message
            ]
    in
    pairs


stringFromLanguage : Language -> String
stringFromLanguage model =
    case model of
        LanguageAM ->
            "AM"

        LanguageAR ->
            "AR"

        LanguageAZ ->
            "AZ"

        LanguageBG ->
            "BG"

        LanguageBN ->
            "BN"

        LanguageBS ->
            "BS"

        LanguageCA ->
            "CA"

        LanguageCS ->
            "CS"

        LanguageDA ->
            "DA"

        LanguageDV ->
            "DV"

        LanguageDZ ->
            "DZ"

        LanguageDE ->
            "DE"

        LanguageEL ->
            "EL"

        LanguageEN ->
            "EN"

        LanguageES ->
            "ES"

        LanguageET ->
            "ET"

        LanguageFA ->
            "FA"

        LanguageFI ->
            "FI"

        LanguageFR ->
            "FR"

        LanguageHE ->
            "HE"

        LanguageHI ->
            "HI"

        LanguageHR ->
            "HR"

        LanguageHU ->
            "HU"

        LanguageHY ->
            "HY"

        LanguageID ->
            "ID"

        LanguageIN ->
            "IN"

        LanguageIS ->
            "IS"

        LanguageIT ->
            "IT"

        LanguageIW ->
            "IW"

        LanguageJA ->
            "JA"

        LanguageKA ->
            "KA"

        LanguageKM ->
            "KM"

        LanguageKO ->
            "KO"

        LanguageLO ->
            "LO"

        LanguageLT ->
            "LT"

        LanguageLV ->
            "LV"

        LanguageMK ->
            "MK"

        LanguageMN ->
            "MN"

        LanguageMS ->
            "MS"

        LanguageMY ->
            "MY"

        LanguageNB ->
            "NB"

        LanguageNE ->
            "NE"

        LanguageNL ->
            "NL"

        LanguageNO ->
            "NO"

        LanguagePL ->
            "PL"

        LanguagePT ->
            "PT"

        LanguageRO ->
            "RO"

        LanguageRU ->
            "RU"

        LanguageSK ->
            "SK"

        LanguageSL ->
            "SL"

        LanguageSQ ->
            "SQ"

        LanguageSR ->
            "SR"

        LanguageSV ->
            "SV"

        LanguageTL ->
            "TL"

        LanguageUK ->
            "UK"

        LanguageVI ->
            "VI"

        LanguageTE ->
            "TE"

        LanguageTH ->
            "TH"

        LanguageTR ->
            "TR"

        LanguageXX ->
            "XX"

        LanguageZH ->
            "ZH"


encodeLanguage : Language -> Json.Encode.Value
encodeLanguage =
    Json.Encode.string << stringFromLanguage


encodeMaxPriceFilter : MaxPriceFilter -> Json.Encode.Value
encodeMaxPriceFilter =
    encodeObject << encodeMaxPriceFilterPairs


encodeMaxPriceFilterWithTag : ( String, String ) -> MaxPriceFilter -> Json.Encode.Value
encodeMaxPriceFilterWithTag (tagField, tag) model =
    encodeObject (encodeMaxPriceFilterPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeMaxPriceFilterPairs : MaxPriceFilter -> List EncodedField
encodeMaxPriceFilterPairs model =
    let
        pairs =
            [ encode "MAX_PRICE" encodeCatalogsProductGroupPricingCriteria model.mAXPRICE
            ]
    in
    pairs


encodeMediaUpload : MediaUpload -> Json.Encode.Value
encodeMediaUpload =
    encodeObject << encodeMediaUploadPairs


encodeMediaUploadWithTag : ( String, String ) -> MediaUpload -> Json.Encode.Value
encodeMediaUploadWithTag (tagField, tag) model =
    encodeObject (encodeMediaUploadPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeMediaUploadPairs : MediaUpload -> List EncodedField
encodeMediaUploadPairs model =
    let
        pairs =
            [ maybeEncode "media_id" Json.Encode.string model.mediaId
            , maybeEncode "media_type" Json.Encode.string model.mediaType
            , maybeEncode "upload_url" Json.Encode.string model.uploadUrl
            , maybeEncode "upload_parameters" encodeMediaUploadAllOfUploadParameters model.uploadParameters
            ]
    in
    pairs


encodeMediaUploadAllOfUploadParameters : MediaUploadAllOfUploadParameters -> Json.Encode.Value
encodeMediaUploadAllOfUploadParameters =
    encodeObject << encodeMediaUploadAllOfUploadParametersPairs


encodeMediaUploadAllOfUploadParametersWithTag : ( String, String ) -> MediaUploadAllOfUploadParameters -> Json.Encode.Value
encodeMediaUploadAllOfUploadParametersWithTag (tagField, tag) model =
    encodeObject (encodeMediaUploadAllOfUploadParametersPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeMediaUploadAllOfUploadParametersPairs : MediaUploadAllOfUploadParameters -> List EncodedField
encodeMediaUploadAllOfUploadParametersPairs model =
    let
        pairs =
            [ maybeEncode "x-amz-date" Json.Encode.string model.xamzdate
            , maybeEncode "x-amz-signature" Json.Encode.string model.xamzsignature
            , maybeEncode "x-amz-security-token" Json.Encode.string model.xamzsecuritytoken
            , maybeEncode "x-amz-algorithm" Json.Encode.string model.xamzalgorithm
            , maybeEncode "key" Json.Encode.string model.key
            , maybeEncode "policy" Json.Encode.string model.policy
            , maybeEncode "x-amz-credential" Json.Encode.string model.xamzcredential
            , maybeEncode "Content-Type" Json.Encode.string model.contentType
            ]
    in
    pairs


encodeMediaUploadDetails : MediaUploadDetails -> Json.Encode.Value
encodeMediaUploadDetails =
    encodeObject << encodeMediaUploadDetailsPairs


encodeMediaUploadDetailsWithTag : ( String, String ) -> MediaUploadDetails -> Json.Encode.Value
encodeMediaUploadDetailsWithTag (tagField, tag) model =
    encodeObject (encodeMediaUploadDetailsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeMediaUploadDetailsPairs : MediaUploadDetails -> List EncodedField
encodeMediaUploadDetailsPairs model =
    let
        pairs =
            [ maybeEncode "media_id" Json.Encode.string model.mediaId
            , maybeEncode "media_type" Json.Encode.string model.mediaType
            , maybeEncode "status" Json.Encode.string model.status
            ]
    in
    pairs


encodeMediaUploadRequest : MediaUploadRequest -> Json.Encode.Value
encodeMediaUploadRequest =
    encodeObject << encodeMediaUploadRequestPairs


encodeMediaUploadRequestWithTag : ( String, String ) -> MediaUploadRequest -> Json.Encode.Value
encodeMediaUploadRequestWithTag (tagField, tag) model =
    encodeObject (encodeMediaUploadRequestPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeMediaUploadRequestPairs : MediaUploadRequest -> List EncodedField
encodeMediaUploadRequestPairs model =
    let
        pairs =
            [ encode "media_type" Json.Encode.string model.mediaType
            ]
    in
    pairs


stringFromMediaUploadStatus : MediaUploadStatus -> String
stringFromMediaUploadStatus model =
    case model of
        MediaUploadStatusRegistered ->
            "registered"

        MediaUploadStatusProcessing ->
            "processing"

        MediaUploadStatusSucceeded ->
            "succeeded"

        MediaUploadStatusFailed ->
            "failed"


encodeMediaUploadStatus : MediaUploadStatus -> Json.Encode.Value
encodeMediaUploadStatus =
    Json.Encode.string << stringFromMediaUploadStatus


stringFromMediaUploadType : MediaUploadType -> String
stringFromMediaUploadType model =
    case model of
        MediaUploadTypeVideo ->
            "video"


encodeMediaUploadType : MediaUploadType -> Json.Encode.Value
encodeMediaUploadType =
    Json.Encode.string << stringFromMediaUploadType


stringFromMetricsReportingLevel : MetricsReportingLevel -> String
stringFromMetricsReportingLevel model =
    case model of
        MetricsReportingLevelADVERTISER ->
            "ADVERTISER"

        MetricsReportingLevelADVERTISERTARGETING ->
            "ADVERTISER_TARGETING"

        MetricsReportingLevelCAMPAIGN ->
            "CAMPAIGN"

        MetricsReportingLevelCAMPAIGNTARGETING ->
            "CAMPAIGN_TARGETING"

        MetricsReportingLevelADGROUP ->
            "AD_GROUP"

        MetricsReportingLevelADGROUPTARGETING ->
            "AD_GROUP_TARGETING"

        MetricsReportingLevelPINPROMOTION ->
            "PIN_PROMOTION"

        MetricsReportingLevelPINPROMOTIONTARGETING ->
            "PIN_PROMOTION_TARGETING"

        MetricsReportingLevelKEYWORD ->
            "KEYWORD"

        MetricsReportingLevelPRODUCTGROUP ->
            "PRODUCT_GROUP"

        MetricsReportingLevelPRODUCTGROUPTARGETING ->
            "PRODUCT_GROUP_TARGETING"

        MetricsReportingLevelPRODUCTITEM ->
            "PRODUCT_ITEM"


encodeMetricsReportingLevel : MetricsReportingLevel -> Json.Encode.Value
encodeMetricsReportingLevel =
    Json.Encode.string << stringFromMetricsReportingLevel


encodeMinPriceFilter : MinPriceFilter -> Json.Encode.Value
encodeMinPriceFilter =
    encodeObject << encodeMinPriceFilterPairs


encodeMinPriceFilterWithTag : ( String, String ) -> MinPriceFilter -> Json.Encode.Value
encodeMinPriceFilterWithTag (tagField, tag) model =
    encodeObject (encodeMinPriceFilterPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeMinPriceFilterPairs : MinPriceFilter -> List EncodedField
encodeMinPriceFilterPairs model =
    let
        pairs =
            [ encode "MIN_PRICE" encodeCatalogsProductGroupPricingCriteria model.mINPRICE
            ]
    in
    pairs


stringFromNonNullableCatalogsCurrency : NonNullableCatalogsCurrency -> String
stringFromNonNullableCatalogsCurrency model =
    case model of
        NonNullableCatalogsCurrencyAED ->
            "AED"

        NonNullableCatalogsCurrencyAFN ->
            "AFN"

        NonNullableCatalogsCurrencyALL ->
            "ALL"

        NonNullableCatalogsCurrencyAMD ->
            "AMD"

        NonNullableCatalogsCurrencyANG ->
            "ANG"

        NonNullableCatalogsCurrencyAOA ->
            "AOA"

        NonNullableCatalogsCurrencyARS ->
            "ARS"

        NonNullableCatalogsCurrencyAUD ->
            "AUD"

        NonNullableCatalogsCurrencyAWG ->
            "AWG"

        NonNullableCatalogsCurrencyAZN ->
            "AZN"

        NonNullableCatalogsCurrencyBAM ->
            "BAM"

        NonNullableCatalogsCurrencyBBD ->
            "BBD"

        NonNullableCatalogsCurrencyBDT ->
            "BDT"

        NonNullableCatalogsCurrencyBGN ->
            "BGN"

        NonNullableCatalogsCurrencyBHD ->
            "BHD"

        NonNullableCatalogsCurrencyBIF ->
            "BIF"

        NonNullableCatalogsCurrencyBMD ->
            "BMD"

        NonNullableCatalogsCurrencyBND ->
            "BND"

        NonNullableCatalogsCurrencyBOB ->
            "BOB"

        NonNullableCatalogsCurrencyBRL ->
            "BRL"

        NonNullableCatalogsCurrencyBSD ->
            "BSD"

        NonNullableCatalogsCurrencyBTN ->
            "BTN"

        NonNullableCatalogsCurrencyBWP ->
            "BWP"

        NonNullableCatalogsCurrencyBYN ->
            "BYN"

        NonNullableCatalogsCurrencyBYR ->
            "BYR"

        NonNullableCatalogsCurrencyBZD ->
            "BZD"

        NonNullableCatalogsCurrencyCAD ->
            "CAD"

        NonNullableCatalogsCurrencyCDF ->
            "CDF"

        NonNullableCatalogsCurrencyCHF ->
            "CHF"

        NonNullableCatalogsCurrencyCLP ->
            "CLP"

        NonNullableCatalogsCurrencyCNY ->
            "CNY"

        NonNullableCatalogsCurrencyCOP ->
            "COP"

        NonNullableCatalogsCurrencyCRC ->
            "CRC"

        NonNullableCatalogsCurrencyCUC ->
            "CUC"

        NonNullableCatalogsCurrencyCUP ->
            "CUP"

        NonNullableCatalogsCurrencyCVE ->
            "CVE"

        NonNullableCatalogsCurrencyCZK ->
            "CZK"

        NonNullableCatalogsCurrencyDJF ->
            "DJF"

        NonNullableCatalogsCurrencyDKK ->
            "DKK"

        NonNullableCatalogsCurrencyDOP ->
            "DOP"

        NonNullableCatalogsCurrencyDZD ->
            "DZD"

        NonNullableCatalogsCurrencyEGP ->
            "EGP"

        NonNullableCatalogsCurrencyERN ->
            "ERN"

        NonNullableCatalogsCurrencyETB ->
            "ETB"

        NonNullableCatalogsCurrencyEUR ->
            "EUR"

        NonNullableCatalogsCurrencyFJD ->
            "FJD"

        NonNullableCatalogsCurrencyFKP ->
            "FKP"

        NonNullableCatalogsCurrencyGBP ->
            "GBP"

        NonNullableCatalogsCurrencyGEL ->
            "GEL"

        NonNullableCatalogsCurrencyGGP ->
            "GGP"

        NonNullableCatalogsCurrencyGHS ->
            "GHS"

        NonNullableCatalogsCurrencyGIP ->
            "GIP"

        NonNullableCatalogsCurrencyGMD ->
            "GMD"

        NonNullableCatalogsCurrencyGNF ->
            "GNF"

        NonNullableCatalogsCurrencyGTQ ->
            "GTQ"

        NonNullableCatalogsCurrencyGYD ->
            "GYD"

        NonNullableCatalogsCurrencyHKD ->
            "HKD"

        NonNullableCatalogsCurrencyHNL ->
            "HNL"

        NonNullableCatalogsCurrencyHRK ->
            "HRK"

        NonNullableCatalogsCurrencyHTG ->
            "HTG"

        NonNullableCatalogsCurrencyHUF ->
            "HUF"

        NonNullableCatalogsCurrencyIDR ->
            "IDR"

        NonNullableCatalogsCurrencyILS ->
            "ILS"

        NonNullableCatalogsCurrencyIMP ->
            "IMP"

        NonNullableCatalogsCurrencyINR ->
            "INR"

        NonNullableCatalogsCurrencyIQD ->
            "IQD"

        NonNullableCatalogsCurrencyIRR ->
            "IRR"

        NonNullableCatalogsCurrencyISK ->
            "ISK"

        NonNullableCatalogsCurrencyJEP ->
            "JEP"

        NonNullableCatalogsCurrencyJMD ->
            "JMD"

        NonNullableCatalogsCurrencyJOD ->
            "JOD"

        NonNullableCatalogsCurrencyJPY ->
            "JPY"

        NonNullableCatalogsCurrencyKES ->
            "KES"

        NonNullableCatalogsCurrencyKGS ->
            "KGS"

        NonNullableCatalogsCurrencyKHR ->
            "KHR"

        NonNullableCatalogsCurrencyKMF ->
            "KMF"

        NonNullableCatalogsCurrencyKPW ->
            "KPW"

        NonNullableCatalogsCurrencyKRW ->
            "KRW"

        NonNullableCatalogsCurrencyKWD ->
            "KWD"

        NonNullableCatalogsCurrencyKYD ->
            "KYD"

        NonNullableCatalogsCurrencyKZT ->
            "KZT"

        NonNullableCatalogsCurrencyLAK ->
            "LAK"

        NonNullableCatalogsCurrencyLBP ->
            "LBP"

        NonNullableCatalogsCurrencyLKR ->
            "LKR"

        NonNullableCatalogsCurrencyLRD ->
            "LRD"

        NonNullableCatalogsCurrencyLSL ->
            "LSL"

        NonNullableCatalogsCurrencyLYD ->
            "LYD"

        NonNullableCatalogsCurrencyMAD ->
            "MAD"

        NonNullableCatalogsCurrencyMDL ->
            "MDL"

        NonNullableCatalogsCurrencyMGA ->
            "MGA"

        NonNullableCatalogsCurrencyMKD ->
            "MKD"

        NonNullableCatalogsCurrencyMMK ->
            "MMK"

        NonNullableCatalogsCurrencyMNT ->
            "MNT"

        NonNullableCatalogsCurrencyMOP ->
            "MOP"

        NonNullableCatalogsCurrencyMRO ->
            "MRO"

        NonNullableCatalogsCurrencyMUR ->
            "MUR"

        NonNullableCatalogsCurrencyMVR ->
            "MVR"

        NonNullableCatalogsCurrencyMWK ->
            "MWK"

        NonNullableCatalogsCurrencyMXN ->
            "MXN"

        NonNullableCatalogsCurrencyMYR ->
            "MYR"

        NonNullableCatalogsCurrencyMZN ->
            "MZN"

        NonNullableCatalogsCurrencyNAD ->
            "NAD"

        NonNullableCatalogsCurrencyNGN ->
            "NGN"

        NonNullableCatalogsCurrencyNIO ->
            "NIO"

        NonNullableCatalogsCurrencyNOK ->
            "NOK"

        NonNullableCatalogsCurrencyNPR ->
            "NPR"

        NonNullableCatalogsCurrencyNZD ->
            "NZD"

        NonNullableCatalogsCurrencyOMR ->
            "OMR"

        NonNullableCatalogsCurrencyPAB ->
            "PAB"

        NonNullableCatalogsCurrencyPEN ->
            "PEN"

        NonNullableCatalogsCurrencyPGK ->
            "PGK"

        NonNullableCatalogsCurrencyPHP ->
            "PHP"

        NonNullableCatalogsCurrencyPKR ->
            "PKR"

        NonNullableCatalogsCurrencyPLN ->
            "PLN"

        NonNullableCatalogsCurrencyPYG ->
            "PYG"

        NonNullableCatalogsCurrencyQAR ->
            "QAR"

        NonNullableCatalogsCurrencyRON ->
            "RON"

        NonNullableCatalogsCurrencyRSD ->
            "RSD"

        NonNullableCatalogsCurrencyRUB ->
            "RUB"

        NonNullableCatalogsCurrencyRWF ->
            "RWF"

        NonNullableCatalogsCurrencySAR ->
            "SAR"

        NonNullableCatalogsCurrencySBD ->
            "SBD"

        NonNullableCatalogsCurrencySCR ->
            "SCR"

        NonNullableCatalogsCurrencySDG ->
            "SDG"

        NonNullableCatalogsCurrencySEK ->
            "SEK"

        NonNullableCatalogsCurrencySGD ->
            "SGD"

        NonNullableCatalogsCurrencySHP ->
            "SHP"

        NonNullableCatalogsCurrencySLL ->
            "SLL"

        NonNullableCatalogsCurrencySOS ->
            "SOS"

        NonNullableCatalogsCurrencySPL ->
            "SPL"

        NonNullableCatalogsCurrencySRD ->
            "SRD"

        NonNullableCatalogsCurrencySTD ->
            "STD"

        NonNullableCatalogsCurrencySVC ->
            "SVC"

        NonNullableCatalogsCurrencySYP ->
            "SYP"

        NonNullableCatalogsCurrencySZL ->
            "SZL"

        NonNullableCatalogsCurrencyTHB ->
            "THB"

        NonNullableCatalogsCurrencyTJS ->
            "TJS"

        NonNullableCatalogsCurrencyTMT ->
            "TMT"

        NonNullableCatalogsCurrencyTND ->
            "TND"

        NonNullableCatalogsCurrencyTOP ->
            "TOP"

        NonNullableCatalogsCurrencyTRY ->
            "TRY"

        NonNullableCatalogsCurrencyTTD ->
            "TTD"

        NonNullableCatalogsCurrencyTVD ->
            "TVD"

        NonNullableCatalogsCurrencyTWD ->
            "TWD"

        NonNullableCatalogsCurrencyTZS ->
            "TZS"

        NonNullableCatalogsCurrencyUAH ->
            "UAH"

        NonNullableCatalogsCurrencyUGX ->
            "UGX"

        NonNullableCatalogsCurrencyUSD ->
            "USD"

        NonNullableCatalogsCurrencyUYU ->
            "UYU"

        NonNullableCatalogsCurrencyUZS ->
            "UZS"

        NonNullableCatalogsCurrencyVEF ->
            "VEF"

        NonNullableCatalogsCurrencyVND ->
            "VND"

        NonNullableCatalogsCurrencyVUV ->
            "VUV"

        NonNullableCatalogsCurrencyWST ->
            "WST"

        NonNullableCatalogsCurrencyXAF ->
            "XAF"

        NonNullableCatalogsCurrencyXCD ->
            "XCD"

        NonNullableCatalogsCurrencyXDR ->
            "XDR"

        NonNullableCatalogsCurrencyXOF ->
            "XOF"

        NonNullableCatalogsCurrencyXPF ->
            "XPF"

        NonNullableCatalogsCurrencyYER ->
            "YER"

        NonNullableCatalogsCurrencyZAR ->
            "ZAR"

        NonNullableCatalogsCurrencyZMW ->
            "ZMW"

        NonNullableCatalogsCurrencyZWD ->
            "ZWD"


encodeNonNullableCatalogsCurrency : NonNullableCatalogsCurrency -> Json.Encode.Value
encodeNonNullableCatalogsCurrency =
    Json.Encode.string << stringFromNonNullableCatalogsCurrency


stringFromNullableCurrency : NullableCurrency -> String
stringFromNullableCurrency model =
    case model of
        NullableCurrencyAED ->
            "AED"

        NullableCurrencyAFN ->
            "AFN"

        NullableCurrencyALL ->
            "ALL"

        NullableCurrencyAMD ->
            "AMD"

        NullableCurrencyANG ->
            "ANG"

        NullableCurrencyAOA ->
            "AOA"

        NullableCurrencyARS ->
            "ARS"

        NullableCurrencyAUD ->
            "AUD"

        NullableCurrencyAWG ->
            "AWG"

        NullableCurrencyAZN ->
            "AZN"

        NullableCurrencyBAM ->
            "BAM"

        NullableCurrencyBBD ->
            "BBD"

        NullableCurrencyBDT ->
            "BDT"

        NullableCurrencyBGN ->
            "BGN"

        NullableCurrencyBHD ->
            "BHD"

        NullableCurrencyBIF ->
            "BIF"

        NullableCurrencyBMD ->
            "BMD"

        NullableCurrencyBND ->
            "BND"

        NullableCurrencyBOB ->
            "BOB"

        NullableCurrencyBRL ->
            "BRL"

        NullableCurrencyBSD ->
            "BSD"

        NullableCurrencyBTN ->
            "BTN"

        NullableCurrencyBWP ->
            "BWP"

        NullableCurrencyBYN ->
            "BYN"

        NullableCurrencyBYR ->
            "BYR"

        NullableCurrencyBZD ->
            "BZD"

        NullableCurrencyCAD ->
            "CAD"

        NullableCurrencyCDF ->
            "CDF"

        NullableCurrencyCHF ->
            "CHF"

        NullableCurrencyCLP ->
            "CLP"

        NullableCurrencyCNY ->
            "CNY"

        NullableCurrencyCOP ->
            "COP"

        NullableCurrencyCRC ->
            "CRC"

        NullableCurrencyCUC ->
            "CUC"

        NullableCurrencyCUP ->
            "CUP"

        NullableCurrencyCVE ->
            "CVE"

        NullableCurrencyCZK ->
            "CZK"

        NullableCurrencyDJF ->
            "DJF"

        NullableCurrencyDKK ->
            "DKK"

        NullableCurrencyDOP ->
            "DOP"

        NullableCurrencyDZD ->
            "DZD"

        NullableCurrencyEGP ->
            "EGP"

        NullableCurrencyERN ->
            "ERN"

        NullableCurrencyETB ->
            "ETB"

        NullableCurrencyEUR ->
            "EUR"

        NullableCurrencyFJD ->
            "FJD"

        NullableCurrencyFKP ->
            "FKP"

        NullableCurrencyGBP ->
            "GBP"

        NullableCurrencyGEL ->
            "GEL"

        NullableCurrencyGGP ->
            "GGP"

        NullableCurrencyGHS ->
            "GHS"

        NullableCurrencyGIP ->
            "GIP"

        NullableCurrencyGMD ->
            "GMD"

        NullableCurrencyGNF ->
            "GNF"

        NullableCurrencyGTQ ->
            "GTQ"

        NullableCurrencyGYD ->
            "GYD"

        NullableCurrencyHKD ->
            "HKD"

        NullableCurrencyHNL ->
            "HNL"

        NullableCurrencyHRK ->
            "HRK"

        NullableCurrencyHTG ->
            "HTG"

        NullableCurrencyHUF ->
            "HUF"

        NullableCurrencyIDR ->
            "IDR"

        NullableCurrencyILS ->
            "ILS"

        NullableCurrencyIMP ->
            "IMP"

        NullableCurrencyINR ->
            "INR"

        NullableCurrencyIQD ->
            "IQD"

        NullableCurrencyIRR ->
            "IRR"

        NullableCurrencyISK ->
            "ISK"

        NullableCurrencyJEP ->
            "JEP"

        NullableCurrencyJMD ->
            "JMD"

        NullableCurrencyJOD ->
            "JOD"

        NullableCurrencyJPY ->
            "JPY"

        NullableCurrencyKES ->
            "KES"

        NullableCurrencyKGS ->
            "KGS"

        NullableCurrencyKHR ->
            "KHR"

        NullableCurrencyKMF ->
            "KMF"

        NullableCurrencyKPW ->
            "KPW"

        NullableCurrencyKRW ->
            "KRW"

        NullableCurrencyKWD ->
            "KWD"

        NullableCurrencyKYD ->
            "KYD"

        NullableCurrencyKZT ->
            "KZT"

        NullableCurrencyLAK ->
            "LAK"

        NullableCurrencyLBP ->
            "LBP"

        NullableCurrencyLKR ->
            "LKR"

        NullableCurrencyLRD ->
            "LRD"

        NullableCurrencyLSL ->
            "LSL"

        NullableCurrencyLYD ->
            "LYD"

        NullableCurrencyMAD ->
            "MAD"

        NullableCurrencyMDL ->
            "MDL"

        NullableCurrencyMGA ->
            "MGA"

        NullableCurrencyMKD ->
            "MKD"

        NullableCurrencyMMK ->
            "MMK"

        NullableCurrencyMNT ->
            "MNT"

        NullableCurrencyMOP ->
            "MOP"

        NullableCurrencyMRO ->
            "MRO"

        NullableCurrencyMUR ->
            "MUR"

        NullableCurrencyMVR ->
            "MVR"

        NullableCurrencyMWK ->
            "MWK"

        NullableCurrencyMXN ->
            "MXN"

        NullableCurrencyMYR ->
            "MYR"

        NullableCurrencyMZN ->
            "MZN"

        NullableCurrencyNAD ->
            "NAD"

        NullableCurrencyNGN ->
            "NGN"

        NullableCurrencyNIO ->
            "NIO"

        NullableCurrencyNOK ->
            "NOK"

        NullableCurrencyNPR ->
            "NPR"

        NullableCurrencyNZD ->
            "NZD"

        NullableCurrencyOMR ->
            "OMR"

        NullableCurrencyPAB ->
            "PAB"

        NullableCurrencyPEN ->
            "PEN"

        NullableCurrencyPGK ->
            "PGK"

        NullableCurrencyPHP ->
            "PHP"

        NullableCurrencyPKR ->
            "PKR"

        NullableCurrencyPLN ->
            "PLN"

        NullableCurrencyPYG ->
            "PYG"

        NullableCurrencyQAR ->
            "QAR"

        NullableCurrencyRON ->
            "RON"

        NullableCurrencyRSD ->
            "RSD"

        NullableCurrencyRUB ->
            "RUB"

        NullableCurrencyRWF ->
            "RWF"

        NullableCurrencySAR ->
            "SAR"

        NullableCurrencySBD ->
            "SBD"

        NullableCurrencySCR ->
            "SCR"

        NullableCurrencySDG ->
            "SDG"

        NullableCurrencySEK ->
            "SEK"

        NullableCurrencySGD ->
            "SGD"

        NullableCurrencySHP ->
            "SHP"

        NullableCurrencySLL ->
            "SLL"

        NullableCurrencySOS ->
            "SOS"

        NullableCurrencySPL ->
            "SPL"

        NullableCurrencySRD ->
            "SRD"

        NullableCurrencySTD ->
            "STD"

        NullableCurrencySVC ->
            "SVC"

        NullableCurrencySYP ->
            "SYP"

        NullableCurrencySZL ->
            "SZL"

        NullableCurrencyTHB ->
            "THB"

        NullableCurrencyTJS ->
            "TJS"

        NullableCurrencyTMT ->
            "TMT"

        NullableCurrencyTND ->
            "TND"

        NullableCurrencyTOP ->
            "TOP"

        NullableCurrencyTRY ->
            "TRY"

        NullableCurrencyTTD ->
            "TTD"

        NullableCurrencyTVD ->
            "TVD"

        NullableCurrencyTWD ->
            "TWD"

        NullableCurrencyTZS ->
            "TZS"

        NullableCurrencyUAH ->
            "UAH"

        NullableCurrencyUGX ->
            "UGX"

        NullableCurrencyUSD ->
            "USD"

        NullableCurrencyUYU ->
            "UYU"

        NullableCurrencyUZS ->
            "UZS"

        NullableCurrencyVEF ->
            "VEF"

        NullableCurrencyVND ->
            "VND"

        NullableCurrencyVUV ->
            "VUV"

        NullableCurrencyWST ->
            "WST"

        NullableCurrencyXAF ->
            "XAF"

        NullableCurrencyXCD ->
            "XCD"

        NullableCurrencyXDR ->
            "XDR"

        NullableCurrencyXOF ->
            "XOF"

        NullableCurrencyXPF ->
            "XPF"

        NullableCurrencyYER ->
            "YER"

        NullableCurrencyZAR ->
            "ZAR"

        NullableCurrencyZMW ->
            "ZMW"

        NullableCurrencyZWD ->
            "ZWD"

        NullableCurrencyNull ->
            "null"


encodeNullableCurrency : NullableCurrency -> Json.Encode.Value
encodeNullableCurrency =
    Json.Encode.string << stringFromNullableCurrency


encodeOauthAccessTokenRequest : OauthAccessTokenRequest -> Json.Encode.Value
encodeOauthAccessTokenRequest model =
    case model of
        OauthAccessTokenRequest subModel ->
            encodeBaseOauthAccessTokenRequest subModel

        OauthAccessTokenRequestOauthAccessTokenRequestCode subModel ->
            encodeOauthAccessTokenRequestCodeWithTag ("grantType", "authorization_code") subModel


        OauthAccessTokenRequestOauthAccessTokenRequestRefresh subModel ->
            encodeOauthAccessTokenRequestRefreshWithTag ("grantType", "refresh_token") subModel


encodeBaseOauthAccessTokenRequest : BaseOauthAccessTokenRequest -> Json.Encode.Value
encodeBaseOauthAccessTokenRequest =
    encodeObject << encodeBaseOauthAccessTokenRequestPairs


encodeBaseOauthAccessTokenRequestWithTag : ( String, String ) -> BaseOauthAccessTokenRequest -> Json.Encode.Value
encodeBaseOauthAccessTokenRequestWithTag (tagField, tag) model =
    encodeObject (encodeBaseOauthAccessTokenRequestPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeBaseOauthAccessTokenRequestPairs : BaseOauthAccessTokenRequest -> List EncodedField
encodeBaseOauthAccessTokenRequestPairs model =
    let
        pairs =
            [ encode "grant_type" encodeOauthAccessTokenRequestGrantType model.grantType
            ]
    in
    pairs

stringFromOauthAccessTokenRequestGrantType : OauthAccessTokenRequestGrantType -> String
stringFromOauthAccessTokenRequestGrantType model =
    case model of
        OauthAccessTokenRequestGrantTypeAuthorizationCode ->
            "authorization_code"

        OauthAccessTokenRequestGrantTypeRefreshToken ->
            "refresh_token"


encodeOauthAccessTokenRequestGrantType : OauthAccessTokenRequestGrantType -> Json.Encode.Value
encodeOauthAccessTokenRequestGrantType =
    Json.Encode.string << stringFromOauthAccessTokenRequestGrantType



encodeOauthAccessTokenRequestCode : OauthAccessTokenRequestCode -> Json.Encode.Value
encodeOauthAccessTokenRequestCode =
    encodeObject << encodeOauthAccessTokenRequestCodePairs


encodeOauthAccessTokenRequestCodeWithTag : ( String, String ) -> OauthAccessTokenRequestCode -> Json.Encode.Value
encodeOauthAccessTokenRequestCodeWithTag (tagField, tag) model =
    encodeObject (encodeOauthAccessTokenRequestCodePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeOauthAccessTokenRequestCodePairs : OauthAccessTokenRequestCode -> List EncodedField
encodeOauthAccessTokenRequestCodePairs model =
    let
        pairs =
            [ encode "code" Json.Encode.string model.code
            , encode "redirect_uri" Json.Encode.string model.redirectUri
            ]
    in
    encodeBaseOauthAccessTokenRequestPairs model.baseOauthAccessTokenRequest ++ pairs


encodeOauthAccessTokenRequestRefresh : OauthAccessTokenRequestRefresh -> Json.Encode.Value
encodeOauthAccessTokenRequestRefresh =
    encodeObject << encodeOauthAccessTokenRequestRefreshPairs


encodeOauthAccessTokenRequestRefreshWithTag : ( String, String ) -> OauthAccessTokenRequestRefresh -> Json.Encode.Value
encodeOauthAccessTokenRequestRefreshWithTag (tagField, tag) model =
    encodeObject (encodeOauthAccessTokenRequestRefreshPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeOauthAccessTokenRequestRefreshPairs : OauthAccessTokenRequestRefresh -> List EncodedField
encodeOauthAccessTokenRequestRefreshPairs model =
    let
        pairs =
            [ encode "refresh_token" Json.Encode.string model.refreshToken
            , maybeEncode "scope" Json.Encode.string model.scope
            ]
    in
    encodeBaseOauthAccessTokenRequestPairs model.baseOauthAccessTokenRequest ++ pairs


encodeOauthAccessTokenResponse : OauthAccessTokenResponse -> Json.Encode.Value
encodeOauthAccessTokenResponse model =
    case model of
        OauthAccessTokenResponse subModel ->
            encodeBaseOauthAccessTokenResponse subModel

        OauthAccessTokenResponseOauthAccessTokenResponseCode subModel ->
            encodeOauthAccessTokenResponseCodeWithTag ("responseType", "authorization_code") subModel


        OauthAccessTokenResponseOauthAccessTokenResponseRefresh subModel ->
            encodeOauthAccessTokenResponseRefreshWithTag ("responseType", "refresh_token") subModel


encodeBaseOauthAccessTokenResponse : BaseOauthAccessTokenResponse -> Json.Encode.Value
encodeBaseOauthAccessTokenResponse =
    encodeObject << encodeBaseOauthAccessTokenResponsePairs


encodeBaseOauthAccessTokenResponseWithTag : ( String, String ) -> BaseOauthAccessTokenResponse -> Json.Encode.Value
encodeBaseOauthAccessTokenResponseWithTag (tagField, tag) model =
    encodeObject (encodeBaseOauthAccessTokenResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeBaseOauthAccessTokenResponsePairs : BaseOauthAccessTokenResponse -> List EncodedField
encodeBaseOauthAccessTokenResponsePairs model =
    let
        pairs =
            [ maybeEncode "response_type" encodeOauthAccessTokenResponseResponseType model.responseType
            , encode "access_token" Json.Encode.string model.accessToken
            , encode "token_type" Json.Encode.string model.tokenType
            , encode "expires_in" Json.Encode.int model.expiresIn
            , encode "scope" Json.Encode.string model.scope
            ]
    in
    pairs

stringFromOauthAccessTokenResponseResponseType : OauthAccessTokenResponseResponseType -> String
stringFromOauthAccessTokenResponseResponseType model =
    case model of
        OauthAccessTokenResponseResponseTypeAuthorizationCode ->
            "authorization_code"

        OauthAccessTokenResponseResponseTypeRefreshToken ->
            "refresh_token"


encodeOauthAccessTokenResponseResponseType : OauthAccessTokenResponseResponseType -> Json.Encode.Value
encodeOauthAccessTokenResponseResponseType =
    Json.Encode.string << stringFromOauthAccessTokenResponseResponseType



encodeOauthAccessTokenResponseCode : OauthAccessTokenResponseCode -> Json.Encode.Value
encodeOauthAccessTokenResponseCode =
    encodeObject << encodeOauthAccessTokenResponseCodePairs


encodeOauthAccessTokenResponseCodeWithTag : ( String, String ) -> OauthAccessTokenResponseCode -> Json.Encode.Value
encodeOauthAccessTokenResponseCodeWithTag (tagField, tag) model =
    encodeObject (encodeOauthAccessTokenResponseCodePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeOauthAccessTokenResponseCodePairs : OauthAccessTokenResponseCode -> List EncodedField
encodeOauthAccessTokenResponseCodePairs model =
    let
        pairs =
            [ encode "refresh_token" Json.Encode.string model.refreshToken
            , encode "refresh_token_expires_in" Json.Encode.int model.refreshTokenExpiresIn
            ]
    in
    encodeBaseOauthAccessTokenResponsePairs model.baseOauthAccessTokenResponse ++ pairs


encodeOauthAccessTokenResponseRefresh : OauthAccessTokenResponseRefresh -> Json.Encode.Value
encodeOauthAccessTokenResponseRefresh =
    encodeObject << encodeOauthAccessTokenResponseRefreshPairs


encodeOauthAccessTokenResponseRefreshWithTag : ( String, String ) -> OauthAccessTokenResponseRefresh -> Json.Encode.Value
encodeOauthAccessTokenResponseRefreshWithTag (tagField, tag) model =
    encodeObject (encodeOauthAccessTokenResponseRefreshPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeOauthAccessTokenResponseRefreshPairs : OauthAccessTokenResponseRefresh -> List EncodedField
encodeOauthAccessTokenResponseRefreshPairs model =
    let
        pairs =
            ]
    in
    encodeBaseOauthAccessTokenResponsePairs model.baseOauthAccessTokenResponse ++ pairs


stringFromObjectiveType : ObjectiveType -> String
stringFromObjectiveType model =
    case model of
        ObjectiveTypeAWARENESS ->
            "AWARENESS"

        ObjectiveTypeCONSIDERATION ->
            "CONSIDERATION"

        ObjectiveTypeVIDEOVIEW ->
            "VIDEO_VIEW"

        ObjectiveTypeWEBCONVERSION ->
            "WEB_CONVERSION"

        ObjectiveTypeCATALOGSALES ->
            "CATALOG_SALES"

        ObjectiveTypeWEBSESSIONS ->
            "WEB_SESSIONS"

        ObjectiveTypeAWARENESSRESERVED ->
            "AWARENESS_RESERVED"

        ObjectiveTypeENGAGEMENT ->
            "ENGAGEMENT"


encodeObjectiveType : ObjectiveType -> Json.Encode.Value
encodeObjectiveType =
    Json.Encode.string << stringFromObjectiveType


stringFromPacingDeliveryType : PacingDeliveryType -> String
stringFromPacingDeliveryType model =
    case model of
        PacingDeliveryTypeSTANDARD ->
            "STANDARD"

        PacingDeliveryTypeACCELERATED ->
            "ACCELERATED"


encodePacingDeliveryType : PacingDeliveryType -> Json.Encode.Value
encodePacingDeliveryType =
    Json.Encode.string << stringFromPacingDeliveryType


encodePaginated : Paginated -> Json.Encode.Value
encodePaginated =
    encodeObject << encodePaginatedPairs


encodePaginatedWithTag : ( String, String ) -> Paginated -> Json.Encode.Value
encodePaginatedWithTag (tagField, tag) model =
    encodeObject (encodePaginatedPairs model ++ [ encode tagField Json.Encode.string tag ])


encodePaginatedPairs : Paginated -> List EncodedField
encodePaginatedPairs model =
    let
        pairs =
            [ encode "items" (Json.Encode.list encodeObject) model.items
            , maybeEncodeNullable "bookmark" Json.Encode.string model.bookmark
            ]
    in
    pairs


encodePin : Pin -> Json.Encode.Value
encodePin =
    encodeObject << encodePinPairs


encodePinWithTag : ( String, String ) -> Pin -> Json.Encode.Value
encodePinWithTag (tagField, tag) model =
    encodeObject (encodePinPairs model ++ [ encode tagField Json.Encode.string tag ])


encodePinPairs : Pin -> List EncodedField
encodePinPairs model =
    let
        pairs =
            [ maybeEncode "id" Json.Encode.string model.id
            , maybeEncode "created_at" Api.Time.encodeDateTime model.createdAt
            , maybeEncodeNullable "link" Json.Encode.string model.link
            , maybeEncodeNullable "title" Json.Encode.string model.title
            , maybeEncodeNullable "description" Json.Encode.string model.description
            , maybeEncodeNullable "alt_text" Json.Encode.string model.altText
            , maybeEncode "board_id" Json.Encode.string model.boardId
            , maybeEncodeNullable "board_section_id" Json.Encode.string model.boardSectionId
            , maybeEncode "board_owner" encodeBoardOwner model.boardOwner
            , maybeEncode "media" encodePinMedia model.media
            , maybeEncode "media_source" encodePinMediaSource model.mediaSource
            ]
    in
    pairs


encodePinMedia : PinMedia -> Json.Encode.Value
encodePinMedia model =
    case model of
        PinMedia subModel ->
            encodeBasePinMedia subModel

        PinMediaPinMediaWithImage subModel ->
            encodePinMediaWithImageWithTag ("mediaType", "image") subModel


encodeBasePinMedia : BasePinMedia -> Json.Encode.Value
encodeBasePinMedia =
    encodeObject << encodeBasePinMediaPairs


encodeBasePinMediaWithTag : ( String, String ) -> BasePinMedia -> Json.Encode.Value
encodeBasePinMediaWithTag (tagField, tag) model =
    encodeObject (encodeBasePinMediaPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeBasePinMediaPairs : BasePinMedia -> List EncodedField
encodeBasePinMediaPairs model =
    let
        pairs =
            [ maybeEncode "media_type" Json.Encode.string model.mediaType
            ]
    in
    pairs


encodePinMediaSource : PinMediaSource -> Json.Encode.Value
encodePinMediaSource model =
    case model of
        PinMediaSourcePinMediaSourceImageBase64 subModel ->
            encodePinMediaSourceImageBase64WithTag ("sourceType", "image_base64") subModel

        PinMediaSourcePinMediaSourceImageURL subModel ->
            encodePinMediaSourceImageURLWithTag ("sourceType", "image_url") subModel

        PinMediaSourcePinMediaSourceVideoID subModel ->
            encodePinMediaSourceVideoIDWithTag ("sourceType", "video_id") subModel




encodePinMediaSourceImageBase64 : PinMediaSourceImageBase64 -> Json.Encode.Value
encodePinMediaSourceImageBase64 =
    encodeObject << encodePinMediaSourceImageBase64Pairs


encodePinMediaSourceImageBase64WithTag : ( String, String ) -> PinMediaSourceImageBase64 -> Json.Encode.Value
encodePinMediaSourceImageBase64WithTag (tagField, tag) model =
    encodeObject (encodePinMediaSourceImageBase64Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodePinMediaSourceImageBase64Pairs : PinMediaSourceImageBase64 -> List EncodedField
encodePinMediaSourceImageBase64Pairs model =
    let
        pairs =
            [ encode "source_type" encodePinMediaSourceImageBase64SourceType model.sourceType
            , encode "content_type" encodePinMediaSourceImageBase64ContentType model.contentType
            , encode "data" Json.Encode.string model.data
            ]
    in
    pairs

stringFromPinMediaSourceImageBase64SourceType : PinMediaSourceImageBase64SourceType -> String
stringFromPinMediaSourceImageBase64SourceType model =
    case model of
        PinMediaSourceImageBase64SourceTypeImageBase64 ->
            "image_base64"


encodePinMediaSourceImageBase64SourceType : PinMediaSourceImageBase64SourceType -> Json.Encode.Value
encodePinMediaSourceImageBase64SourceType =
    Json.Encode.string << stringFromPinMediaSourceImageBase64SourceType


stringFromPinMediaSourceImageBase64ContentType : PinMediaSourceImageBase64ContentType -> String
stringFromPinMediaSourceImageBase64ContentType model =
    case model of
        PinMediaSourceImageBase64ContentTypeJpeg ->
            "image/jpeg"

        PinMediaSourceImageBase64ContentTypePng ->
            "image/png"


encodePinMediaSourceImageBase64ContentType : PinMediaSourceImageBase64ContentType -> Json.Encode.Value
encodePinMediaSourceImageBase64ContentType =
    Json.Encode.string << stringFromPinMediaSourceImageBase64ContentType



encodePinMediaSourceImageURL : PinMediaSourceImageURL -> Json.Encode.Value
encodePinMediaSourceImageURL =
    encodeObject << encodePinMediaSourceImageURLPairs


encodePinMediaSourceImageURLWithTag : ( String, String ) -> PinMediaSourceImageURL -> Json.Encode.Value
encodePinMediaSourceImageURLWithTag (tagField, tag) model =
    encodeObject (encodePinMediaSourceImageURLPairs model ++ [ encode tagField Json.Encode.string tag ])


encodePinMediaSourceImageURLPairs : PinMediaSourceImageURL -> List EncodedField
encodePinMediaSourceImageURLPairs model =
    let
        pairs =
            [ encode "source_type" encodePinMediaSourceImageURLSourceType model.sourceType
            , encode "url" Json.Encode.string model.url
            ]
    in
    pairs

stringFromPinMediaSourceImageURLSourceType : PinMediaSourceImageURLSourceType -> String
stringFromPinMediaSourceImageURLSourceType model =
    case model of
        PinMediaSourceImageURLSourceTypeImageUrl ->
            "image_url"


encodePinMediaSourceImageURLSourceType : PinMediaSourceImageURLSourceType -> Json.Encode.Value
encodePinMediaSourceImageURLSourceType =
    Json.Encode.string << stringFromPinMediaSourceImageURLSourceType



encodePinMediaSourceVideoID : PinMediaSourceVideoID -> Json.Encode.Value
encodePinMediaSourceVideoID =
    encodeObject << encodePinMediaSourceVideoIDPairs


encodePinMediaSourceVideoIDWithTag : ( String, String ) -> PinMediaSourceVideoID -> Json.Encode.Value
encodePinMediaSourceVideoIDWithTag (tagField, tag) model =
    encodeObject (encodePinMediaSourceVideoIDPairs model ++ [ encode tagField Json.Encode.string tag ])


encodePinMediaSourceVideoIDPairs : PinMediaSourceVideoID -> List EncodedField
encodePinMediaSourceVideoIDPairs model =
    let
        pairs =
            [ encode "source_type" encodePinMediaSourceVideoIDSourceType model.sourceType
            , encode "cover_image_url" Json.Encode.string model.coverImageUrl
            , encode "media_id" Json.Encode.string model.mediaId
            ]
    in
    pairs

stringFromPinMediaSourceVideoIDSourceType : PinMediaSourceVideoIDSourceType -> String
stringFromPinMediaSourceVideoIDSourceType model =
    case model of
        PinMediaSourceVideoIDSourceTypeVideoId ->
            "video_id"


encodePinMediaSourceVideoIDSourceType : PinMediaSourceVideoIDSourceType -> Json.Encode.Value
encodePinMediaSourceVideoIDSourceType =
    Json.Encode.string << stringFromPinMediaSourceVideoIDSourceType



encodePinMediaWithImage : PinMediaWithImage -> Json.Encode.Value
encodePinMediaWithImage =
    encodeObject << encodePinMediaWithImagePairs


encodePinMediaWithImageWithTag : ( String, String ) -> PinMediaWithImage -> Json.Encode.Value
encodePinMediaWithImageWithTag (tagField, tag) model =
    encodeObject (encodePinMediaWithImagePairs model ++ [ encode tagField Json.Encode.string tag ])


encodePinMediaWithImagePairs : PinMediaWithImage -> List EncodedField
encodePinMediaWithImagePairs model =
    let
        pairs =
            [ maybeEncode "images" (Json.Encode.dict identity encodeImageDetails) model.images
            ]
    in
    encodeBasePinMediaPairs model.basePinMedia ++ pairs


stringFromPinPromotionSummaryStatus : PinPromotionSummaryStatus -> String
stringFromPinPromotionSummaryStatus model =
    case model of
        PinPromotionSummaryStatusAPPROVED ->
            "APPROVED"

        PinPromotionSummaryStatusPAUSED ->
            "PAUSED"

        PinPromotionSummaryStatusPENDING ->
            "PENDING"

        PinPromotionSummaryStatusREJECTED ->
            "REJECTED"

        PinPromotionSummaryStatusADVERTISERDISABLED ->
            "ADVERTISER_DISABLED"

        PinPromotionSummaryStatusARCHIVED ->
            "ARCHIVED"


encodePinPromotionSummaryStatus : PinPromotionSummaryStatus -> Json.Encode.Value
encodePinPromotionSummaryStatus =
    Json.Encode.string << stringFromPinPromotionSummaryStatus


stringFromPlacementGroupType : PlacementGroupType -> String
stringFromPlacementGroupType model =
    case model of
        PlacementGroupTypeALL ->
            "ALL"

        PlacementGroupTypeSEARCH ->
            "SEARCH"

        PlacementGroupTypeBROWSE ->
            "BROWSE"

        PlacementGroupTypeOTHER ->
            "OTHER"


encodePlacementGroupType : PlacementGroupType -> Json.Encode.Value
encodePlacementGroupType =
    Json.Encode.string << stringFromPlacementGroupType


stringFromProductAvailabilityType : ProductAvailabilityType -> String
stringFromProductAvailabilityType model =
    case model of
        ProductAvailabilityTypeINSTOCK ->
            "IN_STOCK"

        ProductAvailabilityTypeOUTOFSTOCK ->
            "OUT_OF_STOCK"

        ProductAvailabilityTypePREORDER ->
            "PREORDER"

        ProductAvailabilityTypeNull ->
            "null"


encodeProductAvailabilityType : ProductAvailabilityType -> Json.Encode.Value
encodeProductAvailabilityType =
    Json.Encode.string << stringFromProductAvailabilityType


stringFromProductGroupSummaryStatus : ProductGroupSummaryStatus -> String
stringFromProductGroupSummaryStatus model =
    case model of
        ProductGroupSummaryStatusRUNNING ->
            "RUNNING"

        ProductGroupSummaryStatusPAUSED ->
            "PAUSED"

        ProductGroupSummaryStatusEXCLUDED ->
            "EXCLUDED"

        ProductGroupSummaryStatusARCHIVED ->
            "ARCHIVED"


encodeProductGroupSummaryStatus : ProductGroupSummaryStatus -> Json.Encode.Value
encodeProductGroupSummaryStatus =
    Json.Encode.string << stringFromProductGroupSummaryStatus


encodeProductType0Filter : ProductType0Filter -> Json.Encode.Value
encodeProductType0Filter =
    encodeObject << encodeProductType0FilterPairs


encodeProductType0FilterWithTag : ( String, String ) -> ProductType0Filter -> Json.Encode.Value
encodeProductType0FilterWithTag (tagField, tag) model =
    encodeObject (encodeProductType0FilterPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeProductType0FilterPairs : ProductType0Filter -> List EncodedField
encodeProductType0FilterPairs model =
    let
        pairs =
            [ encode "PRODUCT_TYPE_0" encodeCatalogsProductGroupMultipleStringListCriteria model.pRODUCTTYPE0
            ]
    in
    pairs


encodeProductType1Filter : ProductType1Filter -> Json.Encode.Value
encodeProductType1Filter =
    encodeObject << encodeProductType1FilterPairs


encodeProductType1FilterWithTag : ( String, String ) -> ProductType1Filter -> Json.Encode.Value
encodeProductType1FilterWithTag (tagField, tag) model =
    encodeObject (encodeProductType1FilterPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeProductType1FilterPairs : ProductType1Filter -> List EncodedField
encodeProductType1FilterPairs model =
    let
        pairs =
            [ encode "PRODUCT_TYPE_1" encodeCatalogsProductGroupMultipleStringListCriteria model.pRODUCTTYPE1
            ]
    in
    pairs


encodeProductType2Filter : ProductType2Filter -> Json.Encode.Value
encodeProductType2Filter =
    encodeObject << encodeProductType2FilterPairs


encodeProductType2FilterWithTag : ( String, String ) -> ProductType2Filter -> Json.Encode.Value
encodeProductType2FilterWithTag (tagField, tag) model =
    encodeObject (encodeProductType2FilterPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeProductType2FilterPairs : ProductType2Filter -> List EncodedField
encodeProductType2FilterPairs model =
    let
        pairs =
            [ encode "PRODUCT_TYPE_2" encodeCatalogsProductGroupMultipleStringListCriteria model.pRODUCTTYPE2
            ]
    in
    pairs


encodeProductType3Filter : ProductType3Filter -> Json.Encode.Value
encodeProductType3Filter =
    encodeObject << encodeProductType3FilterPairs


encodeProductType3FilterWithTag : ( String, String ) -> ProductType3Filter -> Json.Encode.Value
encodeProductType3FilterWithTag (tagField, tag) model =
    encodeObject (encodeProductType3FilterPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeProductType3FilterPairs : ProductType3Filter -> List EncodedField
encodeProductType3FilterPairs model =
    let
        pairs =
            [ encode "PRODUCT_TYPE_3" encodeCatalogsProductGroupMultipleStringListCriteria model.pRODUCTTYPE3
            ]
    in
    pairs


encodeProductType4Filter : ProductType4Filter -> Json.Encode.Value
encodeProductType4Filter =
    encodeObject << encodeProductType4FilterPairs


encodeProductType4FilterWithTag : ( String, String ) -> ProductType4Filter -> Json.Encode.Value
encodeProductType4FilterWithTag (tagField, tag) model =
    encodeObject (encodeProductType4FilterPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeProductType4FilterPairs : ProductType4Filter -> List EncodedField
encodeProductType4FilterPairs model =
    let
        pairs =
            [ encode "PRODUCT_TYPE_4" encodeCatalogsProductGroupMultipleStringListCriteria model.pRODUCTTYPE4
            ]
    in
    pairs


stringFromReportingColumnAsync : ReportingColumnAsync -> String
stringFromReportingColumnAsync model =
    case model of
        ReportingColumnAsyncSPENDINMICRODOLLAR ->
            "SPEND_IN_MICRO_DOLLAR"

        ReportingColumnAsyncPAIDIMPRESSION ->
            "PAID_IMPRESSION"

        ReportingColumnAsyncCPCINMICRODOLLAR ->
            "CPC_IN_MICRO_DOLLAR"

        ReportingColumnAsyncECPCINMICRODOLLAR ->
            "ECPC_IN_MICRO_DOLLAR"

        ReportingColumnAsyncCTR ->
            "CTR"

        ReportingColumnAsyncECTR ->
            "ECTR"

        ReportingColumnAsyncCAMPAIGNNAME ->
            "CAMPAIGN_NAME"

        ReportingColumnAsyncCAMPAIGNSTATUS ->
            "CAMPAIGN_STATUS"

        ReportingColumnAsyncADSTATUS ->
            "AD_STATUS"

        ReportingColumnAsyncPINPROMOTIONSTATUS ->
            "PIN_PROMOTION_STATUS"

        ReportingColumnAsyncPINID ->
            "PIN_ID"

        ReportingColumnAsyncTOTALENGAGEMENT ->
            "TOTAL_ENGAGEMENT"

        ReportingColumnAsyncENGAGEMENT1 ->
            "ENGAGEMENT_1"

        ReportingColumnAsyncENGAGEMENT2 ->
            "ENGAGEMENT_2"

        ReportingColumnAsyncECPMINMICRODOLLAR ->
            "ECPM_IN_MICRO_DOLLAR"

        ReportingColumnAsyncCTR2 ->
            "CTR_2"

        ReportingColumnAsyncCAMPAIGNID ->
            "CAMPAIGN_ID"

        ReportingColumnAsyncADVERTISERID ->
            "ADVERTISER_ID"

        ReportingColumnAsyncADACCOUNTID ->
            "AD_ACCOUNT_ID"

        ReportingColumnAsyncPINPROMOTIONID ->
            "PIN_PROMOTION_ID"

        ReportingColumnAsyncADID ->
            "AD_ID"

        ReportingColumnAsyncADGROUPID ->
            "AD_GROUP_ID"

        ReportingColumnAsyncCAMPAIGNMANAGEDSTATUS ->
            "CAMPAIGN_MANAGED_STATUS"

        ReportingColumnAsyncCPMINMICRODOLLAR ->
            "CPM_IN_MICRO_DOLLAR"

        ReportingColumnAsyncADGROUPNAME ->
            "AD_GROUP_NAME"

        ReportingColumnAsyncADGROUPSTATUS ->
            "AD_GROUP_STATUS"

        ReportingColumnAsyncPRODUCTGROUPID ->
            "PRODUCT_GROUP_ID"

        ReportingColumnAsyncCLICKTHROUGH1 ->
            "CLICKTHROUGH_1"

        ReportingColumnAsyncREPIN1 ->
            "REPIN_1"

        ReportingColumnAsyncIMPRESSION1 ->
            "IMPRESSION_1"

        ReportingColumnAsyncIMPRESSION1GROSS ->
            "IMPRESSION_1_GROSS"

        ReportingColumnAsyncCLICKTHROUGH1GROSS ->
            "CLICKTHROUGH_1_GROSS"

        ReportingColumnAsyncOUTBOUNDCLICK1 ->
            "OUTBOUND_CLICK_1"

        ReportingColumnAsyncCLICKTHROUGH2 ->
            "CLICKTHROUGH_2"

        ReportingColumnAsyncREPIN2 ->
            "REPIN_2"

        ReportingColumnAsyncIMPRESSION2 ->
            "IMPRESSION_2"

        ReportingColumnAsyncOUTBOUNDCLICK2 ->
            "OUTBOUND_CLICK_2"

        ReportingColumnAsyncTOTALIMPRESSIONUSER ->
            "TOTAL_IMPRESSION_USER"

        ReportingColumnAsyncTOTALIMPRESSIONFREQUENCY ->
            "TOTAL_IMPRESSION_FREQUENCY"

        ReportingColumnAsyncTOTALENGAGEMENTPAGEVISIT ->
            "TOTAL_ENGAGEMENT_PAGE_VISIT"

        ReportingColumnAsyncTOTALENGAGEMENTSIGNUP ->
            "TOTAL_ENGAGEMENT_SIGNUP"

        ReportingColumnAsyncTOTALENGAGEMENTCHECKOUT ->
            "TOTAL_ENGAGEMENT_CHECKOUT"

        ReportingColumnAsyncTOTALENGAGEMENTCUSTOM ->
            "TOTAL_ENGAGEMENT_CUSTOM"

        ReportingColumnAsyncTOTALENGAGEMENTADDTOCART ->
            "TOTAL_ENGAGEMENT_ADD_TO_CART"

        ReportingColumnAsyncTOTALENGAGEMENTLEAD ->
            "TOTAL_ENGAGEMENT_LEAD"

        ReportingColumnAsyncTOTALENGAGEMENTSEARCH ->
            "TOTAL_ENGAGEMENT_SEARCH"

        ReportingColumnAsyncTOTALENGAGEMENTWATCHVIDEO ->
            "TOTAL_ENGAGEMENT_WATCH_VIDEO"

        ReportingColumnAsyncTOTALENGAGEMENTVIEWCATEGORY ->
            "TOTAL_ENGAGEMENT_VIEW_CATEGORY"

        ReportingColumnAsyncTOTALENGAGEMENTAPPINSTALL ->
            "TOTAL_ENGAGEMENT_APP_INSTALL"

        ReportingColumnAsyncTOTALENGAGEMENTUNKNOWN ->
            "TOTAL_ENGAGEMENT_UNKNOWN"

        ReportingColumnAsyncTOTALCLICKPAGEVISIT ->
            "TOTAL_CLICK_PAGE_VISIT"

        ReportingColumnAsyncTOTALCLICKSIGNUP ->
            "TOTAL_CLICK_SIGNUP"

        ReportingColumnAsyncTOTALCLICKCHECKOUT ->
            "TOTAL_CLICK_CHECKOUT"

        ReportingColumnAsyncTOTALCLICKCUSTOM ->
            "TOTAL_CLICK_CUSTOM"

        ReportingColumnAsyncTOTALCLICKADDTOCART ->
            "TOTAL_CLICK_ADD_TO_CART"

        ReportingColumnAsyncTOTALCLICKLEAD ->
            "TOTAL_CLICK_LEAD"

        ReportingColumnAsyncTOTALCLICKSEARCH ->
            "TOTAL_CLICK_SEARCH"

        ReportingColumnAsyncTOTALCLICKWATCHVIDEO ->
            "TOTAL_CLICK_WATCH_VIDEO"

        ReportingColumnAsyncTOTALCLICKVIEWCATEGORY ->
            "TOTAL_CLICK_VIEW_CATEGORY"

        ReportingColumnAsyncTOTALCLICKAPPINSTALL ->
            "TOTAL_CLICK_APP_INSTALL"

        ReportingColumnAsyncTOTALCLICKUNKNOWN ->
            "TOTAL_CLICK_UNKNOWN"

        ReportingColumnAsyncTOTALVIEWPAGEVISIT ->
            "TOTAL_VIEW_PAGE_VISIT"

        ReportingColumnAsyncTOTALVIEWSIGNUP ->
            "TOTAL_VIEW_SIGNUP"

        ReportingColumnAsyncTOTALVIEWCHECKOUT ->
            "TOTAL_VIEW_CHECKOUT"

        ReportingColumnAsyncTOTALVIEWCUSTOM ->
            "TOTAL_VIEW_CUSTOM"

        ReportingColumnAsyncTOTALVIEWADDTOCART ->
            "TOTAL_VIEW_ADD_TO_CART"

        ReportingColumnAsyncTOTALVIEWLEAD ->
            "TOTAL_VIEW_LEAD"

        ReportingColumnAsyncTOTALVIEWSEARCH ->
            "TOTAL_VIEW_SEARCH"

        ReportingColumnAsyncTOTALVIEWWATCHVIDEO ->
            "TOTAL_VIEW_WATCH_VIDEO"

        ReportingColumnAsyncTOTALVIEWVIEWCATEGORY ->
            "TOTAL_VIEW_VIEW_CATEGORY"

        ReportingColumnAsyncTOTALVIEWAPPINSTALL ->
            "TOTAL_VIEW_APP_INSTALL"

        ReportingColumnAsyncTOTALVIEWUNKNOWN ->
            "TOTAL_VIEW_UNKNOWN"

        ReportingColumnAsyncTOTALCONVERSIONS ->
            "TOTAL_CONVERSIONS"

        ReportingColumnAsyncTOTALENGAGEMENTPAGEVISITVALUEINMICRODOLLAR ->
            "TOTAL_ENGAGEMENT_PAGE_VISIT_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALENGAGEMENTSIGNUPVALUEINMICRODOLLAR ->
            "TOTAL_ENGAGEMENT_SIGNUP_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALENGAGEMENTCHECKOUTVALUEINMICRODOLLAR ->
            "TOTAL_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALENGAGEMENTCUSTOMVALUEINMICRODOLLAR ->
            "TOTAL_ENGAGEMENT_CUSTOM_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALENGAGEMENTADDTOCARTVALUEINMICRODOLLAR ->
            "TOTAL_ENGAGEMENT_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALENGAGEMENTLEADVALUEINMICRODOLLAR ->
            "TOTAL_ENGAGEMENT_LEAD_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALENGAGEMENTSEARCHVALUEINMICRODOLLAR ->
            "TOTAL_ENGAGEMENT_SEARCH_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALENGAGEMENTWATCHVIDEOVALUEINMICRODOLLAR ->
            "TOTAL_ENGAGEMENT_WATCH_VIDEO_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALENGAGEMENTVIEWCATEGORYVALUEINMICRODOLLAR ->
            "TOTAL_ENGAGEMENT_VIEW_CATEGORY_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALENGAGEMENTAPPINSTALLVALUEINMICRODOLLAR ->
            "TOTAL_ENGAGEMENT_APP_INSTALL_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALENGAGEMENTUNKNOWNVALUEINMICRODOLLAR ->
            "TOTAL_ENGAGEMENT_UNKNOWN_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALCLICKPAGEVISITVALUEINMICRODOLLAR ->
            "TOTAL_CLICK_PAGE_VISIT_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALCLICKSIGNUPVALUEINMICRODOLLAR ->
            "TOTAL_CLICK_SIGNUP_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALCLICKCHECKOUTVALUEINMICRODOLLAR ->
            "TOTAL_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALCLICKCUSTOMVALUEINMICRODOLLAR ->
            "TOTAL_CLICK_CUSTOM_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALCLICKADDTOCARTVALUEINMICRODOLLAR ->
            "TOTAL_CLICK_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALCLICKLEADVALUEINMICRODOLLAR ->
            "TOTAL_CLICK_LEAD_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALCLICKSEARCHVALUEINMICRODOLLAR ->
            "TOTAL_CLICK_SEARCH_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALCLICKWATCHVIDEOVALUEINMICRODOLLAR ->
            "TOTAL_CLICK_WATCH_VIDEO_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALCLICKVIEWCATEGORYVALUEINMICRODOLLAR ->
            "TOTAL_CLICK_VIEW_CATEGORY_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALCLICKAPPINSTALLVALUEINMICRODOLLAR ->
            "TOTAL_CLICK_APP_INSTALL_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALCLICKUNKNOWNVALUEINMICRODOLLAR ->
            "TOTAL_CLICK_UNKNOWN_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALVIEWPAGEVISITVALUEINMICRODOLLAR ->
            "TOTAL_VIEW_PAGE_VISIT_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALVIEWSIGNUPVALUEINMICRODOLLAR ->
            "TOTAL_VIEW_SIGNUP_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALVIEWCHECKOUTVALUEINMICRODOLLAR ->
            "TOTAL_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALVIEWCUSTOMVALUEINMICRODOLLAR ->
            "TOTAL_VIEW_CUSTOM_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALVIEWADDTOCARTVALUEINMICRODOLLAR ->
            "TOTAL_VIEW_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALVIEWLEADVALUEINMICRODOLLAR ->
            "TOTAL_VIEW_LEAD_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALVIEWSEARCHVALUEINMICRODOLLAR ->
            "TOTAL_VIEW_SEARCH_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALVIEWWATCHVIDEOVALUEINMICRODOLLAR ->
            "TOTAL_VIEW_WATCH_VIDEO_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALVIEWVIEWCATEGORYVALUEINMICRODOLLAR ->
            "TOTAL_VIEW_VIEW_CATEGORY_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALVIEWAPPINSTALLVALUEINMICRODOLLAR ->
            "TOTAL_VIEW_APP_INSTALL_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALVIEWUNKNOWNVALUEINMICRODOLLAR ->
            "TOTAL_VIEW_UNKNOWN_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALCONVERSIONSVALUEINMICRODOLLAR ->
            "TOTAL_CONVERSIONS_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALENGAGEMENTPAGEVISITQUANTITY ->
            "TOTAL_ENGAGEMENT_PAGE_VISIT_QUANTITY"

        ReportingColumnAsyncTOTALENGAGEMENTSIGNUPQUANTITY ->
            "TOTAL_ENGAGEMENT_SIGNUP_QUANTITY"

        ReportingColumnAsyncTOTALENGAGEMENTCHECKOUTQUANTITY ->
            "TOTAL_ENGAGEMENT_CHECKOUT_QUANTITY"

        ReportingColumnAsyncTOTALENGAGEMENTCUSTOMQUANTITY ->
            "TOTAL_ENGAGEMENT_CUSTOM_QUANTITY"

        ReportingColumnAsyncTOTALENGAGEMENTADDTOCARTQUANTITY ->
            "TOTAL_ENGAGEMENT_ADD_TO_CART_QUANTITY"

        ReportingColumnAsyncTOTALENGAGEMENTLEADQUANTITY ->
            "TOTAL_ENGAGEMENT_LEAD_QUANTITY"

        ReportingColumnAsyncTOTALENGAGEMENTSEARCHQUANTITY ->
            "TOTAL_ENGAGEMENT_SEARCH_QUANTITY"

        ReportingColumnAsyncTOTALENGAGEMENTWATCHVIDEOQUANTITY ->
            "TOTAL_ENGAGEMENT_WATCH_VIDEO_QUANTITY"

        ReportingColumnAsyncTOTALENGAGEMENTVIEWCATEGORYQUANTITY ->
            "TOTAL_ENGAGEMENT_VIEW_CATEGORY_QUANTITY"

        ReportingColumnAsyncTOTALENGAGEMENTUNKNOWNQUANTITY ->
            "TOTAL_ENGAGEMENT_UNKNOWN_QUANTITY"

        ReportingColumnAsyncTOTALCLICKPAGEVISITQUANTITY ->
            "TOTAL_CLICK_PAGE_VISIT_QUANTITY"

        ReportingColumnAsyncTOTALCLICKSIGNUPQUANTITY ->
            "TOTAL_CLICK_SIGNUP_QUANTITY"

        ReportingColumnAsyncTOTALCLICKCHECKOUTQUANTITY ->
            "TOTAL_CLICK_CHECKOUT_QUANTITY"

        ReportingColumnAsyncTOTALCLICKCUSTOMQUANTITY ->
            "TOTAL_CLICK_CUSTOM_QUANTITY"

        ReportingColumnAsyncTOTALCLICKADDTOCARTQUANTITY ->
            "TOTAL_CLICK_ADD_TO_CART_QUANTITY"

        ReportingColumnAsyncTOTALCLICKLEADQUANTITY ->
            "TOTAL_CLICK_LEAD_QUANTITY"

        ReportingColumnAsyncTOTALCLICKSEARCHQUANTITY ->
            "TOTAL_CLICK_SEARCH_QUANTITY"

        ReportingColumnAsyncTOTALCLICKWATCHVIDEOQUANTITY ->
            "TOTAL_CLICK_WATCH_VIDEO_QUANTITY"

        ReportingColumnAsyncTOTALCLICKVIEWCATEGORYQUANTITY ->
            "TOTAL_CLICK_VIEW_CATEGORY_QUANTITY"

        ReportingColumnAsyncTOTALCLICKUNKNOWNQUANTITY ->
            "TOTAL_CLICK_UNKNOWN_QUANTITY"

        ReportingColumnAsyncTOTALVIEWPAGEVISITQUANTITY ->
            "TOTAL_VIEW_PAGE_VISIT_QUANTITY"

        ReportingColumnAsyncTOTALVIEWSIGNUPQUANTITY ->
            "TOTAL_VIEW_SIGNUP_QUANTITY"

        ReportingColumnAsyncTOTALVIEWCHECKOUTQUANTITY ->
            "TOTAL_VIEW_CHECKOUT_QUANTITY"

        ReportingColumnAsyncTOTALVIEWCUSTOMQUANTITY ->
            "TOTAL_VIEW_CUSTOM_QUANTITY"

        ReportingColumnAsyncTOTALVIEWADDTOCARTQUANTITY ->
            "TOTAL_VIEW_ADD_TO_CART_QUANTITY"

        ReportingColumnAsyncTOTALVIEWLEADQUANTITY ->
            "TOTAL_VIEW_LEAD_QUANTITY"

        ReportingColumnAsyncTOTALVIEWSEARCHQUANTITY ->
            "TOTAL_VIEW_SEARCH_QUANTITY"

        ReportingColumnAsyncTOTALVIEWWATCHVIDEOQUANTITY ->
            "TOTAL_VIEW_WATCH_VIDEO_QUANTITY"

        ReportingColumnAsyncTOTALVIEWVIEWCATEGORYQUANTITY ->
            "TOTAL_VIEW_VIEW_CATEGORY_QUANTITY"

        ReportingColumnAsyncTOTALVIEWUNKNOWNQUANTITY ->
            "TOTAL_VIEW_UNKNOWN_QUANTITY"

        ReportingColumnAsyncTOTALCONVERSIONSQUANTITY ->
            "TOTAL_CONVERSIONS_QUANTITY"

        ReportingColumnAsyncONSITECHECKOUTS1 ->
            "ONSITE_CHECKOUTS_1"

        ReportingColumnAsyncPINPROMOTIONNAME ->
            "PIN_PROMOTION_NAME"

        ReportingColumnAsyncADNAME ->
            "AD_NAME"

        ReportingColumnAsyncCAMPAIGNLIFETIMESPENDCAP ->
            "CAMPAIGN_LIFETIME_SPEND_CAP"

        ReportingColumnAsyncCAMPAIGNDAILYSPENDCAP ->
            "CAMPAIGN_DAILY_SPEND_CAP"

        ReportingColumnAsyncTOTALPAGEVISITDESKTOPACTIONTODESKTOPCONVERSION ->
            "TOTAL_PAGE_VISIT_DESKTOP_ACTION_TO_DESKTOP_CONVERSION"

        ReportingColumnAsyncTOTALPAGEVISITDESKTOPACTIONTOMOBILECONVERSION ->
            "TOTAL_PAGE_VISIT_DESKTOP_ACTION_TO_MOBILE_CONVERSION"

        ReportingColumnAsyncTOTALPAGEVISITDESKTOPACTIONTOTABLETCONVERSION ->
            "TOTAL_PAGE_VISIT_DESKTOP_ACTION_TO_TABLET_CONVERSION"

        ReportingColumnAsyncTOTALPAGEVISITMOBILEACTIONTODESKTOPCONVERSION ->
            "TOTAL_PAGE_VISIT_MOBILE_ACTION_TO_DESKTOP_CONVERSION"

        ReportingColumnAsyncTOTALPAGEVISITMOBILEACTIONTOMOBILECONVERSION ->
            "TOTAL_PAGE_VISIT_MOBILE_ACTION_TO_MOBILE_CONVERSION"

        ReportingColumnAsyncTOTALPAGEVISITMOBILEACTIONTOTABLETCONVERSION ->
            "TOTAL_PAGE_VISIT_MOBILE_ACTION_TO_TABLET_CONVERSION"

        ReportingColumnAsyncTOTALPAGEVISITTABLETACTIONTODESKTOPCONVERSION ->
            "TOTAL_PAGE_VISIT_TABLET_ACTION_TO_DESKTOP_CONVERSION"

        ReportingColumnAsyncTOTALPAGEVISITTABLETACTIONTOMOBILECONVERSION ->
            "TOTAL_PAGE_VISIT_TABLET_ACTION_TO_MOBILE_CONVERSION"

        ReportingColumnAsyncTOTALPAGEVISITTABLETACTIONTOTABLETCONVERSION ->
            "TOTAL_PAGE_VISIT_TABLET_ACTION_TO_TABLET_CONVERSION"

        ReportingColumnAsyncTOTALSIGNUPDESKTOPACTIONTODESKTOPCONVERSION ->
            "TOTAL_SIGNUP_DESKTOP_ACTION_TO_DESKTOP_CONVERSION"

        ReportingColumnAsyncTOTALSIGNUPDESKTOPACTIONTOMOBILECONVERSION ->
            "TOTAL_SIGNUP_DESKTOP_ACTION_TO_MOBILE_CONVERSION"

        ReportingColumnAsyncTOTALSIGNUPDESKTOPACTIONTOTABLETCONVERSION ->
            "TOTAL_SIGNUP_DESKTOP_ACTION_TO_TABLET_CONVERSION"

        ReportingColumnAsyncTOTALSIGNUPMOBILEACTIONTODESKTOPCONVERSION ->
            "TOTAL_SIGNUP_MOBILE_ACTION_TO_DESKTOP_CONVERSION"

        ReportingColumnAsyncTOTALSIGNUPMOBILEACTIONTOMOBILECONVERSION ->
            "TOTAL_SIGNUP_MOBILE_ACTION_TO_MOBILE_CONVERSION"

        ReportingColumnAsyncTOTALSIGNUPMOBILEACTIONTOTABLETCONVERSION ->
            "TOTAL_SIGNUP_MOBILE_ACTION_TO_TABLET_CONVERSION"

        ReportingColumnAsyncTOTALSIGNUPTABLETACTIONTODESKTOPCONVERSION ->
            "TOTAL_SIGNUP_TABLET_ACTION_TO_DESKTOP_CONVERSION"

        ReportingColumnAsyncTOTALSIGNUPTABLETACTIONTOMOBILECONVERSION ->
            "TOTAL_SIGNUP_TABLET_ACTION_TO_MOBILE_CONVERSION"

        ReportingColumnAsyncTOTALSIGNUPTABLETACTIONTOTABLETCONVERSION ->
            "TOTAL_SIGNUP_TABLET_ACTION_TO_TABLET_CONVERSION"

        ReportingColumnAsyncTOTALCHECKOUTDESKTOPACTIONTODESKTOPCONVERSION ->
            "TOTAL_CHECKOUT_DESKTOP_ACTION_TO_DESKTOP_CONVERSION"

        ReportingColumnAsyncTOTALCHECKOUTDESKTOPACTIONTOMOBILECONVERSION ->
            "TOTAL_CHECKOUT_DESKTOP_ACTION_TO_MOBILE_CONVERSION"

        ReportingColumnAsyncTOTALCHECKOUTDESKTOPACTIONTOTABLETCONVERSION ->
            "TOTAL_CHECKOUT_DESKTOP_ACTION_TO_TABLET_CONVERSION"

        ReportingColumnAsyncTOTALCHECKOUTMOBILEACTIONTODESKTOPCONVERSION ->
            "TOTAL_CHECKOUT_MOBILE_ACTION_TO_DESKTOP_CONVERSION"

        ReportingColumnAsyncTOTALCHECKOUTMOBILEACTIONTOMOBILECONVERSION ->
            "TOTAL_CHECKOUT_MOBILE_ACTION_TO_MOBILE_CONVERSION"

        ReportingColumnAsyncTOTALCHECKOUTMOBILEACTIONTOTABLETCONVERSION ->
            "TOTAL_CHECKOUT_MOBILE_ACTION_TO_TABLET_CONVERSION"

        ReportingColumnAsyncTOTALCHECKOUTTABLETACTIONTODESKTOPCONVERSION ->
            "TOTAL_CHECKOUT_TABLET_ACTION_TO_DESKTOP_CONVERSION"

        ReportingColumnAsyncTOTALCHECKOUTTABLETACTIONTOMOBILECONVERSION ->
            "TOTAL_CHECKOUT_TABLET_ACTION_TO_MOBILE_CONVERSION"

        ReportingColumnAsyncTOTALCHECKOUTTABLETACTIONTOTABLETCONVERSION ->
            "TOTAL_CHECKOUT_TABLET_ACTION_TO_TABLET_CONVERSION"

        ReportingColumnAsyncTOTALCUSTOMDESKTOPACTIONTODESKTOPCONVERSION ->
            "TOTAL_CUSTOM_DESKTOP_ACTION_TO_DESKTOP_CONVERSION"

        ReportingColumnAsyncTOTALCUSTOMDESKTOPACTIONTOMOBILECONVERSION ->
            "TOTAL_CUSTOM_DESKTOP_ACTION_TO_MOBILE_CONVERSION"

        ReportingColumnAsyncTOTALCUSTOMDESKTOPACTIONTOTABLETCONVERSION ->
            "TOTAL_CUSTOM_DESKTOP_ACTION_TO_TABLET_CONVERSION"

        ReportingColumnAsyncTOTALCUSTOMMOBILEACTIONTODESKTOPCONVERSION ->
            "TOTAL_CUSTOM_MOBILE_ACTION_TO_DESKTOP_CONVERSION"

        ReportingColumnAsyncTOTALCUSTOMMOBILEACTIONTOMOBILECONVERSION ->
            "TOTAL_CUSTOM_MOBILE_ACTION_TO_MOBILE_CONVERSION"

        ReportingColumnAsyncTOTALCUSTOMMOBILEACTIONTOTABLETCONVERSION ->
            "TOTAL_CUSTOM_MOBILE_ACTION_TO_TABLET_CONVERSION"

        ReportingColumnAsyncTOTALCUSTOMTABLETACTIONTODESKTOPCONVERSION ->
            "TOTAL_CUSTOM_TABLET_ACTION_TO_DESKTOP_CONVERSION"

        ReportingColumnAsyncTOTALCUSTOMTABLETACTIONTOMOBILECONVERSION ->
            "TOTAL_CUSTOM_TABLET_ACTION_TO_MOBILE_CONVERSION"

        ReportingColumnAsyncTOTALCUSTOMTABLETACTIONTOTABLETCONVERSION ->
            "TOTAL_CUSTOM_TABLET_ACTION_TO_TABLET_CONVERSION"

        ReportingColumnAsyncTOTALADDTOCARTDESKTOPACTIONTODESKTOPCONVERSION ->
            "TOTAL_ADD_TO_CART_DESKTOP_ACTION_TO_DESKTOP_CONVERSION"

        ReportingColumnAsyncTOTALADDTOCARTDESKTOPACTIONTOMOBILECONVERSION ->
            "TOTAL_ADD_TO_CART_DESKTOP_ACTION_TO_MOBILE_CONVERSION"

        ReportingColumnAsyncTOTALADDTOCARTDESKTOPACTIONTOTABLETCONVERSION ->
            "TOTAL_ADD_TO_CART_DESKTOP_ACTION_TO_TABLET_CONVERSION"

        ReportingColumnAsyncTOTALADDTOCARTMOBILEACTIONTODESKTOPCONVERSION ->
            "TOTAL_ADD_TO_CART_MOBILE_ACTION_TO_DESKTOP_CONVERSION"

        ReportingColumnAsyncTOTALADDTOCARTMOBILEACTIONTOMOBILECONVERSION ->
            "TOTAL_ADD_TO_CART_MOBILE_ACTION_TO_MOBILE_CONVERSION"

        ReportingColumnAsyncTOTALADDTOCARTMOBILEACTIONTOTABLETCONVERSION ->
            "TOTAL_ADD_TO_CART_MOBILE_ACTION_TO_TABLET_CONVERSION"

        ReportingColumnAsyncTOTALADDTOCARTTABLETACTIONTODESKTOPCONVERSION ->
            "TOTAL_ADD_TO_CART_TABLET_ACTION_TO_DESKTOP_CONVERSION"

        ReportingColumnAsyncTOTALADDTOCARTTABLETACTIONTOMOBILECONVERSION ->
            "TOTAL_ADD_TO_CART_TABLET_ACTION_TO_MOBILE_CONVERSION"

        ReportingColumnAsyncTOTALADDTOCARTTABLETACTIONTOTABLETCONVERSION ->
            "TOTAL_ADD_TO_CART_TABLET_ACTION_TO_TABLET_CONVERSION"

        ReportingColumnAsyncTOTALLEADDESKTOPACTIONTODESKTOPCONVERSION ->
            "TOTAL_LEAD_DESKTOP_ACTION_TO_DESKTOP_CONVERSION"

        ReportingColumnAsyncTOTALLEADDESKTOPACTIONTOMOBILECONVERSION ->
            "TOTAL_LEAD_DESKTOP_ACTION_TO_MOBILE_CONVERSION"

        ReportingColumnAsyncTOTALLEADDESKTOPACTIONTOTABLETCONVERSION ->
            "TOTAL_LEAD_DESKTOP_ACTION_TO_TABLET_CONVERSION"

        ReportingColumnAsyncTOTALLEADMOBILEACTIONTODESKTOPCONVERSION ->
            "TOTAL_LEAD_MOBILE_ACTION_TO_DESKTOP_CONVERSION"

        ReportingColumnAsyncTOTALLEADMOBILEACTIONTOMOBILECONVERSION ->
            "TOTAL_LEAD_MOBILE_ACTION_TO_MOBILE_CONVERSION"

        ReportingColumnAsyncTOTALLEADMOBILEACTIONTOTABLETCONVERSION ->
            "TOTAL_LEAD_MOBILE_ACTION_TO_TABLET_CONVERSION"

        ReportingColumnAsyncTOTALLEADTABLETACTIONTODESKTOPCONVERSION ->
            "TOTAL_LEAD_TABLET_ACTION_TO_DESKTOP_CONVERSION"

        ReportingColumnAsyncTOTALLEADTABLETACTIONTOMOBILECONVERSION ->
            "TOTAL_LEAD_TABLET_ACTION_TO_MOBILE_CONVERSION"

        ReportingColumnAsyncTOTALLEADTABLETACTIONTOTABLETCONVERSION ->
            "TOTAL_LEAD_TABLET_ACTION_TO_TABLET_CONVERSION"

        ReportingColumnAsyncTOTALSEARCHDESKTOPACTIONTODESKTOPCONVERSION ->
            "TOTAL_SEARCH_DESKTOP_ACTION_TO_DESKTOP_CONVERSION"

        ReportingColumnAsyncTOTALSEARCHDESKTOPACTIONTOMOBILECONVERSION ->
            "TOTAL_SEARCH_DESKTOP_ACTION_TO_MOBILE_CONVERSION"

        ReportingColumnAsyncTOTALSEARCHDESKTOPACTIONTOTABLETCONVERSION ->
            "TOTAL_SEARCH_DESKTOP_ACTION_TO_TABLET_CONVERSION"

        ReportingColumnAsyncTOTALSEARCHMOBILEACTIONTODESKTOPCONVERSION ->
            "TOTAL_SEARCH_MOBILE_ACTION_TO_DESKTOP_CONVERSION"

        ReportingColumnAsyncTOTALSEARCHMOBILEACTIONTOMOBILECONVERSION ->
            "TOTAL_SEARCH_MOBILE_ACTION_TO_MOBILE_CONVERSION"

        ReportingColumnAsyncTOTALSEARCHMOBILEACTIONTOTABLETCONVERSION ->
            "TOTAL_SEARCH_MOBILE_ACTION_TO_TABLET_CONVERSION"

        ReportingColumnAsyncTOTALSEARCHTABLETACTIONTODESKTOPCONVERSION ->
            "TOTAL_SEARCH_TABLET_ACTION_TO_DESKTOP_CONVERSION"

        ReportingColumnAsyncTOTALSEARCHTABLETACTIONTOMOBILECONVERSION ->
            "TOTAL_SEARCH_TABLET_ACTION_TO_MOBILE_CONVERSION"

        ReportingColumnAsyncTOTALSEARCHTABLETACTIONTOTABLETCONVERSION ->
            "TOTAL_SEARCH_TABLET_ACTION_TO_TABLET_CONVERSION"

        ReportingColumnAsyncTOTALWATCHVIDEODESKTOPACTIONTODESKTOPCONVERSION ->
            "TOTAL_WATCH_VIDEO_DESKTOP_ACTION_TO_DESKTOP_CONVERSION"

        ReportingColumnAsyncTOTALWATCHVIDEODESKTOPACTIONTOMOBILECONVERSION ->
            "TOTAL_WATCH_VIDEO_DESKTOP_ACTION_TO_MOBILE_CONVERSION"

        ReportingColumnAsyncTOTALWATCHVIDEODESKTOPACTIONTOTABLETCONVERSION ->
            "TOTAL_WATCH_VIDEO_DESKTOP_ACTION_TO_TABLET_CONVERSION"

        ReportingColumnAsyncTOTALWATCHVIDEOMOBILEACTIONTODESKTOPCONVERSION ->
            "TOTAL_WATCH_VIDEO_MOBILE_ACTION_TO_DESKTOP_CONVERSION"

        ReportingColumnAsyncTOTALWATCHVIDEOMOBILEACTIONTOMOBILECONVERSION ->
            "TOTAL_WATCH_VIDEO_MOBILE_ACTION_TO_MOBILE_CONVERSION"

        ReportingColumnAsyncTOTALWATCHVIDEOMOBILEACTIONTOTABLETCONVERSION ->
            "TOTAL_WATCH_VIDEO_MOBILE_ACTION_TO_TABLET_CONVERSION"

        ReportingColumnAsyncTOTALWATCHVIDEOTABLETACTIONTODESKTOPCONVERSION ->
            "TOTAL_WATCH_VIDEO_TABLET_ACTION_TO_DESKTOP_CONVERSION"

        ReportingColumnAsyncTOTALWATCHVIDEOTABLETACTIONTOMOBILECONVERSION ->
            "TOTAL_WATCH_VIDEO_TABLET_ACTION_TO_MOBILE_CONVERSION"

        ReportingColumnAsyncTOTALWATCHVIDEOTABLETACTIONTOTABLETCONVERSION ->
            "TOTAL_WATCH_VIDEO_TABLET_ACTION_TO_TABLET_CONVERSION"

        ReportingColumnAsyncTOTALVIEWCATEGORYDESKTOPACTIONTODESKTOPCONVERSION ->
            "TOTAL_VIEW_CATEGORY_DESKTOP_ACTION_TO_DESKTOP_CONVERSION"

        ReportingColumnAsyncTOTALVIEWCATEGORYDESKTOPACTIONTOMOBILECONVERSION ->
            "TOTAL_VIEW_CATEGORY_DESKTOP_ACTION_TO_MOBILE_CONVERSION"

        ReportingColumnAsyncTOTALVIEWCATEGORYDESKTOPACTIONTOTABLETCONVERSION ->
            "TOTAL_VIEW_CATEGORY_DESKTOP_ACTION_TO_TABLET_CONVERSION"

        ReportingColumnAsyncTOTALVIEWCATEGORYMOBILEACTIONTODESKTOPCONVERSION ->
            "TOTAL_VIEW_CATEGORY_MOBILE_ACTION_TO_DESKTOP_CONVERSION"

        ReportingColumnAsyncTOTALVIEWCATEGORYMOBILEACTIONTOMOBILECONVERSION ->
            "TOTAL_VIEW_CATEGORY_MOBILE_ACTION_TO_MOBILE_CONVERSION"

        ReportingColumnAsyncTOTALVIEWCATEGORYMOBILEACTIONTOTABLETCONVERSION ->
            "TOTAL_VIEW_CATEGORY_MOBILE_ACTION_TO_TABLET_CONVERSION"

        ReportingColumnAsyncTOTALVIEWCATEGORYTABLETACTIONTODESKTOPCONVERSION ->
            "TOTAL_VIEW_CATEGORY_TABLET_ACTION_TO_DESKTOP_CONVERSION"

        ReportingColumnAsyncTOTALVIEWCATEGORYTABLETACTIONTOMOBILECONVERSION ->
            "TOTAL_VIEW_CATEGORY_TABLET_ACTION_TO_MOBILE_CONVERSION"

        ReportingColumnAsyncTOTALVIEWCATEGORYTABLETACTIONTOTABLETCONVERSION ->
            "TOTAL_VIEW_CATEGORY_TABLET_ACTION_TO_TABLET_CONVERSION"

        ReportingColumnAsyncTOTALAPPINSTALLDESKTOPACTIONTODESKTOPCONVERSION ->
            "TOTAL_APP_INSTALL_DESKTOP_ACTION_TO_DESKTOP_CONVERSION"

        ReportingColumnAsyncTOTALAPPINSTALLDESKTOPACTIONTOMOBILECONVERSION ->
            "TOTAL_APP_INSTALL_DESKTOP_ACTION_TO_MOBILE_CONVERSION"

        ReportingColumnAsyncTOTALAPPINSTALLDESKTOPACTIONTOTABLETCONVERSION ->
            "TOTAL_APP_INSTALL_DESKTOP_ACTION_TO_TABLET_CONVERSION"

        ReportingColumnAsyncTOTALAPPINSTALLMOBILEACTIONTODESKTOPCONVERSION ->
            "TOTAL_APP_INSTALL_MOBILE_ACTION_TO_DESKTOP_CONVERSION"

        ReportingColumnAsyncTOTALAPPINSTALLMOBILEACTIONTOMOBILECONVERSION ->
            "TOTAL_APP_INSTALL_MOBILE_ACTION_TO_MOBILE_CONVERSION"

        ReportingColumnAsyncTOTALAPPINSTALLMOBILEACTIONTOTABLETCONVERSION ->
            "TOTAL_APP_INSTALL_MOBILE_ACTION_TO_TABLET_CONVERSION"

        ReportingColumnAsyncTOTALAPPINSTALLTABLETACTIONTODESKTOPCONVERSION ->
            "TOTAL_APP_INSTALL_TABLET_ACTION_TO_DESKTOP_CONVERSION"

        ReportingColumnAsyncTOTALAPPINSTALLTABLETACTIONTOMOBILECONVERSION ->
            "TOTAL_APP_INSTALL_TABLET_ACTION_TO_MOBILE_CONVERSION"

        ReportingColumnAsyncTOTALAPPINSTALLTABLETACTIONTOTABLETCONVERSION ->
            "TOTAL_APP_INSTALL_TABLET_ACTION_TO_TABLET_CONVERSION"

        ReportingColumnAsyncTOTALUNKNOWNDESKTOPACTIONTODESKTOPCONVERSION ->
            "TOTAL_UNKNOWN_DESKTOP_ACTION_TO_DESKTOP_CONVERSION"

        ReportingColumnAsyncTOTALUNKNOWNDESKTOPACTIONTOMOBILECONVERSION ->
            "TOTAL_UNKNOWN_DESKTOP_ACTION_TO_MOBILE_CONVERSION"

        ReportingColumnAsyncTOTALUNKNOWNDESKTOPACTIONTOTABLETCONVERSION ->
            "TOTAL_UNKNOWN_DESKTOP_ACTION_TO_TABLET_CONVERSION"

        ReportingColumnAsyncTOTALUNKNOWNMOBILEACTIONTODESKTOPCONVERSION ->
            "TOTAL_UNKNOWN_MOBILE_ACTION_TO_DESKTOP_CONVERSION"

        ReportingColumnAsyncTOTALUNKNOWNMOBILEACTIONTOMOBILECONVERSION ->
            "TOTAL_UNKNOWN_MOBILE_ACTION_TO_MOBILE_CONVERSION"

        ReportingColumnAsyncTOTALUNKNOWNMOBILEACTIONTOTABLETCONVERSION ->
            "TOTAL_UNKNOWN_MOBILE_ACTION_TO_TABLET_CONVERSION"

        ReportingColumnAsyncTOTALUNKNOWNTABLETACTIONTODESKTOPCONVERSION ->
            "TOTAL_UNKNOWN_TABLET_ACTION_TO_DESKTOP_CONVERSION"

        ReportingColumnAsyncTOTALUNKNOWNTABLETACTIONTOMOBILECONVERSION ->
            "TOTAL_UNKNOWN_TABLET_ACTION_TO_MOBILE_CONVERSION"

        ReportingColumnAsyncTOTALUNKNOWNTABLETACTIONTOTABLETCONVERSION ->
            "TOTAL_UNKNOWN_TABLET_ACTION_TO_TABLET_CONVERSION"

        ReportingColumnAsyncTOTALCHECKOUT ->
            "TOTAL_CHECKOUT"

        ReportingColumnAsyncTOTALCUSTOM ->
            "TOTAL_CUSTOM"

        ReportingColumnAsyncTOTALLEAD ->
            "TOTAL_LEAD"

        ReportingColumnAsyncTOTALAPPINSTALL ->
            "TOTAL_APP_INSTALL"

        ReportingColumnAsyncTOTALCHECKOUTVALUEINMICRODOLLAR ->
            "TOTAL_CHECKOUT_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALAPPINSTALLVALUEINMICRODOLLAR ->
            "TOTAL_APP_INSTALL_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALCHECKOUTQUANTITY ->
            "TOTAL_CHECKOUT_QUANTITY"

        ReportingColumnAsyncAPPINSTALLCOSTPERACTION ->
            "APP_INSTALL_COST_PER_ACTION"

        ReportingColumnAsyncVIDEO3SECVIEWS1 ->
            "VIDEO_3SEC_VIEWS_1"

        ReportingColumnAsyncVIDEOP100COMPLETE1 ->
            "VIDEO_P100_COMPLETE_1"

        ReportingColumnAsyncVIDEOP0COMBINED1 ->
            "VIDEO_P0_COMBINED_1"

        ReportingColumnAsyncVIDEOP25COMBINED1 ->
            "VIDEO_P25_COMBINED_1"

        ReportingColumnAsyncVIDEOP50COMBINED1 ->
            "VIDEO_P50_COMBINED_1"

        ReportingColumnAsyncVIDEOP75COMBINED1 ->
            "VIDEO_P75_COMBINED_1"

        ReportingColumnAsyncVIDEOP95COMBINED1 ->
            "VIDEO_P95_COMBINED_1"

        ReportingColumnAsyncVIDEOMRCVIEWS1 ->
            "VIDEO_MRC_VIEWS_1"

        ReportingColumnAsyncVIDEO3SECVIEWS2 ->
            "VIDEO_3SEC_VIEWS_2"

        ReportingColumnAsyncVIDEOP100COMPLETE2 ->
            "VIDEO_P100_COMPLETE_2"

        ReportingColumnAsyncVIDEOP0COMBINED2 ->
            "VIDEO_P0_COMBINED_2"

        ReportingColumnAsyncVIDEOP25COMBINED2 ->
            "VIDEO_P25_COMBINED_2"

        ReportingColumnAsyncVIDEOP50COMBINED2 ->
            "VIDEO_P50_COMBINED_2"

        ReportingColumnAsyncVIDEOP75COMBINED2 ->
            "VIDEO_P75_COMBINED_2"

        ReportingColumnAsyncVIDEOP95COMBINED2 ->
            "VIDEO_P95_COMBINED_2"

        ReportingColumnAsyncVIDEOMRCVIEWS2 ->
            "VIDEO_MRC_VIEWS_2"

        ReportingColumnAsyncVIDEOLENGTH ->
            "VIDEO_LENGTH"

        ReportingColumnAsyncCPVINMICRODOLLAR ->
            "CPV_IN_MICRO_DOLLAR"

        ReportingColumnAsyncCPCVINMICRODOLLAR ->
            "CPCV_IN_MICRO_DOLLAR"

        ReportingColumnAsyncCPCVP95INMICRODOLLAR ->
            "CPCV_P95_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALVIDEO3SECVIEWS ->
            "TOTAL_VIDEO_3SEC_VIEWS"

        ReportingColumnAsyncVIDEOAVGWATCHTIMEINSECOND1 ->
            "VIDEO_AVG_WATCHTIME_IN_SECOND_1"

        ReportingColumnAsyncVIDEOAVGWATCHTIMEINSECOND2 ->
            "VIDEO_AVG_WATCHTIME_IN_SECOND_2"

        ReportingColumnAsyncTOTALVIDEOAVGWATCHTIMEINSECOND ->
            "TOTAL_VIDEO_AVG_WATCHTIME_IN_SECOND"

        ReportingColumnAsyncWEBCHECKOUTCOSTPERACTION ->
            "WEB_CHECKOUT_COST_PER_ACTION"

        ReportingColumnAsyncWEBCHECKOUTROAS ->
            "WEB_CHECKOUT_ROAS"

        ReportingColumnAsyncTOTALWEBCHECKOUT ->
            "TOTAL_WEB_CHECKOUT"

        ReportingColumnAsyncTOTALWEBCHECKOUTVALUEINMICRODOLLAR ->
            "TOTAL_WEB_CHECKOUT_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALWEBCLICKCHECKOUT ->
            "TOTAL_WEB_CLICK_CHECKOUT"

        ReportingColumnAsyncTOTALWEBCLICKCHECKOUTVALUEINMICRODOLLAR ->
            "TOTAL_WEB_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALWEBENGAGEMENTCHECKOUT ->
            "TOTAL_WEB_ENGAGEMENT_CHECKOUT"

        ReportingColumnAsyncTOTALWEBENGAGEMENTCHECKOUTVALUEINMICRODOLLAR ->
            "TOTAL_WEB_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALWEBVIEWCHECKOUT ->
            "TOTAL_WEB_VIEW_CHECKOUT"

        ReportingColumnAsyncTOTALWEBVIEWCHECKOUTVALUEINMICRODOLLAR ->
            "TOTAL_WEB_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncINAPPCHECKOUTCOSTPERACTION ->
            "INAPP_CHECKOUT_COST_PER_ACTION"

        ReportingColumnAsyncINAPPCHECKOUTROAS ->
            "INAPP_CHECKOUT_ROAS"

        ReportingColumnAsyncTOTALINAPPCHECKOUT ->
            "TOTAL_INAPP_CHECKOUT"

        ReportingColumnAsyncTOTALINAPPCHECKOUTVALUEINMICRODOLLAR ->
            "TOTAL_INAPP_CHECKOUT_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALINAPPCLICKCHECKOUT ->
            "TOTAL_INAPP_CLICK_CHECKOUT"

        ReportingColumnAsyncTOTALINAPPCLICKCHECKOUTVALUEINMICRODOLLAR ->
            "TOTAL_INAPP_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALINAPPENGAGEMENTCHECKOUT ->
            "TOTAL_INAPP_ENGAGEMENT_CHECKOUT"

        ReportingColumnAsyncTOTALINAPPENGAGEMENTCHECKOUTVALUEINMICRODOLLAR ->
            "TOTAL_INAPP_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALINAPPVIEWCHECKOUT ->
            "TOTAL_INAPP_VIEW_CHECKOUT"

        ReportingColumnAsyncTOTALINAPPVIEWCHECKOUTVALUEINMICRODOLLAR ->
            "TOTAL_INAPP_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncOFFLINECHECKOUTCOSTPERACTION ->
            "OFFLINE_CHECKOUT_COST_PER_ACTION"

        ReportingColumnAsyncOFFLINECHECKOUTROAS ->
            "OFFLINE_CHECKOUT_ROAS"

        ReportingColumnAsyncTOTALOFFLINECHECKOUT ->
            "TOTAL_OFFLINE_CHECKOUT"

        ReportingColumnAsyncTOTALOFFLINECHECKOUTVALUEINMICRODOLLAR ->
            "TOTAL_OFFLINE_CHECKOUT_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALOFFLINECLICKCHECKOUT ->
            "TOTAL_OFFLINE_CLICK_CHECKOUT"

        ReportingColumnAsyncTOTALOFFLINECLICKCHECKOUTVALUEINMICRODOLLAR ->
            "TOTAL_OFFLINE_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALOFFLINEENGAGEMENTCHECKOUT ->
            "TOTAL_OFFLINE_ENGAGEMENT_CHECKOUT"

        ReportingColumnAsyncTOTALOFFLINEENGAGEMENTCHECKOUTVALUEINMICRODOLLAR ->
            "TOTAL_OFFLINE_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALOFFLINEVIEWCHECKOUT ->
            "TOTAL_OFFLINE_VIEW_CHECKOUT"

        ReportingColumnAsyncTOTALOFFLINEVIEWCHECKOUTVALUEINMICRODOLLAR ->
            "TOTAL_OFFLINE_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncWEBADDTOCARTCOSTPERACTION ->
            "WEB_ADD_TO_CART_COST_PER_ACTION"

        ReportingColumnAsyncWEBADDTOCARTROAS ->
            "WEB_ADD_TO_CART_ROAS"

        ReportingColumnAsyncTOTALWEBADDTOCART ->
            "TOTAL_WEB_ADD_TO_CART"

        ReportingColumnAsyncTOTALWEBADDTOCARTVALUEINMICRODOLLAR ->
            "TOTAL_WEB_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALWEBCLICKADDTOCART ->
            "TOTAL_WEB_CLICK_ADD_TO_CART"

        ReportingColumnAsyncTOTALWEBCLICKADDTOCARTVALUEINMICRODOLLAR ->
            "TOTAL_WEB_CLICK_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALWEBENGAGEMENTADDTOCART ->
            "TOTAL_WEB_ENGAGEMENT_ADD_TO_CART"

        ReportingColumnAsyncTOTALWEBENGAGEMENTADDTOCARTVALUEINMICRODOLLAR ->
            "TOTAL_WEB_ENGAGEMENT_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALWEBVIEWADDTOCART ->
            "TOTAL_WEB_VIEW_ADD_TO_CART"

        ReportingColumnAsyncTOTALWEBVIEWADDTOCARTVALUEINMICRODOLLAR ->
            "TOTAL_WEB_VIEW_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncINAPPADDTOCARTCOSTPERACTION ->
            "INAPP_ADD_TO_CART_COST_PER_ACTION"

        ReportingColumnAsyncINAPPADDTOCARTROAS ->
            "INAPP_ADD_TO_CART_ROAS"

        ReportingColumnAsyncTOTALINAPPADDTOCART ->
            "TOTAL_INAPP_ADD_TO_CART"

        ReportingColumnAsyncTOTALINAPPADDTOCARTVALUEINMICRODOLLAR ->
            "TOTAL_INAPP_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALINAPPCLICKADDTOCART ->
            "TOTAL_INAPP_CLICK_ADD_TO_CART"

        ReportingColumnAsyncTOTALINAPPCLICKADDTOCARTVALUEINMICRODOLLAR ->
            "TOTAL_INAPP_CLICK_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALINAPPENGAGEMENTADDTOCART ->
            "TOTAL_INAPP_ENGAGEMENT_ADD_TO_CART"

        ReportingColumnAsyncTOTALINAPPENGAGEMENTADDTOCARTVALUEINMICRODOLLAR ->
            "TOTAL_INAPP_ENGAGEMENT_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALINAPPVIEWADDTOCART ->
            "TOTAL_INAPP_VIEW_ADD_TO_CART"

        ReportingColumnAsyncTOTALINAPPVIEWADDTOCARTVALUEINMICRODOLLAR ->
            "TOTAL_INAPP_VIEW_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncWEBPAGEVISITCOSTPERACTION ->
            "WEB_PAGE_VISIT_COST_PER_ACTION"

        ReportingColumnAsyncWEBPAGEVISITROAS ->
            "WEB_PAGE_VISIT_ROAS"

        ReportingColumnAsyncTOTALWEBPAGEVISIT ->
            "TOTAL_WEB_PAGE_VISIT"

        ReportingColumnAsyncTOTALWEBPAGEVISITVALUEINMICRODOLLAR ->
            "TOTAL_WEB_PAGE_VISIT_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALWEBCLICKPAGEVISIT ->
            "TOTAL_WEB_CLICK_PAGE_VISIT"

        ReportingColumnAsyncTOTALWEBCLICKPAGEVISITVALUEINMICRODOLLAR ->
            "TOTAL_WEB_CLICK_PAGE_VISIT_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALWEBENGAGEMENTPAGEVISIT ->
            "TOTAL_WEB_ENGAGEMENT_PAGE_VISIT"

        ReportingColumnAsyncTOTALWEBENGAGEMENTPAGEVISITVALUEINMICRODOLLAR ->
            "TOTAL_WEB_ENGAGEMENT_PAGE_VISIT_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALWEBVIEWPAGEVISIT ->
            "TOTAL_WEB_VIEW_PAGE_VISIT"

        ReportingColumnAsyncTOTALWEBVIEWPAGEVISITVALUEINMICRODOLLAR ->
            "TOTAL_WEB_VIEW_PAGE_VISIT_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncWEBSIGNUPCOSTPERACTION ->
            "WEB_SIGNUP_COST_PER_ACTION"

        ReportingColumnAsyncWEBSIGNUPROAS ->
            "WEB_SIGNUP_ROAS"

        ReportingColumnAsyncTOTALWEBSIGNUP ->
            "TOTAL_WEB_SIGNUP"

        ReportingColumnAsyncTOTALWEBSIGNUPVALUEINMICRODOLLAR ->
            "TOTAL_WEB_SIGNUP_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALWEBCLICKSIGNUP ->
            "TOTAL_WEB_CLICK_SIGNUP"

        ReportingColumnAsyncTOTALWEBCLICKSIGNUPVALUEINMICRODOLLAR ->
            "TOTAL_WEB_CLICK_SIGNUP_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALWEBENGAGEMENTSIGNUP ->
            "TOTAL_WEB_ENGAGEMENT_SIGNUP"

        ReportingColumnAsyncTOTALWEBENGAGEMENTSIGNUPVALUEINMICRODOLLAR ->
            "TOTAL_WEB_ENGAGEMENT_SIGNUP_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALWEBVIEWSIGNUP ->
            "TOTAL_WEB_VIEW_SIGNUP"

        ReportingColumnAsyncTOTALWEBVIEWSIGNUPVALUEINMICRODOLLAR ->
            "TOTAL_WEB_VIEW_SIGNUP_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncINAPPSIGNUPCOSTPERACTION ->
            "INAPP_SIGNUP_COST_PER_ACTION"

        ReportingColumnAsyncINAPPSIGNUPROAS ->
            "INAPP_SIGNUP_ROAS"

        ReportingColumnAsyncTOTALINAPPSIGNUP ->
            "TOTAL_INAPP_SIGNUP"

        ReportingColumnAsyncTOTALINAPPSIGNUPVALUEINMICRODOLLAR ->
            "TOTAL_INAPP_SIGNUP_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALINAPPCLICKSIGNUP ->
            "TOTAL_INAPP_CLICK_SIGNUP"

        ReportingColumnAsyncTOTALINAPPCLICKSIGNUPVALUEINMICRODOLLAR ->
            "TOTAL_INAPP_CLICK_SIGNUP_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALINAPPENGAGEMENTSIGNUP ->
            "TOTAL_INAPP_ENGAGEMENT_SIGNUP"

        ReportingColumnAsyncTOTALINAPPENGAGEMENTSIGNUPVALUEINMICRODOLLAR ->
            "TOTAL_INAPP_ENGAGEMENT_SIGNUP_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALINAPPVIEWSIGNUP ->
            "TOTAL_INAPP_VIEW_SIGNUP"

        ReportingColumnAsyncTOTALINAPPVIEWSIGNUPVALUEINMICRODOLLAR ->
            "TOTAL_INAPP_VIEW_SIGNUP_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncOFFLINESIGNUPCOSTPERACTION ->
            "OFFLINE_SIGNUP_COST_PER_ACTION"

        ReportingColumnAsyncOFFLINESIGNUPROAS ->
            "OFFLINE_SIGNUP_ROAS"

        ReportingColumnAsyncTOTALOFFLINESIGNUP ->
            "TOTAL_OFFLINE_SIGNUP"

        ReportingColumnAsyncTOTALOFFLINESIGNUPVALUEINMICRODOLLAR ->
            "TOTAL_OFFLINE_SIGNUP_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALOFFLINECLICKSIGNUP ->
            "TOTAL_OFFLINE_CLICK_SIGNUP"

        ReportingColumnAsyncTOTALOFFLINECLICKSIGNUPVALUEINMICRODOLLAR ->
            "TOTAL_OFFLINE_CLICK_SIGNUP_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALOFFLINEENGAGEMENTSIGNUP ->
            "TOTAL_OFFLINE_ENGAGEMENT_SIGNUP"

        ReportingColumnAsyncTOTALOFFLINEENGAGEMENTSIGNUPVALUEINMICRODOLLAR ->
            "TOTAL_OFFLINE_ENGAGEMENT_SIGNUP_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALOFFLINEVIEWSIGNUP ->
            "TOTAL_OFFLINE_VIEW_SIGNUP"

        ReportingColumnAsyncTOTALOFFLINEVIEWSIGNUPVALUEINMICRODOLLAR ->
            "TOTAL_OFFLINE_VIEW_SIGNUP_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncWEBWATCHVIDEOCOSTPERACTION ->
            "WEB_WATCH_VIDEO_COST_PER_ACTION"

        ReportingColumnAsyncWEBWATCHVIDEOROAS ->
            "WEB_WATCH_VIDEO_ROAS"

        ReportingColumnAsyncTOTALWEBWATCHVIDEO ->
            "TOTAL_WEB_WATCH_VIDEO"

        ReportingColumnAsyncTOTALWEBWATCHVIDEOVALUEINMICRODOLLAR ->
            "TOTAL_WEB_WATCH_VIDEO_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALWEBCLICKWATCHVIDEO ->
            "TOTAL_WEB_CLICK_WATCH_VIDEO"

        ReportingColumnAsyncTOTALWEBCLICKWATCHVIDEOVALUEINMICRODOLLAR ->
            "TOTAL_WEB_CLICK_WATCH_VIDEO_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALWEBENGAGEMENTWATCHVIDEO ->
            "TOTAL_WEB_ENGAGEMENT_WATCH_VIDEO"

        ReportingColumnAsyncTOTALWEBENGAGEMENTWATCHVIDEOVALUEINMICRODOLLAR ->
            "TOTAL_WEB_ENGAGEMENT_WATCH_VIDEO_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALWEBVIEWWATCHVIDEO ->
            "TOTAL_WEB_VIEW_WATCH_VIDEO"

        ReportingColumnAsyncTOTALWEBVIEWWATCHVIDEOVALUEINMICRODOLLAR ->
            "TOTAL_WEB_VIEW_WATCH_VIDEO_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncWEBLEADCOSTPERACTION ->
            "WEB_LEAD_COST_PER_ACTION"

        ReportingColumnAsyncWEBLEADROAS ->
            "WEB_LEAD_ROAS"

        ReportingColumnAsyncTOTALWEBLEAD ->
            "TOTAL_WEB_LEAD"

        ReportingColumnAsyncTOTALWEBLEADVALUEINMICRODOLLAR ->
            "TOTAL_WEB_LEAD_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALWEBCLICKLEAD ->
            "TOTAL_WEB_CLICK_LEAD"

        ReportingColumnAsyncTOTALWEBCLICKLEADVALUEINMICRODOLLAR ->
            "TOTAL_WEB_CLICK_LEAD_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALWEBENGAGEMENTLEAD ->
            "TOTAL_WEB_ENGAGEMENT_LEAD"

        ReportingColumnAsyncTOTALWEBENGAGEMENTLEADVALUEINMICRODOLLAR ->
            "TOTAL_WEB_ENGAGEMENT_LEAD_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALWEBVIEWLEAD ->
            "TOTAL_WEB_VIEW_LEAD"

        ReportingColumnAsyncTOTALWEBVIEWLEADVALUEINMICRODOLLAR ->
            "TOTAL_WEB_VIEW_LEAD_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncOFFLINELEADCOSTPERACTION ->
            "OFFLINE_LEAD_COST_PER_ACTION"

        ReportingColumnAsyncOFFLINELEADROAS ->
            "OFFLINE_LEAD_ROAS"

        ReportingColumnAsyncTOTALOFFLINELEAD ->
            "TOTAL_OFFLINE_LEAD"

        ReportingColumnAsyncTOTALOFFLINELEADVALUEINMICRODOLLAR ->
            "TOTAL_OFFLINE_LEAD_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALOFFLINECLICKLEAD ->
            "TOTAL_OFFLINE_CLICK_LEAD"

        ReportingColumnAsyncTOTALOFFLINECLICKLEADVALUEINMICRODOLLAR ->
            "TOTAL_OFFLINE_CLICK_LEAD_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALOFFLINEENGAGEMENTLEAD ->
            "TOTAL_OFFLINE_ENGAGEMENT_LEAD"

        ReportingColumnAsyncTOTALOFFLINEENGAGEMENTLEADVALUEINMICRODOLLAR ->
            "TOTAL_OFFLINE_ENGAGEMENT_LEAD_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALOFFLINEVIEWLEAD ->
            "TOTAL_OFFLINE_VIEW_LEAD"

        ReportingColumnAsyncTOTALOFFLINEVIEWLEADVALUEINMICRODOLLAR ->
            "TOTAL_OFFLINE_VIEW_LEAD_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncWEBSEARCHCOSTPERACTION ->
            "WEB_SEARCH_COST_PER_ACTION"

        ReportingColumnAsyncWEBSEARCHROAS ->
            "WEB_SEARCH_ROAS"

        ReportingColumnAsyncTOTALWEBSEARCH ->
            "TOTAL_WEB_SEARCH"

        ReportingColumnAsyncTOTALWEBSEARCHVALUEINMICRODOLLAR ->
            "TOTAL_WEB_SEARCH_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALWEBCLICKSEARCH ->
            "TOTAL_WEB_CLICK_SEARCH"

        ReportingColumnAsyncTOTALWEBCLICKSEARCHVALUEINMICRODOLLAR ->
            "TOTAL_WEB_CLICK_SEARCH_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALWEBENGAGEMENTSEARCH ->
            "TOTAL_WEB_ENGAGEMENT_SEARCH"

        ReportingColumnAsyncTOTALWEBENGAGEMENTSEARCHVALUEINMICRODOLLAR ->
            "TOTAL_WEB_ENGAGEMENT_SEARCH_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALWEBVIEWSEARCH ->
            "TOTAL_WEB_VIEW_SEARCH"

        ReportingColumnAsyncTOTALWEBVIEWSEARCHVALUEINMICRODOLLAR ->
            "TOTAL_WEB_VIEW_SEARCH_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncINAPPSEARCHCOSTPERACTION ->
            "INAPP_SEARCH_COST_PER_ACTION"

        ReportingColumnAsyncINAPPSEARCHROAS ->
            "INAPP_SEARCH_ROAS"

        ReportingColumnAsyncTOTALINAPPSEARCH ->
            "TOTAL_INAPP_SEARCH"

        ReportingColumnAsyncTOTALINAPPSEARCHVALUEINMICRODOLLAR ->
            "TOTAL_INAPP_SEARCH_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALINAPPCLICKSEARCH ->
            "TOTAL_INAPP_CLICK_SEARCH"

        ReportingColumnAsyncTOTALINAPPCLICKSEARCHVALUEINMICRODOLLAR ->
            "TOTAL_INAPP_CLICK_SEARCH_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALINAPPENGAGEMENTSEARCH ->
            "TOTAL_INAPP_ENGAGEMENT_SEARCH"

        ReportingColumnAsyncTOTALINAPPENGAGEMENTSEARCHVALUEINMICRODOLLAR ->
            "TOTAL_INAPP_ENGAGEMENT_SEARCH_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALINAPPVIEWSEARCH ->
            "TOTAL_INAPP_VIEW_SEARCH"

        ReportingColumnAsyncTOTALINAPPVIEWSEARCHVALUEINMICRODOLLAR ->
            "TOTAL_INAPP_VIEW_SEARCH_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncWEBVIEWCATEGORYCOSTPERACTION ->
            "WEB_VIEW_CATEGORY_COST_PER_ACTION"

        ReportingColumnAsyncWEBVIEWCATEGORYROAS ->
            "WEB_VIEW_CATEGORY_ROAS"

        ReportingColumnAsyncTOTALWEBVIEWCATEGORY ->
            "TOTAL_WEB_VIEW_CATEGORY"

        ReportingColumnAsyncTOTALWEBVIEWCATEGORYVALUEINMICRODOLLAR ->
            "TOTAL_WEB_VIEW_CATEGORY_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALWEBCLICKVIEWCATEGORY ->
            "TOTAL_WEB_CLICK_VIEW_CATEGORY"

        ReportingColumnAsyncTOTALWEBCLICKVIEWCATEGORYVALUEINMICRODOLLAR ->
            "TOTAL_WEB_CLICK_VIEW_CATEGORY_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALWEBENGAGEMENTVIEWCATEGORY ->
            "TOTAL_WEB_ENGAGEMENT_VIEW_CATEGORY"

        ReportingColumnAsyncTOTALWEBENGAGEMENTVIEWCATEGORYVALUEINMICRODOLLAR ->
            "TOTAL_WEB_ENGAGEMENT_VIEW_CATEGORY_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALWEBVIEWVIEWCATEGORY ->
            "TOTAL_WEB_VIEW_VIEW_CATEGORY"

        ReportingColumnAsyncTOTALWEBVIEWVIEWCATEGORYVALUEINMICRODOLLAR ->
            "TOTAL_WEB_VIEW_VIEW_CATEGORY_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncWEBCUSTOMCOSTPERACTION ->
            "WEB_CUSTOM_COST_PER_ACTION"

        ReportingColumnAsyncWEBCUSTOMROAS ->
            "WEB_CUSTOM_ROAS"

        ReportingColumnAsyncTOTALWEBCUSTOM ->
            "TOTAL_WEB_CUSTOM"

        ReportingColumnAsyncTOTALWEBCUSTOMVALUEINMICRODOLLAR ->
            "TOTAL_WEB_CUSTOM_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALWEBCLICKCUSTOM ->
            "TOTAL_WEB_CLICK_CUSTOM"

        ReportingColumnAsyncTOTALWEBCLICKCUSTOMVALUEINMICRODOLLAR ->
            "TOTAL_WEB_CLICK_CUSTOM_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALWEBENGAGEMENTCUSTOM ->
            "TOTAL_WEB_ENGAGEMENT_CUSTOM"

        ReportingColumnAsyncTOTALWEBENGAGEMENTCUSTOMVALUEINMICRODOLLAR ->
            "TOTAL_WEB_ENGAGEMENT_CUSTOM_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALWEBVIEWCUSTOM ->
            "TOTAL_WEB_VIEW_CUSTOM"

        ReportingColumnAsyncTOTALWEBVIEWCUSTOMVALUEINMICRODOLLAR ->
            "TOTAL_WEB_VIEW_CUSTOM_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncOFFLINECUSTOMCOSTPERACTION ->
            "OFFLINE_CUSTOM_COST_PER_ACTION"

        ReportingColumnAsyncOFFLINECUSTOMROAS ->
            "OFFLINE_CUSTOM_ROAS"

        ReportingColumnAsyncTOTALOFFLINECUSTOM ->
            "TOTAL_OFFLINE_CUSTOM"

        ReportingColumnAsyncTOTALOFFLINECUSTOMVALUEINMICRODOLLAR ->
            "TOTAL_OFFLINE_CUSTOM_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALOFFLINECLICKCUSTOM ->
            "TOTAL_OFFLINE_CLICK_CUSTOM"

        ReportingColumnAsyncTOTALOFFLINECLICKCUSTOMVALUEINMICRODOLLAR ->
            "TOTAL_OFFLINE_CLICK_CUSTOM_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALOFFLINEENGAGEMENTCUSTOM ->
            "TOTAL_OFFLINE_ENGAGEMENT_CUSTOM"

        ReportingColumnAsyncTOTALOFFLINEENGAGEMENTCUSTOMVALUEINMICRODOLLAR ->
            "TOTAL_OFFLINE_ENGAGEMENT_CUSTOM_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALOFFLINEVIEWCUSTOM ->
            "TOTAL_OFFLINE_VIEW_CUSTOM"

        ReportingColumnAsyncTOTALOFFLINEVIEWCUSTOMVALUEINMICRODOLLAR ->
            "TOTAL_OFFLINE_VIEW_CUSTOM_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncWEBUNKNOWNCOSTPERACTION ->
            "WEB_UNKNOWN_COST_PER_ACTION"

        ReportingColumnAsyncWEBUNKNOWNROAS ->
            "WEB_UNKNOWN_ROAS"

        ReportingColumnAsyncTOTALWEBUNKNOWN ->
            "TOTAL_WEB_UNKNOWN"

        ReportingColumnAsyncTOTALWEBUNKNOWNVALUEINMICRODOLLAR ->
            "TOTAL_WEB_UNKNOWN_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALWEBCLICKUNKNOWN ->
            "TOTAL_WEB_CLICK_UNKNOWN"

        ReportingColumnAsyncTOTALWEBCLICKUNKNOWNVALUEINMICRODOLLAR ->
            "TOTAL_WEB_CLICK_UNKNOWN_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALWEBENGAGEMENTUNKNOWN ->
            "TOTAL_WEB_ENGAGEMENT_UNKNOWN"

        ReportingColumnAsyncTOTALWEBENGAGEMENTUNKNOWNVALUEINMICRODOLLAR ->
            "TOTAL_WEB_ENGAGEMENT_UNKNOWN_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALWEBVIEWUNKNOWN ->
            "TOTAL_WEB_VIEW_UNKNOWN"

        ReportingColumnAsyncTOTALWEBVIEWUNKNOWNVALUEINMICRODOLLAR ->
            "TOTAL_WEB_VIEW_UNKNOWN_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncINAPPUNKNOWNCOSTPERACTION ->
            "INAPP_UNKNOWN_COST_PER_ACTION"

        ReportingColumnAsyncINAPPUNKNOWNROAS ->
            "INAPP_UNKNOWN_ROAS"

        ReportingColumnAsyncTOTALINAPPUNKNOWN ->
            "TOTAL_INAPP_UNKNOWN"

        ReportingColumnAsyncTOTALINAPPUNKNOWNVALUEINMICRODOLLAR ->
            "TOTAL_INAPP_UNKNOWN_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALINAPPCLICKUNKNOWN ->
            "TOTAL_INAPP_CLICK_UNKNOWN"

        ReportingColumnAsyncTOTALINAPPCLICKUNKNOWNVALUEINMICRODOLLAR ->
            "TOTAL_INAPP_CLICK_UNKNOWN_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALINAPPENGAGEMENTUNKNOWN ->
            "TOTAL_INAPP_ENGAGEMENT_UNKNOWN"

        ReportingColumnAsyncTOTALINAPPENGAGEMENTUNKNOWNVALUEINMICRODOLLAR ->
            "TOTAL_INAPP_ENGAGEMENT_UNKNOWN_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALINAPPVIEWUNKNOWN ->
            "TOTAL_INAPP_VIEW_UNKNOWN"

        ReportingColumnAsyncTOTALINAPPVIEWUNKNOWNVALUEINMICRODOLLAR ->
            "TOTAL_INAPP_VIEW_UNKNOWN_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncOFFLINEUNKNOWNCOSTPERACTION ->
            "OFFLINE_UNKNOWN_COST_PER_ACTION"

        ReportingColumnAsyncOFFLINEUNKNOWNROAS ->
            "OFFLINE_UNKNOWN_ROAS"

        ReportingColumnAsyncTOTALOFFLINEUNKNOWN ->
            "TOTAL_OFFLINE_UNKNOWN"

        ReportingColumnAsyncTOTALOFFLINEUNKNOWNVALUEINMICRODOLLAR ->
            "TOTAL_OFFLINE_UNKNOWN_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALOFFLINECLICKUNKNOWN ->
            "TOTAL_OFFLINE_CLICK_UNKNOWN"

        ReportingColumnAsyncTOTALOFFLINECLICKUNKNOWNVALUEINMICRODOLLAR ->
            "TOTAL_OFFLINE_CLICK_UNKNOWN_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALOFFLINEENGAGEMENTUNKNOWN ->
            "TOTAL_OFFLINE_ENGAGEMENT_UNKNOWN"

        ReportingColumnAsyncTOTALOFFLINEENGAGEMENTUNKNOWNVALUEINMICRODOLLAR ->
            "TOTAL_OFFLINE_ENGAGEMENT_UNKNOWN_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALOFFLINEVIEWUNKNOWN ->
            "TOTAL_OFFLINE_VIEW_UNKNOWN"

        ReportingColumnAsyncTOTALOFFLINEVIEWUNKNOWNVALUEINMICRODOLLAR ->
            "TOTAL_OFFLINE_VIEW_UNKNOWN_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncINAPPAPPINSTALLCOSTPERACTION ->
            "INAPP_APP_INSTALL_COST_PER_ACTION"

        ReportingColumnAsyncINAPPAPPINSTALLROAS ->
            "INAPP_APP_INSTALL_ROAS"

        ReportingColumnAsyncTOTALINAPPAPPINSTALL ->
            "TOTAL_INAPP_APP_INSTALL"

        ReportingColumnAsyncTOTALINAPPAPPINSTALLVALUEINMICRODOLLAR ->
            "TOTAL_INAPP_APP_INSTALL_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALINAPPCLICKAPPINSTALL ->
            "TOTAL_INAPP_CLICK_APP_INSTALL"

        ReportingColumnAsyncTOTALINAPPCLICKAPPINSTALLVALUEINMICRODOLLAR ->
            "TOTAL_INAPP_CLICK_APP_INSTALL_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALINAPPENGAGEMENTAPPINSTALL ->
            "TOTAL_INAPP_ENGAGEMENT_APP_INSTALL"

        ReportingColumnAsyncTOTALINAPPENGAGEMENTAPPINSTALLVALUEINMICRODOLLAR ->
            "TOTAL_INAPP_ENGAGEMENT_APP_INSTALL_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncTOTALINAPPVIEWAPPINSTALL ->
            "TOTAL_INAPP_VIEW_APP_INSTALL"

        ReportingColumnAsyncTOTALINAPPVIEWAPPINSTALLVALUEINMICRODOLLAR ->
            "TOTAL_INAPP_VIEW_APP_INSTALL_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncIDEAPINPRODUCTTAGVISIT1 ->
            "IDEA_PIN_PRODUCT_TAG_VISIT_1"

        ReportingColumnAsyncIDEAPINPRODUCTTAGVISIT2 ->
            "IDEA_PIN_PRODUCT_TAG_VISIT_2"

        ReportingColumnAsyncREPINRATE ->
            "REPIN_RATE"

        ReportingColumnAsyncTOTALVIDEOP95COMBINED ->
            "TOTAL_VIDEO_P95_COMBINED"

        ReportingColumnAsyncADGROUPENTITYSTATUS ->
            "AD_GROUP_ENTITY_STATUS"

        ReportingColumnAsyncECPCVP95INDOLLAR ->
            "ECPCV_P95_IN_DOLLAR"

        ReportingColumnAsyncENGAGEMENTRATE ->
            "ENGAGEMENT_RATE"

        ReportingColumnAsyncPAGEVISITCOSTPERACTION ->
            "PAGE_VISIT_COST_PER_ACTION"

        ReportingColumnAsyncTOTALPAGEVISIT ->
            "TOTAL_PAGE_VISIT"

        ReportingColumnAsyncCHECKOUTROAS ->
            "CHECKOUT_ROAS"

        ReportingColumnAsyncTOTALSIGNUPVALUEINMICRODOLLAR ->
            "TOTAL_SIGNUP_VALUE_IN_MICRO_DOLLAR"

        ReportingColumnAsyncECPCVINDOLLAR ->
            "ECPCV_IN_DOLLAR"

        ReportingColumnAsyncTOTALVIDEOP75COMBINED ->
            "TOTAL_VIDEO_P75_COMBINED"

        ReportingColumnAsyncTOTALVIDEOP50COMBINED ->
            "TOTAL_VIDEO_P50_COMBINED"

        ReportingColumnAsyncTOTALSIGNUP ->
            "TOTAL_SIGNUP"

        ReportingColumnAsyncTOTALVIDEOP0COMBINED ->
            "TOTAL_VIDEO_P0_COMBINED"

        ReportingColumnAsyncSPENDINDOLLAR ->
            "SPEND_IN_DOLLAR"

        ReportingColumnAsyncEENGAGEMENTRATE ->
            "EENGAGEMENT_RATE"

        ReportingColumnAsyncTOTALVIDEOP25COMBINED ->
            "TOTAL_VIDEO_P25_COMBINED"

        ReportingColumnAsyncCPMINDOLLAR ->
            "CPM_IN_DOLLAR"

        ReportingColumnAsyncECPVINDOLLAR ->
            "ECPV_IN_DOLLAR"

        ReportingColumnAsyncTOTALCLICKTHROUGH ->
            "TOTAL_CLICKTHROUGH"

        ReportingColumnAsyncECPEINDOLLAR ->
            "ECPE_IN_DOLLAR"

        ReportingColumnAsyncTOTALVIDEOP100COMPLETE ->
            "TOTAL_VIDEO_P100_COMPLETE"

        ReportingColumnAsyncCAMPAIGNENTITYSTATUS ->
            "CAMPAIGN_ENTITY_STATUS"

        ReportingColumnAsyncPAGEVISITROAS ->
            "PAGE_VISIT_ROAS"

        ReportingColumnAsyncTOTALREPINRATE ->
            "TOTAL_REPIN_RATE"

        ReportingColumnAsyncTOTALVIDEOMRCVIEWS ->
            "TOTAL_VIDEO_MRC_VIEWS"

        ReportingColumnAsyncTOTALIDEAPINPRODUCTTAGVISIT ->
            "TOTAL_IDEA_PIN_PRODUCT_TAG_VISIT"

        ReportingColumnAsyncECPCINDOLLAR ->
            "ECPC_IN_DOLLAR"


encodeReportingColumnAsync : ReportingColumnAsync -> Json.Encode.Value
encodeReportingColumnAsync =
    Json.Encode.string << stringFromReportingColumnAsync


encodeTargetingTypeFilter : TargetingTypeFilter -> Json.Encode.Value
encodeTargetingTypeFilter =
    encodeObject << encodeTargetingTypeFilterPairs


encodeTargetingTypeFilterWithTag : ( String, String ) -> TargetingTypeFilter -> Json.Encode.Value
encodeTargetingTypeFilterWithTag (tagField, tag) model =
    encodeObject (encodeTargetingTypeFilterPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeTargetingTypeFilterPairs : TargetingTypeFilter -> List EncodedField
encodeTargetingTypeFilterPairs model =
    let
        pairs =
            [ maybeEncode "targeting_types" (Json.Encode.list encodeAdsAnalyticsTargetingType) model.targetingTypes
            ]
    in
    pairs


encodeTrackingUrls : TrackingUrls -> Json.Encode.Value
encodeTrackingUrls =
    encodeObject << encodeTrackingUrlsPairs


encodeTrackingUrlsWithTag : ( String, String ) -> TrackingUrls -> Json.Encode.Value
encodeTrackingUrlsWithTag (tagField, tag) model =
    encodeObject (encodeTrackingUrlsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeTrackingUrlsPairs : TrackingUrls -> List EncodedField
encodeTrackingUrlsPairs model =
    let
        pairs =
            [ maybeEncode "impression" (Json.Encode.list Json.Encode.string) model.impression
            , maybeEncode "click" (Json.Encode.list Json.Encode.string) model.click
            , maybeEncode "engagement" (Json.Encode.list Json.Encode.string) model.engagement
            , maybeEncode "buyable_button" (Json.Encode.list Json.Encode.string) model.buyableButton
            , maybeEncode "audience_verification" (Json.Encode.list Json.Encode.string) model.audienceVerification
            ]
    in
    pairs


-- DECODER


accountDecoder : Json.Decode.Decoder Account
accountDecoder =
    Json.Decode.succeed Account
        |> maybeDecode "account_type" accountAccountTypeDecoder Nothing
        |> maybeDecode "profile_image" Json.Decode.string Nothing
        |> maybeDecode "website_url" Json.Decode.string Nothing
        |> maybeDecode "username" Json.Decode.string Nothing


accountAccountTypeDecoder : Json.Decode.Decoder AccountAccountType
accountAccountTypeDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "PINNER" ->
                        Json.Decode.succeed AccountAccountTypePINNER

                    "BUSINESS" ->
                        Json.Decode.succeed AccountAccountTypeBUSINESS

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )



actionTypeDecoder : Json.Decode.Decoder ActionType
actionTypeDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "CLICKTHROUGH" ->
                        Json.Decode.succeed ActionTypeCLICKTHROUGH

                    "IMPRESSION" ->
                        Json.Decode.succeed ActionTypeIMPRESSION

                    "VIDEO_V_50_MRC" ->
                        Json.Decode.succeed ActionTypeVIDEOV50MRC

                    "BILLABLE_ENGAGEMENT" ->
                        Json.Decode.succeed ActionTypeBILLABLEENGAGEMENT

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


adAccountDecoder : Json.Decode.Decoder AdAccount
adAccountDecoder =
    Json.Decode.succeed AdAccount
        |> maybeDecode "id" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "owner" adAccountOwnerDecoder Nothing
        |> maybeDecode "country" countryDecoder Nothing
        |> maybeDecode "currency" currencyDecoder Nothing


adAccountOwnerDecoder : Json.Decode.Decoder AdAccountOwner
adAccountOwnerDecoder =
    Json.Decode.succeed AdAccountOwner
        |> maybeDecode "username" Json.Decode.string Nothing


adGroupResponseDecoder : Json.Decode.Decoder AdGroupResponse
adGroupResponseDecoder =
    Json.Decode.succeed AdGroupResponse
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "status" Json.Decode.string Nothing
        |> maybeDecodeNullable "budget_in_micro_currency" Json.Decode.int Nothing
        |> maybeDecodeNullable "bid_in_micro_currency" Json.Decode.int Nothing
        |> maybeDecode "budget_type" adGroupResponseBudgetTypeDecoder Nothing
        |> maybeDecodeNullable "start_time" Json.Decode.int Nothing
        |> maybeDecodeNullable "end_time" Json.Decode.int Nothing
        |> maybeDecode "targeting_spec" (Json.Decode.dict (Json.Decode.list Json.Decode.string)) Nothing
        |> maybeDecode "lifetime_frequency_cap" Json.Decode.int Nothing
        |> maybeDecodeNullable "tracking_urls" (Json.Decode.dict ) Nothing
        |> maybeDecodeNullable "auto_targeting_enabled" Json.Decode.bool Nothing
        |> maybeDecode "placement_group" Json.Decode.string Nothing
        |> maybeDecode "pacing_delivery_type" Json.Decode.string Nothing
        |> maybeDecodeNullable "conversion_learning_mode_type" adGroupResponseConversionLearningModeTypeDecoder Nothing
        |> maybeDecode "summary_status" Json.Decode.string Nothing
        |> maybeDecode "feed_profile_id" Json.Decode.string Nothing
        |> maybeDecode "campaign_id" Json.Decode.string Nothing
        |> maybeDecode "billable_event" actionTypeDecoder Nothing
        |> maybeDecode "id" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing
        |> maybeDecode "ad_account_id" Json.Decode.string Nothing
        |> maybeDecode "created_time" Json.Decode.int Nothing
        |> maybeDecode "updated_time" Json.Decode.int Nothing


adGroupResponseBudgetTypeDecoder : Json.Decode.Decoder AdGroupResponseBudgetType
adGroupResponseBudgetTypeDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "DAILY" ->
                        Json.Decode.succeed AdGroupResponseBudgetTypeDAILY

                    "LIFETIME" ->
                        Json.Decode.succeed AdGroupResponseBudgetTypeLIFETIME

                    "CBO_ADGROUP" ->
                        Json.Decode.succeed AdGroupResponseBudgetTypeCBOADGROUP

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )



adGroupResponseConversionLearningModeTypeDecoder : Json.Decode.Decoder AdGroupResponseConversionLearningModeType
adGroupResponseConversionLearningModeTypeDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "NOT_ACTIVE" ->
                        Json.Decode.succeed AdGroupResponseConversionLearningModeTypeNOTACTIVE

                    "ACTIVE" ->
                        Json.Decode.succeed AdGroupResponseConversionLearningModeTypeACTIVE

                    "null" ->
                        Json.Decode.succeed AdGroupResponseConversionLearningModeTypeNull

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )



adGroupResponseAllOf1Decoder : Json.Decode.Decoder AdGroupResponseAllOf1
adGroupResponseAllOf1Decoder =
    Json.Decode.succeed AdGroupResponseAllOf1
        |> maybeDecode "campaign_id" Json.Decode.string Nothing
        |> maybeDecode "billable_event" actionTypeDecoder Nothing
        |> maybeDecode "id" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing
        |> maybeDecode "ad_account_id" Json.Decode.string Nothing
        |> maybeDecode "created_time" Json.Decode.int Nothing
        |> maybeDecode "updated_time" Json.Decode.int Nothing


adGroupSummaryStatusDecoder : Json.Decode.Decoder AdGroupSummaryStatus
adGroupSummaryStatusDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "RUNNING" ->
                        Json.Decode.succeed AdGroupSummaryStatusRUNNING

                    "PAUSED" ->
                        Json.Decode.succeed AdGroupSummaryStatusPAUSED

                    "NOT_STARTED" ->
                        Json.Decode.succeed AdGroupSummaryStatusNOTSTARTED

                    "COMPLETED" ->
                        Json.Decode.succeed AdGroupSummaryStatusCOMPLETED

                    "ADVERTISER_DISABLED" ->
                        Json.Decode.succeed AdGroupSummaryStatusADVERTISERDISABLED

                    "ARCHIVED" ->
                        Json.Decode.succeed AdGroupSummaryStatusARCHIVED

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


adResponseDecoder : Json.Decode.Decoder AdResponse
adResponseDecoder =
    Json.Decode.succeed AdResponse
        |> maybeDecode "ad_group_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "android_deep_link" Json.Decode.string Nothing
        |> maybeDecodeNullable "carousel_android_deep_links" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecodeNullable "carousel_destination_urls" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecodeNullable "carousel_ios_deep_links" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecodeNullable "click_tracking_url" Json.Decode.string Nothing
        |> maybeDecode "creative_type" adResponseCreativeTypeDecoder Nothing
        |> maybeDecodeNullable "destination_url" Json.Decode.string Nothing
        |> maybeDecodeNullable "ios_deep_link" Json.Decode.string Nothing
        |> maybeDecode "is_pin_deleted" Json.Decode.bool Nothing
        |> maybeDecode "is_removable" Json.Decode.bool Nothing
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecode "pin_id" Json.Decode.string Nothing
        |> maybeDecode "status" entityStatusDecoder Nothing
        |> maybeDecodeNullable "tracking_urls" (Json.Decode.dict ) Nothing
        |> maybeDecodeNullable "view_tracking_url" Json.Decode.string Nothing
        |> maybeDecode "ad_account_id" Json.Decode.string Nothing
        |> maybeDecode "campaign_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "collection_items_destination_url_template" Json.Decode.string Nothing
        |> maybeDecode "created_time" Json.Decode.int Nothing
        |> maybeDecode "id" Json.Decode.string Nothing
        |> maybeDecode "rejected_reasons" (Json.Decode.list adResponseRejectedReasonsDecoder) Nothing
        |> maybeDecode "rejection_labels" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "review_status" adResponseReviewStatusDecoder Nothing
        |> maybeDecode "type" Json.Decode.string Nothing
        |> maybeDecode "updated_time" Json.Decode.int Nothing
        |> maybeDecode "summary_status" Json.Decode.string Nothing


adResponseCreativeTypeDecoder : Json.Decode.Decoder AdResponseCreativeType
adResponseCreativeTypeDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "REGULAR" ->
                        Json.Decode.succeed AdResponseCreativeTypeREGULAR

                    "VIDEO" ->
                        Json.Decode.succeed AdResponseCreativeTypeVIDEO

                    "SHOPPING" ->
                        Json.Decode.succeed AdResponseCreativeTypeSHOPPING

                    "CAROUSEL" ->
                        Json.Decode.succeed AdResponseCreativeTypeCAROUSEL

                    "MAX_VIDEO" ->
                        Json.Decode.succeed AdResponseCreativeTypeMAXVIDEO

                    "SHOP_THE_PIN" ->
                        Json.Decode.succeed AdResponseCreativeTypeSHOPTHEPIN

                    "STORY" ->
                        Json.Decode.succeed AdResponseCreativeTypeSTORY

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )



adResponseRejectedReasonsDecoder : Json.Decode.Decoder AdResponseRejectedReasons
adResponseRejectedReasonsDecoder =
    Json.Decode.int
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "HASHTAGS" ->
                        Json.Decode.succeed AdResponseRejectedReasonsHASHTAGS

                    "PROMOTIONS_AND_PRICES" ->
                        Json.Decode.succeed AdResponseRejectedReasonsPROMOTIONSANDPRICES

                    "TARGETING" ->
                        Json.Decode.succeed AdResponseRejectedReasonsTARGETING

                    "LANDING_PAGE" ->
                        Json.Decode.succeed AdResponseRejectedReasonsLANDINGPAGE

                    "CAPS_AND_SYMBOLS" ->
                        Json.Decode.succeed AdResponseRejectedReasonsCAPSANDSYMBOLS

                    "SHOCKING" ->
                        Json.Decode.succeed AdResponseRejectedReasonsSHOCKING

                    "WEIGHT_LOSS" ->
                        Json.Decode.succeed AdResponseRejectedReasonsWEIGHTLOSS

                    "PROHIBITED_PRODUCT" ->
                        Json.Decode.succeed AdResponseRejectedReasonsPROHIBITEDPRODUCT

                    "AUTHENTICITY" ->
                        Json.Decode.succeed AdResponseRejectedReasonsAUTHENTICITY

                    "NUDITY" ->
                        Json.Decode.succeed AdResponseRejectedReasonsNUDITY

                    "CONFUSING_DESIGN" ->
                        Json.Decode.succeed AdResponseRejectedReasonsCONFUSINGDESIGN

                    "URGENCY" ->
                        Json.Decode.succeed AdResponseRejectedReasonsURGENCY

                    "RATINGS" ->
                        Json.Decode.succeed AdResponseRejectedReasonsRATINGS

                    "APP" ->
                        Json.Decode.succeed AdResponseRejectedReasonsAPP

                    "ALCOHOL" ->
                        Json.Decode.succeed AdResponseRejectedReasonsALCOHOL

                    "CONTESTS" ->
                        Json.Decode.succeed AdResponseRejectedReasonsCONTESTS

                    "POLITICAL" ->
                        Json.Decode.succeed AdResponseRejectedReasonsPOLITICAL

                    "OTHER" ->
                        Json.Decode.succeed AdResponseRejectedReasonsOTHER

                    "IMAGE" ->
                        Json.Decode.succeed AdResponseRejectedReasonsIMAGE

                    "NAR" ->
                        Json.Decode.succeed AdResponseRejectedReasonsNAR

                    "INCONSISTENT" ->
                        Json.Decode.succeed AdResponseRejectedReasonsINCONSISTENT

                    "CLICKBAIT" ->
                        Json.Decode.succeed AdResponseRejectedReasonsCLICKBAIT

                    "NO_DESCRIPTION" ->
                        Json.Decode.succeed AdResponseRejectedReasonsNODESCRIPTION

                    "LOW_QUALITY" ->
                        Json.Decode.succeed AdResponseRejectedReasonsLOWQUALITY

                    "EXAGGERATED_CLAIMS" ->
                        Json.Decode.succeed AdResponseRejectedReasonsEXAGGERATEDCLAIMS

                    "PINTEREST_BRAND" ->
                        Json.Decode.succeed AdResponseRejectedReasonsPINTERESTBRAND

                    "ALCOHOL_NO_SALE" ->
                        Json.Decode.succeed AdResponseRejectedReasonsALCOHOLNOSALE

                    "LANDING_PAGE_SPEED" ->
                        Json.Decode.succeed AdResponseRejectedReasonsLANDINGPAGESPEED

                    "LANDING_PAGE_HARDWALL" ->
                        Json.Decode.succeed AdResponseRejectedReasonsLANDINGPAGEHARDWALL

                    "LANDING_PAGE_BROKEN" ->
                        Json.Decode.succeed AdResponseRejectedReasonsLANDINGPAGEBROKEN

                    "LANDING_PAGE_QUALITY" ->
                        Json.Decode.succeed AdResponseRejectedReasonsLANDINGPAGEQUALITY

                    "OUT_OF_STOCK" ->
                        Json.Decode.succeed AdResponseRejectedReasonsOUTOFSTOCK

                    "IMAGE_LOW_QUALITY" ->
                        Json.Decode.succeed AdResponseRejectedReasonsIMAGELOWQUALITY

                    "IMAGE_BUSY" ->
                        Json.Decode.succeed AdResponseRejectedReasonsIMAGEBUSY

                    "IMAGE_POORLY_EDITED" ->
                        Json.Decode.succeed AdResponseRejectedReasonsIMAGEPOORLYEDITED

                    "IMAGE_BEFORE_AFTER" ->
                        Json.Decode.succeed AdResponseRejectedReasonsIMAGEBEFOREAFTER

                    "UGC" ->
                        Json.Decode.succeed AdResponseRejectedReasonsUGC

                    "FAKE_BUTTONS" ->
                        Json.Decode.succeed AdResponseRejectedReasonsFAKEBUTTONS

                    "WEAPONS" ->
                        Json.Decode.succeed AdResponseRejectedReasonsWEAPONS

                    "SENSITIVE" ->
                        Json.Decode.succeed AdResponseRejectedReasonsSENSITIVE

                    "UNACCEPTABLE_BUSINESS" ->
                        Json.Decode.succeed AdResponseRejectedReasonsUNACCEPTABLEBUSINESS

                    "SUSPICIOUS_CLAIMS" ->
                        Json.Decode.succeed AdResponseRejectedReasonsSUSPICIOUSCLAIMS

                    "PHARMA" ->
                        Json.Decode.succeed AdResponseRejectedReasonsPHARMA

                    "SUSPICIOUS_SUPPLEMENTS" ->
                        Json.Decode.succeed AdResponseRejectedReasonsSUSPICIOUSSUPPLEMENTS

                    "ILLEGAL_RECREATIONAL_DRUG" ->
                        Json.Decode.succeed AdResponseRejectedReasonsILLEGALRECREATIONALDRUG

                    "LOW_QUALITY_LANDING_PAGE" ->
                        Json.Decode.succeed AdResponseRejectedReasonsLOWQUALITYLANDINGPAGE

                    "RESTRICTED_HEALTHCARE" ->
                        Json.Decode.succeed AdResponseRejectedReasonsRESTRICTEDHEALTHCARE

                    "INCONSISTENT_LANG_FR" ->
                        Json.Decode.succeed AdResponseRejectedReasonsINCONSISTENTLANGFR

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ String.fromInt other
            )



adResponseReviewStatusDecoder : Json.Decode.Decoder AdResponseReviewStatus
adResponseReviewStatusDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "OTHER" ->
                        Json.Decode.succeed AdResponseReviewStatusOTHER

                    "PENDING" ->
                        Json.Decode.succeed AdResponseReviewStatusPENDING

                    "REJECTED" ->
                        Json.Decode.succeed AdResponseReviewStatusREJECTED

                    "APPROVED" ->
                        Json.Decode.succeed AdResponseReviewStatusAPPROVED

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )



adResponseAllOf1Decoder : Json.Decode.Decoder AdResponseAllOf1
adResponseAllOf1Decoder =
    Json.Decode.succeed AdResponseAllOf1
        |> maybeDecode "ad_account_id" Json.Decode.string Nothing
        |> maybeDecode "campaign_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "collection_items_destination_url_template" Json.Decode.string Nothing
        |> maybeDecode "created_time" Json.Decode.int Nothing
        |> maybeDecode "id" Json.Decode.string Nothing
        |> maybeDecode "rejected_reasons" (Json.Decode.list adResponseAllOf1RejectedReasonsDecoder) Nothing
        |> maybeDecode "rejection_labels" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "review_status" adResponseAllOf1ReviewStatusDecoder Nothing
        |> maybeDecode "type" Json.Decode.string Nothing
        |> maybeDecode "updated_time" Json.Decode.int Nothing
        |> maybeDecode "summary_status" Json.Decode.string Nothing


adResponseAllOf1RejectedReasonsDecoder : Json.Decode.Decoder AdResponseAllOf1RejectedReasons
adResponseAllOf1RejectedReasonsDecoder =
    Json.Decode.int
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "HASHTAGS" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsHASHTAGS

                    "PROMOTIONS_AND_PRICES" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsPROMOTIONSANDPRICES

                    "TARGETING" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsTARGETING

                    "LANDING_PAGE" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsLANDINGPAGE

                    "CAPS_AND_SYMBOLS" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsCAPSANDSYMBOLS

                    "SHOCKING" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsSHOCKING

                    "WEIGHT_LOSS" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsWEIGHTLOSS

                    "PROHIBITED_PRODUCT" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsPROHIBITEDPRODUCT

                    "AUTHENTICITY" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsAUTHENTICITY

                    "NUDITY" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsNUDITY

                    "CONFUSING_DESIGN" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsCONFUSINGDESIGN

                    "URGENCY" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsURGENCY

                    "RATINGS" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsRATINGS

                    "APP" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsAPP

                    "ALCOHOL" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsALCOHOL

                    "CONTESTS" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsCONTESTS

                    "POLITICAL" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsPOLITICAL

                    "OTHER" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsOTHER

                    "IMAGE" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsIMAGE

                    "NAR" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsNAR

                    "INCONSISTENT" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsINCONSISTENT

                    "CLICKBAIT" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsCLICKBAIT

                    "NO_DESCRIPTION" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsNODESCRIPTION

                    "LOW_QUALITY" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsLOWQUALITY

                    "EXAGGERATED_CLAIMS" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsEXAGGERATEDCLAIMS

                    "PINTEREST_BRAND" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsPINTERESTBRAND

                    "ALCOHOL_NO_SALE" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsALCOHOLNOSALE

                    "LANDING_PAGE_SPEED" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsLANDINGPAGESPEED

                    "LANDING_PAGE_HARDWALL" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsLANDINGPAGEHARDWALL

                    "LANDING_PAGE_BROKEN" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsLANDINGPAGEBROKEN

                    "LANDING_PAGE_QUALITY" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsLANDINGPAGEQUALITY

                    "OUT_OF_STOCK" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsOUTOFSTOCK

                    "IMAGE_LOW_QUALITY" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsIMAGELOWQUALITY

                    "IMAGE_BUSY" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsIMAGEBUSY

                    "IMAGE_POORLY_EDITED" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsIMAGEPOORLYEDITED

                    "IMAGE_BEFORE_AFTER" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsIMAGEBEFOREAFTER

                    "UGC" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsUGC

                    "FAKE_BUTTONS" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsFAKEBUTTONS

                    "WEAPONS" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsWEAPONS

                    "SENSITIVE" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsSENSITIVE

                    "UNACCEPTABLE_BUSINESS" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsUNACCEPTABLEBUSINESS

                    "SUSPICIOUS_CLAIMS" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsSUSPICIOUSCLAIMS

                    "PHARMA" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsPHARMA

                    "SUSPICIOUS_SUPPLEMENTS" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsSUSPICIOUSSUPPLEMENTS

                    "ILLEGAL_RECREATIONAL_DRUG" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsILLEGALRECREATIONALDRUG

                    "LOW_QUALITY_LANDING_PAGE" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsLOWQUALITYLANDINGPAGE

                    "RESTRICTED_HEALTHCARE" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsRESTRICTEDHEALTHCARE

                    "INCONSISTENT_LANG_FR" ->
                        Json.Decode.succeed AdResponseAllOf1RejectedReasonsINCONSISTENTLANGFR

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ String.fromInt other
            )



adResponseAllOf1ReviewStatusDecoder : Json.Decode.Decoder AdResponseAllOf1ReviewStatus
adResponseAllOf1ReviewStatusDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "OTHER" ->
                        Json.Decode.succeed AdResponseAllOf1ReviewStatusOTHER

                    "PENDING" ->
                        Json.Decode.succeed AdResponseAllOf1ReviewStatusPENDING

                    "REJECTED" ->
                        Json.Decode.succeed AdResponseAllOf1ReviewStatusREJECTED

                    "APPROVED" ->
                        Json.Decode.succeed AdResponseAllOf1ReviewStatusAPPROVED

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )



adsAnalyticsCreateAsyncRequestDecoder : Json.Decode.Decoder AdsAnalyticsCreateAsyncRequest
adsAnalyticsCreateAsyncRequestDecoder =
    Json.Decode.succeed AdsAnalyticsCreateAsyncRequest
        |> decode "start_date" Json.Decode.string 
        |> decode "end_date" Json.Decode.string 
        |> decode "granularity" Json.Decode.string 
        |> maybeDecode "click_window_days" Json.Decode.int (Just 30)
        |> maybeDecode "engagement_window_days" Json.Decode.int (Just 30)
        |> maybeDecode "view_window_days" Json.Decode.int (Just 1)
        |> maybeDecode "conversion_report_time" Json.Decode.string (Just "TIME_OF_AD_ACTION")
        |> maybeDecode "attribution_types" (Json.Decode.list conversionReportAttributionTypeDecoder) Nothing
        |> decode "columns" (Json.Decode.list reportingColumnAsyncDecoder) 
        |> decode "level" Json.Decode.string 
        |> maybeDecode "report_format" Json.Decode.string (Just "JSON")
        |> maybeDecode "campaign_ids" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "campaign_statuses" (Json.Decode.list campaignSummaryStatusDecoder) Nothing
        |> maybeDecode "campaign_objective_types" (Json.Decode.list objectiveTypeDecoder) Nothing
        |> maybeDecode "ad_group_ids" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "ad_group_statuses" (Json.Decode.list adGroupSummaryStatusDecoder) Nothing
        |> maybeDecode "ad_ids" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "ad_statuses" (Json.Decode.list pinPromotionSummaryStatusDecoder) Nothing
        |> maybeDecode "product_group_ids" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "product_group_statuses" (Json.Decode.list productGroupSummaryStatusDecoder) Nothing
        |> maybeDecode "product_item_ids" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "targeting_types" (Json.Decode.list adsAnalyticsTargetingTypeDecoder) Nothing
        |> maybeDecode "metrics_filters" (Json.Decode.list adsAnalyticsMetricsFilterDecoder) Nothing


adsAnalyticsCreateAsyncRequestAllOf1Decoder : Json.Decode.Decoder AdsAnalyticsCreateAsyncRequestAllOf1
adsAnalyticsCreateAsyncRequestAllOf1Decoder =
    Json.Decode.succeed AdsAnalyticsCreateAsyncRequestAllOf1
        |> decode "columns" (Json.Decode.list reportingColumnAsyncDecoder) 
        |> decode "level" Json.Decode.string 
        |> maybeDecode "report_format" Json.Decode.string (Just "JSON")


adsAnalyticsCreateAsyncResponseDecoder : Json.Decode.Decoder AdsAnalyticsCreateAsyncResponse
adsAnalyticsCreateAsyncResponseDecoder =
    Json.Decode.succeed AdsAnalyticsCreateAsyncResponse
        |> maybeDecode "report_status" Json.Decode.string Nothing
        |> maybeDecode "token" Json.Decode.string Nothing
        |> maybeDecodeNullable "message" Json.Decode.string Nothing


adsAnalyticsFilterColumnDecoder : Json.Decode.Decoder AdsAnalyticsFilterColumn
adsAnalyticsFilterColumnDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "SPEND_IN_DOLLAR" ->
                        Json.Decode.succeed AdsAnalyticsFilterColumnSPENDINDOLLAR

                    "TOTAL_IMPRESSION" ->
                        Json.Decode.succeed AdsAnalyticsFilterColumnTOTALIMPRESSION

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


adsAnalyticsFilterOperatorDecoder : Json.Decode.Decoder AdsAnalyticsFilterOperator
adsAnalyticsFilterOperatorDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "LESS_THAN" ->
                        Json.Decode.succeed AdsAnalyticsFilterOperatorLESSTHAN

                    "GREATER_THAN" ->
                        Json.Decode.succeed AdsAnalyticsFilterOperatorGREATERTHAN

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


adsAnalyticsGetAsyncResponseDecoder : Json.Decode.Decoder AdsAnalyticsGetAsyncResponse
adsAnalyticsGetAsyncResponseDecoder =
    Json.Decode.succeed AdsAnalyticsGetAsyncResponse
        |> maybeDecode "report_status" Json.Decode.string Nothing
        |> maybeDecodeNullable "url" Json.Decode.string Nothing
        |> maybeDecodeNullable "size" Json.Decode.float Nothing


adsAnalyticsMetricsFilterDecoder : Json.Decode.Decoder AdsAnalyticsMetricsFilter
adsAnalyticsMetricsFilterDecoder =
    Json.Decode.succeed AdsAnalyticsMetricsFilter
        |> maybeDecode "field" adsAnalyticsFilterColumnDecoder Nothing
        |> maybeDecode "operator" adsAnalyticsFilterOperatorDecoder Nothing
        |> maybeDecode "values" (Json.Decode.list Json.Decode.float) Nothing


adsAnalyticsTargetingTypeDecoder : Json.Decode.Decoder AdsAnalyticsTargetingType
adsAnalyticsTargetingTypeDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "KEYWORD" ->
                        Json.Decode.succeed AdsAnalyticsTargetingTypeKEYWORD

                    "APPTYPE" ->
                        Json.Decode.succeed AdsAnalyticsTargetingTypeAPPTYPE

                    "GENDER" ->
                        Json.Decode.succeed AdsAnalyticsTargetingTypeGENDER

                    "LOCATION" ->
                        Json.Decode.succeed AdsAnalyticsTargetingTypeLOCATION

                    "PLACEMENT" ->
                        Json.Decode.succeed AdsAnalyticsTargetingTypePLACEMENT

                    "COUNTRY" ->
                        Json.Decode.succeed AdsAnalyticsTargetingTypeCOUNTRY

                    "TARGETED_INTEREST" ->
                        Json.Decode.succeed AdsAnalyticsTargetingTypeTARGETEDINTEREST

                    "PINNER_INTEREST" ->
                        Json.Decode.succeed AdsAnalyticsTargetingTypePINNERINTEREST

                    "AUDIENCE_INCLUDE" ->
                        Json.Decode.succeed AdsAnalyticsTargetingTypeAUDIENCEINCLUDE

                    "AUDIENCE_EXCLUDE" ->
                        Json.Decode.succeed AdsAnalyticsTargetingTypeAUDIENCEEXCLUDE

                    "GEO" ->
                        Json.Decode.succeed AdsAnalyticsTargetingTypeGEO

                    "AGE_BUCKET" ->
                        Json.Decode.succeed AdsAnalyticsTargetingTypeAGEBUCKET

                    "REGION" ->
                        Json.Decode.succeed AdsAnalyticsTargetingTypeREGION

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


analyticsMetricsResponseDecoder : Json.Decode.Decoder AnalyticsMetricsResponse
analyticsMetricsResponseDecoder =
    Json.Decode.succeed AnalyticsMetricsResponse
        |> maybeDecode "daily_metrics" (Json.Decode.list analyticsMetricsResponseDailyMetricsDecoder) Nothing
        |> maybeDecode "summary_metrics" (Json.Decode.dict Json.Decode.float) Nothing


analyticsMetricsResponseDailyMetricsDecoder : Json.Decode.Decoder AnalyticsMetricsResponseDailyMetrics
analyticsMetricsResponseDailyMetricsDecoder =
    Json.Decode.succeed AnalyticsMetricsResponseDailyMetrics
        |> maybeDecode "data_status" analyticsMetricsResponseDailyMetricsDataStatusDecoder Nothing
        |> maybeDecode "date" Json.Decode.string Nothing
        |> maybeDecode "metrics" (Json.Decode.dict Json.Decode.float) Nothing


analyticsMetricsResponseDailyMetricsDataStatusDecoder : Json.Decode.Decoder AnalyticsMetricsResponseDailyMetricsDataStatus
analyticsMetricsResponseDailyMetricsDataStatusDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "PROCESSING" ->
                        Json.Decode.succeed AnalyticsMetricsResponseDailyMetricsDataStatusPROCESSING

                    "READY" ->
                        Json.Decode.succeed AnalyticsMetricsResponseDailyMetricsDataStatusREADY

                    "ESTIMATE" ->
                        Json.Decode.succeed AnalyticsMetricsResponseDailyMetricsDataStatusESTIMATE

                    "BEFORE_BUSINESS_CREATED" ->
                        Json.Decode.succeed AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREBUSINESSCREATED

                    "BEFORE_DATA_RETENTION_PERIOD" ->
                        Json.Decode.succeed AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREDATARETENTIONPERIOD

                    "BEFORE_PIN_DATA_RETENTION_PERIOD" ->
                        Json.Decode.succeed AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREPINDATARETENTIONPERIOD

                    "BEFORE_METRIC_START_DATE" ->
                        Json.Decode.succeed AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREMETRICSTARTDATE

                    "BEFORE_CORE_METRIC_START_DATE" ->
                        Json.Decode.succeed AnalyticsMetricsResponseDailyMetricsDataStatusBEFORECOREMETRICSTARTDATE

                    "BEFORE_PIN_FORMAT_METRIC_START_DATE" ->
                        Json.Decode.succeed AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREPINFORMATMETRICSTARTDATE

                    "BEFORE_AUDIENCE_METRIC_START_DATE" ->
                        Json.Decode.succeed AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREAUDIENCEMETRICSTARTDATE

                    "BEFORE_AUDIENCE_MONTHLY_METRIC_START_DATE" ->
                        Json.Decode.succeed AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREAUDIENCEMONTHLYMETRICSTARTDATE

                    "BEFORE_VIDEO_METRIC_START_DATE" ->
                        Json.Decode.succeed AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREVIDEOMETRICSTARTDATE

                    "BEFORE_CONVERSION_METRIC_START_DATE" ->
                        Json.Decode.succeed AnalyticsMetricsResponseDailyMetricsDataStatusBEFORECONVERSIONMETRICSTARTDATE

                    "PURCHASERS_METRIC_SMALLER_THAN_THRESHOLD" ->
                        Json.Decode.succeed AnalyticsMetricsResponseDailyMetricsDataStatusPURCHASERSMETRICSMALLERTHANTHRESHOLD

                    "IN_BAD_TAG_DATE" ->
                        Json.Decode.succeed AnalyticsMetricsResponseDailyMetricsDataStatusINBADTAGDATE

                    "BEFORE_PUBLISHED_METRIC_START_DATE" ->
                        Json.Decode.succeed AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREPUBLISHEDMETRICSTARTDATE

                    "BEFORE_ASSIST_METRIC_START_DATE" ->
                        Json.Decode.succeed AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREASSISTMETRICSTARTDATE

                    "BEFORE_PIN_CREATED" ->
                        Json.Decode.succeed AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREPINCREATED

                    "BEFORE_ACCOUNT_CLAIMED" ->
                        Json.Decode.succeed AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREACCOUNTCLAIMED

                    "BEFORE_DEMOGRAPHIC_FILTERS_START_DATE" ->
                        Json.Decode.succeed AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREDEMOGRAPHICFILTERSSTARTDATE

                    "AUDIENCE_SEGMENT_SMALLER_THAN_THRESHOLD" ->
                        Json.Decode.succeed AnalyticsMetricsResponseDailyMetricsDataStatusAUDIENCESEGMENTSMALLERTHANTHRESHOLD

                    "AUDIENCE_TOTAL_SMALLER_THAN_THRESHOLD" ->
                        Json.Decode.succeed AnalyticsMetricsResponseDailyMetricsDataStatusAUDIENCETOTALSMALLERTHANTHRESHOLD

                    "BEFORE_PRODUCT_GROUP_FILTER_START_DATE" ->
                        Json.Decode.succeed AnalyticsMetricsResponseDailyMetricsDataStatusBEFOREPRODUCTGROUPFILTERSTARTDATE

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )



availabilityFilterDecoder : Json.Decode.Decoder AvailabilityFilter
availabilityFilterDecoder =
    Json.Decode.succeed AvailabilityFilter
        |> decode "AVAILABILITY" catalogsProductGroupMultipleStringCriteriaDecoder 


batchOperationDecoder : Json.Decode.Decoder BatchOperation
batchOperationDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "UPDATE" ->
                        Json.Decode.succeed BatchOperationUPDATE

                    "CREATE" ->
                        Json.Decode.succeed BatchOperationCREATE

                    "UPSERT" ->
                        Json.Decode.succeed BatchOperationUPSERT

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


batchOperationStatusDecoder : Json.Decode.Decoder BatchOperationStatus
batchOperationStatusDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "PROCESSING" ->
                        Json.Decode.succeed BatchOperationStatusPROCESSING

                    "COMPLETED" ->
                        Json.Decode.succeed BatchOperationStatusCOMPLETED

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


boardDecoder : Json.Decode.Decoder Board
boardDecoder =
    Json.Decode.succeed Board
        |> maybeDecode "id" Json.Decode.string Nothing
        |> decode "name" Json.Decode.string 
        |> maybeDecodeNullable "description" Json.Decode.string Nothing
        |> maybeDecode "owner" (Json.Decode.dict ) Nothing
        |> maybeDecode "privacy" boardPrivacyDecoder (Just "PUBLIC")


boardPrivacyDecoder : Json.Decode.Decoder BoardPrivacy
boardPrivacyDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "PUBLIC" ->
                        Json.Decode.succeed BoardPrivacyPUBLIC

                    "PROTECTED" ->
                        Json.Decode.succeed BoardPrivacyPROTECTED

                    "SECRET" ->
                        Json.Decode.succeed BoardPrivacySECRET

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )



boardOwnerDecoder : Json.Decode.Decoder BoardOwner
boardOwnerDecoder =
    Json.Decode.succeed BoardOwner
        |> maybeDecode "username" Json.Decode.string Nothing


boardSectionDecoder : Json.Decode.Decoder BoardSection
boardSectionDecoder =
    Json.Decode.succeed BoardSection
        |> maybeDecode "id" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing


boardUpdateDecoder : Json.Decode.Decoder BoardUpdate
boardUpdateDecoder =
    Json.Decode.succeed BoardUpdate
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecodeNullable "description" Json.Decode.string Nothing
        |> maybeDecode "privacy" boardUpdatePrivacyDecoder Nothing


boardUpdatePrivacyDecoder : Json.Decode.Decoder BoardUpdatePrivacy
boardUpdatePrivacyDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "PUBLIC" ->
                        Json.Decode.succeed BoardUpdatePrivacyPUBLIC

                    "SECRET" ->
                        Json.Decode.succeed BoardUpdatePrivacySECRET

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )



brandFilterDecoder : Json.Decode.Decoder BrandFilter
brandFilterDecoder =
    Json.Decode.succeed BrandFilter
        |> decode "BRAND" catalogsProductGroupMultipleStringCriteriaDecoder 


campaignCommonDecoder : Json.Decode.Decoder CampaignCommon
campaignCommonDecoder =
    Json.Decode.succeed CampaignCommon
        |> decode "ad_account_id" Json.Decode.string 
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "status" Json.Decode.string (Just "ACTIVE")
        |> maybeDecodeNullable "lifetime_spend_cap" Json.Decode.int Nothing
        |> maybeDecodeNullable "daily_spend_cap" Json.Decode.int Nothing
        |> maybeDecodeNullable "order_line_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "tracking_urls" (Json.Decode.dict ) Nothing
        |> maybeDecodeNullable "start_time" Json.Decode.int Nothing
        |> maybeDecodeNullable "end_time" Json.Decode.int Nothing


campaignResponseDecoder : Json.Decode.Decoder CampaignResponse
campaignResponseDecoder =
    Json.Decode.succeed CampaignResponse
        |> decode "id" Json.Decode.string 
        |> decode "ad_account_id" Json.Decode.string 
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "status" Json.Decode.string (Just "ACTIVE")
        |> maybeDecodeNullable "lifetime_spend_cap" Json.Decode.int Nothing
        |> maybeDecodeNullable "daily_spend_cap" Json.Decode.int Nothing
        |> maybeDecodeNullable "order_line_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "tracking_urls" (Json.Decode.dict ) Nothing
        |> maybeDecodeNullable "start_time" Json.Decode.int Nothing
        |> maybeDecodeNullable "end_time" Json.Decode.int Nothing
        |> maybeDecode "objective_type" objectiveTypeDecoder Nothing
        |> maybeDecode "created_time" Json.Decode.int Nothing
        |> maybeDecode "updated_time" Json.Decode.int Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


campaignResponseAllOf1Decoder : Json.Decode.Decoder CampaignResponseAllOf1
campaignResponseAllOf1Decoder =
    Json.Decode.succeed CampaignResponseAllOf1
        |> maybeDecode "objective_type" objectiveTypeDecoder Nothing
        |> maybeDecode "created_time" Json.Decode.int Nothing
        |> maybeDecode "updated_time" Json.Decode.int Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


campaignSummaryStatusDecoder : Json.Decode.Decoder CampaignSummaryStatus
campaignSummaryStatusDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "RUNNING" ->
                        Json.Decode.succeed CampaignSummaryStatusRUNNING

                    "PAUSED" ->
                        Json.Decode.succeed CampaignSummaryStatusPAUSED

                    "NOT_STARTED" ->
                        Json.Decode.succeed CampaignSummaryStatusNOTSTARTED

                    "COMPLETED" ->
                        Json.Decode.succeed CampaignSummaryStatusCOMPLETED

                    "ADVERTISER_DISABLED" ->
                        Json.Decode.succeed CampaignSummaryStatusADVERTISERDISABLED

                    "ARCHIVED" ->
                        Json.Decode.succeed CampaignSummaryStatusARCHIVED

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


catalogsDbItemDecoder : Json.Decode.Decoder CatalogsDbItem
catalogsDbItemDecoder =
    Json.Decode.succeed CatalogsDbItem
        |> maybeDecode "created_at" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "id" Json.Decode.string Nothing
        |> maybeDecode "updated_at" Api.Time.dateTimeDecoder Nothing


catalogsFeedDecoder : Json.Decode.Decoder CatalogsFeed
catalogsFeedDecoder =
    Json.Decode.succeed CatalogsFeed
        |> maybeDecode "created_at" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "id" Json.Decode.string Nothing
        |> maybeDecode "updated_at" Api.Time.dateTimeDecoder Nothing
        |> decode "default_country" countryDecoder 
        |> decodeNullable "default_availability" productAvailabilityTypeDecoder 
        |> decodeNullable "default_currency" nullableCurrencyDecoder 
        |> decodeNullable "name" Json.Decode.string 
        |> decode "format" catalogsFormatDecoder 
        |> decode "default_locale" Json.Decode.string 
        |> decodeNullable "credentials" catalogsFeedCredentialsDecoder 
        |> decode "location" Json.Decode.string 
        |> decodeNullable "preferred_processing_schedule" catalogsFeedProcessingScheduleDecoder 
        |> decode "status" catalogsStatusDecoder 


catalogsFeedCredentialsDecoder : Json.Decode.Decoder CatalogsFeedCredentials
catalogsFeedCredentialsDecoder =
    Json.Decode.succeed CatalogsFeedCredentials
        |> decode "password" Json.Decode.string 
        |> decode "username" Json.Decode.string 


catalogsFeedIngestionDetailsDecoder : Json.Decode.Decoder CatalogsFeedIngestionDetails
catalogsFeedIngestionDetailsDecoder =
    Json.Decode.succeed CatalogsFeedIngestionDetails
        |> decode "errors" catalogsFeedIngestionErrorsDecoder 
        |> decode "info" catalogsFeedIngestionInfoDecoder 


catalogsFeedIngestionErrorsDecoder : Json.Decode.Decoder CatalogsFeedIngestionErrors
catalogsFeedIngestionErrorsDecoder =
    Json.Decode.succeed CatalogsFeedIngestionErrors
        |> maybeDecode "image_download_error" Json.Decode.int Nothing
        |> maybeDecode "image_download_connection_timeout" Json.Decode.int Nothing
        |> maybeDecode "image_format_unrecognize" Json.Decode.int Nothing
        |> maybeDecode "line_level_internal_error" Json.Decode.int Nothing
        |> maybeDecode "large_product_count_decrease" Json.Decode.intcatalogsFeedIngestionErrorsLargeProductCountDecreaseDecoder Nothing


catalogsFeedIngestionErrorsLargeProductCountDecreaseDecoder : Json.Decode.Decoder CatalogsFeedIngestionErrorsLargeProductCountDecrease
catalogsFeedIngestionErrorsLargeProductCountDecreaseDecoder =
    Json.Decode.int
        |> Json.Decode.andThen
            (\value ->
                case value of
                    1 ->
                        Json.Decode.succeed CatalogsFeedIngestionErrorsLargeProductCountDecrease1

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ String.fromInt other
            )



catalogsFeedIngestionInfoDecoder : Json.Decode.Decoder CatalogsFeedIngestionInfo
catalogsFeedIngestionInfoDecoder =
    Json.Decode.succeed CatalogsFeedIngestionInfo
        |> maybeDecode "in_stock" Json.Decode.int Nothing
        |> maybeDecode "out_of_stock" Json.Decode.int Nothing
        |> maybeDecode "preorder" Json.Decode.int Nothing


catalogsFeedProcessingResultDecoder : Json.Decode.Decoder CatalogsFeedProcessingResult
catalogsFeedProcessingResultDecoder =
    Json.Decode.succeed CatalogsFeedProcessingResult
        |> maybeDecode "created_at" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "id" Json.Decode.string Nothing
        |> maybeDecode "updated_at" Api.Time.dateTimeDecoder Nothing
        |> decode "ingestion_details" catalogsFeedIngestionDetailsDecoder 
        |> decode "status" catalogsFeedProcessingStatusDecoder 
        |> decodeNullable "product_counts" catalogsFeedProductCountsDecoder 
        |> decode "validation_details" catalogsFeedValidationDetailsDecoder 


catalogsFeedProcessingResultFieldsDecoder : Json.Decode.Decoder CatalogsFeedProcessingResultFields
catalogsFeedProcessingResultFieldsDecoder =
    Json.Decode.succeed CatalogsFeedProcessingResultFields
        |> decode "ingestion_details" catalogsFeedIngestionDetailsDecoder 
        |> decode "status" catalogsFeedProcessingStatusDecoder 
        |> decodeNullable "product_counts" catalogsFeedProductCountsDecoder 
        |> decode "validation_details" catalogsFeedValidationDetailsDecoder 


catalogsFeedProcessingScheduleDecoder : Json.Decode.Decoder CatalogsFeedProcessingSchedule
catalogsFeedProcessingScheduleDecoder =
    Json.Decode.succeed CatalogsFeedProcessingSchedule
        |> decode "time" Json.Decode.string 
        |> decodeNullable "timezone" catalogsFeedProcessingScheduleTimezoneDecoder 


catalogsFeedProcessingScheduleTimezoneDecoder : Json.Decode.Decoder CatalogsFeedProcessingScheduleTimezone
catalogsFeedProcessingScheduleTimezoneDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "Africa/Abidjan" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAfricaAbidjan

                    "Africa/Accra" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAfricaAccra

                    "Africa/Algiers" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAfricaAlgiers

                    "Africa/Bissau" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAfricaBissau

                    "Africa/Cairo" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAfricaCairo

                    "Africa/Casablanca" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAfricaCasablanca

                    "Africa/Ceuta" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAfricaCeuta

                    "Africa/El_Aaiun" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAfricaElAaiun

                    "Africa/Johannesburg" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAfricaJohannesburg

                    "Africa/Juba" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAfricaJuba

                    "Africa/Khartoum" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAfricaKhartoum

                    "Africa/Lagos" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAfricaLagos

                    "Africa/Maputo" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAfricaMaputo

                    "Africa/Monrovia" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAfricaMonrovia

                    "Africa/Nairobi" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAfricaNairobi

                    "Africa/Ndjamena" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAfricaNdjamena

                    "Africa/Sao_Tome" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAfricaSaoTome

                    "Africa/Tripoli" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAfricaTripoli

                    "Africa/Tunis" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAfricaTunis

                    "Africa/Windhoek" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAfricaWindhoek

                    "America/Adak" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaAdak

                    "America/Anchorage" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaAnchorage

                    "America/Araguaina" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaAraguaina

                    "America/Argentina/Buenos_Aires" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaBuenosAires

                    "America/Argentina/Catamarca" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaCatamarca

                    "America/Argentina/Cordoba" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaCordoba

                    "America/Argentina/Jujuy" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaJujuy

                    "America/Argentina/La_Rioja" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaLaRioja

                    "America/Argentina/Mendoza" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaMendoza

                    "America/Argentina/Rio_Gallegos" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaRioGallegos

                    "America/Argentina/Salta" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaSalta

                    "America/Argentina/San_Juan" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaSanJuan

                    "America/Argentina/San_Luis" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaSanLuis

                    "America/Argentina/Tucuman" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaTucuman

                    "America/Argentina/Ushuaia" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaArgentinaUshuaia

                    "America/Asuncion" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaAsuncion

                    "America/Atikokan" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaAtikokan

                    "America/Bahia" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaBahia

                    "America/Bahia_Banderas" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaBahiaBanderas

                    "America/Barbados" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaBarbados

                    "America/Belem" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaBelem

                    "America/Belize" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaBelize

                    "America/Blanc-Sablon" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaBlancSablon

                    "America/Boa_Vista" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaBoaVista

                    "America/Bogota" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaBogota

                    "America/Boise" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaBoise

                    "America/Cambridge_Bay" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaCambridgeBay

                    "America/Campo_Grande" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaCampoGrande

                    "America/Cancun" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaCancun

                    "America/Caracas" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaCaracas

                    "America/Cayenne" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaCayenne

                    "America/Chicago" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaChicago

                    "America/Chihuahua" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaChihuahua

                    "America/Costa_Rica" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaCostaRica

                    "America/Creston" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaCreston

                    "America/Cuiaba" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaCuiaba

                    "America/Curacao" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaCuracao

                    "America/Danmarkshavn" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaDanmarkshavn

                    "America/Dawson" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaDawson

                    "America/Dawson_Creek" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaDawsonCreek

                    "America/Denver" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaDenver

                    "America/Detroit" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaDetroit

                    "America/Edmonton" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaEdmonton

                    "America/Eirunepe" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaEirunepe

                    "America/El_Salvador" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaElSalvador

                    "America/Fort_Nelson" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaFortNelson

                    "America/Fortaleza" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaFortaleza

                    "America/Glace_Bay" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaGlaceBay

                    "America/Goose_Bay" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaGooseBay

                    "America/Grand_Turk" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaGrandTurk

                    "America/Guatemala" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaGuatemala

                    "America/Guayaquil" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaGuayaquil

                    "America/Guyana" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaGuyana

                    "America/Halifax" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaHalifax

                    "America/Havana" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaHavana

                    "America/Hermosillo" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaHermosillo

                    "America/Indiana/Indianapolis" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaIndianaIndianapolis

                    "America/Indiana/Knox" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaIndianaKnox

                    "America/Indiana/Marengo" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaIndianaMarengo

                    "America/Indiana/Petersburg" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaIndianaPetersburg

                    "America/Indiana/Tell_City" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaIndianaTellCity

                    "America/Indiana/Vevay" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaIndianaVevay

                    "America/Indiana/Vincennes" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaIndianaVincennes

                    "America/Indiana/Winamac" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaIndianaWinamac

                    "America/Inuvik" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaInuvik

                    "America/Iqaluit" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaIqaluit

                    "America/Jamaica" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaJamaica

                    "America/Juneau" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaJuneau

                    "America/Kentucky/Louisville" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaKentuckyLouisville

                    "America/Kentucky/Monticello" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaKentuckyMonticello

                    "America/La_Paz" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaLaPaz

                    "America/Lima" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaLima

                    "America/Los_Angeles" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaLosAngeles

                    "America/Maceio" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaMaceio

                    "America/Managua" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaManagua

                    "America/Manaus" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaManaus

                    "America/Martinique" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaMartinique

                    "America/Matamoros" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaMatamoros

                    "America/Mazatlan" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaMazatlan

                    "America/Menominee" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaMenominee

                    "America/Merida" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaMerida

                    "America/Metlakatla" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaMetlakatla

                    "America/Mexico_City" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaMexicoCity

                    "America/Miquelon" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaMiquelon

                    "America/Moncton" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaMoncton

                    "America/Monterrey" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaMonterrey

                    "America/Montevideo" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaMontevideo

                    "America/Nassau" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaNassau

                    "America/New_York" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaNewYork

                    "America/Nipigon" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaNipigon

                    "America/Nome" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaNome

                    "America/Noronha" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaNoronha

                    "America/North_Dakota/Beulah" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaNorthDakotaBeulah

                    "America/North_Dakota/Center" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaNorthDakotaCenter

                    "America/North_Dakota/New_Salem" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaNorthDakotaNewSalem

                    "America/Nuuk" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaNuuk

                    "America/Ojinaga" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaOjinaga

                    "America/Panama" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaPanama

                    "America/Pangnirtung" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaPangnirtung

                    "America/Paramaribo" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaParamaribo

                    "America/Phoenix" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaPhoenix

                    "America/Port-au-Prince" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaPortAuPrince

                    "America/Port_of_Spain" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaPortOfSpain

                    "America/Porto_Velho" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaPortoVelho

                    "America/Puerto_Rico" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaPuertoRico

                    "America/Punta_Arenas" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaPuntaArenas

                    "America/Rainy_River" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaRainyRiver

                    "America/Rankin_Inlet" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaRankinInlet

                    "America/Recife" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaRecife

                    "America/Regina" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaRegina

                    "America/Resolute" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaResolute

                    "America/Rio_Branco" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaRioBranco

                    "America/Santarem" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaSantarem

                    "America/Santiago" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaSantiago

                    "America/Santo_Domingo" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaSantoDomingo

                    "America/Sao_Paulo" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaSaoPaulo

                    "America/Scoresbysund" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaScoresbysund

                    "America/Sitka" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaSitka

                    "America/St_Johns" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaStJohns

                    "America/Swift_Current" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaSwiftCurrent

                    "America/Tegucigalpa" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaTegucigalpa

                    "America/Thule" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaThule

                    "America/Thunder_Bay" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaThunderBay

                    "America/Tijuana" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaTijuana

                    "America/Toronto" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaToronto

                    "America/Vancouver" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaVancouver

                    "America/Whitehorse" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaWhitehorse

                    "America/Winnipeg" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaWinnipeg

                    "America/Yakutat" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaYakutat

                    "America/Yellowknife" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAmericaYellowknife

                    "Antarctica/Casey" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAntarcticaCasey

                    "Antarctica/Davis" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAntarcticaDavis

                    "Antarctica/DumontDUrville" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAntarcticaDumontDUrville

                    "Antarctica/Macquarie" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAntarcticaMacquarie

                    "Antarctica/Mawson" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAntarcticaMawson

                    "Antarctica/Palmer" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAntarcticaPalmer

                    "Antarctica/Rothera" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAntarcticaRothera

                    "Antarctica/Syowa" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAntarcticaSyowa

                    "Antarctica/Troll" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAntarcticaTroll

                    "Antarctica/Vostok" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAntarcticaVostok

                    "Asia/Almaty" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaAlmaty

                    "Asia/Amman" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaAmman

                    "Asia/Anadyr" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaAnadyr

                    "Asia/Aqtau" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaAqtau

                    "Asia/Aqtobe" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaAqtobe

                    "Asia/Ashgabat" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaAshgabat

                    "Asia/Atyrau" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaAtyrau

                    "Asia/Baghdad" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaBaghdad

                    "Asia/Baku" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaBaku

                    "Asia/Bangkok" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaBangkok

                    "Asia/Barnaul" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaBarnaul

                    "Asia/Beirut" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaBeirut

                    "Asia/Bishkek" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaBishkek

                    "Asia/Brunei" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaBrunei

                    "Asia/Chita" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaChita

                    "Asia/Choibalsan" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaChoibalsan

                    "Asia/Colombo" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaColombo

                    "Asia/Damascus" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaDamascus

                    "Asia/Dhaka" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaDhaka

                    "Asia/Dili" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaDili

                    "Asia/Dubai" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaDubai

                    "Asia/Dushanbe" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaDushanbe

                    "Asia/Famagusta" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaFamagusta

                    "Asia/Gaza" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaGaza

                    "Asia/Hebron" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaHebron

                    "Asia/Ho_Chi_Minh" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaHoChiMinh

                    "Asia/Hong_Kong" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaHongKong

                    "Asia/Hovd" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaHovd

                    "Asia/Irkutsk" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaIrkutsk

                    "Asia/Jakarta" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaJakarta

                    "Asia/Jayapura" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaJayapura

                    "Asia/Jerusalem" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaJerusalem

                    "Asia/Kabul" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaKabul

                    "Asia/Kamchatka" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaKamchatka

                    "Asia/Karachi" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaKarachi

                    "Asia/Kathmandu" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaKathmandu

                    "Asia/Khandyga" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaKhandyga

                    "Asia/Kolkata" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaKolkata

                    "Asia/Krasnoyarsk" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaKrasnoyarsk

                    "Asia/Kuala_Lumpur" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaKualaLumpur

                    "Asia/Kuching" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaKuching

                    "Asia/Macau" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaMacau

                    "Asia/Magadan" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaMagadan

                    "Asia/Makassar" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaMakassar

                    "Asia/Manila" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaManila

                    "Asia/Nicosia" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaNicosia

                    "Asia/Novokuznetsk" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaNovokuznetsk

                    "Asia/Novosibirsk" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaNovosibirsk

                    "Asia/Omsk" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaOmsk

                    "Asia/Oral" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaOral

                    "Asia/Pontianak" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaPontianak

                    "Asia/Pyongyang" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaPyongyang

                    "Asia/Qatar" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaQatar

                    "Asia/Qostanay" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaQostanay

                    "Asia/Qyzylorda" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaQyzylorda

                    "Asia/Riyadh" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaRiyadh

                    "Asia/Sakhalin" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaSakhalin

                    "Asia/Samarkand" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaSamarkand

                    "Asia/Seoul" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaSeoul

                    "Asia/Shanghai" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaShanghai

                    "Asia/Singapore" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaSingapore

                    "Asia/Srednekolymsk" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaSrednekolymsk

                    "Asia/Taipei" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaTaipei

                    "Asia/Tashkent" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaTashkent

                    "Asia/Tbilisi" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaTbilisi

                    "Asia/Tehran" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaTehran

                    "Asia/Thimphu" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaThimphu

                    "Asia/Tokyo" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaTokyo

                    "Asia/Tomsk" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaTomsk

                    "Asia/Ulaanbaatar" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaUlaanbaatar

                    "Asia/Urumqi" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaUrumqi

                    "Asia/Ust-Nera" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaUstNera

                    "Asia/Vladivostok" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaVladivostok

                    "Asia/Yakutsk" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaYakutsk

                    "Asia/Yangon" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaYangon

                    "Asia/Yekaterinburg" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaYekaterinburg

                    "Asia/Yerevan" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAsiaYerevan

                    "Atlantic/Azores" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAtlanticAzores

                    "Atlantic/Bermuda" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAtlanticBermuda

                    "Atlantic/Canary" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAtlanticCanary

                    "Atlantic/Cape_Verde" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAtlanticCapeVerde

                    "Atlantic/Faroe" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAtlanticFaroe

                    "Atlantic/Madeira" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAtlanticMadeira

                    "Atlantic/Reykjavik" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAtlanticReykjavik

                    "Atlantic/South_Georgia" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAtlanticSouthGeorgia

                    "Atlantic/Stanley" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAtlanticStanley

                    "Australia/Adelaide" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAustraliaAdelaide

                    "Australia/Brisbane" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAustraliaBrisbane

                    "Australia/Broken_Hill" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAustraliaBrokenHill

                    "Australia/Currie" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAustraliaCurrie

                    "Australia/Darwin" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAustraliaDarwin

                    "Australia/Eucla" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAustraliaEucla

                    "Australia/Hobart" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAustraliaHobart

                    "Australia/Lindeman" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAustraliaLindeman

                    "Australia/Lord_Howe" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAustraliaLordHowe

                    "Australia/Melbourne" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAustraliaMelbourne

                    "Australia/Perth" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAustraliaPerth

                    "Australia/Sydney" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneAustraliaSydney

                    "CET" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneCET

                    "CST6CDT" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneCST6CDT

                    "EET" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEET

                    "EST" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEST

                    "EST5EDT" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEST5EDT

                    "Etc/GMT" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEtcGMT

                    "Etc/GMT+1" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEtcGMT+1

                    "Etc/GMT+10" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEtcGMT+10

                    "Etc/GMT+11" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEtcGMT+11

                    "Etc/GMT+12" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEtcGMT+12

                    "Etc/GMT+2" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEtcGMT+2

                    "Etc/GMT+3" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEtcGMT+3

                    "Etc/GMT+4" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEtcGMT+4

                    "Etc/GMT+5" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEtcGMT+5

                    "Etc/GMT+6" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEtcGMT+6

                    "Etc/GMT+7" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEtcGMT+7

                    "Etc/GMT+8" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEtcGMT+8

                    "Etc/GMT+9" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEtcGMT+9

                    "Etc/GMT-1" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEtcGMT1

                    "Etc/GMT-10" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEtcGMT10

                    "Etc/GMT-11" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEtcGMT11

                    "Etc/GMT-12" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEtcGMT12

                    "Etc/GMT-13" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEtcGMT13

                    "Etc/GMT-14" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEtcGMT14

                    "Etc/GMT-2" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEtcGMT2

                    "Etc/GMT-3" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEtcGMT3

                    "Etc/GMT-4" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEtcGMT4

                    "Etc/GMT-5" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEtcGMT5

                    "Etc/GMT-6" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEtcGMT6

                    "Etc/GMT-7" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEtcGMT7

                    "Etc/GMT-8" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEtcGMT8

                    "Etc/GMT-9" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEtcGMT9

                    "Etc/UTC" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEtcUTC

                    "Europe/Amsterdam" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeAmsterdam

                    "Europe/Andorra" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeAndorra

                    "Europe/Astrakhan" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeAstrakhan

                    "Europe/Athens" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeAthens

                    "Europe/Belgrade" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeBelgrade

                    "Europe/Berlin" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeBerlin

                    "Europe/Brussels" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeBrussels

                    "Europe/Bucharest" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeBucharest

                    "Europe/Budapest" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeBudapest

                    "Europe/Chisinau" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeChisinau

                    "Europe/Copenhagen" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeCopenhagen

                    "Europe/Dublin" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeDublin

                    "Europe/Gibraltar" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeGibraltar

                    "Europe/Helsinki" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeHelsinki

                    "Europe/Istanbul" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeIstanbul

                    "Europe/Kaliningrad" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeKaliningrad

                    "Europe/Kiev" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeKiev

                    "Europe/Kirov" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeKirov

                    "Europe/Lisbon" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeLisbon

                    "Europe/London" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeLondon

                    "Europe/Luxembourg" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeLuxembourg

                    "Europe/Madrid" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeMadrid

                    "Europe/Malta" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeMalta

                    "Europe/Minsk" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeMinsk

                    "Europe/Monaco" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeMonaco

                    "Europe/Moscow" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeMoscow

                    "Europe/Oslo" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeOslo

                    "Europe/Paris" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeParis

                    "Europe/Prague" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropePrague

                    "Europe/Riga" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeRiga

                    "Europe/Rome" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeRome

                    "Europe/Samara" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeSamara

                    "Europe/Saratov" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeSaratov

                    "Europe/Simferopol" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeSimferopol

                    "Europe/Sofia" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeSofia

                    "Europe/Stockholm" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeStockholm

                    "Europe/Tallinn" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeTallinn

                    "Europe/Tirane" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeTirane

                    "Europe/Ulyanovsk" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeUlyanovsk

                    "Europe/Uzhgorod" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeUzhgorod

                    "Europe/Vienna" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeVienna

                    "Europe/Vilnius" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeVilnius

                    "Europe/Volgograd" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeVolgograd

                    "Europe/Warsaw" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeWarsaw

                    "Europe/Zaporozhye" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeZaporozhye

                    "Europe/Zurich" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneEuropeZurich

                    "HST" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneHST

                    "Indian/Chagos" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneIndianChagos

                    "Indian/Christmas" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneIndianChristmas

                    "Indian/Cocos" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneIndianCocos

                    "Indian/Kerguelen" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneIndianKerguelen

                    "Indian/Mahe" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneIndianMahe

                    "Indian/Maldives" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneIndianMaldives

                    "Indian/Mauritius" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneIndianMauritius

                    "Indian/Reunion" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneIndianReunion

                    "MET" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneMET

                    "MST" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneMST

                    "MST7MDT" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneMST7MDT

                    "PST8PDT" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePST8PDT

                    "Pacific/Apia" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificApia

                    "Pacific/Auckland" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificAuckland

                    "Pacific/Bougainville" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificBougainville

                    "Pacific/Chatham" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificChatham

                    "Pacific/Chuuk" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificChuuk

                    "Pacific/Easter" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificEaster

                    "Pacific/Efate" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificEfate

                    "Pacific/Enderbury" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificEnderbury

                    "Pacific/Fakaofo" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificFakaofo

                    "Pacific/Fiji" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificFiji

                    "Pacific/Funafuti" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificFunafuti

                    "Pacific/Galapagos" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificGalapagos

                    "Pacific/Gambier" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificGambier

                    "Pacific/Guadalcanal" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificGuadalcanal

                    "Pacific/Guam" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificGuam

                    "Pacific/Honolulu" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificHonolulu

                    "Pacific/Kiritimati" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificKiritimati

                    "Pacific/Kosrae" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificKosrae

                    "Pacific/Kwajalein" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificKwajalein

                    "Pacific/Majuro" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificMajuro

                    "Pacific/Marquesas" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificMarquesas

                    "Pacific/Nauru" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificNauru

                    "Pacific/Niue" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificNiue

                    "Pacific/Norfolk" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificNorfolk

                    "Pacific/Noumea" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificNoumea

                    "Pacific/Pago_Pago" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificPagoPago

                    "Pacific/Palau" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificPalau

                    "Pacific/Pitcairn" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificPitcairn

                    "Pacific/Pohnpei" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificPohnpei

                    "Pacific/Port_Moresby" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificPortMoresby

                    "Pacific/Rarotonga" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificRarotonga

                    "Pacific/Tahiti" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificTahiti

                    "Pacific/Tarawa" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificTarawa

                    "Pacific/Tongatapu" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificTongatapu

                    "Pacific/Wake" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificWake

                    "Pacific/Wallis" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezonePacificWallis

                    "WET" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneWET

                    "null" ->
                        Json.Decode.succeed CatalogsFeedProcessingScheduleTimezoneNull

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )



catalogsFeedProcessingStatusDecoder : Json.Decode.Decoder CatalogsFeedProcessingStatus
catalogsFeedProcessingStatusDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "COMPLETED" ->
                        Json.Decode.succeed CatalogsFeedProcessingStatusCOMPLETED

                    "COMPLETED_EARLY" ->
                        Json.Decode.succeed CatalogsFeedProcessingStatusCOMPLETEDEARLY

                    "DISAPPROVED" ->
                        Json.Decode.succeed CatalogsFeedProcessingStatusDISAPPROVED

                    "FAILED" ->
                        Json.Decode.succeed CatalogsFeedProcessingStatusFAILED

                    "PROCESSING" ->
                        Json.Decode.succeed CatalogsFeedProcessingStatusPROCESSING

                    "QUEUED_FOR_PROCESSING" ->
                        Json.Decode.succeed CatalogsFeedProcessingStatusQUEUEDFORPROCESSING

                    "UNDER_APPEAL" ->
                        Json.Decode.succeed CatalogsFeedProcessingStatusUNDERAPPEAL

                    "UNDER_REVIEW" ->
                        Json.Decode.succeed CatalogsFeedProcessingStatusUNDERREVIEW

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


catalogsFeedProductCountsDecoder : Json.Decode.Decoder CatalogsFeedProductCounts
catalogsFeedProductCountsDecoder =
    Json.Decode.succeed CatalogsFeedProductCounts
        |> maybeDecode "original" Json.Decode.int Nothing


catalogsFeedValidationDetailsDecoder : Json.Decode.Decoder CatalogsFeedValidationDetails
catalogsFeedValidationDetailsDecoder =
    Json.Decode.succeed CatalogsFeedValidationDetails
        |> decode "errors" catalogsFeedValidationErrorsDecoder 
        |> decode "warnings" catalogsFeedValidationWarningsDecoder 


catalogsFeedValidationErrorsDecoder : Json.Decode.Decoder CatalogsFeedValidationErrors
catalogsFeedValidationErrorsDecoder =
    Json.Decode.succeed CatalogsFeedValidationErrors
        |> maybeDecode "fetch_error" Json.Decode.int Nothing
        |> maybeDecode "fetch_inactive_feed_error" Json.Decode.int Nothing
        |> maybeDecode "encoding_error" Json.Decode.int Nothing
        |> maybeDecode "delimiter_error" Json.Decode.int Nothing
        |> maybeDecode "required_columns_missing" Json.Decode.int Nothing
        |> maybeDecode "image_link_invalid" Json.Decode.int Nothing
        |> maybeDecode "itemid_missing" Json.Decode.int Nothing
        |> maybeDecode "title_missing" Json.Decode.int Nothing
        |> maybeDecode "description_missing" Json.Decode.int Nothing
        |> maybeDecode "product_category_invalid" Json.Decode.int Nothing
        |> maybeDecode "product_link_missing" Json.Decode.int Nothing
        |> maybeDecode "image_link_missing" Json.Decode.int Nothing
        |> maybeDecode "availability_invalid" Json.Decode.int Nothing
        |> maybeDecode "product_price_invalid" Json.Decode.int Nothing
        |> maybeDecode "link_format_invalid" Json.Decode.int Nothing
        |> maybeDecode "parse_line_error" Json.Decode.int Nothing
        |> maybeDecode "adwords_format_invalid" Json.Decode.int Nothing
        |> maybeDecode "product_category_missing" Json.Decode.int Nothing
        |> maybeDecode "internal_service_error" Json.Decode.int Nothing
        |> maybeDecode "no_verified_domain" Json.Decode.int Nothing
        |> maybeDecode "adult_invalid" Json.Decode.int Nothing
        |> maybeDecode "invalid_domain" Json.Decode.int Nothing
        |> maybeDecode "feed_length_too_long" Json.Decode.int Nothing
        |> maybeDecode "link_length_too_long" Json.Decode.int Nothing
        |> maybeDecode "malformed_xml" Json.Decode.int Nothing
        |> maybeDecode "redirect_invalid" Json.Decode.int Nothing
        |> maybeDecode "price_missing" Json.Decode.int Nothing
        |> maybeDecode "feed_too_small" Json.Decode.int Nothing
        |> maybeDecode "condition_invalid" Json.Decode.int Nothing
        |> maybeDecode "shopify_no_products" Json.Decode.int Nothing
        |> maybeDecode "max_items_per_item_group_exceeded" Json.Decode.int Nothing
        |> maybeDecode "item_main_image_download_failure" Json.Decode.int Nothing
        |> maybeDecode "pinjoin_content_unsafe" Json.Decode.int Nothing
        |> maybeDecode "blocklisted_image_signature" Json.Decode.int Nothing


catalogsFeedValidationWarningsDecoder : Json.Decode.Decoder CatalogsFeedValidationWarnings
catalogsFeedValidationWarningsDecoder =
    Json.Decode.succeed CatalogsFeedValidationWarnings
        |> maybeDecode "title_length_too_long" Json.Decode.int Nothing
        |> maybeDecode "description_length_too_long" Json.Decode.int Nothing
        |> maybeDecode "gender_invalid" Json.Decode.int Nothing
        |> maybeDecode "age_group_invalid" Json.Decode.int Nothing
        |> maybeDecode "size_type_invalid" Json.Decode.int Nothing
        |> maybeDecode "link_format_warning" Json.Decode.int Nothing
        |> maybeDecode "duplicate_products" Json.Decode.int Nothing
        |> maybeDecode "duplicate_links" Json.Decode.int Nothing
        |> maybeDecode "sales_price_invalid" Json.Decode.int Nothing
        |> maybeDecode "product_category_depth_warning" Json.Decode.int Nothing
        |> maybeDecode "adwords_same_as_link" Json.Decode.int Nothing
        |> maybeDecode "duplicate_headers" Json.Decode.int Nothing
        |> maybeDecode "fetch_same_signature" Json.Decode.int Nothing
        |> maybeDecode "adwords_format_warning" Json.Decode.int Nothing
        |> maybeDecode "additional_image_link_warning" Json.Decode.int Nothing
        |> maybeDecode "image_link_warning" Json.Decode.int Nothing
        |> maybeDecode "shipping_invalid" Json.Decode.int Nothing
        |> maybeDecode "tax_invalid" Json.Decode.int Nothing
        |> maybeDecode "shipping_weight_invalid" Json.Decode.int Nothing
        |> maybeDecode "expiration_date_invalid" Json.Decode.int Nothing
        |> maybeDecode "availability_date_invalid" Json.Decode.int Nothing
        |> maybeDecode "sale_date_invalid" Json.Decode.int Nothing
        |> maybeDecode "weight_unit_invalid" Json.Decode.int Nothing
        |> maybeDecode "is_bundle_invalid" Json.Decode.int Nothing
        |> maybeDecode "updated_time_invalid" Json.Decode.int Nothing
        |> maybeDecode "custom_label_length_too_long" Json.Decode.int Nothing
        |> maybeDecode "product_type_length_too_long" Json.Decode.int Nothing
        |> maybeDecode "too_many_additional_image_links" Json.Decode.int Nothing
        |> maybeDecode "multipack_invalid" Json.Decode.int Nothing
        |> maybeDecode "indexed_product_count_large_delta" Json.Decode.int Nothing
        |> maybeDecode "item_additional_image_download_failure" Json.Decode.int Nothing
        |> maybeDecode "optional_product_category_missing" Json.Decode.int Nothing
        |> maybeDecode "optional_product_category_invalid" Json.Decode.int Nothing
        |> maybeDecode "optional_condition_missing" Json.Decode.int Nothing
        |> maybeDecode "optional_condition_invalid" Json.Decode.int Nothing
        |> maybeDecode "ios_deep_link_invalid" Json.Decode.int Nothing
        |> maybeDecode "android_deep_link_invalid" Json.Decode.int Nothing
        |> maybeDecode "availability_normalized" Json.Decode.int Nothing
        |> maybeDecode "condition_normalized" Json.Decode.int Nothing
        |> maybeDecode "gender_normalized" Json.Decode.int Nothing
        |> maybeDecode "size_type_normalized" Json.Decode.int Nothing
        |> maybeDecode "age_group_normalized" Json.Decode.int Nothing
        |> maybeDecode "utm_source_auto_corrected" Json.Decode.int Nothing
        |> maybeDecode "country_does_not_map_to_currency" Json.Decode.int Nothing
        |> maybeDecode "min_ad_price_invalid" Json.Decode.int Nothing


catalogsFeedsCreateRequestDecoder : Json.Decode.Decoder CatalogsFeedsCreateRequest
catalogsFeedsCreateRequestDecoder =
    Json.Decode.succeed CatalogsFeedsCreateRequest
        |> maybeDecode "default_country" countryDecoder Nothing
        |> maybeDecodeNullable "default_availability" productAvailabilityTypeDecoder Nothing
        |> maybeDecodeNullable "default_currency" nullableCurrencyDecoder Nothing
        |> decode "name" Json.Decode.string 
        |> decode "format" catalogsFormatDecoder 
        |> maybeDecode "default_locale" Json.Decode.string Nothing
        |> maybeDecodeNullable "credentials" catalogsFeedCredentialsDecoder Nothing
        |> decode "location" Json.Decode.string 
        |> maybeDecodeNullable "preferred_processing_schedule" catalogsFeedProcessingScheduleDecoder Nothing


catalogsFeedsUpdateRequestDecoder : Json.Decode.Decoder CatalogsFeedsUpdateRequest
catalogsFeedsUpdateRequestDecoder =
    Json.Decode.succeed CatalogsFeedsUpdateRequest
        |> maybeDecodeNullable "default_availability" productAvailabilityTypeDecoder Nothing
        |> maybeDecodeNullable "default_currency" nullableCurrencyDecoder Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "format" catalogsFormatDecoder Nothing
        |> maybeDecodeNullable "credentials" catalogsFeedCredentialsDecoder Nothing
        |> maybeDecode "location" Json.Decode.string Nothing
        |> maybeDecodeNullable "preferred_processing_schedule" catalogsFeedProcessingScheduleDecoder Nothing
        |> maybeDecode "status" catalogsStatusDecoder Nothing


catalogsFormatDecoder : Json.Decode.Decoder CatalogsFormat
catalogsFormatDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "TSV" ->
                        Json.Decode.succeed CatalogsFormatTSV

                    "CSV" ->
                        Json.Decode.succeed CatalogsFormatCSV

                    "XML" ->
                        Json.Decode.succeed CatalogsFormatXML

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


catalogsItemsDecoder : Json.Decode.Decoder CatalogsItems
catalogsItemsDecoder =
    Json.Decode.succeed CatalogsItems
        |> maybeDecode "items" (Json.Decode.list itemBatchRecordDecoder) Nothing


catalogsItemsBatchDecoder : Json.Decode.Decoder CatalogsItemsBatch
catalogsItemsBatchDecoder =
    Json.Decode.succeed CatalogsItemsBatch
        |> maybeDecode "items" (Json.Decode.list itemProcessingRecordDecoder) Nothing
        |> maybeDecode "batch_id" Json.Decode.string Nothing
        |> maybeDecode "created_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "completed_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "status" batchOperationStatusDecoder Nothing


catalogsItemsBatchRequestDecoder : Json.Decode.Decoder CatalogsItemsBatchRequest
catalogsItemsBatchRequestDecoder =
    Json.Decode.succeed CatalogsItemsBatchRequest
        |> maybeDecode "country" countryDecoder Nothing
        |> maybeDecode "language" languageDecoder Nothing
        |> maybeDecode "operation" batchOperationDecoder Nothing
        |> maybeDecode "items" (Json.Decode.list itemBatchRecordDecoder) Nothing


catalogsProductGroupDecoder : Json.Decode.Decoder CatalogsProductGroup
catalogsProductGroupDecoder =
    Json.Decode.succeed CatalogsProductGroup
        |> decode "id" Json.Decode.string 
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecodeNullable "description" Json.Decode.string Nothing
        |> decode "filters" catalogsProductGroupFiltersDecoder 
        |> maybeDecode "type" catalogsProductGroupTypeDecoder Nothing
        |> maybeDecode "status" catalogsProductGroupStatusDecoder Nothing
        |> maybeDecode "feed_id" Json.Decode.string Nothing
        |> maybeDecode "created_at" Json.Decode.int Nothing
        |> maybeDecode "updated_at" Json.Decode.int Nothing


catalogsProductGroupCreateRequestDecoder : Json.Decode.Decoder CatalogsProductGroupCreateRequest
catalogsProductGroupCreateRequestDecoder =
    Json.Decode.succeed CatalogsProductGroupCreateRequest
        |> decode "feed_id" Json.Decode.string 
        |> decode "name" Json.Decode.string 
        |> maybeDecodeNullable "description" Json.Decode.string Nothing
        |> decode "filters" catalogsProductGroupFiltersDecoder 


catalogsProductGroupCurrencyCriteriaDecoder : Json.Decode.Decoder CatalogsProductGroupCurrencyCriteria
catalogsProductGroupCurrencyCriteriaDecoder =
    Json.Decode.succeed CatalogsProductGroupCurrencyCriteria
        |> decode "values" nonNullableCatalogsCurrencyDecoder 
        |> decode "negated" Json.Decode.bool 


catalogsProductGroupFilterKeysDecoder : Json.Decode.Decoder CatalogsProductGroupFilterKeys
catalogsProductGroupFilterKeysDecoder =
    Json.Decode.succeed CatalogsProductGroupFilterKeys
        |> decode "MIN_PRICE" catalogsProductGroupPricingCriteriaDecoder 
        |> decode "MAX_PRICE" catalogsProductGroupPricingCriteriaDecoder 
        |> decode "CURRENCY" catalogsProductGroupCurrencyCriteriaDecoder 
        |> decode "ITEM_ID" catalogsProductGroupCurrencyCriteriaDecoder 
        |> decode "AVAILABILITY" catalogsProductGroupMultipleStringCriteriaDecoder 
        |> decode "BRAND" catalogsProductGroupMultipleStringCriteriaDecoder 
        |> decode "CONDITION" catalogsProductGroupMultipleStringCriteriaDecoder 
        |> decode "CUSTOM_LABEL_0" catalogsProductGroupMultipleStringCriteriaDecoder 
        |> decode "CUSTOM_LABEL_1" catalogsProductGroupMultipleStringCriteriaDecoder 
        |> decode "CUSTOM_LABEL_2" catalogsProductGroupMultipleStringCriteriaDecoder 
        |> decode "CUSTOM_LABEL_3" catalogsProductGroupMultipleStringCriteriaDecoder 
        |> decode "CUSTOM_LABEL_4" catalogsProductGroupMultipleStringCriteriaDecoder 
        |> decode "ITEM_GROUP_ID" catalogsProductGroupMultipleStringCriteriaDecoder 
        |> decode "GENDER" catalogsProductGroupMultipleStringCriteriaDecoder 
        |> decode "PRODUCT_TYPE_4" catalogsProductGroupMultipleStringListCriteriaDecoder 
        |> decode "PRODUCT_TYPE_3" catalogsProductGroupMultipleStringListCriteriaDecoder 
        |> decode "PRODUCT_TYPE_2" catalogsProductGroupMultipleStringListCriteriaDecoder 
        |> decode "PRODUCT_TYPE_1" catalogsProductGroupMultipleStringListCriteriaDecoder 
        |> decode "PRODUCT_TYPE_0" catalogsProductGroupMultipleStringListCriteriaDecoder 
        |> decode "GOOGLE_PRODUCT_CATEGORY_6" catalogsProductGroupMultipleStringListCriteriaDecoder 
        |> decode "GOOGLE_PRODUCT_CATEGORY_5" catalogsProductGroupMultipleStringListCriteriaDecoder 
        |> decode "GOOGLE_PRODUCT_CATEGORY_4" catalogsProductGroupMultipleStringListCriteriaDecoder 
        |> decode "GOOGLE_PRODUCT_CATEGORY_3" catalogsProductGroupMultipleStringListCriteriaDecoder 
        |> decode "GOOGLE_PRODUCT_CATEGORY_2" catalogsProductGroupMultipleStringListCriteriaDecoder 
        |> decode "GOOGLE_PRODUCT_CATEGORY_1" catalogsProductGroupMultipleStringListCriteriaDecoder 
        |> decode "GOOGLE_PRODUCT_CATEGORY_0" catalogsProductGroupMultipleStringListCriteriaDecoder 


catalogsProductGroupFiltersDecoder : Json.Decode.Decoder CatalogsProductGroupFilters
catalogsProductGroupFiltersDecoder =
    Json.Decode.succeed CatalogsProductGroupFilters
        |> maybeDecode "any_of" (Json.Decode.list catalogsProductGroupFilterKeysDecoder) Nothing
        |> maybeDecode "all_of" (Json.Decode.list catalogsProductGroupFilterKeysDecoder) Nothing


catalogsProductGroupFiltersAnyOfDecoder : Json.Decode.Decoder CatalogsProductGroupFiltersAnyOf
catalogsProductGroupFiltersAnyOfDecoder =
    Json.Decode.succeed CatalogsProductGroupFiltersAnyOf
        |> maybeDecode "any_of" (Json.Decode.list catalogsProductGroupFilterKeysDecoder) Nothing


catalogsProductGroupMultipleStringCriteriaDecoder : Json.Decode.Decoder CatalogsProductGroupMultipleStringCriteria
catalogsProductGroupMultipleStringCriteriaDecoder =
    Json.Decode.succeed CatalogsProductGroupMultipleStringCriteria
        |> decode "values" (Json.Decode.list Json.Decode.string) 
        |> decode "negated" Json.Decode.bool 


catalogsProductGroupMultipleStringListCriteriaDecoder : Json.Decode.Decoder CatalogsProductGroupMultipleStringListCriteria
catalogsProductGroupMultipleStringListCriteriaDecoder =
    Json.Decode.succeed CatalogsProductGroupMultipleStringListCriteria
        |> decode "values" (Json.Decode.list (Json.Decode.list Json.Decode.string)) 
        |> decode "negated" Json.Decode.bool 


catalogsProductGroupPricingCriteriaDecoder : Json.Decode.Decoder CatalogsProductGroupPricingCriteria
catalogsProductGroupPricingCriteriaDecoder =
    Json.Decode.succeed CatalogsProductGroupPricingCriteria
        |> decode "inclusion" Json.Decode.bool 
        |> decode "values" Json.Decode.float 
        |> decode "negated" Json.Decode.bool 


catalogsProductGroupStatusDecoder : Json.Decode.Decoder CatalogsProductGroupStatus
catalogsProductGroupStatusDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "ACTIVE" ->
                        Json.Decode.succeed CatalogsProductGroupStatusACTIVE

                    "INACTIVE" ->
                        Json.Decode.succeed CatalogsProductGroupStatusINACTIVE

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


catalogsProductGroupTypeDecoder : Json.Decode.Decoder CatalogsProductGroupType
catalogsProductGroupTypeDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "MERCHANT_CREATED" ->
                        Json.Decode.succeed CatalogsProductGroupTypeMERCHANTCREATED

                    "ALL_PRODUCTS" ->
                        Json.Decode.succeed CatalogsProductGroupTypeALLPRODUCTS

                    "BEST_DEALS" ->
                        Json.Decode.succeed CatalogsProductGroupTypeBESTDEALS

                    "PINNER_FAVORITES" ->
                        Json.Decode.succeed CatalogsProductGroupTypePINNERFAVORITES

                    "TOP_SELLERS" ->
                        Json.Decode.succeed CatalogsProductGroupTypeTOPSELLERS

                    "BACK_IN_STOCK" ->
                        Json.Decode.succeed CatalogsProductGroupTypeBACKINSTOCK

                    "NEW_ARRIVALS" ->
                        Json.Decode.succeed CatalogsProductGroupTypeNEWARRIVALS

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


catalogsProductGroupUpdateRequestDecoder : Json.Decode.Decoder CatalogsProductGroupUpdateRequest
catalogsProductGroupUpdateRequestDecoder =
    Json.Decode.succeed CatalogsProductGroupUpdateRequest
        |> decode "feed_id" Json.Decode.string 
        |> decode "name" Json.Decode.string 
        |> maybeDecodeNullable "description" Json.Decode.string Nothing
        |> decode "filters" catalogsProductGroupFiltersDecoder 


catalogsStatusDecoder : Json.Decode.Decoder CatalogsStatus
catalogsStatusDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "ACTIVE" ->
                        Json.Decode.succeed CatalogsStatusACTIVE

                    "INACTIVE" ->
                        Json.Decode.succeed CatalogsStatusINACTIVE

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


conditionFilterDecoder : Json.Decode.Decoder ConditionFilter
conditionFilterDecoder =
    Json.Decode.succeed ConditionFilter
        |> decode "CONDITION" catalogsProductGroupMultipleStringCriteriaDecoder 


conversionAttributionWindowDaysDecoder : Json.Decode.Decoder ConversionAttributionWindowDays
conversionAttributionWindowDaysDecoder =
    Json.Decode.int
        |> Json.Decode.andThen
            (\value ->
                case value of
                    1 ->
                        Json.Decode.succeed ConversionAttributionWindowDays1

                    7 ->
                        Json.Decode.succeed ConversionAttributionWindowDays7

                    30 ->
                        Json.Decode.succeed ConversionAttributionWindowDays30

                    60 ->
                        Json.Decode.succeed ConversionAttributionWindowDays60

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ String.fromInt other
            )


conversionReportAttributionTypeDecoder : Json.Decode.Decoder ConversionReportAttributionType
conversionReportAttributionTypeDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "INDIVIDUAL" ->
                        Json.Decode.succeed ConversionReportAttributionTypeINDIVIDUAL

                    "HOUSEHOLD" ->
                        Json.Decode.succeed ConversionReportAttributionTypeHOUSEHOLD

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


conversionReportTimeTypeDecoder : Json.Decode.Decoder ConversionReportTimeType
conversionReportTimeTypeDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "TIME_OF_AD_ACTION" ->
                        Json.Decode.succeed ConversionReportTimeTypeADACTION

                    "TIME_OF_CONVERSION" ->
                        Json.Decode.succeed ConversionReportTimeTypeCONVERSION

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


countryDecoder : Json.Decode.Decoder Country
countryDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "AD" ->
                        Json.Decode.succeed CountryAD

                    "AE" ->
                        Json.Decode.succeed CountryAE

                    "AF" ->
                        Json.Decode.succeed CountryAF

                    "AG" ->
                        Json.Decode.succeed CountryAG

                    "AI" ->
                        Json.Decode.succeed CountryAI

                    "AL" ->
                        Json.Decode.succeed CountryAL

                    "AM" ->
                        Json.Decode.succeed CountryAM

                    "AO" ->
                        Json.Decode.succeed CountryAO

                    "AQ" ->
                        Json.Decode.succeed CountryAQ

                    "AR" ->
                        Json.Decode.succeed CountryAR

                    "AS" ->
                        Json.Decode.succeed CountryAS

                    "AT" ->
                        Json.Decode.succeed CountryAT

                    "AU" ->
                        Json.Decode.succeed CountryAU

                    "AW" ->
                        Json.Decode.succeed CountryAW

                    "AX" ->
                        Json.Decode.succeed CountryAX

                    "AZ" ->
                        Json.Decode.succeed CountryAZ

                    "BA" ->
                        Json.Decode.succeed CountryBA

                    "BB" ->
                        Json.Decode.succeed CountryBB

                    "BD" ->
                        Json.Decode.succeed CountryBD

                    "BE" ->
                        Json.Decode.succeed CountryBE

                    "BF" ->
                        Json.Decode.succeed CountryBF

                    "BG" ->
                        Json.Decode.succeed CountryBG

                    "BH" ->
                        Json.Decode.succeed CountryBH

                    "BI" ->
                        Json.Decode.succeed CountryBI

                    "BJ" ->
                        Json.Decode.succeed CountryBJ

                    "BL" ->
                        Json.Decode.succeed CountryBL

                    "BM" ->
                        Json.Decode.succeed CountryBM

                    "BN" ->
                        Json.Decode.succeed CountryBN

                    "BO" ->
                        Json.Decode.succeed CountryBO

                    "BQ" ->
                        Json.Decode.succeed CountryBQ

                    "BR" ->
                        Json.Decode.succeed CountryBR

                    "BS" ->
                        Json.Decode.succeed CountryBS

                    "BT" ->
                        Json.Decode.succeed CountryBT

                    "BV" ->
                        Json.Decode.succeed CountryBV

                    "BW" ->
                        Json.Decode.succeed CountryBW

                    "BY" ->
                        Json.Decode.succeed CountryBY

                    "BZ" ->
                        Json.Decode.succeed CountryBZ

                    "CA" ->
                        Json.Decode.succeed CountryCA

                    "CC" ->
                        Json.Decode.succeed CountryCC

                    "CD" ->
                        Json.Decode.succeed CountryCD

                    "CF" ->
                        Json.Decode.succeed CountryCF

                    "CG" ->
                        Json.Decode.succeed CountryCG

                    "CH" ->
                        Json.Decode.succeed CountryCH

                    "CI" ->
                        Json.Decode.succeed CountryCI

                    "CK" ->
                        Json.Decode.succeed CountryCK

                    "CL" ->
                        Json.Decode.succeed CountryCL

                    "CM" ->
                        Json.Decode.succeed CountryCM

                    "CO" ->
                        Json.Decode.succeed CountryCO

                    "CR" ->
                        Json.Decode.succeed CountryCR

                    "CU" ->
                        Json.Decode.succeed CountryCU

                    "CV" ->
                        Json.Decode.succeed CountryCV

                    "CW" ->
                        Json.Decode.succeed CountryCW

                    "CX" ->
                        Json.Decode.succeed CountryCX

                    "CY" ->
                        Json.Decode.succeed CountryCY

                    "CZ" ->
                        Json.Decode.succeed CountryCZ

                    "DE" ->
                        Json.Decode.succeed CountryDE

                    "DJ" ->
                        Json.Decode.succeed CountryDJ

                    "DK" ->
                        Json.Decode.succeed CountryDK

                    "DM" ->
                        Json.Decode.succeed CountryDM

                    "DO" ->
                        Json.Decode.succeed CountryDO

                    "DZ" ->
                        Json.Decode.succeed CountryDZ

                    "EC" ->
                        Json.Decode.succeed CountryEC

                    "EE" ->
                        Json.Decode.succeed CountryEE

                    "EG" ->
                        Json.Decode.succeed CountryEG

                    "EH" ->
                        Json.Decode.succeed CountryEH

                    "ER" ->
                        Json.Decode.succeed CountryER

                    "ES" ->
                        Json.Decode.succeed CountryES

                    "ET" ->
                        Json.Decode.succeed CountryET

                    "FI" ->
                        Json.Decode.succeed CountryFI

                    "FJ" ->
                        Json.Decode.succeed CountryFJ

                    "FK" ->
                        Json.Decode.succeed CountryFK

                    "FM" ->
                        Json.Decode.succeed CountryFM

                    "FO" ->
                        Json.Decode.succeed CountryFO

                    "FR" ->
                        Json.Decode.succeed CountryFR

                    "GA" ->
                        Json.Decode.succeed CountryGA

                    "GB" ->
                        Json.Decode.succeed CountryGB

                    "GD" ->
                        Json.Decode.succeed CountryGD

                    "GE" ->
                        Json.Decode.succeed CountryGE

                    "GF" ->
                        Json.Decode.succeed CountryGF

                    "GG" ->
                        Json.Decode.succeed CountryGG

                    "GH" ->
                        Json.Decode.succeed CountryGH

                    "GI" ->
                        Json.Decode.succeed CountryGI

                    "GL" ->
                        Json.Decode.succeed CountryGL

                    "GM" ->
                        Json.Decode.succeed CountryGM

                    "GN" ->
                        Json.Decode.succeed CountryGN

                    "GP" ->
                        Json.Decode.succeed CountryGP

                    "GQ" ->
                        Json.Decode.succeed CountryGQ

                    "GR" ->
                        Json.Decode.succeed CountryGR

                    "GS" ->
                        Json.Decode.succeed CountryGS

                    "GT" ->
                        Json.Decode.succeed CountryGT

                    "GU" ->
                        Json.Decode.succeed CountryGU

                    "GW" ->
                        Json.Decode.succeed CountryGW

                    "GY" ->
                        Json.Decode.succeed CountryGY

                    "HK" ->
                        Json.Decode.succeed CountryHK

                    "HM" ->
                        Json.Decode.succeed CountryHM

                    "HN" ->
                        Json.Decode.succeed CountryHN

                    "HR" ->
                        Json.Decode.succeed CountryHR

                    "HT" ->
                        Json.Decode.succeed CountryHT

                    "HU" ->
                        Json.Decode.succeed CountryHU

                    "ID" ->
                        Json.Decode.succeed CountryID

                    "IE" ->
                        Json.Decode.succeed CountryIE

                    "IL" ->
                        Json.Decode.succeed CountryIL

                    "IM" ->
                        Json.Decode.succeed CountryIM

                    "IN" ->
                        Json.Decode.succeed CountryIN

                    "IO" ->
                        Json.Decode.succeed CountryIO

                    "IQ" ->
                        Json.Decode.succeed CountryIQ

                    "IR" ->
                        Json.Decode.succeed CountryIR

                    "IS" ->
                        Json.Decode.succeed CountryIS

                    "IT" ->
                        Json.Decode.succeed CountryIT

                    "JE" ->
                        Json.Decode.succeed CountryJE

                    "JM" ->
                        Json.Decode.succeed CountryJM

                    "JO" ->
                        Json.Decode.succeed CountryJO

                    "JP" ->
                        Json.Decode.succeed CountryJP

                    "KE" ->
                        Json.Decode.succeed CountryKE

                    "KG" ->
                        Json.Decode.succeed CountryKG

                    "KH" ->
                        Json.Decode.succeed CountryKH

                    "KI" ->
                        Json.Decode.succeed CountryKI

                    "KM" ->
                        Json.Decode.succeed CountryKM

                    "KN" ->
                        Json.Decode.succeed CountryKN

                    "KR" ->
                        Json.Decode.succeed CountryKR

                    "KW" ->
                        Json.Decode.succeed CountryKW

                    "KY" ->
                        Json.Decode.succeed CountryKY

                    "KZ" ->
                        Json.Decode.succeed CountryKZ

                    "LA" ->
                        Json.Decode.succeed CountryLA

                    "LB" ->
                        Json.Decode.succeed CountryLB

                    "LC" ->
                        Json.Decode.succeed CountryLC

                    "LI" ->
                        Json.Decode.succeed CountryLI

                    "LK" ->
                        Json.Decode.succeed CountryLK

                    "LR" ->
                        Json.Decode.succeed CountryLR

                    "LS" ->
                        Json.Decode.succeed CountryLS

                    "LT" ->
                        Json.Decode.succeed CountryLT

                    "LU" ->
                        Json.Decode.succeed CountryLU

                    "LV" ->
                        Json.Decode.succeed CountryLV

                    "LY" ->
                        Json.Decode.succeed CountryLY

                    "MA" ->
                        Json.Decode.succeed CountryMA

                    "MC" ->
                        Json.Decode.succeed CountryMC

                    "MD" ->
                        Json.Decode.succeed CountryMD

                    "ME" ->
                        Json.Decode.succeed CountryME

                    "MF" ->
                        Json.Decode.succeed CountryMF

                    "MG" ->
                        Json.Decode.succeed CountryMG

                    "MH" ->
                        Json.Decode.succeed CountryMH

                    "MK" ->
                        Json.Decode.succeed CountryMK

                    "ML" ->
                        Json.Decode.succeed CountryML

                    "MM" ->
                        Json.Decode.succeed CountryMM

                    "MN" ->
                        Json.Decode.succeed CountryMN

                    "MO" ->
                        Json.Decode.succeed CountryMO

                    "MP" ->
                        Json.Decode.succeed CountryMP

                    "MQ" ->
                        Json.Decode.succeed CountryMQ

                    "MR" ->
                        Json.Decode.succeed CountryMR

                    "MS" ->
                        Json.Decode.succeed CountryMS

                    "MT" ->
                        Json.Decode.succeed CountryMT

                    "MU" ->
                        Json.Decode.succeed CountryMU

                    "MV" ->
                        Json.Decode.succeed CountryMV

                    "MW" ->
                        Json.Decode.succeed CountryMW

                    "MX" ->
                        Json.Decode.succeed CountryMX

                    "MY" ->
                        Json.Decode.succeed CountryMY

                    "MZ" ->
                        Json.Decode.succeed CountryMZ

                    "NA" ->
                        Json.Decode.succeed CountryNA

                    "NC" ->
                        Json.Decode.succeed CountryNC

                    "NE" ->
                        Json.Decode.succeed CountryNE

                    "NF" ->
                        Json.Decode.succeed CountryNF

                    "NG" ->
                        Json.Decode.succeed CountryNG

                    "NI" ->
                        Json.Decode.succeed CountryNI

                    "NL" ->
                        Json.Decode.succeed CountryNL

                    "NO" ->
                        Json.Decode.succeed CountryNO

                    "NP" ->
                        Json.Decode.succeed CountryNP

                    "NR" ->
                        Json.Decode.succeed CountryNR

                    "NU" ->
                        Json.Decode.succeed CountryNU

                    "NZ" ->
                        Json.Decode.succeed CountryNZ

                    "OM" ->
                        Json.Decode.succeed CountryOM

                    "PA" ->
                        Json.Decode.succeed CountryPA

                    "PE" ->
                        Json.Decode.succeed CountryPE

                    "PF" ->
                        Json.Decode.succeed CountryPF

                    "PG" ->
                        Json.Decode.succeed CountryPG

                    "PH" ->
                        Json.Decode.succeed CountryPH

                    "PK" ->
                        Json.Decode.succeed CountryPK

                    "PL" ->
                        Json.Decode.succeed CountryPL

                    "PM" ->
                        Json.Decode.succeed CountryPM

                    "PN" ->
                        Json.Decode.succeed CountryPN

                    "PR" ->
                        Json.Decode.succeed CountryPR

                    "PS" ->
                        Json.Decode.succeed CountryPS

                    "PT" ->
                        Json.Decode.succeed CountryPT

                    "PW" ->
                        Json.Decode.succeed CountryPW

                    "PY" ->
                        Json.Decode.succeed CountryPY

                    "QA" ->
                        Json.Decode.succeed CountryQA

                    "RE" ->
                        Json.Decode.succeed CountryRE

                    "RO" ->
                        Json.Decode.succeed CountryRO

                    "RS" ->
                        Json.Decode.succeed CountryRS

                    "RU" ->
                        Json.Decode.succeed CountryRU

                    "RW" ->
                        Json.Decode.succeed CountryRW

                    "SA" ->
                        Json.Decode.succeed CountrySA

                    "SB" ->
                        Json.Decode.succeed CountrySB

                    "SC" ->
                        Json.Decode.succeed CountrySC

                    "SD" ->
                        Json.Decode.succeed CountrySD

                    "SE" ->
                        Json.Decode.succeed CountrySE

                    "SG" ->
                        Json.Decode.succeed CountrySG

                    "SH" ->
                        Json.Decode.succeed CountrySH

                    "SI" ->
                        Json.Decode.succeed CountrySI

                    "SJ" ->
                        Json.Decode.succeed CountrySJ

                    "SK" ->
                        Json.Decode.succeed CountrySK

                    "SL" ->
                        Json.Decode.succeed CountrySL

                    "SM" ->
                        Json.Decode.succeed CountrySM

                    "SN" ->
                        Json.Decode.succeed CountrySN

                    "SO" ->
                        Json.Decode.succeed CountrySO

                    "SR" ->
                        Json.Decode.succeed CountrySR

                    "SS" ->
                        Json.Decode.succeed CountrySS

                    "ST" ->
                        Json.Decode.succeed CountryST

                    "SV" ->
                        Json.Decode.succeed CountrySV

                    "SX" ->
                        Json.Decode.succeed CountrySX

                    "SY" ->
                        Json.Decode.succeed CountrySY

                    "SZ" ->
                        Json.Decode.succeed CountrySZ

                    "TC" ->
                        Json.Decode.succeed CountryTC

                    "TD" ->
                        Json.Decode.succeed CountryTD

                    "TF" ->
                        Json.Decode.succeed CountryTF

                    "TG" ->
                        Json.Decode.succeed CountryTG

                    "TH" ->
                        Json.Decode.succeed CountryTH

                    "TJ" ->
                        Json.Decode.succeed CountryTJ

                    "TK" ->
                        Json.Decode.succeed CountryTK

                    "TL" ->
                        Json.Decode.succeed CountryTL

                    "TM" ->
                        Json.Decode.succeed CountryTM

                    "TN" ->
                        Json.Decode.succeed CountryTN

                    "TO" ->
                        Json.Decode.succeed CountryTO

                    "TR" ->
                        Json.Decode.succeed CountryTR

                    "TT" ->
                        Json.Decode.succeed CountryTT

                    "TV" ->
                        Json.Decode.succeed CountryTV

                    "TW" ->
                        Json.Decode.succeed CountryTW

                    "TZ" ->
                        Json.Decode.succeed CountryTZ

                    "UA" ->
                        Json.Decode.succeed CountryUA

                    "UG" ->
                        Json.Decode.succeed CountryUG

                    "UM" ->
                        Json.Decode.succeed CountryUM

                    "US" ->
                        Json.Decode.succeed CountryUS

                    "UY" ->
                        Json.Decode.succeed CountryUY

                    "UZ" ->
                        Json.Decode.succeed CountryUZ

                    "VA" ->
                        Json.Decode.succeed CountryVA

                    "VC" ->
                        Json.Decode.succeed CountryVC

                    "VE" ->
                        Json.Decode.succeed CountryVE

                    "VG" ->
                        Json.Decode.succeed CountryVG

                    "VI" ->
                        Json.Decode.succeed CountryVI

                    "VN" ->
                        Json.Decode.succeed CountryVN

                    "VU" ->
                        Json.Decode.succeed CountryVU

                    "WF" ->
                        Json.Decode.succeed CountryWF

                    "WS" ->
                        Json.Decode.succeed CountryWS

                    "YE" ->
                        Json.Decode.succeed CountryYE

                    "YT" ->
                        Json.Decode.succeed CountryYT

                    "ZA" ->
                        Json.Decode.succeed CountryZA

                    "ZM" ->
                        Json.Decode.succeed CountryZM

                    "ZW" ->
                        Json.Decode.succeed CountryZW

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


currencyDecoder : Json.Decode.Decoder Currency
currencyDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "UNK" ->
                        Json.Decode.succeed CurrencyUNK

                    "USD" ->
                        Json.Decode.succeed CurrencyUSD

                    "GBP" ->
                        Json.Decode.succeed CurrencyGBP

                    "CAD" ->
                        Json.Decode.succeed CurrencyCAD

                    "EUR" ->
                        Json.Decode.succeed CurrencyEUR

                    "AUD" ->
                        Json.Decode.succeed CurrencyAUD

                    "NZD" ->
                        Json.Decode.succeed CurrencyNZD

                    "SEK" ->
                        Json.Decode.succeed CurrencySEK

                    "ILS" ->
                        Json.Decode.succeed CurrencyILS

                    "CHF" ->
                        Json.Decode.succeed CurrencyCHF

                    "HKD" ->
                        Json.Decode.succeed CurrencyHKD

                    "JPY" ->
                        Json.Decode.succeed CurrencyJPY

                    "SGD" ->
                        Json.Decode.succeed CurrencySGD

                    "KRW" ->
                        Json.Decode.succeed CurrencyKRW

                    "NOK" ->
                        Json.Decode.succeed CurrencyNOK

                    "DKK" ->
                        Json.Decode.succeed CurrencyDKK

                    "PLN" ->
                        Json.Decode.succeed CurrencyPLN

                    "RON" ->
                        Json.Decode.succeed CurrencyRON

                    "HUF" ->
                        Json.Decode.succeed CurrencyHUF

                    "CZK" ->
                        Json.Decode.succeed CurrencyCZK

                    "BRL" ->
                        Json.Decode.succeed CurrencyBRL

                    "MXN" ->
                        Json.Decode.succeed CurrencyMXN

                    "ARS" ->
                        Json.Decode.succeed CurrencyARS

                    "CLP" ->
                        Json.Decode.succeed CurrencyCLP

                    "COP" ->
                        Json.Decode.succeed CurrencyCOP

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


currencyFilterDecoder : Json.Decode.Decoder CurrencyFilter
currencyFilterDecoder =
    Json.Decode.succeed CurrencyFilter
        |> decode "CURRENCY" catalogsProductGroupCurrencyCriteriaDecoder 


customLabel0FilterDecoder : Json.Decode.Decoder CustomLabel0Filter
customLabel0FilterDecoder =
    Json.Decode.succeed CustomLabel0Filter
        |> decode "CUSTOM_LABEL_0" catalogsProductGroupMultipleStringCriteriaDecoder 


customLabel1FilterDecoder : Json.Decode.Decoder CustomLabel1Filter
customLabel1FilterDecoder =
    Json.Decode.succeed CustomLabel1Filter
        |> decode "CUSTOM_LABEL_1" catalogsProductGroupMultipleStringCriteriaDecoder 


customLabel2FilterDecoder : Json.Decode.Decoder CustomLabel2Filter
customLabel2FilterDecoder =
    Json.Decode.succeed CustomLabel2Filter
        |> decode "CUSTOM_LABEL_2" catalogsProductGroupMultipleStringCriteriaDecoder 


customLabel3FilterDecoder : Json.Decode.Decoder CustomLabel3Filter
customLabel3FilterDecoder =
    Json.Decode.succeed CustomLabel3Filter
        |> decode "CUSTOM_LABEL_3" catalogsProductGroupMultipleStringCriteriaDecoder 


customLabel4FilterDecoder : Json.Decode.Decoder CustomLabel4Filter
customLabel4FilterDecoder =
    Json.Decode.succeed CustomLabel4Filter
        |> decode "CUSTOM_LABEL_4" catalogsProductGroupMultipleStringCriteriaDecoder 


dataOutputFormatDecoder : Json.Decode.Decoder DataOutputFormat
dataOutputFormatDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "JSON" ->
                        Json.Decode.succeed DataOutputFormatJSON

                    "CSV" ->
                        Json.Decode.succeed DataOutputFormatCSV

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


entityStatusDecoder : Json.Decode.Decoder EntityStatus
entityStatusDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "ACTIVE" ->
                        Json.Decode.succeed EntityStatusACTIVE

                    "PAUSED" ->
                        Json.Decode.succeed EntityStatusPAUSED

                    "ARCHIVED" ->
                        Json.Decode.succeed EntityStatusARCHIVED

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


errorDecoder : Json.Decode.Decoder Error
errorDecoder =
    Json.Decode.succeed Error
        |> decode "code" Json.Decode.int 
        |> decode "message" Json.Decode.string 


feedFieldsDecoder : Json.Decode.Decoder FeedFields
feedFieldsDecoder =
    Json.Decode.succeed FeedFields
        |> decode "default_country" countryDecoder 
        |> decodeNullable "default_availability" productAvailabilityTypeDecoder 
        |> decodeNullable "default_currency" nullableCurrencyDecoder 
        |> decodeNullable "name" Json.Decode.string 
        |> decode "format" catalogsFormatDecoder 
        |> decode "default_locale" Json.Decode.string 
        |> decodeNullable "credentials" catalogsFeedCredentialsDecoder 
        |> decode "location" Json.Decode.string 
        |> decodeNullable "preferred_processing_schedule" catalogsFeedProcessingScheduleDecoder 
        |> decode "status" catalogsStatusDecoder 


genderFilterDecoder : Json.Decode.Decoder GenderFilter
genderFilterDecoder =
    Json.Decode.succeed GenderFilter
        |> decode "GENDER" catalogsProductGroupMultipleStringCriteriaDecoder 


googleProductCategory0FilterDecoder : Json.Decode.Decoder GoogleProductCategory0Filter
googleProductCategory0FilterDecoder =
    Json.Decode.succeed GoogleProductCategory0Filter
        |> decode "GOOGLE_PRODUCT_CATEGORY_0" catalogsProductGroupMultipleStringListCriteriaDecoder 


googleProductCategory1FilterDecoder : Json.Decode.Decoder GoogleProductCategory1Filter
googleProductCategory1FilterDecoder =
    Json.Decode.succeed GoogleProductCategory1Filter
        |> decode "GOOGLE_PRODUCT_CATEGORY_1" catalogsProductGroupMultipleStringListCriteriaDecoder 


googleProductCategory2FilterDecoder : Json.Decode.Decoder GoogleProductCategory2Filter
googleProductCategory2FilterDecoder =
    Json.Decode.succeed GoogleProductCategory2Filter
        |> decode "GOOGLE_PRODUCT_CATEGORY_2" catalogsProductGroupMultipleStringListCriteriaDecoder 


googleProductCategory3FilterDecoder : Json.Decode.Decoder GoogleProductCategory3Filter
googleProductCategory3FilterDecoder =
    Json.Decode.succeed GoogleProductCategory3Filter
        |> decode "GOOGLE_PRODUCT_CATEGORY_3" catalogsProductGroupMultipleStringListCriteriaDecoder 


googleProductCategory4FilterDecoder : Json.Decode.Decoder GoogleProductCategory4Filter
googleProductCategory4FilterDecoder =
    Json.Decode.succeed GoogleProductCategory4Filter
        |> decode "GOOGLE_PRODUCT_CATEGORY_4" catalogsProductGroupMultipleStringListCriteriaDecoder 


googleProductCategory5FilterDecoder : Json.Decode.Decoder GoogleProductCategory5Filter
googleProductCategory5FilterDecoder =
    Json.Decode.succeed GoogleProductCategory5Filter
        |> decode "GOOGLE_PRODUCT_CATEGORY_5" catalogsProductGroupMultipleStringListCriteriaDecoder 


googleProductCategory6FilterDecoder : Json.Decode.Decoder GoogleProductCategory6Filter
googleProductCategory6FilterDecoder =
    Json.Decode.succeed GoogleProductCategory6Filter
        |> decode "GOOGLE_PRODUCT_CATEGORY_6" catalogsProductGroupMultipleStringListCriteriaDecoder 


granularityDecoder : Json.Decode.Decoder Granularity
granularityDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "TOTAL" ->
                        Json.Decode.succeed GranularityTOTAL

                    "DAY" ->
                        Json.Decode.succeed GranularityDAY

                    "HOUR" ->
                        Json.Decode.succeed GranularityHOUR

                    "WEEK" ->
                        Json.Decode.succeed GranularityWEEK

                    "MONTH" ->
                        Json.Decode.succeed GranularityMONTH

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


imageDetailsDecoder : Json.Decode.Decoder ImageDetails
imageDetailsDecoder =
    Json.Decode.succeed ImageDetails
        |> decode "width" Json.Decode.int 
        |> decodeNullable "height" Json.Decode.int 
        |> decode "url" Json.Decode.string 


itemAttributesDecoder : Json.Decode.Decoder ItemAttributes
itemAttributesDecoder =
    Json.Decode.succeed ItemAttributes
        |> maybeDecode "ad_link" Json.Decode.string Nothing
        |> maybeDecode "additional_image_link" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "adult" Json.Decode.bool Nothing
        |> maybeDecode "age_group" Json.Decode.string Nothing
        |> maybeDecode "availability" Json.Decode.string Nothing
        |> maybeDecode "average_review_rating" Json.Decode.float Nothing
        |> maybeDecode "brand" Json.Decode.string Nothing
        |> maybeDecode "color" Json.Decode.string Nothing
        |> maybeDecode "condition" Json.Decode.string Nothing
        |> maybeDecode "custom_label_0" Json.Decode.string Nothing
        |> maybeDecode "custom_label_1" Json.Decode.string Nothing
        |> maybeDecode "custom_label_2" Json.Decode.string Nothing
        |> maybeDecode "custom_label_3" Json.Decode.string Nothing
        |> maybeDecode "custom_label_4" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "free_shipping_label" Json.Decode.bool Nothing
        |> maybeDecode "free_shipping_limit" Json.Decode.string Nothing
        |> maybeDecode "gender" Json.Decode.string Nothing
        |> maybeDecode "google_product_category" Json.Decode.string Nothing
        |> maybeDecode "gtin" Json.Decode.int Nothing
        |> maybeDecode "id" Json.Decode.string Nothing
        |> maybeDecode "image_link" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "item_group_id" Json.Decode.string Nothing
        |> maybeDecode "last_updated_time" Json.Decode.int Nothing
        |> maybeDecode "link" Json.Decode.string Nothing
        |> maybeDecode "material" Json.Decode.string Nothing
        |> maybeDecode "min_ad_price" Json.Decode.string Nothing
        |> maybeDecode "mobile_link" Json.Decode.string Nothing
        |> maybeDecode "mpn" Json.Decode.string Nothing
        |> maybeDecode "number_of_ratings" Json.Decode.int Nothing
        |> maybeDecode "number_of_reviews" Json.Decode.int Nothing
        |> maybeDecode "pattern" Json.Decode.string Nothing
        |> maybeDecode "price" Json.Decode.string Nothing
        |> maybeDecode "product_type" Json.Decode.string Nothing
        |> maybeDecode "sale_price" Json.Decode.string Nothing
        |> maybeDecode "shipping" Json.Decode.string Nothing
        |> maybeDecode "shipping_height" Json.Decode.string Nothing
        |> maybeDecode "shipping_weight" Json.Decode.string Nothing
        |> maybeDecode "shipping_width" Json.Decode.string Nothing
        |> maybeDecode "size" Json.Decode.string Nothing
        |> maybeDecode "size_system" Json.Decode.string Nothing
        |> maybeDecode "size_type" Json.Decode.string Nothing
        |> maybeDecode "tax" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing


itemBatchRecordDecoder : Json.Decode.Decoder ItemBatchRecord
itemBatchRecordDecoder =
    Json.Decode.succeed ItemBatchRecord
        |> maybeDecode "item_id" Json.Decode.string Nothing
        |> maybeDecode "attributes" itemAttributesDecoder Nothing


itemGroupIdFilterDecoder : Json.Decode.Decoder ItemGroupIdFilter
itemGroupIdFilterDecoder =
    Json.Decode.succeed ItemGroupIdFilter
        |> decode "ITEM_GROUP_ID" catalogsProductGroupMultipleStringCriteriaDecoder 


itemIdFilterDecoder : Json.Decode.Decoder ItemIdFilter
itemIdFilterDecoder =
    Json.Decode.succeed ItemIdFilter
        |> decode "ITEM_ID" catalogsProductGroupCurrencyCriteriaDecoder 


itemProcessingRecordDecoder : Json.Decode.Decoder ItemProcessingRecord
itemProcessingRecordDecoder =
    Json.Decode.succeed ItemProcessingRecord
        |> maybeDecode "item_id" Json.Decode.string Nothing
        |> maybeDecode "errors" (Json.Decode.list itemValidationEventDecoder) Nothing
        |> maybeDecode "warnings" (Json.Decode.list itemValidationEventDecoder) Nothing
        |> maybeDecode "status" itemProcessingStatusDecoder Nothing


itemProcessingStatusDecoder : Json.Decode.Decoder ItemProcessingStatus
itemProcessingStatusDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "SUCCESS" ->
                        Json.Decode.succeed ItemProcessingStatusSUCCESS

                    "FAILURE" ->
                        Json.Decode.succeed ItemProcessingStatusFAILURE

                    "PROCESSING" ->
                        Json.Decode.succeed ItemProcessingStatusPROCESSING

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


itemValidationEventDecoder : Json.Decode.Decoder ItemValidationEvent
itemValidationEventDecoder =
    Json.Decode.succeed ItemValidationEvent
        |> maybeDecode "attribute" Json.Decode.string Nothing
        |> maybeDecode "code" Json.Decode.int Nothing
        |> maybeDecode "message" Json.Decode.string Nothing


languageDecoder : Json.Decode.Decoder Language
languageDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "AM" ->
                        Json.Decode.succeed LanguageAM

                    "AR" ->
                        Json.Decode.succeed LanguageAR

                    "AZ" ->
                        Json.Decode.succeed LanguageAZ

                    "BG" ->
                        Json.Decode.succeed LanguageBG

                    "BN" ->
                        Json.Decode.succeed LanguageBN

                    "BS" ->
                        Json.Decode.succeed LanguageBS

                    "CA" ->
                        Json.Decode.succeed LanguageCA

                    "CS" ->
                        Json.Decode.succeed LanguageCS

                    "DA" ->
                        Json.Decode.succeed LanguageDA

                    "DV" ->
                        Json.Decode.succeed LanguageDV

                    "DZ" ->
                        Json.Decode.succeed LanguageDZ

                    "DE" ->
                        Json.Decode.succeed LanguageDE

                    "EL" ->
                        Json.Decode.succeed LanguageEL

                    "EN" ->
                        Json.Decode.succeed LanguageEN

                    "ES" ->
                        Json.Decode.succeed LanguageES

                    "ET" ->
                        Json.Decode.succeed LanguageET

                    "FA" ->
                        Json.Decode.succeed LanguageFA

                    "FI" ->
                        Json.Decode.succeed LanguageFI

                    "FR" ->
                        Json.Decode.succeed LanguageFR

                    "HE" ->
                        Json.Decode.succeed LanguageHE

                    "HI" ->
                        Json.Decode.succeed LanguageHI

                    "HR" ->
                        Json.Decode.succeed LanguageHR

                    "HU" ->
                        Json.Decode.succeed LanguageHU

                    "HY" ->
                        Json.Decode.succeed LanguageHY

                    "ID" ->
                        Json.Decode.succeed LanguageID

                    "IN" ->
                        Json.Decode.succeed LanguageIN

                    "IS" ->
                        Json.Decode.succeed LanguageIS

                    "IT" ->
                        Json.Decode.succeed LanguageIT

                    "IW" ->
                        Json.Decode.succeed LanguageIW

                    "JA" ->
                        Json.Decode.succeed LanguageJA

                    "KA" ->
                        Json.Decode.succeed LanguageKA

                    "KM" ->
                        Json.Decode.succeed LanguageKM

                    "KO" ->
                        Json.Decode.succeed LanguageKO

                    "LO" ->
                        Json.Decode.succeed LanguageLO

                    "LT" ->
                        Json.Decode.succeed LanguageLT

                    "LV" ->
                        Json.Decode.succeed LanguageLV

                    "MK" ->
                        Json.Decode.succeed LanguageMK

                    "MN" ->
                        Json.Decode.succeed LanguageMN

                    "MS" ->
                        Json.Decode.succeed LanguageMS

                    "MY" ->
                        Json.Decode.succeed LanguageMY

                    "NB" ->
                        Json.Decode.succeed LanguageNB

                    "NE" ->
                        Json.Decode.succeed LanguageNE

                    "NL" ->
                        Json.Decode.succeed LanguageNL

                    "NO" ->
                        Json.Decode.succeed LanguageNO

                    "PL" ->
                        Json.Decode.succeed LanguagePL

                    "PT" ->
                        Json.Decode.succeed LanguagePT

                    "RO" ->
                        Json.Decode.succeed LanguageRO

                    "RU" ->
                        Json.Decode.succeed LanguageRU

                    "SK" ->
                        Json.Decode.succeed LanguageSK

                    "SL" ->
                        Json.Decode.succeed LanguageSL

                    "SQ" ->
                        Json.Decode.succeed LanguageSQ

                    "SR" ->
                        Json.Decode.succeed LanguageSR

                    "SV" ->
                        Json.Decode.succeed LanguageSV

                    "TL" ->
                        Json.Decode.succeed LanguageTL

                    "UK" ->
                        Json.Decode.succeed LanguageUK

                    "VI" ->
                        Json.Decode.succeed LanguageVI

                    "TE" ->
                        Json.Decode.succeed LanguageTE

                    "TH" ->
                        Json.Decode.succeed LanguageTH

                    "TR" ->
                        Json.Decode.succeed LanguageTR

                    "XX" ->
                        Json.Decode.succeed LanguageXX

                    "ZH" ->
                        Json.Decode.succeed LanguageZH

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


maxPriceFilterDecoder : Json.Decode.Decoder MaxPriceFilter
maxPriceFilterDecoder =
    Json.Decode.succeed MaxPriceFilter
        |> decode "MAX_PRICE" catalogsProductGroupPricingCriteriaDecoder 


mediaUploadDecoder : Json.Decode.Decoder MediaUpload
mediaUploadDecoder =
    Json.Decode.succeed MediaUpload
        |> maybeDecode "media_id" Json.Decode.string Nothing
        |> maybeDecode "media_type" Json.Decode.string Nothing
        |> maybeDecode "upload_url" Json.Decode.string Nothing
        |> maybeDecode "upload_parameters" mediaUploadAllOfUploadParametersDecoder Nothing


mediaUploadAllOfUploadParametersDecoder : Json.Decode.Decoder MediaUploadAllOfUploadParameters
mediaUploadAllOfUploadParametersDecoder =
    Json.Decode.succeed MediaUploadAllOfUploadParameters
        |> maybeDecode "x-amz-date" Json.Decode.string Nothing
        |> maybeDecode "x-amz-signature" Json.Decode.string Nothing
        |> maybeDecode "x-amz-security-token" Json.Decode.string Nothing
        |> maybeDecode "x-amz-algorithm" Json.Decode.string Nothing
        |> maybeDecode "key" Json.Decode.string Nothing
        |> maybeDecode "policy" Json.Decode.string Nothing
        |> maybeDecode "x-amz-credential" Json.Decode.string Nothing
        |> maybeDecode "Content-Type" Json.Decode.string Nothing


mediaUploadDetailsDecoder : Json.Decode.Decoder MediaUploadDetails
mediaUploadDetailsDecoder =
    Json.Decode.succeed MediaUploadDetails
        |> maybeDecode "media_id" Json.Decode.string Nothing
        |> maybeDecode "media_type" Json.Decode.string Nothing
        |> maybeDecode "status" Json.Decode.string Nothing


mediaUploadRequestDecoder : Json.Decode.Decoder MediaUploadRequest
mediaUploadRequestDecoder =
    Json.Decode.succeed MediaUploadRequest
        |> decode "media_type" Json.Decode.string 


mediaUploadStatusDecoder : Json.Decode.Decoder MediaUploadStatus
mediaUploadStatusDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "registered" ->
                        Json.Decode.succeed MediaUploadStatusRegistered

                    "processing" ->
                        Json.Decode.succeed MediaUploadStatusProcessing

                    "succeeded" ->
                        Json.Decode.succeed MediaUploadStatusSucceeded

                    "failed" ->
                        Json.Decode.succeed MediaUploadStatusFailed

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


mediaUploadTypeDecoder : Json.Decode.Decoder MediaUploadType
mediaUploadTypeDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "video" ->
                        Json.Decode.succeed MediaUploadTypeVideo

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


metricsReportingLevelDecoder : Json.Decode.Decoder MetricsReportingLevel
metricsReportingLevelDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "ADVERTISER" ->
                        Json.Decode.succeed MetricsReportingLevelADVERTISER

                    "ADVERTISER_TARGETING" ->
                        Json.Decode.succeed MetricsReportingLevelADVERTISERTARGETING

                    "CAMPAIGN" ->
                        Json.Decode.succeed MetricsReportingLevelCAMPAIGN

                    "CAMPAIGN_TARGETING" ->
                        Json.Decode.succeed MetricsReportingLevelCAMPAIGNTARGETING

                    "AD_GROUP" ->
                        Json.Decode.succeed MetricsReportingLevelADGROUP

                    "AD_GROUP_TARGETING" ->
                        Json.Decode.succeed MetricsReportingLevelADGROUPTARGETING

                    "PIN_PROMOTION" ->
                        Json.Decode.succeed MetricsReportingLevelPINPROMOTION

                    "PIN_PROMOTION_TARGETING" ->
                        Json.Decode.succeed MetricsReportingLevelPINPROMOTIONTARGETING

                    "KEYWORD" ->
                        Json.Decode.succeed MetricsReportingLevelKEYWORD

                    "PRODUCT_GROUP" ->
                        Json.Decode.succeed MetricsReportingLevelPRODUCTGROUP

                    "PRODUCT_GROUP_TARGETING" ->
                        Json.Decode.succeed MetricsReportingLevelPRODUCTGROUPTARGETING

                    "PRODUCT_ITEM" ->
                        Json.Decode.succeed MetricsReportingLevelPRODUCTITEM

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


minPriceFilterDecoder : Json.Decode.Decoder MinPriceFilter
minPriceFilterDecoder =
    Json.Decode.succeed MinPriceFilter
        |> decode "MIN_PRICE" catalogsProductGroupPricingCriteriaDecoder 


nonNullableCatalogsCurrencyDecoder : Json.Decode.Decoder NonNullableCatalogsCurrency
nonNullableCatalogsCurrencyDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "AED" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyAED

                    "AFN" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyAFN

                    "ALL" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyALL

                    "AMD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyAMD

                    "ANG" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyANG

                    "AOA" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyAOA

                    "ARS" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyARS

                    "AUD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyAUD

                    "AWG" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyAWG

                    "AZN" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyAZN

                    "BAM" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyBAM

                    "BBD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyBBD

                    "BDT" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyBDT

                    "BGN" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyBGN

                    "BHD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyBHD

                    "BIF" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyBIF

                    "BMD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyBMD

                    "BND" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyBND

                    "BOB" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyBOB

                    "BRL" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyBRL

                    "BSD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyBSD

                    "BTN" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyBTN

                    "BWP" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyBWP

                    "BYN" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyBYN

                    "BYR" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyBYR

                    "BZD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyBZD

                    "CAD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyCAD

                    "CDF" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyCDF

                    "CHF" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyCHF

                    "CLP" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyCLP

                    "CNY" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyCNY

                    "COP" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyCOP

                    "CRC" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyCRC

                    "CUC" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyCUC

                    "CUP" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyCUP

                    "CVE" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyCVE

                    "CZK" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyCZK

                    "DJF" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyDJF

                    "DKK" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyDKK

                    "DOP" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyDOP

                    "DZD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyDZD

                    "EGP" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyEGP

                    "ERN" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyERN

                    "ETB" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyETB

                    "EUR" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyEUR

                    "FJD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyFJD

                    "FKP" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyFKP

                    "GBP" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyGBP

                    "GEL" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyGEL

                    "GGP" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyGGP

                    "GHS" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyGHS

                    "GIP" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyGIP

                    "GMD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyGMD

                    "GNF" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyGNF

                    "GTQ" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyGTQ

                    "GYD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyGYD

                    "HKD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyHKD

                    "HNL" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyHNL

                    "HRK" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyHRK

                    "HTG" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyHTG

                    "HUF" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyHUF

                    "IDR" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyIDR

                    "ILS" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyILS

                    "IMP" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyIMP

                    "INR" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyINR

                    "IQD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyIQD

                    "IRR" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyIRR

                    "ISK" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyISK

                    "JEP" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyJEP

                    "JMD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyJMD

                    "JOD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyJOD

                    "JPY" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyJPY

                    "KES" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyKES

                    "KGS" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyKGS

                    "KHR" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyKHR

                    "KMF" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyKMF

                    "KPW" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyKPW

                    "KRW" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyKRW

                    "KWD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyKWD

                    "KYD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyKYD

                    "KZT" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyKZT

                    "LAK" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyLAK

                    "LBP" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyLBP

                    "LKR" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyLKR

                    "LRD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyLRD

                    "LSL" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyLSL

                    "LYD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyLYD

                    "MAD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyMAD

                    "MDL" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyMDL

                    "MGA" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyMGA

                    "MKD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyMKD

                    "MMK" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyMMK

                    "MNT" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyMNT

                    "MOP" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyMOP

                    "MRO" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyMRO

                    "MUR" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyMUR

                    "MVR" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyMVR

                    "MWK" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyMWK

                    "MXN" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyMXN

                    "MYR" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyMYR

                    "MZN" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyMZN

                    "NAD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyNAD

                    "NGN" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyNGN

                    "NIO" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyNIO

                    "NOK" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyNOK

                    "NPR" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyNPR

                    "NZD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyNZD

                    "OMR" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyOMR

                    "PAB" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyPAB

                    "PEN" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyPEN

                    "PGK" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyPGK

                    "PHP" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyPHP

                    "PKR" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyPKR

                    "PLN" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyPLN

                    "PYG" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyPYG

                    "QAR" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyQAR

                    "RON" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyRON

                    "RSD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyRSD

                    "RUB" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyRUB

                    "RWF" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyRWF

                    "SAR" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencySAR

                    "SBD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencySBD

                    "SCR" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencySCR

                    "SDG" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencySDG

                    "SEK" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencySEK

                    "SGD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencySGD

                    "SHP" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencySHP

                    "SLL" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencySLL

                    "SOS" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencySOS

                    "SPL" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencySPL

                    "SRD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencySRD

                    "STD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencySTD

                    "SVC" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencySVC

                    "SYP" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencySYP

                    "SZL" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencySZL

                    "THB" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyTHB

                    "TJS" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyTJS

                    "TMT" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyTMT

                    "TND" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyTND

                    "TOP" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyTOP

                    "TRY" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyTRY

                    "TTD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyTTD

                    "TVD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyTVD

                    "TWD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyTWD

                    "TZS" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyTZS

                    "UAH" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyUAH

                    "UGX" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyUGX

                    "USD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyUSD

                    "UYU" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyUYU

                    "UZS" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyUZS

                    "VEF" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyVEF

                    "VND" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyVND

                    "VUV" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyVUV

                    "WST" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyWST

                    "XAF" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyXAF

                    "XCD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyXCD

                    "XDR" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyXDR

                    "XOF" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyXOF

                    "XPF" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyXPF

                    "YER" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyYER

                    "ZAR" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyZAR

                    "ZMW" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyZMW

                    "ZWD" ->
                        Json.Decode.succeed NonNullableCatalogsCurrencyZWD

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


nullableCurrencyDecoder : Json.Decode.Decoder NullableCurrency
nullableCurrencyDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "AED" ->
                        Json.Decode.succeed NullableCurrencyAED

                    "AFN" ->
                        Json.Decode.succeed NullableCurrencyAFN

                    "ALL" ->
                        Json.Decode.succeed NullableCurrencyALL

                    "AMD" ->
                        Json.Decode.succeed NullableCurrencyAMD

                    "ANG" ->
                        Json.Decode.succeed NullableCurrencyANG

                    "AOA" ->
                        Json.Decode.succeed NullableCurrencyAOA

                    "ARS" ->
                        Json.Decode.succeed NullableCurrencyARS

                    "AUD" ->
                        Json.Decode.succeed NullableCurrencyAUD

                    "AWG" ->
                        Json.Decode.succeed NullableCurrencyAWG

                    "AZN" ->
                        Json.Decode.succeed NullableCurrencyAZN

                    "BAM" ->
                        Json.Decode.succeed NullableCurrencyBAM

                    "BBD" ->
                        Json.Decode.succeed NullableCurrencyBBD

                    "BDT" ->
                        Json.Decode.succeed NullableCurrencyBDT

                    "BGN" ->
                        Json.Decode.succeed NullableCurrencyBGN

                    "BHD" ->
                        Json.Decode.succeed NullableCurrencyBHD

                    "BIF" ->
                        Json.Decode.succeed NullableCurrencyBIF

                    "BMD" ->
                        Json.Decode.succeed NullableCurrencyBMD

                    "BND" ->
                        Json.Decode.succeed NullableCurrencyBND

                    "BOB" ->
                        Json.Decode.succeed NullableCurrencyBOB

                    "BRL" ->
                        Json.Decode.succeed NullableCurrencyBRL

                    "BSD" ->
                        Json.Decode.succeed NullableCurrencyBSD

                    "BTN" ->
                        Json.Decode.succeed NullableCurrencyBTN

                    "BWP" ->
                        Json.Decode.succeed NullableCurrencyBWP

                    "BYN" ->
                        Json.Decode.succeed NullableCurrencyBYN

                    "BYR" ->
                        Json.Decode.succeed NullableCurrencyBYR

                    "BZD" ->
                        Json.Decode.succeed NullableCurrencyBZD

                    "CAD" ->
                        Json.Decode.succeed NullableCurrencyCAD

                    "CDF" ->
                        Json.Decode.succeed NullableCurrencyCDF

                    "CHF" ->
                        Json.Decode.succeed NullableCurrencyCHF

                    "CLP" ->
                        Json.Decode.succeed NullableCurrencyCLP

                    "CNY" ->
                        Json.Decode.succeed NullableCurrencyCNY

                    "COP" ->
                        Json.Decode.succeed NullableCurrencyCOP

                    "CRC" ->
                        Json.Decode.succeed NullableCurrencyCRC

                    "CUC" ->
                        Json.Decode.succeed NullableCurrencyCUC

                    "CUP" ->
                        Json.Decode.succeed NullableCurrencyCUP

                    "CVE" ->
                        Json.Decode.succeed NullableCurrencyCVE

                    "CZK" ->
                        Json.Decode.succeed NullableCurrencyCZK

                    "DJF" ->
                        Json.Decode.succeed NullableCurrencyDJF

                    "DKK" ->
                        Json.Decode.succeed NullableCurrencyDKK

                    "DOP" ->
                        Json.Decode.succeed NullableCurrencyDOP

                    "DZD" ->
                        Json.Decode.succeed NullableCurrencyDZD

                    "EGP" ->
                        Json.Decode.succeed NullableCurrencyEGP

                    "ERN" ->
                        Json.Decode.succeed NullableCurrencyERN

                    "ETB" ->
                        Json.Decode.succeed NullableCurrencyETB

                    "EUR" ->
                        Json.Decode.succeed NullableCurrencyEUR

                    "FJD" ->
                        Json.Decode.succeed NullableCurrencyFJD

                    "FKP" ->
                        Json.Decode.succeed NullableCurrencyFKP

                    "GBP" ->
                        Json.Decode.succeed NullableCurrencyGBP

                    "GEL" ->
                        Json.Decode.succeed NullableCurrencyGEL

                    "GGP" ->
                        Json.Decode.succeed NullableCurrencyGGP

                    "GHS" ->
                        Json.Decode.succeed NullableCurrencyGHS

                    "GIP" ->
                        Json.Decode.succeed NullableCurrencyGIP

                    "GMD" ->
                        Json.Decode.succeed NullableCurrencyGMD

                    "GNF" ->
                        Json.Decode.succeed NullableCurrencyGNF

                    "GTQ" ->
                        Json.Decode.succeed NullableCurrencyGTQ

                    "GYD" ->
                        Json.Decode.succeed NullableCurrencyGYD

                    "HKD" ->
                        Json.Decode.succeed NullableCurrencyHKD

                    "HNL" ->
                        Json.Decode.succeed NullableCurrencyHNL

                    "HRK" ->
                        Json.Decode.succeed NullableCurrencyHRK

                    "HTG" ->
                        Json.Decode.succeed NullableCurrencyHTG

                    "HUF" ->
                        Json.Decode.succeed NullableCurrencyHUF

                    "IDR" ->
                        Json.Decode.succeed NullableCurrencyIDR

                    "ILS" ->
                        Json.Decode.succeed NullableCurrencyILS

                    "IMP" ->
                        Json.Decode.succeed NullableCurrencyIMP

                    "INR" ->
                        Json.Decode.succeed NullableCurrencyINR

                    "IQD" ->
                        Json.Decode.succeed NullableCurrencyIQD

                    "IRR" ->
                        Json.Decode.succeed NullableCurrencyIRR

                    "ISK" ->
                        Json.Decode.succeed NullableCurrencyISK

                    "JEP" ->
                        Json.Decode.succeed NullableCurrencyJEP

                    "JMD" ->
                        Json.Decode.succeed NullableCurrencyJMD

                    "JOD" ->
                        Json.Decode.succeed NullableCurrencyJOD

                    "JPY" ->
                        Json.Decode.succeed NullableCurrencyJPY

                    "KES" ->
                        Json.Decode.succeed NullableCurrencyKES

                    "KGS" ->
                        Json.Decode.succeed NullableCurrencyKGS

                    "KHR" ->
                        Json.Decode.succeed NullableCurrencyKHR

                    "KMF" ->
                        Json.Decode.succeed NullableCurrencyKMF

                    "KPW" ->
                        Json.Decode.succeed NullableCurrencyKPW

                    "KRW" ->
                        Json.Decode.succeed NullableCurrencyKRW

                    "KWD" ->
                        Json.Decode.succeed NullableCurrencyKWD

                    "KYD" ->
                        Json.Decode.succeed NullableCurrencyKYD

                    "KZT" ->
                        Json.Decode.succeed NullableCurrencyKZT

                    "LAK" ->
                        Json.Decode.succeed NullableCurrencyLAK

                    "LBP" ->
                        Json.Decode.succeed NullableCurrencyLBP

                    "LKR" ->
                        Json.Decode.succeed NullableCurrencyLKR

                    "LRD" ->
                        Json.Decode.succeed NullableCurrencyLRD

                    "LSL" ->
                        Json.Decode.succeed NullableCurrencyLSL

                    "LYD" ->
                        Json.Decode.succeed NullableCurrencyLYD

                    "MAD" ->
                        Json.Decode.succeed NullableCurrencyMAD

                    "MDL" ->
                        Json.Decode.succeed NullableCurrencyMDL

                    "MGA" ->
                        Json.Decode.succeed NullableCurrencyMGA

                    "MKD" ->
                        Json.Decode.succeed NullableCurrencyMKD

                    "MMK" ->
                        Json.Decode.succeed NullableCurrencyMMK

                    "MNT" ->
                        Json.Decode.succeed NullableCurrencyMNT

                    "MOP" ->
                        Json.Decode.succeed NullableCurrencyMOP

                    "MRO" ->
                        Json.Decode.succeed NullableCurrencyMRO

                    "MUR" ->
                        Json.Decode.succeed NullableCurrencyMUR

                    "MVR" ->
                        Json.Decode.succeed NullableCurrencyMVR

                    "MWK" ->
                        Json.Decode.succeed NullableCurrencyMWK

                    "MXN" ->
                        Json.Decode.succeed NullableCurrencyMXN

                    "MYR" ->
                        Json.Decode.succeed NullableCurrencyMYR

                    "MZN" ->
                        Json.Decode.succeed NullableCurrencyMZN

                    "NAD" ->
                        Json.Decode.succeed NullableCurrencyNAD

                    "NGN" ->
                        Json.Decode.succeed NullableCurrencyNGN

                    "NIO" ->
                        Json.Decode.succeed NullableCurrencyNIO

                    "NOK" ->
                        Json.Decode.succeed NullableCurrencyNOK

                    "NPR" ->
                        Json.Decode.succeed NullableCurrencyNPR

                    "NZD" ->
                        Json.Decode.succeed NullableCurrencyNZD

                    "OMR" ->
                        Json.Decode.succeed NullableCurrencyOMR

                    "PAB" ->
                        Json.Decode.succeed NullableCurrencyPAB

                    "PEN" ->
                        Json.Decode.succeed NullableCurrencyPEN

                    "PGK" ->
                        Json.Decode.succeed NullableCurrencyPGK

                    "PHP" ->
                        Json.Decode.succeed NullableCurrencyPHP

                    "PKR" ->
                        Json.Decode.succeed NullableCurrencyPKR

                    "PLN" ->
                        Json.Decode.succeed NullableCurrencyPLN

                    "PYG" ->
                        Json.Decode.succeed NullableCurrencyPYG

                    "QAR" ->
                        Json.Decode.succeed NullableCurrencyQAR

                    "RON" ->
                        Json.Decode.succeed NullableCurrencyRON

                    "RSD" ->
                        Json.Decode.succeed NullableCurrencyRSD

                    "RUB" ->
                        Json.Decode.succeed NullableCurrencyRUB

                    "RWF" ->
                        Json.Decode.succeed NullableCurrencyRWF

                    "SAR" ->
                        Json.Decode.succeed NullableCurrencySAR

                    "SBD" ->
                        Json.Decode.succeed NullableCurrencySBD

                    "SCR" ->
                        Json.Decode.succeed NullableCurrencySCR

                    "SDG" ->
                        Json.Decode.succeed NullableCurrencySDG

                    "SEK" ->
                        Json.Decode.succeed NullableCurrencySEK

                    "SGD" ->
                        Json.Decode.succeed NullableCurrencySGD

                    "SHP" ->
                        Json.Decode.succeed NullableCurrencySHP

                    "SLL" ->
                        Json.Decode.succeed NullableCurrencySLL

                    "SOS" ->
                        Json.Decode.succeed NullableCurrencySOS

                    "SPL" ->
                        Json.Decode.succeed NullableCurrencySPL

                    "SRD" ->
                        Json.Decode.succeed NullableCurrencySRD

                    "STD" ->
                        Json.Decode.succeed NullableCurrencySTD

                    "SVC" ->
                        Json.Decode.succeed NullableCurrencySVC

                    "SYP" ->
                        Json.Decode.succeed NullableCurrencySYP

                    "SZL" ->
                        Json.Decode.succeed NullableCurrencySZL

                    "THB" ->
                        Json.Decode.succeed NullableCurrencyTHB

                    "TJS" ->
                        Json.Decode.succeed NullableCurrencyTJS

                    "TMT" ->
                        Json.Decode.succeed NullableCurrencyTMT

                    "TND" ->
                        Json.Decode.succeed NullableCurrencyTND

                    "TOP" ->
                        Json.Decode.succeed NullableCurrencyTOP

                    "TRY" ->
                        Json.Decode.succeed NullableCurrencyTRY

                    "TTD" ->
                        Json.Decode.succeed NullableCurrencyTTD

                    "TVD" ->
                        Json.Decode.succeed NullableCurrencyTVD

                    "TWD" ->
                        Json.Decode.succeed NullableCurrencyTWD

                    "TZS" ->
                        Json.Decode.succeed NullableCurrencyTZS

                    "UAH" ->
                        Json.Decode.succeed NullableCurrencyUAH

                    "UGX" ->
                        Json.Decode.succeed NullableCurrencyUGX

                    "USD" ->
                        Json.Decode.succeed NullableCurrencyUSD

                    "UYU" ->
                        Json.Decode.succeed NullableCurrencyUYU

                    "UZS" ->
                        Json.Decode.succeed NullableCurrencyUZS

                    "VEF" ->
                        Json.Decode.succeed NullableCurrencyVEF

                    "VND" ->
                        Json.Decode.succeed NullableCurrencyVND

                    "VUV" ->
                        Json.Decode.succeed NullableCurrencyVUV

                    "WST" ->
                        Json.Decode.succeed NullableCurrencyWST

                    "XAF" ->
                        Json.Decode.succeed NullableCurrencyXAF

                    "XCD" ->
                        Json.Decode.succeed NullableCurrencyXCD

                    "XDR" ->
                        Json.Decode.succeed NullableCurrencyXDR

                    "XOF" ->
                        Json.Decode.succeed NullableCurrencyXOF

                    "XPF" ->
                        Json.Decode.succeed NullableCurrencyXPF

                    "YER" ->
                        Json.Decode.succeed NullableCurrencyYER

                    "ZAR" ->
                        Json.Decode.succeed NullableCurrencyZAR

                    "ZMW" ->
                        Json.Decode.succeed NullableCurrencyZMW

                    "ZWD" ->
                        Json.Decode.succeed NullableCurrencyZWD

                    "null" ->
                        Json.Decode.succeed NullableCurrencyNull

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


oauthAccessTokenRequestDecoder : Json.Decode.Decoder OauthAccessTokenRequest
oauthAccessTokenRequestDecoder =
    Json.Decode.field "grantType" Json.Decode.string
        |> Json.Decode.andThen oauthAccessTokenRequestTagDecoder


oauthAccessTokenRequestTagDecoder : String -> Json.Decode.Decoder OauthAccessTokenRequest
oauthAccessTokenRequestTagDecoder tag =
    case tag of
        "authorization_code" ->
            Json.Decode.map OauthAccessTokenRequestOauthAccessTokenRequestCode oauthAccessTokenRequestCodeDecoder

        "refresh_token" ->
            Json.Decode.map OauthAccessTokenRequestOauthAccessTokenRequestRefresh oauthAccessTokenRequestRefreshDecoder

        _ ->
            Json.Decode.map OauthAccessTokenRequest baseOauthAccessTokenRequestDecoder


baseOauthAccessTokenRequestDecoder : Json.Decode.Decoder BaseOauthAccessTokenRequest
baseOauthAccessTokenRequestDecoder =
    Json.Decode.succeed BaseOauthAccessTokenRequest
        |> decode "grant_type" oauthAccessTokenRequestGrantTypeDecoder 


oauthAccessTokenRequestGrantTypeDecoder : Json.Decode.Decoder OauthAccessTokenRequestGrantType
oauthAccessTokenRequestGrantTypeDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "authorization_code" ->
                        Json.Decode.succeed OauthAccessTokenRequestGrantTypeAuthorizationCode

                    "refresh_token" ->
                        Json.Decode.succeed OauthAccessTokenRequestGrantTypeRefreshToken

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )



oauthAccessTokenRequestCodeDecoder : Json.Decode.Decoder OauthAccessTokenRequestCode
oauthAccessTokenRequestCodeDecoder =
    Json.Decode.succeed OauthAccessTokenRequestCode
        |> decodeChain baseOauthAccessTokenRequestDecoder
        |> decode "code" Json.Decode.string 
        |> decode "redirect_uri" Json.Decode.string 


oauthAccessTokenRequestRefreshDecoder : Json.Decode.Decoder OauthAccessTokenRequestRefresh
oauthAccessTokenRequestRefreshDecoder =
    Json.Decode.succeed OauthAccessTokenRequestRefresh
        |> decodeChain baseOauthAccessTokenRequestDecoder
        |> decode "refresh_token" Json.Decode.string 
        |> maybeDecode "scope" Json.Decode.string Nothing


oauthAccessTokenResponseDecoder : Json.Decode.Decoder OauthAccessTokenResponse
oauthAccessTokenResponseDecoder =
    Json.Decode.field "responseType" Json.Decode.string
        |> Json.Decode.andThen oauthAccessTokenResponseTagDecoder


oauthAccessTokenResponseTagDecoder : String -> Json.Decode.Decoder OauthAccessTokenResponse
oauthAccessTokenResponseTagDecoder tag =
    case tag of
        "authorization_code" ->
            Json.Decode.map OauthAccessTokenResponseOauthAccessTokenResponseCode oauthAccessTokenResponseCodeDecoder

        "refresh_token" ->
            Json.Decode.map OauthAccessTokenResponseOauthAccessTokenResponseRefresh oauthAccessTokenResponseRefreshDecoder

        _ ->
            Json.Decode.map OauthAccessTokenResponse baseOauthAccessTokenResponseDecoder


baseOauthAccessTokenResponseDecoder : Json.Decode.Decoder BaseOauthAccessTokenResponse
baseOauthAccessTokenResponseDecoder =
    Json.Decode.succeed BaseOauthAccessTokenResponse
        |> maybeDecode "response_type" oauthAccessTokenResponseResponseTypeDecoder Nothing
        |> decode "access_token" Json.Decode.string 
        |> decode "token_type" Json.Decode.string 
        |> decode "expires_in" Json.Decode.int 
        |> decode "scope" Json.Decode.string 


oauthAccessTokenResponseResponseTypeDecoder : Json.Decode.Decoder OauthAccessTokenResponseResponseType
oauthAccessTokenResponseResponseTypeDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "authorization_code" ->
                        Json.Decode.succeed OauthAccessTokenResponseResponseTypeAuthorizationCode

                    "refresh_token" ->
                        Json.Decode.succeed OauthAccessTokenResponseResponseTypeRefreshToken

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )



oauthAccessTokenResponseCodeDecoder : Json.Decode.Decoder OauthAccessTokenResponseCode
oauthAccessTokenResponseCodeDecoder =
    Json.Decode.succeed OauthAccessTokenResponseCode
        |> decodeChain baseOauthAccessTokenResponseDecoder
        |> decode "refresh_token" Json.Decode.string 
        |> decode "refresh_token_expires_in" Json.Decode.int 


oauthAccessTokenResponseRefreshDecoder : Json.Decode.Decoder OauthAccessTokenResponseRefresh
oauthAccessTokenResponseRefreshDecoder =
    Json.Decode.succeed OauthAccessTokenResponseRefresh
        |> decodeChain baseOauthAccessTokenResponseDecoder


objectiveTypeDecoder : Json.Decode.Decoder ObjectiveType
objectiveTypeDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "AWARENESS" ->
                        Json.Decode.succeed ObjectiveTypeAWARENESS

                    "CONSIDERATION" ->
                        Json.Decode.succeed ObjectiveTypeCONSIDERATION

                    "VIDEO_VIEW" ->
                        Json.Decode.succeed ObjectiveTypeVIDEOVIEW

                    "WEB_CONVERSION" ->
                        Json.Decode.succeed ObjectiveTypeWEBCONVERSION

                    "CATALOG_SALES" ->
                        Json.Decode.succeed ObjectiveTypeCATALOGSALES

                    "WEB_SESSIONS" ->
                        Json.Decode.succeed ObjectiveTypeWEBSESSIONS

                    "AWARENESS_RESERVED" ->
                        Json.Decode.succeed ObjectiveTypeAWARENESSRESERVED

                    "ENGAGEMENT" ->
                        Json.Decode.succeed ObjectiveTypeENGAGEMENT

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


pacingDeliveryTypeDecoder : Json.Decode.Decoder PacingDeliveryType
pacingDeliveryTypeDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "STANDARD" ->
                        Json.Decode.succeed PacingDeliveryTypeSTANDARD

                    "ACCELERATED" ->
                        Json.Decode.succeed PacingDeliveryTypeACCELERATED

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


paginatedDecoder : Json.Decode.Decoder Paginated
paginatedDecoder =
    Json.Decode.succeed Paginated
        |> decode "items" (Json.Decode.list objectDecoder) 
        |> maybeDecodeNullable "bookmark" Json.Decode.string Nothing


pinDecoder : Json.Decode.Decoder Pin
pinDecoder =
    Json.Decode.succeed Pin
        |> maybeDecode "id" Json.Decode.string Nothing
        |> maybeDecode "created_at" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "link" Json.Decode.string Nothing
        |> maybeDecodeNullable "title" Json.Decode.string Nothing
        |> maybeDecodeNullable "description" Json.Decode.string Nothing
        |> maybeDecodeNullable "alt_text" Json.Decode.string Nothing
        |> maybeDecode "board_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "board_section_id" Json.Decode.string Nothing
        |> maybeDecode "board_owner" (Json.Decode.dict ) Nothing
        |> maybeDecode "media" (Json.Decode.dict ) Nothing
        |> maybeDecode "media_source" (Json.Decode.dict ) Nothing


pinMediaDecoder : Json.Decode.Decoder PinMedia
pinMediaDecoder =
    Json.Decode.field "mediaType" Json.Decode.string
        |> Json.Decode.andThen pinMediaTagDecoder


pinMediaTagDecoder : String -> Json.Decode.Decoder PinMedia
pinMediaTagDecoder tag =
    case tag of
        "image" ->
            Json.Decode.map PinMediaPinMediaWithImage pinMediaWithImageDecoder

        _ ->
            Json.Decode.map PinMedia basePinMediaDecoder


basePinMediaDecoder : Json.Decode.Decoder BasePinMedia
basePinMediaDecoder =
    Json.Decode.succeed BasePinMedia
        |> maybeDecode "media_type" Json.Decode.string Nothing


pinMediaSourceDecoder : Json.Decode.Decoder PinMediaSource
pinMediaSourceDecoder =
    Json.Decode.field "sourceType" Json.Decode.string
        |> Json.Decode.andThen pinMediaSourceTagDecoder


pinMediaSourceTagDecoder : String -> Json.Decode.Decoder PinMediaSource
pinMediaSourceTagDecoder tag =
    case tag of
        "image_base64" ->
            Json.Decode.map PinMediaSourcePinMediaSourceImageBase64 pinMediaSourceImageBase64Decoder

        "image_url" ->
            Json.Decode.map PinMediaSourcePinMediaSourceImageURL pinMediaSourceImageURLDecoder

        "video_id" ->
            Json.Decode.map PinMediaSourcePinMediaSourceVideoID pinMediaSourceVideoIDDecoder

        _ ->
            Json.Decode.fail <| "Trying to decode PinMediaSource, but sourceType '" ++ tag ++ "' is not supported."



pinMediaSourceImageBase64Decoder : Json.Decode.Decoder PinMediaSourceImageBase64
pinMediaSourceImageBase64Decoder =
    Json.Decode.succeed PinMediaSourceImageBase64
        |> decode "source_type" pinMediaSourceImageBase64SourceTypeDecoder 
        |> decode "content_type" pinMediaSourceImageBase64ContentTypeDecoder 
        |> decode "data" Json.Decode.string 


pinMediaSourceImageBase64SourceTypeDecoder : Json.Decode.Decoder PinMediaSourceImageBase64SourceType
pinMediaSourceImageBase64SourceTypeDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "image_base64" ->
                        Json.Decode.succeed PinMediaSourceImageBase64SourceTypeImageBase64

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )



pinMediaSourceImageBase64ContentTypeDecoder : Json.Decode.Decoder PinMediaSourceImageBase64ContentType
pinMediaSourceImageBase64ContentTypeDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "image/jpeg" ->
                        Json.Decode.succeed PinMediaSourceImageBase64ContentTypeJpeg

                    "image/png" ->
                        Json.Decode.succeed PinMediaSourceImageBase64ContentTypePng

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )



pinMediaSourceImageURLDecoder : Json.Decode.Decoder PinMediaSourceImageURL
pinMediaSourceImageURLDecoder =
    Json.Decode.succeed PinMediaSourceImageURL
        |> decode "source_type" pinMediaSourceImageURLSourceTypeDecoder 
        |> decode "url" Json.Decode.string 


pinMediaSourceImageURLSourceTypeDecoder : Json.Decode.Decoder PinMediaSourceImageURLSourceType
pinMediaSourceImageURLSourceTypeDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "image_url" ->
                        Json.Decode.succeed PinMediaSourceImageURLSourceTypeImageUrl

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )



pinMediaSourceVideoIDDecoder : Json.Decode.Decoder PinMediaSourceVideoID
pinMediaSourceVideoIDDecoder =
    Json.Decode.succeed PinMediaSourceVideoID
        |> decode "source_type" pinMediaSourceVideoIDSourceTypeDecoder 
        |> decode "cover_image_url" Json.Decode.string 
        |> decode "media_id" Json.Decode.string 


pinMediaSourceVideoIDSourceTypeDecoder : Json.Decode.Decoder PinMediaSourceVideoIDSourceType
pinMediaSourceVideoIDSourceTypeDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "video_id" ->
                        Json.Decode.succeed PinMediaSourceVideoIDSourceTypeVideoId

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )



pinMediaWithImageDecoder : Json.Decode.Decoder PinMediaWithImage
pinMediaWithImageDecoder =
    Json.Decode.succeed PinMediaWithImage
        |> decodeChain basePinMediaDecoder
        |> maybeDecode "images" (Json.Decode.dict imageDetailsDecoder) Nothing


pinPromotionSummaryStatusDecoder : Json.Decode.Decoder PinPromotionSummaryStatus
pinPromotionSummaryStatusDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "APPROVED" ->
                        Json.Decode.succeed PinPromotionSummaryStatusAPPROVED

                    "PAUSED" ->
                        Json.Decode.succeed PinPromotionSummaryStatusPAUSED

                    "PENDING" ->
                        Json.Decode.succeed PinPromotionSummaryStatusPENDING

                    "REJECTED" ->
                        Json.Decode.succeed PinPromotionSummaryStatusREJECTED

                    "ADVERTISER_DISABLED" ->
                        Json.Decode.succeed PinPromotionSummaryStatusADVERTISERDISABLED

                    "ARCHIVED" ->
                        Json.Decode.succeed PinPromotionSummaryStatusARCHIVED

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


placementGroupTypeDecoder : Json.Decode.Decoder PlacementGroupType
placementGroupTypeDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "ALL" ->
                        Json.Decode.succeed PlacementGroupTypeALL

                    "SEARCH" ->
                        Json.Decode.succeed PlacementGroupTypeSEARCH

                    "BROWSE" ->
                        Json.Decode.succeed PlacementGroupTypeBROWSE

                    "OTHER" ->
                        Json.Decode.succeed PlacementGroupTypeOTHER

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


productAvailabilityTypeDecoder : Json.Decode.Decoder ProductAvailabilityType
productAvailabilityTypeDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "IN_STOCK" ->
                        Json.Decode.succeed ProductAvailabilityTypeINSTOCK

                    "OUT_OF_STOCK" ->
                        Json.Decode.succeed ProductAvailabilityTypeOUTOFSTOCK

                    "PREORDER" ->
                        Json.Decode.succeed ProductAvailabilityTypePREORDER

                    "null" ->
                        Json.Decode.succeed ProductAvailabilityTypeNull

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


productGroupSummaryStatusDecoder : Json.Decode.Decoder ProductGroupSummaryStatus
productGroupSummaryStatusDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "RUNNING" ->
                        Json.Decode.succeed ProductGroupSummaryStatusRUNNING

                    "PAUSED" ->
                        Json.Decode.succeed ProductGroupSummaryStatusPAUSED

                    "EXCLUDED" ->
                        Json.Decode.succeed ProductGroupSummaryStatusEXCLUDED

                    "ARCHIVED" ->
                        Json.Decode.succeed ProductGroupSummaryStatusARCHIVED

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


productType0FilterDecoder : Json.Decode.Decoder ProductType0Filter
productType0FilterDecoder =
    Json.Decode.succeed ProductType0Filter
        |> decode "PRODUCT_TYPE_0" catalogsProductGroupMultipleStringListCriteriaDecoder 


productType1FilterDecoder : Json.Decode.Decoder ProductType1Filter
productType1FilterDecoder =
    Json.Decode.succeed ProductType1Filter
        |> decode "PRODUCT_TYPE_1" catalogsProductGroupMultipleStringListCriteriaDecoder 


productType2FilterDecoder : Json.Decode.Decoder ProductType2Filter
productType2FilterDecoder =
    Json.Decode.succeed ProductType2Filter
        |> decode "PRODUCT_TYPE_2" catalogsProductGroupMultipleStringListCriteriaDecoder 


productType3FilterDecoder : Json.Decode.Decoder ProductType3Filter
productType3FilterDecoder =
    Json.Decode.succeed ProductType3Filter
        |> decode "PRODUCT_TYPE_3" catalogsProductGroupMultipleStringListCriteriaDecoder 


productType4FilterDecoder : Json.Decode.Decoder ProductType4Filter
productType4FilterDecoder =
    Json.Decode.succeed ProductType4Filter
        |> decode "PRODUCT_TYPE_4" catalogsProductGroupMultipleStringListCriteriaDecoder 


reportingColumnAsyncDecoder : Json.Decode.Decoder ReportingColumnAsync
reportingColumnAsyncDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "SPEND_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncSPENDINMICRODOLLAR

                    "PAID_IMPRESSION" ->
                        Json.Decode.succeed ReportingColumnAsyncPAIDIMPRESSION

                    "CPC_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncCPCINMICRODOLLAR

                    "ECPC_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncECPCINMICRODOLLAR

                    "CTR" ->
                        Json.Decode.succeed ReportingColumnAsyncCTR

                    "ECTR" ->
                        Json.Decode.succeed ReportingColumnAsyncECTR

                    "CAMPAIGN_NAME" ->
                        Json.Decode.succeed ReportingColumnAsyncCAMPAIGNNAME

                    "CAMPAIGN_STATUS" ->
                        Json.Decode.succeed ReportingColumnAsyncCAMPAIGNSTATUS

                    "AD_STATUS" ->
                        Json.Decode.succeed ReportingColumnAsyncADSTATUS

                    "PIN_PROMOTION_STATUS" ->
                        Json.Decode.succeed ReportingColumnAsyncPINPROMOTIONSTATUS

                    "PIN_ID" ->
                        Json.Decode.succeed ReportingColumnAsyncPINID

                    "TOTAL_ENGAGEMENT" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALENGAGEMENT

                    "ENGAGEMENT_1" ->
                        Json.Decode.succeed ReportingColumnAsyncENGAGEMENT1

                    "ENGAGEMENT_2" ->
                        Json.Decode.succeed ReportingColumnAsyncENGAGEMENT2

                    "ECPM_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncECPMINMICRODOLLAR

                    "CTR_2" ->
                        Json.Decode.succeed ReportingColumnAsyncCTR2

                    "CAMPAIGN_ID" ->
                        Json.Decode.succeed ReportingColumnAsyncCAMPAIGNID

                    "ADVERTISER_ID" ->
                        Json.Decode.succeed ReportingColumnAsyncADVERTISERID

                    "AD_ACCOUNT_ID" ->
                        Json.Decode.succeed ReportingColumnAsyncADACCOUNTID

                    "PIN_PROMOTION_ID" ->
                        Json.Decode.succeed ReportingColumnAsyncPINPROMOTIONID

                    "AD_ID" ->
                        Json.Decode.succeed ReportingColumnAsyncADID

                    "AD_GROUP_ID" ->
                        Json.Decode.succeed ReportingColumnAsyncADGROUPID

                    "CAMPAIGN_MANAGED_STATUS" ->
                        Json.Decode.succeed ReportingColumnAsyncCAMPAIGNMANAGEDSTATUS

                    "CPM_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncCPMINMICRODOLLAR

                    "AD_GROUP_NAME" ->
                        Json.Decode.succeed ReportingColumnAsyncADGROUPNAME

                    "AD_GROUP_STATUS" ->
                        Json.Decode.succeed ReportingColumnAsyncADGROUPSTATUS

                    "PRODUCT_GROUP_ID" ->
                        Json.Decode.succeed ReportingColumnAsyncPRODUCTGROUPID

                    "CLICKTHROUGH_1" ->
                        Json.Decode.succeed ReportingColumnAsyncCLICKTHROUGH1

                    "REPIN_1" ->
                        Json.Decode.succeed ReportingColumnAsyncREPIN1

                    "IMPRESSION_1" ->
                        Json.Decode.succeed ReportingColumnAsyncIMPRESSION1

                    "IMPRESSION_1_GROSS" ->
                        Json.Decode.succeed ReportingColumnAsyncIMPRESSION1GROSS

                    "CLICKTHROUGH_1_GROSS" ->
                        Json.Decode.succeed ReportingColumnAsyncCLICKTHROUGH1GROSS

                    "OUTBOUND_CLICK_1" ->
                        Json.Decode.succeed ReportingColumnAsyncOUTBOUNDCLICK1

                    "CLICKTHROUGH_2" ->
                        Json.Decode.succeed ReportingColumnAsyncCLICKTHROUGH2

                    "REPIN_2" ->
                        Json.Decode.succeed ReportingColumnAsyncREPIN2

                    "IMPRESSION_2" ->
                        Json.Decode.succeed ReportingColumnAsyncIMPRESSION2

                    "OUTBOUND_CLICK_2" ->
                        Json.Decode.succeed ReportingColumnAsyncOUTBOUNDCLICK2

                    "TOTAL_IMPRESSION_USER" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALIMPRESSIONUSER

                    "TOTAL_IMPRESSION_FREQUENCY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALIMPRESSIONFREQUENCY

                    "TOTAL_ENGAGEMENT_PAGE_VISIT" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALENGAGEMENTPAGEVISIT

                    "TOTAL_ENGAGEMENT_SIGNUP" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALENGAGEMENTSIGNUP

                    "TOTAL_ENGAGEMENT_CHECKOUT" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALENGAGEMENTCHECKOUT

                    "TOTAL_ENGAGEMENT_CUSTOM" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALENGAGEMENTCUSTOM

                    "TOTAL_ENGAGEMENT_ADD_TO_CART" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALENGAGEMENTADDTOCART

                    "TOTAL_ENGAGEMENT_LEAD" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALENGAGEMENTLEAD

                    "TOTAL_ENGAGEMENT_SEARCH" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALENGAGEMENTSEARCH

                    "TOTAL_ENGAGEMENT_WATCH_VIDEO" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALENGAGEMENTWATCHVIDEO

                    "TOTAL_ENGAGEMENT_VIEW_CATEGORY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALENGAGEMENTVIEWCATEGORY

                    "TOTAL_ENGAGEMENT_APP_INSTALL" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALENGAGEMENTAPPINSTALL

                    "TOTAL_ENGAGEMENT_UNKNOWN" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALENGAGEMENTUNKNOWN

                    "TOTAL_CLICK_PAGE_VISIT" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCLICKPAGEVISIT

                    "TOTAL_CLICK_SIGNUP" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCLICKSIGNUP

                    "TOTAL_CLICK_CHECKOUT" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCLICKCHECKOUT

                    "TOTAL_CLICK_CUSTOM" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCLICKCUSTOM

                    "TOTAL_CLICK_ADD_TO_CART" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCLICKADDTOCART

                    "TOTAL_CLICK_LEAD" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCLICKLEAD

                    "TOTAL_CLICK_SEARCH" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCLICKSEARCH

                    "TOTAL_CLICK_WATCH_VIDEO" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCLICKWATCHVIDEO

                    "TOTAL_CLICK_VIEW_CATEGORY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCLICKVIEWCATEGORY

                    "TOTAL_CLICK_APP_INSTALL" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCLICKAPPINSTALL

                    "TOTAL_CLICK_UNKNOWN" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCLICKUNKNOWN

                    "TOTAL_VIEW_PAGE_VISIT" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWPAGEVISIT

                    "TOTAL_VIEW_SIGNUP" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWSIGNUP

                    "TOTAL_VIEW_CHECKOUT" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWCHECKOUT

                    "TOTAL_VIEW_CUSTOM" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWCUSTOM

                    "TOTAL_VIEW_ADD_TO_CART" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWADDTOCART

                    "TOTAL_VIEW_LEAD" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWLEAD

                    "TOTAL_VIEW_SEARCH" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWSEARCH

                    "TOTAL_VIEW_WATCH_VIDEO" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWWATCHVIDEO

                    "TOTAL_VIEW_VIEW_CATEGORY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWVIEWCATEGORY

                    "TOTAL_VIEW_APP_INSTALL" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWAPPINSTALL

                    "TOTAL_VIEW_UNKNOWN" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWUNKNOWN

                    "TOTAL_CONVERSIONS" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCONVERSIONS

                    "TOTAL_ENGAGEMENT_PAGE_VISIT_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALENGAGEMENTPAGEVISITVALUEINMICRODOLLAR

                    "TOTAL_ENGAGEMENT_SIGNUP_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALENGAGEMENTSIGNUPVALUEINMICRODOLLAR

                    "TOTAL_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALENGAGEMENTCHECKOUTVALUEINMICRODOLLAR

                    "TOTAL_ENGAGEMENT_CUSTOM_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALENGAGEMENTCUSTOMVALUEINMICRODOLLAR

                    "TOTAL_ENGAGEMENT_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALENGAGEMENTADDTOCARTVALUEINMICRODOLLAR

                    "TOTAL_ENGAGEMENT_LEAD_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALENGAGEMENTLEADVALUEINMICRODOLLAR

                    "TOTAL_ENGAGEMENT_SEARCH_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALENGAGEMENTSEARCHVALUEINMICRODOLLAR

                    "TOTAL_ENGAGEMENT_WATCH_VIDEO_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALENGAGEMENTWATCHVIDEOVALUEINMICRODOLLAR

                    "TOTAL_ENGAGEMENT_VIEW_CATEGORY_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALENGAGEMENTVIEWCATEGORYVALUEINMICRODOLLAR

                    "TOTAL_ENGAGEMENT_APP_INSTALL_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALENGAGEMENTAPPINSTALLVALUEINMICRODOLLAR

                    "TOTAL_ENGAGEMENT_UNKNOWN_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALENGAGEMENTUNKNOWNVALUEINMICRODOLLAR

                    "TOTAL_CLICK_PAGE_VISIT_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCLICKPAGEVISITVALUEINMICRODOLLAR

                    "TOTAL_CLICK_SIGNUP_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCLICKSIGNUPVALUEINMICRODOLLAR

                    "TOTAL_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCLICKCHECKOUTVALUEINMICRODOLLAR

                    "TOTAL_CLICK_CUSTOM_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCLICKCUSTOMVALUEINMICRODOLLAR

                    "TOTAL_CLICK_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCLICKADDTOCARTVALUEINMICRODOLLAR

                    "TOTAL_CLICK_LEAD_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCLICKLEADVALUEINMICRODOLLAR

                    "TOTAL_CLICK_SEARCH_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCLICKSEARCHVALUEINMICRODOLLAR

                    "TOTAL_CLICK_WATCH_VIDEO_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCLICKWATCHVIDEOVALUEINMICRODOLLAR

                    "TOTAL_CLICK_VIEW_CATEGORY_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCLICKVIEWCATEGORYVALUEINMICRODOLLAR

                    "TOTAL_CLICK_APP_INSTALL_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCLICKAPPINSTALLVALUEINMICRODOLLAR

                    "TOTAL_CLICK_UNKNOWN_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCLICKUNKNOWNVALUEINMICRODOLLAR

                    "TOTAL_VIEW_PAGE_VISIT_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWPAGEVISITVALUEINMICRODOLLAR

                    "TOTAL_VIEW_SIGNUP_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWSIGNUPVALUEINMICRODOLLAR

                    "TOTAL_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWCHECKOUTVALUEINMICRODOLLAR

                    "TOTAL_VIEW_CUSTOM_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWCUSTOMVALUEINMICRODOLLAR

                    "TOTAL_VIEW_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWADDTOCARTVALUEINMICRODOLLAR

                    "TOTAL_VIEW_LEAD_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWLEADVALUEINMICRODOLLAR

                    "TOTAL_VIEW_SEARCH_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWSEARCHVALUEINMICRODOLLAR

                    "TOTAL_VIEW_WATCH_VIDEO_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWWATCHVIDEOVALUEINMICRODOLLAR

                    "TOTAL_VIEW_VIEW_CATEGORY_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWVIEWCATEGORYVALUEINMICRODOLLAR

                    "TOTAL_VIEW_APP_INSTALL_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWAPPINSTALLVALUEINMICRODOLLAR

                    "TOTAL_VIEW_UNKNOWN_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWUNKNOWNVALUEINMICRODOLLAR

                    "TOTAL_CONVERSIONS_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCONVERSIONSVALUEINMICRODOLLAR

                    "TOTAL_ENGAGEMENT_PAGE_VISIT_QUANTITY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALENGAGEMENTPAGEVISITQUANTITY

                    "TOTAL_ENGAGEMENT_SIGNUP_QUANTITY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALENGAGEMENTSIGNUPQUANTITY

                    "TOTAL_ENGAGEMENT_CHECKOUT_QUANTITY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALENGAGEMENTCHECKOUTQUANTITY

                    "TOTAL_ENGAGEMENT_CUSTOM_QUANTITY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALENGAGEMENTCUSTOMQUANTITY

                    "TOTAL_ENGAGEMENT_ADD_TO_CART_QUANTITY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALENGAGEMENTADDTOCARTQUANTITY

                    "TOTAL_ENGAGEMENT_LEAD_QUANTITY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALENGAGEMENTLEADQUANTITY

                    "TOTAL_ENGAGEMENT_SEARCH_QUANTITY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALENGAGEMENTSEARCHQUANTITY

                    "TOTAL_ENGAGEMENT_WATCH_VIDEO_QUANTITY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALENGAGEMENTWATCHVIDEOQUANTITY

                    "TOTAL_ENGAGEMENT_VIEW_CATEGORY_QUANTITY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALENGAGEMENTVIEWCATEGORYQUANTITY

                    "TOTAL_ENGAGEMENT_UNKNOWN_QUANTITY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALENGAGEMENTUNKNOWNQUANTITY

                    "TOTAL_CLICK_PAGE_VISIT_QUANTITY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCLICKPAGEVISITQUANTITY

                    "TOTAL_CLICK_SIGNUP_QUANTITY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCLICKSIGNUPQUANTITY

                    "TOTAL_CLICK_CHECKOUT_QUANTITY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCLICKCHECKOUTQUANTITY

                    "TOTAL_CLICK_CUSTOM_QUANTITY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCLICKCUSTOMQUANTITY

                    "TOTAL_CLICK_ADD_TO_CART_QUANTITY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCLICKADDTOCARTQUANTITY

                    "TOTAL_CLICK_LEAD_QUANTITY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCLICKLEADQUANTITY

                    "TOTAL_CLICK_SEARCH_QUANTITY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCLICKSEARCHQUANTITY

                    "TOTAL_CLICK_WATCH_VIDEO_QUANTITY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCLICKWATCHVIDEOQUANTITY

                    "TOTAL_CLICK_VIEW_CATEGORY_QUANTITY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCLICKVIEWCATEGORYQUANTITY

                    "TOTAL_CLICK_UNKNOWN_QUANTITY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCLICKUNKNOWNQUANTITY

                    "TOTAL_VIEW_PAGE_VISIT_QUANTITY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWPAGEVISITQUANTITY

                    "TOTAL_VIEW_SIGNUP_QUANTITY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWSIGNUPQUANTITY

                    "TOTAL_VIEW_CHECKOUT_QUANTITY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWCHECKOUTQUANTITY

                    "TOTAL_VIEW_CUSTOM_QUANTITY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWCUSTOMQUANTITY

                    "TOTAL_VIEW_ADD_TO_CART_QUANTITY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWADDTOCARTQUANTITY

                    "TOTAL_VIEW_LEAD_QUANTITY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWLEADQUANTITY

                    "TOTAL_VIEW_SEARCH_QUANTITY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWSEARCHQUANTITY

                    "TOTAL_VIEW_WATCH_VIDEO_QUANTITY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWWATCHVIDEOQUANTITY

                    "TOTAL_VIEW_VIEW_CATEGORY_QUANTITY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWVIEWCATEGORYQUANTITY

                    "TOTAL_VIEW_UNKNOWN_QUANTITY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWUNKNOWNQUANTITY

                    "TOTAL_CONVERSIONS_QUANTITY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCONVERSIONSQUANTITY

                    "ONSITE_CHECKOUTS_1" ->
                        Json.Decode.succeed ReportingColumnAsyncONSITECHECKOUTS1

                    "PIN_PROMOTION_NAME" ->
                        Json.Decode.succeed ReportingColumnAsyncPINPROMOTIONNAME

                    "AD_NAME" ->
                        Json.Decode.succeed ReportingColumnAsyncADNAME

                    "CAMPAIGN_LIFETIME_SPEND_CAP" ->
                        Json.Decode.succeed ReportingColumnAsyncCAMPAIGNLIFETIMESPENDCAP

                    "CAMPAIGN_DAILY_SPEND_CAP" ->
                        Json.Decode.succeed ReportingColumnAsyncCAMPAIGNDAILYSPENDCAP

                    "TOTAL_PAGE_VISIT_DESKTOP_ACTION_TO_DESKTOP_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALPAGEVISITDESKTOPACTIONTODESKTOPCONVERSION

                    "TOTAL_PAGE_VISIT_DESKTOP_ACTION_TO_MOBILE_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALPAGEVISITDESKTOPACTIONTOMOBILECONVERSION

                    "TOTAL_PAGE_VISIT_DESKTOP_ACTION_TO_TABLET_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALPAGEVISITDESKTOPACTIONTOTABLETCONVERSION

                    "TOTAL_PAGE_VISIT_MOBILE_ACTION_TO_DESKTOP_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALPAGEVISITMOBILEACTIONTODESKTOPCONVERSION

                    "TOTAL_PAGE_VISIT_MOBILE_ACTION_TO_MOBILE_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALPAGEVISITMOBILEACTIONTOMOBILECONVERSION

                    "TOTAL_PAGE_VISIT_MOBILE_ACTION_TO_TABLET_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALPAGEVISITMOBILEACTIONTOTABLETCONVERSION

                    "TOTAL_PAGE_VISIT_TABLET_ACTION_TO_DESKTOP_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALPAGEVISITTABLETACTIONTODESKTOPCONVERSION

                    "TOTAL_PAGE_VISIT_TABLET_ACTION_TO_MOBILE_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALPAGEVISITTABLETACTIONTOMOBILECONVERSION

                    "TOTAL_PAGE_VISIT_TABLET_ACTION_TO_TABLET_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALPAGEVISITTABLETACTIONTOTABLETCONVERSION

                    "TOTAL_SIGNUP_DESKTOP_ACTION_TO_DESKTOP_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALSIGNUPDESKTOPACTIONTODESKTOPCONVERSION

                    "TOTAL_SIGNUP_DESKTOP_ACTION_TO_MOBILE_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALSIGNUPDESKTOPACTIONTOMOBILECONVERSION

                    "TOTAL_SIGNUP_DESKTOP_ACTION_TO_TABLET_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALSIGNUPDESKTOPACTIONTOTABLETCONVERSION

                    "TOTAL_SIGNUP_MOBILE_ACTION_TO_DESKTOP_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALSIGNUPMOBILEACTIONTODESKTOPCONVERSION

                    "TOTAL_SIGNUP_MOBILE_ACTION_TO_MOBILE_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALSIGNUPMOBILEACTIONTOMOBILECONVERSION

                    "TOTAL_SIGNUP_MOBILE_ACTION_TO_TABLET_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALSIGNUPMOBILEACTIONTOTABLETCONVERSION

                    "TOTAL_SIGNUP_TABLET_ACTION_TO_DESKTOP_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALSIGNUPTABLETACTIONTODESKTOPCONVERSION

                    "TOTAL_SIGNUP_TABLET_ACTION_TO_MOBILE_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALSIGNUPTABLETACTIONTOMOBILECONVERSION

                    "TOTAL_SIGNUP_TABLET_ACTION_TO_TABLET_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALSIGNUPTABLETACTIONTOTABLETCONVERSION

                    "TOTAL_CHECKOUT_DESKTOP_ACTION_TO_DESKTOP_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCHECKOUTDESKTOPACTIONTODESKTOPCONVERSION

                    "TOTAL_CHECKOUT_DESKTOP_ACTION_TO_MOBILE_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCHECKOUTDESKTOPACTIONTOMOBILECONVERSION

                    "TOTAL_CHECKOUT_DESKTOP_ACTION_TO_TABLET_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCHECKOUTDESKTOPACTIONTOTABLETCONVERSION

                    "TOTAL_CHECKOUT_MOBILE_ACTION_TO_DESKTOP_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCHECKOUTMOBILEACTIONTODESKTOPCONVERSION

                    "TOTAL_CHECKOUT_MOBILE_ACTION_TO_MOBILE_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCHECKOUTMOBILEACTIONTOMOBILECONVERSION

                    "TOTAL_CHECKOUT_MOBILE_ACTION_TO_TABLET_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCHECKOUTMOBILEACTIONTOTABLETCONVERSION

                    "TOTAL_CHECKOUT_TABLET_ACTION_TO_DESKTOP_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCHECKOUTTABLETACTIONTODESKTOPCONVERSION

                    "TOTAL_CHECKOUT_TABLET_ACTION_TO_MOBILE_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCHECKOUTTABLETACTIONTOMOBILECONVERSION

                    "TOTAL_CHECKOUT_TABLET_ACTION_TO_TABLET_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCHECKOUTTABLETACTIONTOTABLETCONVERSION

                    "TOTAL_CUSTOM_DESKTOP_ACTION_TO_DESKTOP_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCUSTOMDESKTOPACTIONTODESKTOPCONVERSION

                    "TOTAL_CUSTOM_DESKTOP_ACTION_TO_MOBILE_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCUSTOMDESKTOPACTIONTOMOBILECONVERSION

                    "TOTAL_CUSTOM_DESKTOP_ACTION_TO_TABLET_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCUSTOMDESKTOPACTIONTOTABLETCONVERSION

                    "TOTAL_CUSTOM_MOBILE_ACTION_TO_DESKTOP_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCUSTOMMOBILEACTIONTODESKTOPCONVERSION

                    "TOTAL_CUSTOM_MOBILE_ACTION_TO_MOBILE_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCUSTOMMOBILEACTIONTOMOBILECONVERSION

                    "TOTAL_CUSTOM_MOBILE_ACTION_TO_TABLET_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCUSTOMMOBILEACTIONTOTABLETCONVERSION

                    "TOTAL_CUSTOM_TABLET_ACTION_TO_DESKTOP_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCUSTOMTABLETACTIONTODESKTOPCONVERSION

                    "TOTAL_CUSTOM_TABLET_ACTION_TO_MOBILE_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCUSTOMTABLETACTIONTOMOBILECONVERSION

                    "TOTAL_CUSTOM_TABLET_ACTION_TO_TABLET_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCUSTOMTABLETACTIONTOTABLETCONVERSION

                    "TOTAL_ADD_TO_CART_DESKTOP_ACTION_TO_DESKTOP_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALADDTOCARTDESKTOPACTIONTODESKTOPCONVERSION

                    "TOTAL_ADD_TO_CART_DESKTOP_ACTION_TO_MOBILE_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALADDTOCARTDESKTOPACTIONTOMOBILECONVERSION

                    "TOTAL_ADD_TO_CART_DESKTOP_ACTION_TO_TABLET_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALADDTOCARTDESKTOPACTIONTOTABLETCONVERSION

                    "TOTAL_ADD_TO_CART_MOBILE_ACTION_TO_DESKTOP_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALADDTOCARTMOBILEACTIONTODESKTOPCONVERSION

                    "TOTAL_ADD_TO_CART_MOBILE_ACTION_TO_MOBILE_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALADDTOCARTMOBILEACTIONTOMOBILECONVERSION

                    "TOTAL_ADD_TO_CART_MOBILE_ACTION_TO_TABLET_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALADDTOCARTMOBILEACTIONTOTABLETCONVERSION

                    "TOTAL_ADD_TO_CART_TABLET_ACTION_TO_DESKTOP_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALADDTOCARTTABLETACTIONTODESKTOPCONVERSION

                    "TOTAL_ADD_TO_CART_TABLET_ACTION_TO_MOBILE_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALADDTOCARTTABLETACTIONTOMOBILECONVERSION

                    "TOTAL_ADD_TO_CART_TABLET_ACTION_TO_TABLET_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALADDTOCARTTABLETACTIONTOTABLETCONVERSION

                    "TOTAL_LEAD_DESKTOP_ACTION_TO_DESKTOP_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALLEADDESKTOPACTIONTODESKTOPCONVERSION

                    "TOTAL_LEAD_DESKTOP_ACTION_TO_MOBILE_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALLEADDESKTOPACTIONTOMOBILECONVERSION

                    "TOTAL_LEAD_DESKTOP_ACTION_TO_TABLET_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALLEADDESKTOPACTIONTOTABLETCONVERSION

                    "TOTAL_LEAD_MOBILE_ACTION_TO_DESKTOP_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALLEADMOBILEACTIONTODESKTOPCONVERSION

                    "TOTAL_LEAD_MOBILE_ACTION_TO_MOBILE_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALLEADMOBILEACTIONTOMOBILECONVERSION

                    "TOTAL_LEAD_MOBILE_ACTION_TO_TABLET_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALLEADMOBILEACTIONTOTABLETCONVERSION

                    "TOTAL_LEAD_TABLET_ACTION_TO_DESKTOP_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALLEADTABLETACTIONTODESKTOPCONVERSION

                    "TOTAL_LEAD_TABLET_ACTION_TO_MOBILE_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALLEADTABLETACTIONTOMOBILECONVERSION

                    "TOTAL_LEAD_TABLET_ACTION_TO_TABLET_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALLEADTABLETACTIONTOTABLETCONVERSION

                    "TOTAL_SEARCH_DESKTOP_ACTION_TO_DESKTOP_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALSEARCHDESKTOPACTIONTODESKTOPCONVERSION

                    "TOTAL_SEARCH_DESKTOP_ACTION_TO_MOBILE_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALSEARCHDESKTOPACTIONTOMOBILECONVERSION

                    "TOTAL_SEARCH_DESKTOP_ACTION_TO_TABLET_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALSEARCHDESKTOPACTIONTOTABLETCONVERSION

                    "TOTAL_SEARCH_MOBILE_ACTION_TO_DESKTOP_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALSEARCHMOBILEACTIONTODESKTOPCONVERSION

                    "TOTAL_SEARCH_MOBILE_ACTION_TO_MOBILE_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALSEARCHMOBILEACTIONTOMOBILECONVERSION

                    "TOTAL_SEARCH_MOBILE_ACTION_TO_TABLET_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALSEARCHMOBILEACTIONTOTABLETCONVERSION

                    "TOTAL_SEARCH_TABLET_ACTION_TO_DESKTOP_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALSEARCHTABLETACTIONTODESKTOPCONVERSION

                    "TOTAL_SEARCH_TABLET_ACTION_TO_MOBILE_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALSEARCHTABLETACTIONTOMOBILECONVERSION

                    "TOTAL_SEARCH_TABLET_ACTION_TO_TABLET_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALSEARCHTABLETACTIONTOTABLETCONVERSION

                    "TOTAL_WATCH_VIDEO_DESKTOP_ACTION_TO_DESKTOP_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWATCHVIDEODESKTOPACTIONTODESKTOPCONVERSION

                    "TOTAL_WATCH_VIDEO_DESKTOP_ACTION_TO_MOBILE_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWATCHVIDEODESKTOPACTIONTOMOBILECONVERSION

                    "TOTAL_WATCH_VIDEO_DESKTOP_ACTION_TO_TABLET_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWATCHVIDEODESKTOPACTIONTOTABLETCONVERSION

                    "TOTAL_WATCH_VIDEO_MOBILE_ACTION_TO_DESKTOP_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWATCHVIDEOMOBILEACTIONTODESKTOPCONVERSION

                    "TOTAL_WATCH_VIDEO_MOBILE_ACTION_TO_MOBILE_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWATCHVIDEOMOBILEACTIONTOMOBILECONVERSION

                    "TOTAL_WATCH_VIDEO_MOBILE_ACTION_TO_TABLET_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWATCHVIDEOMOBILEACTIONTOTABLETCONVERSION

                    "TOTAL_WATCH_VIDEO_TABLET_ACTION_TO_DESKTOP_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWATCHVIDEOTABLETACTIONTODESKTOPCONVERSION

                    "TOTAL_WATCH_VIDEO_TABLET_ACTION_TO_MOBILE_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWATCHVIDEOTABLETACTIONTOMOBILECONVERSION

                    "TOTAL_WATCH_VIDEO_TABLET_ACTION_TO_TABLET_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWATCHVIDEOTABLETACTIONTOTABLETCONVERSION

                    "TOTAL_VIEW_CATEGORY_DESKTOP_ACTION_TO_DESKTOP_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWCATEGORYDESKTOPACTIONTODESKTOPCONVERSION

                    "TOTAL_VIEW_CATEGORY_DESKTOP_ACTION_TO_MOBILE_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWCATEGORYDESKTOPACTIONTOMOBILECONVERSION

                    "TOTAL_VIEW_CATEGORY_DESKTOP_ACTION_TO_TABLET_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWCATEGORYDESKTOPACTIONTOTABLETCONVERSION

                    "TOTAL_VIEW_CATEGORY_MOBILE_ACTION_TO_DESKTOP_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWCATEGORYMOBILEACTIONTODESKTOPCONVERSION

                    "TOTAL_VIEW_CATEGORY_MOBILE_ACTION_TO_MOBILE_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWCATEGORYMOBILEACTIONTOMOBILECONVERSION

                    "TOTAL_VIEW_CATEGORY_MOBILE_ACTION_TO_TABLET_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWCATEGORYMOBILEACTIONTOTABLETCONVERSION

                    "TOTAL_VIEW_CATEGORY_TABLET_ACTION_TO_DESKTOP_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWCATEGORYTABLETACTIONTODESKTOPCONVERSION

                    "TOTAL_VIEW_CATEGORY_TABLET_ACTION_TO_MOBILE_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWCATEGORYTABLETACTIONTOMOBILECONVERSION

                    "TOTAL_VIEW_CATEGORY_TABLET_ACTION_TO_TABLET_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIEWCATEGORYTABLETACTIONTOTABLETCONVERSION

                    "TOTAL_APP_INSTALL_DESKTOP_ACTION_TO_DESKTOP_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALAPPINSTALLDESKTOPACTIONTODESKTOPCONVERSION

                    "TOTAL_APP_INSTALL_DESKTOP_ACTION_TO_MOBILE_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALAPPINSTALLDESKTOPACTIONTOMOBILECONVERSION

                    "TOTAL_APP_INSTALL_DESKTOP_ACTION_TO_TABLET_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALAPPINSTALLDESKTOPACTIONTOTABLETCONVERSION

                    "TOTAL_APP_INSTALL_MOBILE_ACTION_TO_DESKTOP_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALAPPINSTALLMOBILEACTIONTODESKTOPCONVERSION

                    "TOTAL_APP_INSTALL_MOBILE_ACTION_TO_MOBILE_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALAPPINSTALLMOBILEACTIONTOMOBILECONVERSION

                    "TOTAL_APP_INSTALL_MOBILE_ACTION_TO_TABLET_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALAPPINSTALLMOBILEACTIONTOTABLETCONVERSION

                    "TOTAL_APP_INSTALL_TABLET_ACTION_TO_DESKTOP_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALAPPINSTALLTABLETACTIONTODESKTOPCONVERSION

                    "TOTAL_APP_INSTALL_TABLET_ACTION_TO_MOBILE_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALAPPINSTALLTABLETACTIONTOMOBILECONVERSION

                    "TOTAL_APP_INSTALL_TABLET_ACTION_TO_TABLET_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALAPPINSTALLTABLETACTIONTOTABLETCONVERSION

                    "TOTAL_UNKNOWN_DESKTOP_ACTION_TO_DESKTOP_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALUNKNOWNDESKTOPACTIONTODESKTOPCONVERSION

                    "TOTAL_UNKNOWN_DESKTOP_ACTION_TO_MOBILE_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALUNKNOWNDESKTOPACTIONTOMOBILECONVERSION

                    "TOTAL_UNKNOWN_DESKTOP_ACTION_TO_TABLET_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALUNKNOWNDESKTOPACTIONTOTABLETCONVERSION

                    "TOTAL_UNKNOWN_MOBILE_ACTION_TO_DESKTOP_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALUNKNOWNMOBILEACTIONTODESKTOPCONVERSION

                    "TOTAL_UNKNOWN_MOBILE_ACTION_TO_MOBILE_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALUNKNOWNMOBILEACTIONTOMOBILECONVERSION

                    "TOTAL_UNKNOWN_MOBILE_ACTION_TO_TABLET_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALUNKNOWNMOBILEACTIONTOTABLETCONVERSION

                    "TOTAL_UNKNOWN_TABLET_ACTION_TO_DESKTOP_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALUNKNOWNTABLETACTIONTODESKTOPCONVERSION

                    "TOTAL_UNKNOWN_TABLET_ACTION_TO_MOBILE_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALUNKNOWNTABLETACTIONTOMOBILECONVERSION

                    "TOTAL_UNKNOWN_TABLET_ACTION_TO_TABLET_CONVERSION" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALUNKNOWNTABLETACTIONTOTABLETCONVERSION

                    "TOTAL_CHECKOUT" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCHECKOUT

                    "TOTAL_CUSTOM" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCUSTOM

                    "TOTAL_LEAD" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALLEAD

                    "TOTAL_APP_INSTALL" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALAPPINSTALL

                    "TOTAL_CHECKOUT_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCHECKOUTVALUEINMICRODOLLAR

                    "TOTAL_APP_INSTALL_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALAPPINSTALLVALUEINMICRODOLLAR

                    "TOTAL_CHECKOUT_QUANTITY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCHECKOUTQUANTITY

                    "APP_INSTALL_COST_PER_ACTION" ->
                        Json.Decode.succeed ReportingColumnAsyncAPPINSTALLCOSTPERACTION

                    "VIDEO_3SEC_VIEWS_1" ->
                        Json.Decode.succeed ReportingColumnAsyncVIDEO3SECVIEWS1

                    "VIDEO_P100_COMPLETE_1" ->
                        Json.Decode.succeed ReportingColumnAsyncVIDEOP100COMPLETE1

                    "VIDEO_P0_COMBINED_1" ->
                        Json.Decode.succeed ReportingColumnAsyncVIDEOP0COMBINED1

                    "VIDEO_P25_COMBINED_1" ->
                        Json.Decode.succeed ReportingColumnAsyncVIDEOP25COMBINED1

                    "VIDEO_P50_COMBINED_1" ->
                        Json.Decode.succeed ReportingColumnAsyncVIDEOP50COMBINED1

                    "VIDEO_P75_COMBINED_1" ->
                        Json.Decode.succeed ReportingColumnAsyncVIDEOP75COMBINED1

                    "VIDEO_P95_COMBINED_1" ->
                        Json.Decode.succeed ReportingColumnAsyncVIDEOP95COMBINED1

                    "VIDEO_MRC_VIEWS_1" ->
                        Json.Decode.succeed ReportingColumnAsyncVIDEOMRCVIEWS1

                    "VIDEO_3SEC_VIEWS_2" ->
                        Json.Decode.succeed ReportingColumnAsyncVIDEO3SECVIEWS2

                    "VIDEO_P100_COMPLETE_2" ->
                        Json.Decode.succeed ReportingColumnAsyncVIDEOP100COMPLETE2

                    "VIDEO_P0_COMBINED_2" ->
                        Json.Decode.succeed ReportingColumnAsyncVIDEOP0COMBINED2

                    "VIDEO_P25_COMBINED_2" ->
                        Json.Decode.succeed ReportingColumnAsyncVIDEOP25COMBINED2

                    "VIDEO_P50_COMBINED_2" ->
                        Json.Decode.succeed ReportingColumnAsyncVIDEOP50COMBINED2

                    "VIDEO_P75_COMBINED_2" ->
                        Json.Decode.succeed ReportingColumnAsyncVIDEOP75COMBINED2

                    "VIDEO_P95_COMBINED_2" ->
                        Json.Decode.succeed ReportingColumnAsyncVIDEOP95COMBINED2

                    "VIDEO_MRC_VIEWS_2" ->
                        Json.Decode.succeed ReportingColumnAsyncVIDEOMRCVIEWS2

                    "VIDEO_LENGTH" ->
                        Json.Decode.succeed ReportingColumnAsyncVIDEOLENGTH

                    "CPV_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncCPVINMICRODOLLAR

                    "CPCV_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncCPCVINMICRODOLLAR

                    "CPCV_P95_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncCPCVP95INMICRODOLLAR

                    "TOTAL_VIDEO_3SEC_VIEWS" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIDEO3SECVIEWS

                    "VIDEO_AVG_WATCHTIME_IN_SECOND_1" ->
                        Json.Decode.succeed ReportingColumnAsyncVIDEOAVGWATCHTIMEINSECOND1

                    "VIDEO_AVG_WATCHTIME_IN_SECOND_2" ->
                        Json.Decode.succeed ReportingColumnAsyncVIDEOAVGWATCHTIMEINSECOND2

                    "TOTAL_VIDEO_AVG_WATCHTIME_IN_SECOND" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIDEOAVGWATCHTIMEINSECOND

                    "WEB_CHECKOUT_COST_PER_ACTION" ->
                        Json.Decode.succeed ReportingColumnAsyncWEBCHECKOUTCOSTPERACTION

                    "WEB_CHECKOUT_ROAS" ->
                        Json.Decode.succeed ReportingColumnAsyncWEBCHECKOUTROAS

                    "TOTAL_WEB_CHECKOUT" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBCHECKOUT

                    "TOTAL_WEB_CHECKOUT_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBCHECKOUTVALUEINMICRODOLLAR

                    "TOTAL_WEB_CLICK_CHECKOUT" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBCLICKCHECKOUT

                    "TOTAL_WEB_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBCLICKCHECKOUTVALUEINMICRODOLLAR

                    "TOTAL_WEB_ENGAGEMENT_CHECKOUT" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBENGAGEMENTCHECKOUT

                    "TOTAL_WEB_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBENGAGEMENTCHECKOUTVALUEINMICRODOLLAR

                    "TOTAL_WEB_VIEW_CHECKOUT" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBVIEWCHECKOUT

                    "TOTAL_WEB_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBVIEWCHECKOUTVALUEINMICRODOLLAR

                    "INAPP_CHECKOUT_COST_PER_ACTION" ->
                        Json.Decode.succeed ReportingColumnAsyncINAPPCHECKOUTCOSTPERACTION

                    "INAPP_CHECKOUT_ROAS" ->
                        Json.Decode.succeed ReportingColumnAsyncINAPPCHECKOUTROAS

                    "TOTAL_INAPP_CHECKOUT" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPCHECKOUT

                    "TOTAL_INAPP_CHECKOUT_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPCHECKOUTVALUEINMICRODOLLAR

                    "TOTAL_INAPP_CLICK_CHECKOUT" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPCLICKCHECKOUT

                    "TOTAL_INAPP_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPCLICKCHECKOUTVALUEINMICRODOLLAR

                    "TOTAL_INAPP_ENGAGEMENT_CHECKOUT" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPENGAGEMENTCHECKOUT

                    "TOTAL_INAPP_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPENGAGEMENTCHECKOUTVALUEINMICRODOLLAR

                    "TOTAL_INAPP_VIEW_CHECKOUT" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPVIEWCHECKOUT

                    "TOTAL_INAPP_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPVIEWCHECKOUTVALUEINMICRODOLLAR

                    "OFFLINE_CHECKOUT_COST_PER_ACTION" ->
                        Json.Decode.succeed ReportingColumnAsyncOFFLINECHECKOUTCOSTPERACTION

                    "OFFLINE_CHECKOUT_ROAS" ->
                        Json.Decode.succeed ReportingColumnAsyncOFFLINECHECKOUTROAS

                    "TOTAL_OFFLINE_CHECKOUT" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINECHECKOUT

                    "TOTAL_OFFLINE_CHECKOUT_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINECHECKOUTVALUEINMICRODOLLAR

                    "TOTAL_OFFLINE_CLICK_CHECKOUT" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINECLICKCHECKOUT

                    "TOTAL_OFFLINE_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINECLICKCHECKOUTVALUEINMICRODOLLAR

                    "TOTAL_OFFLINE_ENGAGEMENT_CHECKOUT" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINEENGAGEMENTCHECKOUT

                    "TOTAL_OFFLINE_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINEENGAGEMENTCHECKOUTVALUEINMICRODOLLAR

                    "TOTAL_OFFLINE_VIEW_CHECKOUT" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINEVIEWCHECKOUT

                    "TOTAL_OFFLINE_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINEVIEWCHECKOUTVALUEINMICRODOLLAR

                    "WEB_ADD_TO_CART_COST_PER_ACTION" ->
                        Json.Decode.succeed ReportingColumnAsyncWEBADDTOCARTCOSTPERACTION

                    "WEB_ADD_TO_CART_ROAS" ->
                        Json.Decode.succeed ReportingColumnAsyncWEBADDTOCARTROAS

                    "TOTAL_WEB_ADD_TO_CART" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBADDTOCART

                    "TOTAL_WEB_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBADDTOCARTVALUEINMICRODOLLAR

                    "TOTAL_WEB_CLICK_ADD_TO_CART" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBCLICKADDTOCART

                    "TOTAL_WEB_CLICK_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBCLICKADDTOCARTVALUEINMICRODOLLAR

                    "TOTAL_WEB_ENGAGEMENT_ADD_TO_CART" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBENGAGEMENTADDTOCART

                    "TOTAL_WEB_ENGAGEMENT_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBENGAGEMENTADDTOCARTVALUEINMICRODOLLAR

                    "TOTAL_WEB_VIEW_ADD_TO_CART" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBVIEWADDTOCART

                    "TOTAL_WEB_VIEW_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBVIEWADDTOCARTVALUEINMICRODOLLAR

                    "INAPP_ADD_TO_CART_COST_PER_ACTION" ->
                        Json.Decode.succeed ReportingColumnAsyncINAPPADDTOCARTCOSTPERACTION

                    "INAPP_ADD_TO_CART_ROAS" ->
                        Json.Decode.succeed ReportingColumnAsyncINAPPADDTOCARTROAS

                    "TOTAL_INAPP_ADD_TO_CART" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPADDTOCART

                    "TOTAL_INAPP_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPADDTOCARTVALUEINMICRODOLLAR

                    "TOTAL_INAPP_CLICK_ADD_TO_CART" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPCLICKADDTOCART

                    "TOTAL_INAPP_CLICK_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPCLICKADDTOCARTVALUEINMICRODOLLAR

                    "TOTAL_INAPP_ENGAGEMENT_ADD_TO_CART" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPENGAGEMENTADDTOCART

                    "TOTAL_INAPP_ENGAGEMENT_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPENGAGEMENTADDTOCARTVALUEINMICRODOLLAR

                    "TOTAL_INAPP_VIEW_ADD_TO_CART" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPVIEWADDTOCART

                    "TOTAL_INAPP_VIEW_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPVIEWADDTOCARTVALUEINMICRODOLLAR

                    "WEB_PAGE_VISIT_COST_PER_ACTION" ->
                        Json.Decode.succeed ReportingColumnAsyncWEBPAGEVISITCOSTPERACTION

                    "WEB_PAGE_VISIT_ROAS" ->
                        Json.Decode.succeed ReportingColumnAsyncWEBPAGEVISITROAS

                    "TOTAL_WEB_PAGE_VISIT" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBPAGEVISIT

                    "TOTAL_WEB_PAGE_VISIT_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBPAGEVISITVALUEINMICRODOLLAR

                    "TOTAL_WEB_CLICK_PAGE_VISIT" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBCLICKPAGEVISIT

                    "TOTAL_WEB_CLICK_PAGE_VISIT_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBCLICKPAGEVISITVALUEINMICRODOLLAR

                    "TOTAL_WEB_ENGAGEMENT_PAGE_VISIT" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBENGAGEMENTPAGEVISIT

                    "TOTAL_WEB_ENGAGEMENT_PAGE_VISIT_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBENGAGEMENTPAGEVISITVALUEINMICRODOLLAR

                    "TOTAL_WEB_VIEW_PAGE_VISIT" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBVIEWPAGEVISIT

                    "TOTAL_WEB_VIEW_PAGE_VISIT_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBVIEWPAGEVISITVALUEINMICRODOLLAR

                    "WEB_SIGNUP_COST_PER_ACTION" ->
                        Json.Decode.succeed ReportingColumnAsyncWEBSIGNUPCOSTPERACTION

                    "WEB_SIGNUP_ROAS" ->
                        Json.Decode.succeed ReportingColumnAsyncWEBSIGNUPROAS

                    "TOTAL_WEB_SIGNUP" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBSIGNUP

                    "TOTAL_WEB_SIGNUP_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBSIGNUPVALUEINMICRODOLLAR

                    "TOTAL_WEB_CLICK_SIGNUP" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBCLICKSIGNUP

                    "TOTAL_WEB_CLICK_SIGNUP_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBCLICKSIGNUPVALUEINMICRODOLLAR

                    "TOTAL_WEB_ENGAGEMENT_SIGNUP" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBENGAGEMENTSIGNUP

                    "TOTAL_WEB_ENGAGEMENT_SIGNUP_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBENGAGEMENTSIGNUPVALUEINMICRODOLLAR

                    "TOTAL_WEB_VIEW_SIGNUP" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBVIEWSIGNUP

                    "TOTAL_WEB_VIEW_SIGNUP_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBVIEWSIGNUPVALUEINMICRODOLLAR

                    "INAPP_SIGNUP_COST_PER_ACTION" ->
                        Json.Decode.succeed ReportingColumnAsyncINAPPSIGNUPCOSTPERACTION

                    "INAPP_SIGNUP_ROAS" ->
                        Json.Decode.succeed ReportingColumnAsyncINAPPSIGNUPROAS

                    "TOTAL_INAPP_SIGNUP" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPSIGNUP

                    "TOTAL_INAPP_SIGNUP_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPSIGNUPVALUEINMICRODOLLAR

                    "TOTAL_INAPP_CLICK_SIGNUP" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPCLICKSIGNUP

                    "TOTAL_INAPP_CLICK_SIGNUP_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPCLICKSIGNUPVALUEINMICRODOLLAR

                    "TOTAL_INAPP_ENGAGEMENT_SIGNUP" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPENGAGEMENTSIGNUP

                    "TOTAL_INAPP_ENGAGEMENT_SIGNUP_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPENGAGEMENTSIGNUPVALUEINMICRODOLLAR

                    "TOTAL_INAPP_VIEW_SIGNUP" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPVIEWSIGNUP

                    "TOTAL_INAPP_VIEW_SIGNUP_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPVIEWSIGNUPVALUEINMICRODOLLAR

                    "OFFLINE_SIGNUP_COST_PER_ACTION" ->
                        Json.Decode.succeed ReportingColumnAsyncOFFLINESIGNUPCOSTPERACTION

                    "OFFLINE_SIGNUP_ROAS" ->
                        Json.Decode.succeed ReportingColumnAsyncOFFLINESIGNUPROAS

                    "TOTAL_OFFLINE_SIGNUP" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINESIGNUP

                    "TOTAL_OFFLINE_SIGNUP_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINESIGNUPVALUEINMICRODOLLAR

                    "TOTAL_OFFLINE_CLICK_SIGNUP" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINECLICKSIGNUP

                    "TOTAL_OFFLINE_CLICK_SIGNUP_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINECLICKSIGNUPVALUEINMICRODOLLAR

                    "TOTAL_OFFLINE_ENGAGEMENT_SIGNUP" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINEENGAGEMENTSIGNUP

                    "TOTAL_OFFLINE_ENGAGEMENT_SIGNUP_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINEENGAGEMENTSIGNUPVALUEINMICRODOLLAR

                    "TOTAL_OFFLINE_VIEW_SIGNUP" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINEVIEWSIGNUP

                    "TOTAL_OFFLINE_VIEW_SIGNUP_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINEVIEWSIGNUPVALUEINMICRODOLLAR

                    "WEB_WATCH_VIDEO_COST_PER_ACTION" ->
                        Json.Decode.succeed ReportingColumnAsyncWEBWATCHVIDEOCOSTPERACTION

                    "WEB_WATCH_VIDEO_ROAS" ->
                        Json.Decode.succeed ReportingColumnAsyncWEBWATCHVIDEOROAS

                    "TOTAL_WEB_WATCH_VIDEO" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBWATCHVIDEO

                    "TOTAL_WEB_WATCH_VIDEO_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBWATCHVIDEOVALUEINMICRODOLLAR

                    "TOTAL_WEB_CLICK_WATCH_VIDEO" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBCLICKWATCHVIDEO

                    "TOTAL_WEB_CLICK_WATCH_VIDEO_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBCLICKWATCHVIDEOVALUEINMICRODOLLAR

                    "TOTAL_WEB_ENGAGEMENT_WATCH_VIDEO" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBENGAGEMENTWATCHVIDEO

                    "TOTAL_WEB_ENGAGEMENT_WATCH_VIDEO_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBENGAGEMENTWATCHVIDEOVALUEINMICRODOLLAR

                    "TOTAL_WEB_VIEW_WATCH_VIDEO" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBVIEWWATCHVIDEO

                    "TOTAL_WEB_VIEW_WATCH_VIDEO_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBVIEWWATCHVIDEOVALUEINMICRODOLLAR

                    "WEB_LEAD_COST_PER_ACTION" ->
                        Json.Decode.succeed ReportingColumnAsyncWEBLEADCOSTPERACTION

                    "WEB_LEAD_ROAS" ->
                        Json.Decode.succeed ReportingColumnAsyncWEBLEADROAS

                    "TOTAL_WEB_LEAD" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBLEAD

                    "TOTAL_WEB_LEAD_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBLEADVALUEINMICRODOLLAR

                    "TOTAL_WEB_CLICK_LEAD" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBCLICKLEAD

                    "TOTAL_WEB_CLICK_LEAD_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBCLICKLEADVALUEINMICRODOLLAR

                    "TOTAL_WEB_ENGAGEMENT_LEAD" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBENGAGEMENTLEAD

                    "TOTAL_WEB_ENGAGEMENT_LEAD_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBENGAGEMENTLEADVALUEINMICRODOLLAR

                    "TOTAL_WEB_VIEW_LEAD" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBVIEWLEAD

                    "TOTAL_WEB_VIEW_LEAD_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBVIEWLEADVALUEINMICRODOLLAR

                    "OFFLINE_LEAD_COST_PER_ACTION" ->
                        Json.Decode.succeed ReportingColumnAsyncOFFLINELEADCOSTPERACTION

                    "OFFLINE_LEAD_ROAS" ->
                        Json.Decode.succeed ReportingColumnAsyncOFFLINELEADROAS

                    "TOTAL_OFFLINE_LEAD" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINELEAD

                    "TOTAL_OFFLINE_LEAD_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINELEADVALUEINMICRODOLLAR

                    "TOTAL_OFFLINE_CLICK_LEAD" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINECLICKLEAD

                    "TOTAL_OFFLINE_CLICK_LEAD_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINECLICKLEADVALUEINMICRODOLLAR

                    "TOTAL_OFFLINE_ENGAGEMENT_LEAD" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINEENGAGEMENTLEAD

                    "TOTAL_OFFLINE_ENGAGEMENT_LEAD_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINEENGAGEMENTLEADVALUEINMICRODOLLAR

                    "TOTAL_OFFLINE_VIEW_LEAD" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINEVIEWLEAD

                    "TOTAL_OFFLINE_VIEW_LEAD_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINEVIEWLEADVALUEINMICRODOLLAR

                    "WEB_SEARCH_COST_PER_ACTION" ->
                        Json.Decode.succeed ReportingColumnAsyncWEBSEARCHCOSTPERACTION

                    "WEB_SEARCH_ROAS" ->
                        Json.Decode.succeed ReportingColumnAsyncWEBSEARCHROAS

                    "TOTAL_WEB_SEARCH" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBSEARCH

                    "TOTAL_WEB_SEARCH_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBSEARCHVALUEINMICRODOLLAR

                    "TOTAL_WEB_CLICK_SEARCH" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBCLICKSEARCH

                    "TOTAL_WEB_CLICK_SEARCH_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBCLICKSEARCHVALUEINMICRODOLLAR

                    "TOTAL_WEB_ENGAGEMENT_SEARCH" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBENGAGEMENTSEARCH

                    "TOTAL_WEB_ENGAGEMENT_SEARCH_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBENGAGEMENTSEARCHVALUEINMICRODOLLAR

                    "TOTAL_WEB_VIEW_SEARCH" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBVIEWSEARCH

                    "TOTAL_WEB_VIEW_SEARCH_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBVIEWSEARCHVALUEINMICRODOLLAR

                    "INAPP_SEARCH_COST_PER_ACTION" ->
                        Json.Decode.succeed ReportingColumnAsyncINAPPSEARCHCOSTPERACTION

                    "INAPP_SEARCH_ROAS" ->
                        Json.Decode.succeed ReportingColumnAsyncINAPPSEARCHROAS

                    "TOTAL_INAPP_SEARCH" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPSEARCH

                    "TOTAL_INAPP_SEARCH_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPSEARCHVALUEINMICRODOLLAR

                    "TOTAL_INAPP_CLICK_SEARCH" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPCLICKSEARCH

                    "TOTAL_INAPP_CLICK_SEARCH_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPCLICKSEARCHVALUEINMICRODOLLAR

                    "TOTAL_INAPP_ENGAGEMENT_SEARCH" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPENGAGEMENTSEARCH

                    "TOTAL_INAPP_ENGAGEMENT_SEARCH_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPENGAGEMENTSEARCHVALUEINMICRODOLLAR

                    "TOTAL_INAPP_VIEW_SEARCH" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPVIEWSEARCH

                    "TOTAL_INAPP_VIEW_SEARCH_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPVIEWSEARCHVALUEINMICRODOLLAR

                    "WEB_VIEW_CATEGORY_COST_PER_ACTION" ->
                        Json.Decode.succeed ReportingColumnAsyncWEBVIEWCATEGORYCOSTPERACTION

                    "WEB_VIEW_CATEGORY_ROAS" ->
                        Json.Decode.succeed ReportingColumnAsyncWEBVIEWCATEGORYROAS

                    "TOTAL_WEB_VIEW_CATEGORY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBVIEWCATEGORY

                    "TOTAL_WEB_VIEW_CATEGORY_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBVIEWCATEGORYVALUEINMICRODOLLAR

                    "TOTAL_WEB_CLICK_VIEW_CATEGORY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBCLICKVIEWCATEGORY

                    "TOTAL_WEB_CLICK_VIEW_CATEGORY_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBCLICKVIEWCATEGORYVALUEINMICRODOLLAR

                    "TOTAL_WEB_ENGAGEMENT_VIEW_CATEGORY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBENGAGEMENTVIEWCATEGORY

                    "TOTAL_WEB_ENGAGEMENT_VIEW_CATEGORY_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBENGAGEMENTVIEWCATEGORYVALUEINMICRODOLLAR

                    "TOTAL_WEB_VIEW_VIEW_CATEGORY" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBVIEWVIEWCATEGORY

                    "TOTAL_WEB_VIEW_VIEW_CATEGORY_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBVIEWVIEWCATEGORYVALUEINMICRODOLLAR

                    "WEB_CUSTOM_COST_PER_ACTION" ->
                        Json.Decode.succeed ReportingColumnAsyncWEBCUSTOMCOSTPERACTION

                    "WEB_CUSTOM_ROAS" ->
                        Json.Decode.succeed ReportingColumnAsyncWEBCUSTOMROAS

                    "TOTAL_WEB_CUSTOM" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBCUSTOM

                    "TOTAL_WEB_CUSTOM_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBCUSTOMVALUEINMICRODOLLAR

                    "TOTAL_WEB_CLICK_CUSTOM" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBCLICKCUSTOM

                    "TOTAL_WEB_CLICK_CUSTOM_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBCLICKCUSTOMVALUEINMICRODOLLAR

                    "TOTAL_WEB_ENGAGEMENT_CUSTOM" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBENGAGEMENTCUSTOM

                    "TOTAL_WEB_ENGAGEMENT_CUSTOM_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBENGAGEMENTCUSTOMVALUEINMICRODOLLAR

                    "TOTAL_WEB_VIEW_CUSTOM" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBVIEWCUSTOM

                    "TOTAL_WEB_VIEW_CUSTOM_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBVIEWCUSTOMVALUEINMICRODOLLAR

                    "OFFLINE_CUSTOM_COST_PER_ACTION" ->
                        Json.Decode.succeed ReportingColumnAsyncOFFLINECUSTOMCOSTPERACTION

                    "OFFLINE_CUSTOM_ROAS" ->
                        Json.Decode.succeed ReportingColumnAsyncOFFLINECUSTOMROAS

                    "TOTAL_OFFLINE_CUSTOM" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINECUSTOM

                    "TOTAL_OFFLINE_CUSTOM_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINECUSTOMVALUEINMICRODOLLAR

                    "TOTAL_OFFLINE_CLICK_CUSTOM" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINECLICKCUSTOM

                    "TOTAL_OFFLINE_CLICK_CUSTOM_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINECLICKCUSTOMVALUEINMICRODOLLAR

                    "TOTAL_OFFLINE_ENGAGEMENT_CUSTOM" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINEENGAGEMENTCUSTOM

                    "TOTAL_OFFLINE_ENGAGEMENT_CUSTOM_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINEENGAGEMENTCUSTOMVALUEINMICRODOLLAR

                    "TOTAL_OFFLINE_VIEW_CUSTOM" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINEVIEWCUSTOM

                    "TOTAL_OFFLINE_VIEW_CUSTOM_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINEVIEWCUSTOMVALUEINMICRODOLLAR

                    "WEB_UNKNOWN_COST_PER_ACTION" ->
                        Json.Decode.succeed ReportingColumnAsyncWEBUNKNOWNCOSTPERACTION

                    "WEB_UNKNOWN_ROAS" ->
                        Json.Decode.succeed ReportingColumnAsyncWEBUNKNOWNROAS

                    "TOTAL_WEB_UNKNOWN" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBUNKNOWN

                    "TOTAL_WEB_UNKNOWN_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBUNKNOWNVALUEINMICRODOLLAR

                    "TOTAL_WEB_CLICK_UNKNOWN" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBCLICKUNKNOWN

                    "TOTAL_WEB_CLICK_UNKNOWN_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBCLICKUNKNOWNVALUEINMICRODOLLAR

                    "TOTAL_WEB_ENGAGEMENT_UNKNOWN" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBENGAGEMENTUNKNOWN

                    "TOTAL_WEB_ENGAGEMENT_UNKNOWN_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBENGAGEMENTUNKNOWNVALUEINMICRODOLLAR

                    "TOTAL_WEB_VIEW_UNKNOWN" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBVIEWUNKNOWN

                    "TOTAL_WEB_VIEW_UNKNOWN_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALWEBVIEWUNKNOWNVALUEINMICRODOLLAR

                    "INAPP_UNKNOWN_COST_PER_ACTION" ->
                        Json.Decode.succeed ReportingColumnAsyncINAPPUNKNOWNCOSTPERACTION

                    "INAPP_UNKNOWN_ROAS" ->
                        Json.Decode.succeed ReportingColumnAsyncINAPPUNKNOWNROAS

                    "TOTAL_INAPP_UNKNOWN" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPUNKNOWN

                    "TOTAL_INAPP_UNKNOWN_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPUNKNOWNVALUEINMICRODOLLAR

                    "TOTAL_INAPP_CLICK_UNKNOWN" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPCLICKUNKNOWN

                    "TOTAL_INAPP_CLICK_UNKNOWN_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPCLICKUNKNOWNVALUEINMICRODOLLAR

                    "TOTAL_INAPP_ENGAGEMENT_UNKNOWN" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPENGAGEMENTUNKNOWN

                    "TOTAL_INAPP_ENGAGEMENT_UNKNOWN_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPENGAGEMENTUNKNOWNVALUEINMICRODOLLAR

                    "TOTAL_INAPP_VIEW_UNKNOWN" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPVIEWUNKNOWN

                    "TOTAL_INAPP_VIEW_UNKNOWN_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPVIEWUNKNOWNVALUEINMICRODOLLAR

                    "OFFLINE_UNKNOWN_COST_PER_ACTION" ->
                        Json.Decode.succeed ReportingColumnAsyncOFFLINEUNKNOWNCOSTPERACTION

                    "OFFLINE_UNKNOWN_ROAS" ->
                        Json.Decode.succeed ReportingColumnAsyncOFFLINEUNKNOWNROAS

                    "TOTAL_OFFLINE_UNKNOWN" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINEUNKNOWN

                    "TOTAL_OFFLINE_UNKNOWN_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINEUNKNOWNVALUEINMICRODOLLAR

                    "TOTAL_OFFLINE_CLICK_UNKNOWN" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINECLICKUNKNOWN

                    "TOTAL_OFFLINE_CLICK_UNKNOWN_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINECLICKUNKNOWNVALUEINMICRODOLLAR

                    "TOTAL_OFFLINE_ENGAGEMENT_UNKNOWN" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINEENGAGEMENTUNKNOWN

                    "TOTAL_OFFLINE_ENGAGEMENT_UNKNOWN_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINEENGAGEMENTUNKNOWNVALUEINMICRODOLLAR

                    "TOTAL_OFFLINE_VIEW_UNKNOWN" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINEVIEWUNKNOWN

                    "TOTAL_OFFLINE_VIEW_UNKNOWN_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALOFFLINEVIEWUNKNOWNVALUEINMICRODOLLAR

                    "INAPP_APP_INSTALL_COST_PER_ACTION" ->
                        Json.Decode.succeed ReportingColumnAsyncINAPPAPPINSTALLCOSTPERACTION

                    "INAPP_APP_INSTALL_ROAS" ->
                        Json.Decode.succeed ReportingColumnAsyncINAPPAPPINSTALLROAS

                    "TOTAL_INAPP_APP_INSTALL" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPAPPINSTALL

                    "TOTAL_INAPP_APP_INSTALL_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPAPPINSTALLVALUEINMICRODOLLAR

                    "TOTAL_INAPP_CLICK_APP_INSTALL" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPCLICKAPPINSTALL

                    "TOTAL_INAPP_CLICK_APP_INSTALL_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPCLICKAPPINSTALLVALUEINMICRODOLLAR

                    "TOTAL_INAPP_ENGAGEMENT_APP_INSTALL" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPENGAGEMENTAPPINSTALL

                    "TOTAL_INAPP_ENGAGEMENT_APP_INSTALL_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPENGAGEMENTAPPINSTALLVALUEINMICRODOLLAR

                    "TOTAL_INAPP_VIEW_APP_INSTALL" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPVIEWAPPINSTALL

                    "TOTAL_INAPP_VIEW_APP_INSTALL_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALINAPPVIEWAPPINSTALLVALUEINMICRODOLLAR

                    "IDEA_PIN_PRODUCT_TAG_VISIT_1" ->
                        Json.Decode.succeed ReportingColumnAsyncIDEAPINPRODUCTTAGVISIT1

                    "IDEA_PIN_PRODUCT_TAG_VISIT_2" ->
                        Json.Decode.succeed ReportingColumnAsyncIDEAPINPRODUCTTAGVISIT2

                    "REPIN_RATE" ->
                        Json.Decode.succeed ReportingColumnAsyncREPINRATE

                    "TOTAL_VIDEO_P95_COMBINED" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIDEOP95COMBINED

                    "AD_GROUP_ENTITY_STATUS" ->
                        Json.Decode.succeed ReportingColumnAsyncADGROUPENTITYSTATUS

                    "ECPCV_P95_IN_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncECPCVP95INDOLLAR

                    "ENGAGEMENT_RATE" ->
                        Json.Decode.succeed ReportingColumnAsyncENGAGEMENTRATE

                    "PAGE_VISIT_COST_PER_ACTION" ->
                        Json.Decode.succeed ReportingColumnAsyncPAGEVISITCOSTPERACTION

                    "TOTAL_PAGE_VISIT" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALPAGEVISIT

                    "CHECKOUT_ROAS" ->
                        Json.Decode.succeed ReportingColumnAsyncCHECKOUTROAS

                    "TOTAL_SIGNUP_VALUE_IN_MICRO_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALSIGNUPVALUEINMICRODOLLAR

                    "ECPCV_IN_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncECPCVINDOLLAR

                    "TOTAL_VIDEO_P75_COMBINED" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIDEOP75COMBINED

                    "TOTAL_VIDEO_P50_COMBINED" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIDEOP50COMBINED

                    "TOTAL_SIGNUP" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALSIGNUP

                    "TOTAL_VIDEO_P0_COMBINED" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIDEOP0COMBINED

                    "SPEND_IN_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncSPENDINDOLLAR

                    "EENGAGEMENT_RATE" ->
                        Json.Decode.succeed ReportingColumnAsyncEENGAGEMENTRATE

                    "TOTAL_VIDEO_P25_COMBINED" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIDEOP25COMBINED

                    "CPM_IN_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncCPMINDOLLAR

                    "ECPV_IN_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncECPVINDOLLAR

                    "TOTAL_CLICKTHROUGH" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALCLICKTHROUGH

                    "ECPE_IN_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncECPEINDOLLAR

                    "TOTAL_VIDEO_P100_COMPLETE" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIDEOP100COMPLETE

                    "CAMPAIGN_ENTITY_STATUS" ->
                        Json.Decode.succeed ReportingColumnAsyncCAMPAIGNENTITYSTATUS

                    "PAGE_VISIT_ROAS" ->
                        Json.Decode.succeed ReportingColumnAsyncPAGEVISITROAS

                    "TOTAL_REPIN_RATE" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALREPINRATE

                    "TOTAL_VIDEO_MRC_VIEWS" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALVIDEOMRCVIEWS

                    "TOTAL_IDEA_PIN_PRODUCT_TAG_VISIT" ->
                        Json.Decode.succeed ReportingColumnAsyncTOTALIDEAPINPRODUCTTAGVISIT

                    "ECPC_IN_DOLLAR" ->
                        Json.Decode.succeed ReportingColumnAsyncECPCINDOLLAR

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


targetingTypeFilterDecoder : Json.Decode.Decoder TargetingTypeFilter
targetingTypeFilterDecoder =
    Json.Decode.succeed TargetingTypeFilter
        |> maybeDecode "targeting_types" (Json.Decode.list adsAnalyticsTargetingTypeDecoder) Nothing


trackingUrlsDecoder : Json.Decode.Decoder TrackingUrls
trackingUrlsDecoder =
    Json.Decode.succeed TrackingUrls
        |> maybeDecode "impression" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "click" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "engagement" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "buyable_button" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "audience_verification" (Json.Decode.list Json.Decode.string) Nothing




-- HELPER


type alias EncodedField =
    Maybe ( String, Json.Encode.Value )


encodeObject : List EncodedField -> Json.Encode.Value
encodeObject =
    Json.Encode.object << List.filterMap identity


encode : String -> (a -> Json.Encode.Value) -> a -> EncodedField
encode key encoder value =
    Just ( key, encoder value )


encodeNullable : String -> (a -> Json.Encode.Value) -> Maybe a -> EncodedField
encodeNullable key encoder value =
    Just ( key, Maybe.withDefault Json.Encode.null (Maybe.map encoder value) )


maybeEncode : String -> (a -> Json.Encode.Value) -> Maybe a -> EncodedField
maybeEncode key encoder =
    Maybe.map (Tuple.pair key << encoder)


maybeEncodeNullable : String -> (a -> Json.Encode.Value) -> Maybe a -> EncodedField
maybeEncodeNullable =
    encodeNullable


decode : String -> Json.Decode.Decoder a -> Json.Decode.Decoder (a -> b) -> Json.Decode.Decoder b
decode key decoder =
    decodeChain (Json.Decode.field key decoder)


decodeLazy : (a -> c) -> String -> Json.Decode.Decoder a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
decodeLazy f key decoder =
    decodeChainLazy f (Json.Decode.field key decoder)


decodeNullable : String -> Json.Decode.Decoder a -> Json.Decode.Decoder (Maybe a -> b) -> Json.Decode.Decoder b
decodeNullable key decoder =
    decodeChain (maybeField key decoder Nothing)


decodeNullableLazy : (Maybe a -> c) -> String -> Json.Decode.Decoder a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
decodeNullableLazy f key decoder =
    decodeChainLazy f (maybeField key decoder Nothing)


maybeDecode : String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (Maybe a -> b) -> Json.Decode.Decoder b
maybeDecode key decoder fallback =
    -- let's be kind to null-values as well
    decodeChain (maybeField key decoder fallback)


maybeDecodeLazy : (Maybe a -> c) -> String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
maybeDecodeLazy f key decoder fallback =
    -- let's be kind to null-values as well
    decodeChainLazy f (maybeField key decoder fallback)


maybeDecodeNullable : String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (Maybe a -> b) -> Json.Decode.Decoder b
maybeDecodeNullable key decoder fallback =
    decodeChain (maybeField key decoder fallback)


maybeDecodeNullableLazy : (Maybe a -> c) -> String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
maybeDecodeNullableLazy f key decoder fallback =
    decodeChainLazy f (maybeField key decoder fallback)


maybeField : String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (Maybe a)
maybeField key decoder fallback =
    let
        fieldDecoder =
            Json.Decode.field key Json.Decode.value

        valueDecoder =
            Json.Decode.oneOf [ Json.Decode.map Just decoder, Json.Decode.null fallback ]

        decodeObject rawObject =
            case Json.Decode.decodeValue fieldDecoder rawObject of
                Ok rawValue ->
                    case Json.Decode.decodeValue valueDecoder rawValue of
                        Ok value ->
                            Json.Decode.succeed value

                        Err error ->
                            Json.Decode.fail (Json.Decode.errorToString error)

                Err _ ->
                    Json.Decode.succeed fallback
    in
    Json.Decode.value
        |> Json.Decode.andThen decodeObject


decodeChain : Json.Decode.Decoder a -> Json.Decode.Decoder (a -> b) -> Json.Decode.Decoder b
decodeChain =
    Json.Decode.map2 (|>)


decodeChainLazy : (a -> c) -> Json.Decode.Decoder a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
decodeChainLazy f =
    decodeChain << Json.Decode.map f