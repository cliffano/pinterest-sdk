/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: pinterest-api@pinterest.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.api;

import org.openapitools.model.CatalogsFeed;
import org.openapitools.model.CatalogsFeedsCreateRequest;
import org.openapitools.model.CatalogsFeedsUpdateRequest;
import org.openapitools.model.CatalogsItems;
import org.openapitools.model.CatalogsItemsBatch;
import org.openapitools.model.CatalogsItemsBatchRequest;
import org.openapitools.model.CatalogsProductGroup;
import org.openapitools.model.CatalogsProductGroupCreateRequest;
import org.openapitools.model.CatalogsProductGroupUpdateRequest;
import org.openapitools.model.Error;
import org.openapitools.model.Paginated;
import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;

import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import org.apache.cxf.jaxrs.client.JAXRSClientFactory;
import org.apache.cxf.jaxrs.client.ClientConfiguration;
import org.apache.cxf.jaxrs.client.WebClient;
import org.apache.cxf.jaxrs.ext.multipart.Attachment;


import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;
import com.fasterxml.jackson.jaxrs.xml.JacksonXMLProvider;
import org.apache.cxf.jaxrs.provider.MultipartProvider;

import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * Pinterest REST API
 *
 * <p>Pinterest's REST API
 *
 * API tests for CatalogsApi.
 */
public class CatalogsApiTest {

    private CatalogsApi api;

    @Before
    public void setup() {
        List<?> providers = Arrays.asList(new JacksonJsonProvider(), new JacksonXMLProvider(), new MultipartProvider());

        api = JAXRSClientFactory.create("https://api.pinterest.com/v5", CatalogsApi.class, providers);
        org.apache.cxf.jaxrs.client.Client client = WebClient.client(api);

        ClientConfiguration config = WebClient.getConfig(client);
    }

    
    /**
     * Create product group
     *
     * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Create product group to use in Catalogs.
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void catalogsProductGroupsCreateTest() throws Exception {
        // TODO: assign appropriate parameter values
        CatalogsProductGroupCreateRequest catalogsProductGroupCreateRequest = null;

        // TODO: delete this line and uncomment the next
        // Object response = api.catalogsProductGroupsCreate(catalogsProductGroupCreateRequest);
        // TODO: complete test assertions
    }
    
    /**
     * Delete product group
     *
     * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Delete a product group from being in use in Catalogs.
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void catalogsProductGroupsDeleteTest() throws Exception {
        // TODO: assign appropriate parameter values
        String productGroupId = null;

        // TODO: delete this line and uncomment the next
        // api.catalogsProductGroupsDelete(productGroupId);
    }
    
    /**
     * Get product groups list
     *
     * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Get a list of product groups for a given Catalogs Feed Id.
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void catalogsProductGroupsListTest() throws Exception {
        // TODO: assign appropriate parameter values
        String feedId = null;
        String bookmark = null;
        Integer pageSize = null;

        // TODO: delete this line and uncomment the next
        // Paginated response = api.catalogsProductGroupsList(feedId, bookmark, pageSize);
        // TODO: complete test assertions
    }
    
    /**
     * Update product group
     *
     * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Update product group to use in Catalogs.
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void catalogsProductGroupsUpdateTest() throws Exception {
        // TODO: assign appropriate parameter values
        String productGroupId = null;
        CatalogsProductGroupUpdateRequest catalogsProductGroupUpdateRequest = null;

        // TODO: delete this line and uncomment the next
        // CatalogsProductGroup response = api.catalogsProductGroupsUpdate(productGroupId, catalogsProductGroupUpdateRequest);
        // TODO: complete test assertions
    }
    
    /**
     * List processing results for a given feed
     *
     * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Fetch a feed processing results owned by the owner user account.
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void feedProcessingResultsListTest() throws Exception {
        // TODO: assign appropriate parameter values
        String feedId = null;
        String bookmark = null;
        Integer pageSize = null;

        // TODO: delete this line and uncomment the next
        // Paginated response = api.feedProcessingResultsList(feedId, bookmark, pageSize);
        // TODO: complete test assertions
    }
    
    /**
     * Create feed
     *
     * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Create a new feed owned by the \&quot;operating user_account\&quot;.
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void feedsCreateTest() throws Exception {
        // TODO: assign appropriate parameter values
        CatalogsFeedsCreateRequest catalogsFeedsCreateRequest = null;

        // TODO: delete this line and uncomment the next
        // CatalogsFeed response = api.feedsCreate(catalogsFeedsCreateRequest);
        // TODO: complete test assertions
    }
    
    /**
     * Delete feed
     *
     * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Delete a feed owned by the \&quot;operating user_account\&quot;.
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void feedsDeleteTest() throws Exception {
        // TODO: assign appropriate parameter values
        String feedId = null;

        // TODO: delete this line and uncomment the next
        // api.feedsDelete(feedId);
    }
    
    /**
     * Get feed
     *
     * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Get a single feed owned by the \&quot;operating user_account\&quot;.
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void feedsGetTest() throws Exception {
        // TODO: assign appropriate parameter values
        String feedId = null;

        // TODO: delete this line and uncomment the next
        // CatalogsFeed response = api.feedsGet(feedId);
        // TODO: complete test assertions
    }
    
    /**
     * List feeds
     *
     * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Fetch feeds owned by the \&quot;operating user_account\&quot;.
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void feedsListTest() throws Exception {
        // TODO: assign appropriate parameter values
        String bookmark = null;
        Integer pageSize = null;

        // TODO: delete this line and uncomment the next
        // Paginated response = api.feedsList(bookmark, pageSize);
        // TODO: complete test assertions
    }
    
    /**
     * Update feed
     *
     * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Update a feed owned by the \&quot;operating user_account\&quot;.
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void feedsUpdateTest() throws Exception {
        // TODO: assign appropriate parameter values
        String feedId = null;
        CatalogsFeedsUpdateRequest catalogsFeedsUpdateRequest = null;

        // TODO: delete this line and uncomment the next
        // CatalogsFeed response = api.feedsUpdate(feedId, catalogsFeedsUpdateRequest);
        // TODO: complete test assertions
    }
    
    /**
     * Get catalogs items batch
     *
     * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Get a single catalogs items batch created by the \&quot;operating user_account\&quot;.
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void itemsBatchGetTest() throws Exception {
        // TODO: assign appropriate parameter values
        String batchId = null;

        // TODO: delete this line and uncomment the next
        // CatalogsItemsBatch response = api.itemsBatchGet(batchId);
        // TODO: complete test assertions
    }
    
    /**
     * Perform an operation on an item batch
     *
     * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  This endpoint supports multiple operations on a set of one or more catalog items.
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void itemsBatchPostTest() throws Exception {
        // TODO: assign appropriate parameter values
        CatalogsItemsBatchRequest catalogsItemsBatchRequest = null;

        // TODO: delete this line and uncomment the next
        // CatalogsItemsBatch response = api.itemsBatchPost(catalogsItemsBatchRequest);
        // TODO: complete test assertions
    }
    
    /**
     * Get catalogs items
     *
     * Get the items of the catalog created by the \&quot;operating user_account\&quot;
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void itemsGetTest() throws Exception {
        // TODO: assign appropriate parameter values
        String country = null;
        List<String> itemIds = null;
        String language = null;

        // TODO: delete this line and uncomment the next
        // CatalogsItems response = api.itemsGet(country, itemIds, language);
        // TODO: complete test assertions
    }
    
}
