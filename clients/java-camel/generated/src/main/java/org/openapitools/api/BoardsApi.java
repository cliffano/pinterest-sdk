/**
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.4.0).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.api;

import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.model.rest.RestParamType;
import org.springframework.stereotype.Component;
import org.openapitools.model.*;
import org.apache.camel.model.rest.RestBindingMode;
import org.apache.camel.LoggingLevel;

@Component
public class BoardsApi extends RouteBuilder {

    @Override
    public void configure() throws Exception {
        

        /**
        POST /boards/{board_id}/sections : Create board section
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("boards:read","See your public boards, including group boards you join")
                        .withScope("boards:write","Create, update, or delete your public boards")
                
            .endSecurityDefinition()
            .post("/boards/{board_id}/sections")
                .description("Create board section")
                .id("boardSectionsCreateApi")
                .produces("application/json")
                .outType(BoardSection.class)
                .consumes("application/json")
                .type(BoardSection.class)
                
                .param()
                    .name("boardId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Unique identifier of a board.")
                .endParam()
                .param()
                    .name("boardSection")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Create a board section.")
                .endParam()
                .to("direct:boardSectionsCreate");
        

        /**
        DELETE /boards/{board_id}/sections/{section_id} : Delete board section
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("boards:read","See your public boards, including group boards you join")
                        .withScope("boards:write","Create, update, or delete your public boards")
                
            .endSecurityDefinition()
            .delete("/boards/{board_id}/sections/{section_id}")
                .description("Delete board section")
                .id("boardSectionsDeleteApi")
                .produces("application/json")
                .outType(Void.class)
                .param()
                    .name("boardId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Unique identifier of a board.")
                .endParam()
                .param()
                    .name("sectionId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Unique identifier of a board section.")
                .endParam()
                .to("direct:boardSectionsDelete");
        

        /**
        GET /boards/{board_id}/sections : List board sections
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("boards:read","See your public boards, including group boards you join")
                
            .endSecurityDefinition()
            .get("/boards/{board_id}/sections")
                .description("List board sections")
                .id("boardSectionsListApi")
                .produces("application/json")
                .outType(Paginated.class)
                .param()
                    .name("boardId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Unique identifier of a board.")
                .endParam()
                .param()
                    .name("bookmark")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Cursor used to fetch the next page of items")
                .endParam()
                .param()
                    .name("pageSize")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/api/v5/#tag/Pagination'>Pagination</a> for more information.")
                .endParam()
                .to("direct:boardSectionsList");
        

        /**
        GET /boards/{board_id}/sections/{section_id}/pins : List Pins on board section
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("boards:read","See your public boards, including group boards you join")
                        .withScope("pins:read","See your public Pins")
                
            .endSecurityDefinition()
            .get("/boards/{board_id}/sections/{section_id}/pins")
                .description("List Pins on board section")
                .id("boardSectionsListPinsApi")
                .produces("application/json")
                .outType(Paginated.class)
                .param()
                    .name("boardId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Unique identifier of a board.")
                .endParam()
                .param()
                    .name("sectionId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Unique identifier of a board section.")
                .endParam()
                .param()
                    .name("bookmark")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Cursor used to fetch the next page of items")
                .endParam()
                .param()
                    .name("pageSize")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/api/v5/#tag/Pagination'>Pagination</a> for more information.")
                .endParam()
                .to("direct:boardSectionsListPins");
        

        /**
        PATCH /boards/{board_id}/sections/{section_id} : Update board section
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("boards:read","See your public boards, including group boards you join")
                        .withScope("boards:write","Create, update, or delete your public boards")
                
            .endSecurityDefinition()
            .patch("/boards/{board_id}/sections/{section_id}")
                .description("Update board section")
                .id("boardSectionsUpdateApi")
                .produces("application/json")
                .outType(BoardSection.class)
                .consumes("application/json")
                .type(BoardSection.class)
                
                .param()
                    .name("boardId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Unique identifier of a board.")
                .endParam()
                .param()
                    .name("sectionId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Unique identifier of a board section.")
                .endParam()
                .param()
                    .name("boardSection")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Update a board section.")
                .endParam()
                .to("direct:boardSectionsUpdate");
        

        /**
        POST /boards : Create board
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("boards:read","See your public boards, including group boards you join")
                        .withScope("boards:write","Create, update, or delete your public boards")
                
            .endSecurityDefinition()
            .post("/boards")
                .description("Create board")
                .id("boardsCreateApi")
                .produces("application/json")
                .outType(Board.class)
                .consumes("application/json")
                .type(Board.class)
                
                .param()
                    .name("board")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Create a board using a single board json object.")
                .endParam()
                .to("direct:boardsCreate");
        

        /**
        DELETE /boards/{board_id} : Delete board
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("boards:read","See your public boards, including group boards you join")
                        .withScope("boards:write","Create, update, or delete your public boards")
                
            .endSecurityDefinition()
            .delete("/boards/{board_id}")
                .description("Delete board")
                .id("boardsDeleteApi")
                .produces("application/json")
                .outType(Void.class)
                .param()
                    .name("boardId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Unique identifier of a board.")
                .endParam()
                .to("direct:boardsDelete");
        

        /**
        GET /boards/{board_id} : Get board
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("boards:read","See your public boards, including group boards you join")
                
            .endSecurityDefinition()
            .get("/boards/{board_id}")
                .description("Get board")
                .id("boardsGetApi")
                .produces("application/json")
                .outType(Board.class)
                .param()
                    .name("boardId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Unique identifier of a board.")
                .endParam()
                .to("direct:boardsGet");
        

        /**
        GET /boards : List boards
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("boards:read","See your public boards, including group boards you join")
                
            .endSecurityDefinition()
            .get("/boards")
                .description("List boards")
                .id("boardsListApi")
                .produces("application/json")
                .outType(Paginated.class)
                .param()
                    .name("bookmark")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Cursor used to fetch the next page of items")
                .endParam()
                .param()
                    .name("pageSize")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/api/v5/#tag/Pagination'>Pagination</a> for more information.")
                .endParam()
                .param()
                    .name("privacy")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Privacy setting for a board.")
                .endParam()
                .to("direct:boardsList");
        

        /**
        GET /boards/{board_id}/pins : List Pins on board
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("boards:read","See your public boards, including group boards you join")
                        .withScope("pins:read","See your public Pins")
                
            .endSecurityDefinition()
            .get("/boards/{board_id}/pins")
                .description("List Pins on board")
                .id("boardsListPinsApi")
                .produces("application/json")
                .outType(Paginated.class)
                .param()
                    .name("boardId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Unique identifier of a board.")
                .endParam()
                .param()
                    .name("bookmark")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Cursor used to fetch the next page of items")
                .endParam()
                .param()
                    .name("pageSize")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/api/v5/#tag/Pagination'>Pagination</a> for more information.")
                .endParam()
                .to("direct:boardsListPins");
        

        /**
        PATCH /boards/{board_id} : Update board
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("boards:read","See your public boards, including group boards you join")
                        .withScope("boards:write","Create, update, or delete your public boards")
                
            .endSecurityDefinition()
            .patch("/boards/{board_id}")
                .description("Update board")
                .id("boardsUpdateApi")
                .produces("application/json")
                .outType(Board.class)
                .consumes("application/json")
                .type(BoardUpdate.class)
                
                .param()
                    .name("boardId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Unique identifier of a board.")
                .endParam()
                .param()
                    .name("boardUpdate")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Update a board.")
                .endParam()
                .to("direct:boardsUpdate");
        
    }
}
