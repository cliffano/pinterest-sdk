/**
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.4.0).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.api;

import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.model.rest.RestParamType;
import org.springframework.stereotype.Component;
import org.openapitools.model.*;
import org.apache.camel.model.rest.RestBindingMode;
import org.apache.camel.LoggingLevel;

@Component
public class CatalogsApi extends RouteBuilder {

    @Override
    public void configure() throws Exception {
        

        /**
        POST /catalogs/product_groups : Create product group
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:write","Create, update, or delete your catalogs data")
                
            .endSecurityDefinition()
            .post("/catalogs/product_groups")
                .description("Create product group")
                .id("catalogsProductGroupsCreateApi")
                .produces("application/json")
                .outType(Object.class)
                .consumes("application/json")
                .type(CatalogsProductGroupCreateRequest.class)
                
                .param()
                    .name("catalogsProductGroupCreateRequest")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Request object used to created a catalogs product group.")
                .endParam()
                .to("direct:catalogsProductGroupsCreate");
        

        /**
        DELETE /catalogs/product_groups/{product_group_id} : Delete product group
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:write","Create, update, or delete your catalogs data")
                
            .endSecurityDefinition()
            .delete("/catalogs/product_groups/{product_group_id}")
                .description("Delete product group")
                .id("catalogsProductGroupsDeleteApi")
                .produces("application/json")
                .outType(Void.class)
                .param()
                    .name("productGroupId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Unique identifier of a product group")
                .endParam()
                .to("direct:catalogsProductGroupsDelete");
        

        /**
        GET /catalogs/product_groups : Get product groups list
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:read","See all of your catalogs data")
                
            .endSecurityDefinition()
            .get("/catalogs/product_groups")
                .description("Get product groups list")
                .id("catalogsProductGroupsListApi")
                .produces("application/json")
                .outType(Paginated.class)
                .param()
                    .name("feedId")
                    .type(RestParamType.query)
                    .required(true)
                    .description("Unique identifier of a feed")
                .endParam()
                .param()
                    .name("bookmark")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Cursor used to fetch the next page of items")
                .endParam()
                .param()
                    .name("pageSize")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/api/v5/#tag/Pagination'>Pagination</a> for more information.")
                .endParam()
                .to("direct:catalogsProductGroupsList");
        

        /**
        PATCH /catalogs/product_groups/{product_group_id} : Update product group
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:write","Create, update, or delete your catalogs data")
                
            .endSecurityDefinition()
            .patch("/catalogs/product_groups/{product_group_id}")
                .description("Update product group")
                .id("catalogsProductGroupsUpdateApi")
                .produces("application/json")
                .outType(CatalogsProductGroup.class)
                .consumes("application/json")
                .type(CatalogsProductGroupUpdateRequest.class)
                
                .param()
                    .name("productGroupId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Unique identifier of a product group")
                .endParam()
                .param()
                    .name("catalogsProductGroupUpdateRequest")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Request object used to Update a catalogs product group.")
                .endParam()
                .to("direct:catalogsProductGroupsUpdate");
        

        /**
        GET /catalogs/feeds/{feed_id}/processing_results : List processing results for a given feed
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:read","See all of your catalogs data")
                
            .endSecurityDefinition()
            .get("/catalogs/feeds/{feed_id}/processing_results")
                .description("List processing results for a given feed")
                .id("feedProcessingResultsListApi")
                .produces("application/json")
                .outType(Paginated.class)
                .param()
                    .name("feedId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Unique identifier of a feed")
                .endParam()
                .param()
                    .name("bookmark")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Cursor used to fetch the next page of items")
                .endParam()
                .param()
                    .name("pageSize")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/api/v5/#tag/Pagination'>Pagination</a> for more information.")
                .endParam()
                .to("direct:feedProcessingResultsList");
        

        /**
        POST /catalogs/feeds : Create feed
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:read","See all of your catalogs data")
                        .withScope("catalogs:write","Create, update, or delete your catalogs data")
                
            .endSecurityDefinition()
            .post("/catalogs/feeds")
                .description("Create feed")
                .id("feedsCreateApi")
                .produces("application/json")
                .outType(CatalogsFeed.class)
                .consumes("application/json")
                .type(CatalogsFeedsCreateRequest.class)
                
                .param()
                    .name("catalogsFeedsCreateRequest")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Request object used to created a feed.")
                .endParam()
                .to("direct:feedsCreate");
        

        /**
        DELETE /catalogs/feeds/{feed_id} : Delete feed
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:read","See all of your catalogs data")
                        .withScope("catalogs:write","Create, update, or delete your catalogs data")
                
            .endSecurityDefinition()
            .delete("/catalogs/feeds/{feed_id}")
                .description("Delete feed")
                .id("feedsDeleteApi")
                .produces("application/json")
                .outType(Void.class)
                .param()
                    .name("feedId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Unique identifier of a feed")
                .endParam()
                .to("direct:feedsDelete");
        

        /**
        GET /catalogs/feeds/{feed_id} : Get feed
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:read","See all of your catalogs data")
                
            .endSecurityDefinition()
            .get("/catalogs/feeds/{feed_id}")
                .description("Get feed")
                .id("feedsGetApi")
                .produces("application/json")
                .outType(CatalogsFeed.class)
                .param()
                    .name("feedId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Unique identifier of a feed")
                .endParam()
                .to("direct:feedsGet");
        

        /**
        GET /catalogs/feeds : List feeds
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:read","See all of your catalogs data")
                
            .endSecurityDefinition()
            .get("/catalogs/feeds")
                .description("List feeds")
                .id("feedsListApi")
                .produces("application/json")
                .outType(Paginated.class)
                .param()
                    .name("bookmark")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Cursor used to fetch the next page of items")
                .endParam()
                .param()
                    .name("pageSize")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/api/v5/#tag/Pagination'>Pagination</a> for more information.")
                .endParam()
                .to("direct:feedsList");
        

        /**
        PATCH /catalogs/feeds/{feed_id} : Update feed
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:read","See all of your catalogs data")
                        .withScope("catalogs:write","Create, update, or delete your catalogs data")
                
            .endSecurityDefinition()
            .patch("/catalogs/feeds/{feed_id}")
                .description("Update feed")
                .id("feedsUpdateApi")
                .produces("application/json")
                .outType(CatalogsFeed.class)
                .consumes("application/json")
                .type(CatalogsFeedsUpdateRequest.class)
                
                .param()
                    .name("feedId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Unique identifier of a feed")
                .endParam()
                .param()
                    .name("catalogsFeedsUpdateRequest")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Request object used to update a feed.")
                .endParam()
                .to("direct:feedsUpdate");
        

        /**
        GET /catalogs/items/batch/{batch_id} : Get catalogs items batch
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:read","See all of your catalogs data")
                
            .endSecurityDefinition()
            .get("/catalogs/items/batch/{batch_id}")
                .description("Get catalogs items batch")
                .id("itemsBatchGetApi")
                .produces("application/json")
                .outType(CatalogsItemsBatch.class)
                .param()
                    .name("batchId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Id of a catalogs items batch to fetch")
                .endParam()
                .to("direct:itemsBatchGet");
        

        /**
        POST /catalogs/items/batch : Perform an operation on an item batch
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:read","See all of your catalogs data")
                        .withScope("catalogs:write","Create, update, or delete your catalogs data")
                
            .endSecurityDefinition()
            .post("/catalogs/items/batch")
                .description("Perform an operation on an item batch")
                .id("itemsBatchPostApi")
                .produces("application/json")
                .outType(CatalogsItemsBatch.class)
                .consumes("application/json")
                .type(CatalogsItemsBatchRequest.class)
                
                .param()
                    .name("catalogsItemsBatchRequest")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Request object used to create catalogs items in a batch")
                .endParam()
                .to("direct:itemsBatchPost");
        

        /**
        GET /catalogs/items : Get catalogs items
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:read","See all of your catalogs data")
                
            .endSecurityDefinition()
            .get("/catalogs/items")
                .description("Get catalogs items")
                .id("itemsGetApi")
                .produces("application/json")
                .outType(CatalogsItems.class)
                .param()
                    .name("country")
                    .type(RestParamType.query)
                    .required(true)
                    .description("Country for the Catalogs Items")
                .endParam()
                .param()
                    .name("itemIds")
                    .type(RestParamType.query)
                    .required(true)
                    .description("Catalos Item ids")
                .endParam()
                .param()
                    .name("language")
                    .type(RestParamType.query)
                    .required(true)
                    .description("Language for the Catalogs Items")
                .endParam()
                .to("direct:itemsGet");
        
    }
}
