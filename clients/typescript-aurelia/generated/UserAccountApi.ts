/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { autoinject } from 'aurelia-framework';
import { HttpClient } from 'aurelia-http-client';
import { Api } from './Api';
import { AuthStorage } from './AuthStorage';
import {
  Account,
  AnalyticsMetricsResponse,
} from './models';

/**
 * userAccountAnalytics - parameters interface
 */
export interface IUserAccountAnalyticsParams {
  startDate: string;
  endDate: string;
  fromClaimedContent?: 'OTHER' | 'CLAIMED' | 'BOTH';
  pinFormat?: 'ALL' | 'PRODUCT' | 'REGULAR' | 'VIDEO';
  appTypes?: 'ALL' | 'MOBILE' | 'TABLET' | 'WEB';
  metricTypes?: Array<'ENGAGEMENT' | 'ENGAGEMENT_RATE' | 'IMPRESSION' | 'OUTBOUND_CLICK' | 'OUTBOUND_CLICK_RATE' | 'PIN_CLICK' | 'PIN_CLICK_RATE' | 'SAVE' | 'SAVE_RATE'>;
  splitField?: 'NO_SPLIT' | 'APP_TYPE' | 'OWNED_CONTENT' | 'PIN_FORMAT';
  adAccountId?: string;
}

/**
 * userAccountGet - parameters interface
 */
export interface IUserAccountGetParams {
  adAccountId?: string;
}

/**
 * UserAccountApi - API class
 */
@autoinject()
export class UserAccountApi extends Api {

  /**
   * Creates a new UserAccountApi class.
   *
   * @param httpClient The Aurelia HTTP client to be injected.
   * @param authStorage A storage for authentication data.
   */
  constructor(httpClient: HttpClient, authStorage: AuthStorage) {
    super(httpClient, authStorage);
  }

  /**
   * Get user account analytics
   * Get analytics for the \&quot;operation user_account\&quot; - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;.
   * @param params.startDate Metric report start date (UTC). Format: YYYY-MM-DD
   * @param params.endDate Metric report end date (UTC). Format: YYYY-MM-DD
   * @param params.fromClaimedContent Filter on Pins that match your claimed domain.
   * @param params.pinFormat Pin formats to get data for, default is all.
   * @param params.appTypes Apps or devices to get data for, default is all.
   * @param params.metricTypes Metric types to get data for, default is all. 
   * @param params.splitField How to split the data into groups. Not including this param means data won\&#39;t be split.
   * @param params.adAccountId Unique identifier of an ad account.
   */
  async userAccountAnalytics(params: IUserAccountAnalyticsParams): Promise<{ [key: string]: AnalyticsMetricsResponse; }> {
    // Verify required parameters are set
    this.ensureParamIsSet('userAccountAnalytics', params, 'startDate');
    this.ensureParamIsSet('userAccountAnalytics', params, 'endDate');

    // Create URL to call
    const url = `${this.basePath}/user_account/analytics`;

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()
      // Set query parameters
      .withParams({ 
        'start_date': params['startDate'],
        'end_date': params['endDate'],
        'from_claimed_content': params['fromClaimedContent'],
        'pin_format': params['pinFormat'],
        'app_types': params['appTypes'],
        'metric_types': params['metricTypes'],
        'split_field': params['splitField'],
        'ad_account_id': params['adAccountId'],
      })

      // Authentication 'pinterest_oauth2' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Get user account
   * Get account information for the \&quot;operation user_account\&quot; - By default, the \&quot;operation user_account\&quot; is the token user_account.  If using Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;. See &lt;a href&#x3D;\&#39;/docs/api/v5/#tag/Understanding-business-access\&#39;&gt;Understanding Business Access&lt;/a&gt; for more information.
   * @param params.adAccountId Unique identifier of an ad account.
   */
  async userAccountGet(params: IUserAccountGetParams): Promise<Account> {
    // Verify required parameters are set

    // Create URL to call
    const url = `${this.basePath}/user_account`;

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()
      // Set query parameters
      .withParams({ 
        'ad_account_id': params['adAccountId'],
      })

      // Authentication 'pinterest_oauth2' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

}

