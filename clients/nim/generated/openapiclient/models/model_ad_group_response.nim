#
# Pinterest REST API
# 
# Pinterest's REST API
# The version of the OpenAPI document: 5.12.0
# Contact: blah+oapicf@cliffano.com
# Generated by: https://openapi-generator.tech
#

import json
import tables

import model_action_type
import model_ad_group_common_optimization_goal_metadata
import model_ad_group_common_tracking_urls
import model_ad_group_summary_status
import model_any_type
import model_budget_type
import model_entity_status
import model_pacing_delivery_type
import model_placement_group_type
import model_targeting_spec

type BidStrategyType* {.pure.} = enum
  AUTOMATICBID
  MAXBID
  TARGETAVG
  Null

type ConversionLearningModeType* {.pure.} = enum
  NOTACTIVE
  ACTIVE
  Null

type AdGroupResponse* = object
  ## 
  name*: string ## Ad group name.
  status*: EntityStatus ## Ad group/entity status.
  budgetInMicroCurrency*: int ## Budget in micro currency. This field is **REQUIRED** for non-CBO (campaign budget optimization) campaigns.  A CBO campaign automatically generates ad group budgets from its campaign budget to maximize campaign outcome. A CBO campaign is limited to 70 or less ad groups.
  bidInMicroCurrency*: int ## Bid price in micro currency. This field is **REQUIRED** for the following campaign objective_type/billable_event combinations: AWARENESS/IMPRESSION, CONSIDERATION/CLICKTHROUGH, CATALOG_SALES/CLICKTHROUGH, VIDEO_VIEW/VIDEO_V_50_MRC.
  optimizationGoalMetadata*: AdGroupCommon_optimization_goal_metadata
  budgetType*: BudgetType
  startTime*: int ## Ad group start time. Unix timestamp in seconds. Defaults to current time.
  endTime*: int ## Ad group end time. Unix timestamp in seconds.
  targetingSpec*: TargetingSpec
  lifetimeFrequencyCap*: int ## Set a limit to the number of times a promoted pin from this campaign can be impressed by a pinner within the past rolling 30 days. Only available for CPM (cost per mille (1000 impressions))  ad groups. A CPM ad group has an IMPRESSION <a href=\"https://developers.pinterest.com/docs/redoc/#section/Billable-event\">billable_event</a> value. This field **REQUIRES** the `end_time` field.
  trackingUrls*: AdGroupCommon_tracking_urls
  autoTargetingEnabled*: bool ## Enable auto-targeting for ad group. Also known as <a href=\"https://help.pinterest.com/en/business/article/expanded-targeting\" target=\"_blank\">\"expanded targeting\"</a>.
  placementGroup*: PlacementGroupType ## <a href=\"https://developers.pinterest.com/docs/redoc/#section/Placement-group\">Placement group</a>.
  pacingDeliveryType*: PacingDeliveryType
  campaignId*: string ## Campaign ID of the ad group.
  billableEvent*: ActionType
  bidStrategyType*: BidStrategyType ## Bid strategy type
  id*: string ## Ad group ID.
  adAccountId*: string ## Advertiser ID.
  createdTime*: int ## Ad group creation time. Unix timestamp in seconds.
  updatedTime*: int ## Ad group last update time. Unix timestamp in seconds.
  `type`*: string ## Always \"adgroup\".
  conversionLearningModeType*: ConversionLearningModeType ## oCPM learn mode
  summaryStatus*: AdGroupSummaryStatus ## Ad group summary status.
  feedProfileId*: string ## Feed Profile ID associated to the adgroup.
  dcaAssets*: AnyType ## [DCA] The Dynamic creative assets to use for DCA. Dynamic Creative Assembly (DCA) accepts basic creative assets of an ad (image, video, title, call to action, logo etc). Then it automatically generates optimized ad combinations based on these assets.

func `%`*(v: BidStrategyType): JsonNode =
  let str = case v:
    of BidStrategyType.AUTOMATICBID: "AUTOMATIC_BID"
    of BidStrategyType.MAXBID: "MAX_BID"
    of BidStrategyType.TARGETAVG: "TARGET_AVG"
    of BidStrategyType.Null: "null"

  JsonNode(kind: JString, str: str)

func `$`*(v: BidStrategyType): string =
  result = case v:
    of BidStrategyType.AUTOMATICBID: "AUTOMATIC_BID"
    of BidStrategyType.MAXBID: "MAX_BID"
    of BidStrategyType.TARGETAVG: "TARGET_AVG"
    of BidStrategyType.Null: "null"

func `%`*(v: ConversionLearningModeType): JsonNode =
  let str = case v:
    of ConversionLearningModeType.NOTACTIVE: "NOT_ACTIVE"
    of ConversionLearningModeType.ACTIVE: "ACTIVE"
    of ConversionLearningModeType.Null: "null"

  JsonNode(kind: JString, str: str)

func `$`*(v: ConversionLearningModeType): string =
  result = case v:
    of ConversionLearningModeType.NOTACTIVE: "NOT_ACTIVE"
    of ConversionLearningModeType.ACTIVE: "ACTIVE"
    of ConversionLearningModeType.Null: "null"
