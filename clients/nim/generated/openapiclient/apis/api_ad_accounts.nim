#
# Pinterest REST API
# 
# Pinterest's REST API
# The version of the OpenAPI document: 5.3.0
# Contact: blah@cliffano.com
# Generated by: https://openapi-generator.tech
#

import httpclient
import json
import logging
import marshal
import options
import strformat
import strutils
import tables
import typetraits
import uri

import ../models/model_ads_analytics_create_async_request
import ../models/model_ads_analytics_create_async_response
import ../models/model_ads_analytics_get_async_response
import ../models/model_any_type
import ../models/model_error
import ../models/model_granularity
import ../models/model_paginated
import ../models/model_object

const basepath = "https://api.pinterest.com/v5"

template constructResult[T](response: Response): untyped =
  if response.code in {Http200, Http201, Http202, Http204, Http206}:
    try:
      when name(stripGenericParams(T.typedesc).typedesc) == name(Table):
        (some(json.to(parseJson(response.body), T.typedesc)), response)
      else:
        (some(marshal.to[T](response.body)), response)
    except JsonParsingError:
      # The server returned a malformed response though the response code is 2XX
      # TODO: need better error handling
      error("JsonParsingError")
      (none(T.typedesc), response)
  else:
    (none(T.typedesc), response)


proc adAccountAnalytics*(httpClient: HttpClient, adAccountId: string, startDate: string, endDate: string, columns: seq[Columns], granularity: Granularity, clickWindowDays: ClickWindowDays, engagementWindowDays: EngagementWindowDays, viewWindowDays: ViewWindowDays, conversionReportTime: string): (Option[seq[Table[string, object]]], Response) =
  ## Get ad account analytics
  let query_for_api_call = encodeQuery([
    ("start_date", $startDate), # Metric report start date (UTC). Format: YYYY-MM-DD
    ("end_date", $endDate), # Metric report end date (UTC). Format: YYYY-MM-DD
    ("columns", $columns.join(",")), # Columns to retrieve. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile's currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it's microdollars. Otherwise, it's in microunits of the advertiser's currency.<br/>For example, if the advertiser's currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).<br/>If a column has no value, it may not be returned
    ("granularity", $granularity), # Granularity
    ("click_window_days", $clickWindowDays), # Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.
    ("engagement_window_days", $engagementWindowDays), # Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.
    ("view_window_days", $viewWindowDays), # Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `1` day.
    ("conversion_report_time", $conversionReportTime), # The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event.
  ])

  let response = httpClient.get(basepath & fmt"/ad_accounts/{ad_account_id}/analytics" & "?" & query_for_api_call)
  constructResult[seq[Table[string, object]]](response)


proc adAccountsList*(httpClient: HttpClient, bookmark: string, pageSize: int, includeSharedAccounts: bool): (Option[Paginated], Response) =
  ## List ad accounts
  let query_for_api_call = encodeQuery([
    ("bookmark", $bookmark), # Cursor used to fetch the next page of items
    ("page_size", $pageSize), # Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/api/v5/#tag/Pagination'>Pagination</a> for more information.
    ("include_shared_accounts", $includeSharedAccounts), # Include shared ad accounts
  ])

  let response = httpClient.get(basepath & "/ad_accounts" & "?" & query_for_api_call)
  constructResult[Paginated](response)


proc adGroupsAnalytics*(httpClient: HttpClient, adAccountId: string, startDate: string, endDate: string, adGroupIds: seq[string], columns: seq[Columns], granularity: Granularity, clickWindowDays: ClickWindowDays, engagementWindowDays: EngagementWindowDays, viewWindowDays: ViewWindowDays, conversionReportTime: string): (Option[seq[Table[string, object]]], Response) =
  ## Get ad group analytics
  let query_for_api_call = encodeQuery([
    ("start_date", $startDate), # Metric report start date (UTC). Format: YYYY-MM-DD
    ("end_date", $endDate), # Metric report end date (UTC). Format: YYYY-MM-DD
    ("ad_group_ids", $adGroupIds.join(",")), # List of Ad group Ids to use to filter the results.
    ("columns", $columns.join(",")), # Columns to retrieve. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile's currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it's microdollars. Otherwise, it's in microunits of the advertiser's currency.<br/>For example, if the advertiser's currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).<br/>If a column has no value, it may not be returned
    ("granularity", $granularity), # Granularity
    ("click_window_days", $clickWindowDays), # Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.
    ("engagement_window_days", $engagementWindowDays), # Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.
    ("view_window_days", $viewWindowDays), # Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `1` day.
    ("conversion_report_time", $conversionReportTime), # The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event.
  ])

  let response = httpClient.get(basepath & fmt"/ad_accounts/{ad_account_id}/ad_groups/analytics" & "?" & query_for_api_call)
  constructResult[seq[Table[string, object]]](response)


proc adGroupsList*(httpClient: HttpClient, adAccountId: string, campaignIds: seq[string], adGroupIds: seq[string], entityStatuses: seq[EntityStatuses], pageSize: int, order: string, bookmark: string, translateInterestsToNames: bool): (Option[Paginated], Response) =
  ## List ad groups
  let query_for_api_call = encodeQuery([
    ("campaign_ids", $campaignIds.join(",")), # List of Campaign Ids to use to filter the results.
    ("ad_group_ids", $adGroupIds.join(",")), # List of Ad group Ids to use to filter the results.
    ("entity_statuses", $entityStatuses.join(",")), # Entity status
    ("page_size", $pageSize), # Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/api/v5/#tag/Pagination'>Pagination</a> for more information.
    ("order", $order), # The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items.
    ("bookmark", $bookmark), # Cursor used to fetch the next page of items
    ("translate_interests_to_names", $translateInterestsToNames), # Return interests as text names (if value is true) rather than topic IDs.
  ])

  let response = httpClient.get(basepath & fmt"/ad_accounts/{ad_account_id}/ad_groups" & "?" & query_for_api_call)
  constructResult[Paginated](response)


proc adsAnalytics*(httpClient: HttpClient, adAccountId: string, startDate: string, endDate: string, adIds: seq[string], columns: seq[Columns], granularity: Granularity, clickWindowDays: ClickWindowDays, engagementWindowDays: EngagementWindowDays, viewWindowDays: ViewWindowDays, conversionReportTime: string): (Option[seq[Table[string, object]]], Response) =
  ## Get ad analytics
  let query_for_api_call = encodeQuery([
    ("start_date", $startDate), # Metric report start date (UTC). Format: YYYY-MM-DD
    ("end_date", $endDate), # Metric report end date (UTC). Format: YYYY-MM-DD
    ("ad_ids", $adIds.join(",")), # List of Ad Ids to use to filter the results.
    ("columns", $columns.join(",")), # Columns to retrieve. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile's currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it's microdollars. Otherwise, it's in microunits of the advertiser's currency.<br/>For example, if the advertiser's currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).<br/>If a column has no value, it may not be returned
    ("granularity", $granularity), # Granularity
    ("click_window_days", $clickWindowDays), # Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.
    ("engagement_window_days", $engagementWindowDays), # Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.
    ("view_window_days", $viewWindowDays), # Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `1` day.
    ("conversion_report_time", $conversionReportTime), # The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event.
  ])

  let response = httpClient.get(basepath & fmt"/ad_accounts/{ad_account_id}/ads/analytics" & "?" & query_for_api_call)
  constructResult[seq[Table[string, object]]](response)


proc adsList*(httpClient: HttpClient, adAccountId: string, campaignIds: seq[string], adGroupIds: seq[string], adIds: seq[string], entityStatuses: seq[EntityStatuses], pageSize: int, order: string, bookmark: string): (Option[Paginated], Response) =
  ## List ads
  let query_for_api_call = encodeQuery([
    ("campaign_ids", $campaignIds.join(",")), # List of Campaign Ids to use to filter the results.
    ("ad_group_ids", $adGroupIds.join(",")), # List of Ad group Ids to use to filter the results.
    ("ad_ids", $adIds.join(",")), # List of Ad Ids to use to filter the results.
    ("entity_statuses", $entityStatuses.join(",")), # Entity status
    ("page_size", $pageSize), # Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/api/v5/#tag/Pagination'>Pagination</a> for more information.
    ("order", $order), # The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items.
    ("bookmark", $bookmark), # Cursor used to fetch the next page of items
  ])

  let response = httpClient.get(basepath & fmt"/ad_accounts/{ad_account_id}/ads" & "?" & query_for_api_call)
  constructResult[Paginated](response)


proc analyticsCreateReport*(httpClient: HttpClient, adAccountId: string, adsAnalyticsCreateAsyncRequest: AdsAnalyticsCreateAsyncRequest): (Option[AdsAnalyticsCreateAsyncResponse], Response) =
  ## Create async request for an account analytics report
  httpClient.headers["Content-Type"] = "application/json"

  let response = httpClient.post(basepath & fmt"/ad_accounts/{ad_account_id}/reports", $(%adsAnalyticsCreateAsyncRequest))
  constructResult[AdsAnalyticsCreateAsyncResponse](response)


proc analyticsGetReport*(httpClient: HttpClient, adAccountId: string, token: string): (Option[AdsAnalyticsGetAsyncResponse], Response) =
  ## Get the account analytics report created by the async call
  let query_for_api_call = encodeQuery([
    ("token", $token), # Token returned from the post request creation call
  ])

  let response = httpClient.get(basepath & fmt"/ad_accounts/{ad_account_id}/reports" & "?" & query_for_api_call)
  constructResult[AdsAnalyticsGetAsyncResponse](response)


proc campaignsAnalytics*(httpClient: HttpClient, adAccountId: string, startDate: string, endDate: string, campaignIds: seq[string], columns: seq[Columns], granularity: Granularity, clickWindowDays: ClickWindowDays, engagementWindowDays: EngagementWindowDays, viewWindowDays: ViewWindowDays, conversionReportTime: string): (Option[seq[Table[string, object]]], Response) =
  ## Get campaign analytics
  let query_for_api_call = encodeQuery([
    ("start_date", $startDate), # Metric report start date (UTC). Format: YYYY-MM-DD
    ("end_date", $endDate), # Metric report end date (UTC). Format: YYYY-MM-DD
    ("campaign_ids", $campaignIds.join(",")), # List of Campaign Ids to use to filter the results.
    ("columns", $columns.join(",")), # Columns to retrieve. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile's currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it's microdollars. Otherwise, it's in microunits of the advertiser's currency.<br/>For example, if the advertiser's currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).<br/>If a column has no value, it may not be returned
    ("granularity", $granularity), # Granularity
    ("click_window_days", $clickWindowDays), # Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.
    ("engagement_window_days", $engagementWindowDays), # Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.
    ("view_window_days", $viewWindowDays), # Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `1` day.
    ("conversion_report_time", $conversionReportTime), # The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event.
  ])

  let response = httpClient.get(basepath & fmt"/ad_accounts/{ad_account_id}/campaigns/analytics" & "?" & query_for_api_call)
  constructResult[seq[Table[string, object]]](response)


proc campaignsList*(httpClient: HttpClient, adAccountId: string, campaignIds: seq[string], entityStatuses: seq[EntityStatuses], pageSize: int, order: string, bookmark: string): (Option[Paginated], Response) =
  ## List campaigns
  let query_for_api_call = encodeQuery([
    ("campaign_ids", $campaignIds.join(",")), # List of Campaign Ids to use to filter the results.
    ("entity_statuses", $entityStatuses.join(",")), # Entity status
    ("page_size", $pageSize), # Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/api/v5/#tag/Pagination'>Pagination</a> for more information.
    ("order", $order), # The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items.
    ("bookmark", $bookmark), # Cursor used to fetch the next page of items
  ])

  let response = httpClient.get(basepath & fmt"/ad_accounts/{ad_account_id}/campaigns" & "?" & query_for_api_call)
  constructResult[Paginated](response)


proc productGroupsAnalytics*(httpClient: HttpClient, adAccountId: string, startDate: string, endDate: string, productGroupIds: seq[string], columns: seq[Columns], granularity: Granularity, clickWindowDays: ClickWindowDays, engagementWindowDays: EngagementWindowDays, viewWindowDays: ViewWindowDays, conversionReportTime: string): (Option[seq[Table[string, object]]], Response) =
  ## Get product group analytics
  let query_for_api_call = encodeQuery([
    ("start_date", $startDate), # Metric report start date (UTC). Format: YYYY-MM-DD
    ("end_date", $endDate), # Metric report end date (UTC). Format: YYYY-MM-DD
    ("product_group_ids", $productGroupIds.join(",")), # List of Product group Ids to use to filter the results.
    ("columns", $columns.join(",")), # Columns to retrieve. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile's currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it's microdollars. Otherwise, it's in microunits of the advertiser's currency.<br/>For example, if the advertiser's currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).<br/>If a column has no value, it may not be returned
    ("granularity", $granularity), # Granularity
    ("click_window_days", $clickWindowDays), # Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.
    ("engagement_window_days", $engagementWindowDays), # Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.
    ("view_window_days", $viewWindowDays), # Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `1` day.
    ("conversion_report_time", $conversionReportTime), # The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event.
  ])

  let response = httpClient.get(basepath & fmt"/ad_accounts/{ad_account_id}/product_groups/analytics" & "?" & query_for_api_call)
  constructResult[seq[Table[string, object]]](response)

