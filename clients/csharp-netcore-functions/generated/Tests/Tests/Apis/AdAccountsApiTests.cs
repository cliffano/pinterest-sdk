/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: blah@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Apis;
// uncomment below to import models
//using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing AdAccountsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AdAccountsApiTests : IDisposable
    {
        private AdAccountsApi instance;

        public AdAccountsApiTests()
        {
            instance = new AdAccountsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AdAccountsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AdAccountsApi
            //Assert.IsType<AdAccountsApi>(instance);
        }

        /// <summary>
        /// Test AdAccountAnalytics
        /// </summary>
        [Fact]
        public void AdAccountAnalyticsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //DateTime startDate = null;
            //DateTime endDate = null;
            //List<string> columns = null;
            //Granularity granularity = null;
            //int? clickWindowDays = null;
            //int? engagementWindowDays = null;
            //int? viewWindowDays = null;
            //string conversionReportTime = null;
            //var response = instance.AdAccountAnalytics(adAccountId, startDate, endDate, columns, granularity, clickWindowDays, engagementWindowDays, viewWindowDays, conversionReportTime);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test AdAccountsList
        /// </summary>
        [Fact]
        public void AdAccountsListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string bookmark = null;
            //int? pageSize = null;
            //bool? includeSharedAccounts = null;
            //var response = instance.AdAccountsList(bookmark, pageSize, includeSharedAccounts);
            //Assert.IsType<Paginated>(response);
        }

        /// <summary>
        /// Test AdGroupsAnalytics
        /// </summary>
        [Fact]
        public void AdGroupsAnalyticsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //DateTime startDate = null;
            //DateTime endDate = null;
            //List<string> adGroupIds = null;
            //List<string> columns = null;
            //Granularity granularity = null;
            //int? clickWindowDays = null;
            //int? engagementWindowDays = null;
            //int? viewWindowDays = null;
            //string conversionReportTime = null;
            //var response = instance.AdGroupsAnalytics(adAccountId, startDate, endDate, adGroupIds, columns, granularity, clickWindowDays, engagementWindowDays, viewWindowDays, conversionReportTime);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test AdGroupsList
        /// </summary>
        [Fact]
        public void AdGroupsListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //List<string> campaignIds = null;
            //List<string> adGroupIds = null;
            //List<string> entityStatuses = null;
            //int? pageSize = null;
            //string order = null;
            //string bookmark = null;
            //bool? translateInterestsToNames = null;
            //var response = instance.AdGroupsList(adAccountId, campaignIds, adGroupIds, entityStatuses, pageSize, order, bookmark, translateInterestsToNames);
            //Assert.IsType<Paginated>(response);
        }

        /// <summary>
        /// Test AdsAnalytics
        /// </summary>
        [Fact]
        public void AdsAnalyticsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //DateTime startDate = null;
            //DateTime endDate = null;
            //List<string> adIds = null;
            //List<string> columns = null;
            //Granularity granularity = null;
            //int? clickWindowDays = null;
            //int? engagementWindowDays = null;
            //int? viewWindowDays = null;
            //string conversionReportTime = null;
            //var response = instance.AdsAnalytics(adAccountId, startDate, endDate, adIds, columns, granularity, clickWindowDays, engagementWindowDays, viewWindowDays, conversionReportTime);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test AdsList
        /// </summary>
        [Fact]
        public void AdsListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //List<string> campaignIds = null;
            //List<string> adGroupIds = null;
            //List<string> adIds = null;
            //List<string> entityStatuses = null;
            //int? pageSize = null;
            //string order = null;
            //string bookmark = null;
            //var response = instance.AdsList(adAccountId, campaignIds, adGroupIds, adIds, entityStatuses, pageSize, order, bookmark);
            //Assert.IsType<Paginated>(response);
        }

        /// <summary>
        /// Test AnalyticsCreateReport
        /// </summary>
        [Fact]
        public void AnalyticsCreateReportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //AdsAnalyticsCreateAsyncRequest adsAnalyticsCreateAsyncRequest = null;
            //var response = instance.AnalyticsCreateReport(adAccountId, adsAnalyticsCreateAsyncRequest);
            //Assert.IsType<AdsAnalyticsCreateAsyncResponse>(response);
        }

        /// <summary>
        /// Test AnalyticsGetReport
        /// </summary>
        [Fact]
        public void AnalyticsGetReportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //string token = null;
            //var response = instance.AnalyticsGetReport(adAccountId, token);
            //Assert.IsType<AdsAnalyticsGetAsyncResponse>(response);
        }

        /// <summary>
        /// Test CampaignsAnalytics
        /// </summary>
        [Fact]
        public void CampaignsAnalyticsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //DateTime startDate = null;
            //DateTime endDate = null;
            //List<string> campaignIds = null;
            //List<string> columns = null;
            //Granularity granularity = null;
            //int? clickWindowDays = null;
            //int? engagementWindowDays = null;
            //int? viewWindowDays = null;
            //string conversionReportTime = null;
            //var response = instance.CampaignsAnalytics(adAccountId, startDate, endDate, campaignIds, columns, granularity, clickWindowDays, engagementWindowDays, viewWindowDays, conversionReportTime);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test CampaignsList
        /// </summary>
        [Fact]
        public void CampaignsListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //List<string> campaignIds = null;
            //List<string> entityStatuses = null;
            //int? pageSize = null;
            //string order = null;
            //string bookmark = null;
            //var response = instance.CampaignsList(adAccountId, campaignIds, entityStatuses, pageSize, order, bookmark);
            //Assert.IsType<Paginated>(response);
        }

        /// <summary>
        /// Test ProductGroupsAnalytics
        /// </summary>
        [Fact]
        public void ProductGroupsAnalyticsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //DateTime startDate = null;
            //DateTime endDate = null;
            //List<string> productGroupIds = null;
            //List<string> columns = null;
            //Granularity granularity = null;
            //int? clickWindowDays = null;
            //int? engagementWindowDays = null;
            //int? viewWindowDays = null;
            //string conversionReportTime = null;
            //var response = instance.ProductGroupsAnalytics(adAccountId, startDate, endDate, productGroupIds, columns, granularity, clickWindowDays, engagementWindowDays, viewWindowDays, conversionReportTime);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }
    }
}
