/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: pinterest-api@pinterest.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.api;

import org.openapitools.model.CatalogsFeed;
import org.openapitools.model.CatalogsFeedsCreateRequest;
import org.openapitools.model.CatalogsFeedsUpdateRequest;
import org.openapitools.model.CatalogsItems;
import org.openapitools.model.CatalogsItemsBatch;
import org.openapitools.model.CatalogsItemsBatchRequest;
import org.openapitools.model.CatalogsProductGroup;
import org.openapitools.model.CatalogsProductGroupCreateRequest;
import org.openapitools.model.CatalogsProductGroupUpdateRequest;
import org.openapitools.model.Error;
import org.openapitools.model.Paginated;
import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;

import javax.ws.rs.core.Response;
import org.apache.cxf.jaxrs.client.JAXRSClientFactory;
import org.apache.cxf.jaxrs.client.ClientConfiguration;
import org.apache.cxf.jaxrs.client.WebClient;


import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;




/**
 * Pinterest REST API
 *
 * <p>Pinterest's REST API
 *
 * API tests for CatalogsApi
 */
public class CatalogsApiTest {


    private CatalogsApi api;

    @Before
    public void setup() {
        JacksonJsonProvider provider = new JacksonJsonProvider();
        List providers = new ArrayList();
        providers.add(provider);

        api = JAXRSClientFactory.create("https://api.pinterest.com/v5", CatalogsApi.class, providers);
        org.apache.cxf.jaxrs.client.Client client = WebClient.client(api);

        ClientConfiguration config = WebClient.getConfig(client);
    }

    
    /**
     * Create product group
     *
     * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Create product group to use in Catalogs.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void catalogsProductGroupsCreateTest() {
        CatalogsProductGroupCreateRequest catalogsProductGroupCreateRequest = null;
        //Object response = api.catalogsProductGroupsCreate(catalogsProductGroupCreateRequest);
        //assertNotNull(response);
        // TODO: test validations


    }
    
    /**
     * Delete product group
     *
     * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Delete a product group from being in use in Catalogs.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void catalogsProductGroupsDeleteTest() {
        String productGroupId = null;
        //api.catalogsProductGroupsDelete(productGroupId);
        
        // TODO: test validations


    }
    
    /**
     * Get product groups list
     *
     * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Get a list of product groups for a given Catalogs Feed Id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void catalogsProductGroupsListTest() {
        String feedId = null;
        String bookmark = null;
        Integer pageSize = null;
        //Paginated response = api.catalogsProductGroupsList(feedId, bookmark, pageSize);
        //assertNotNull(response);
        // TODO: test validations


    }
    
    /**
     * Update product group
     *
     * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Update product group to use in Catalogs.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void catalogsProductGroupsUpdateTest() {
        String productGroupId = null;
        CatalogsProductGroupUpdateRequest catalogsProductGroupUpdateRequest = null;
        //CatalogsProductGroup response = api.catalogsProductGroupsUpdate(productGroupId, catalogsProductGroupUpdateRequest);
        //assertNotNull(response);
        // TODO: test validations


    }
    
    /**
     * List processing results for a given feed
     *
     * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Fetch a feed processing results owned by the owner user account.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void feedProcessingResultsListTest() {
        String feedId = null;
        String bookmark = null;
        Integer pageSize = null;
        //Paginated response = api.feedProcessingResultsList(feedId, bookmark, pageSize);
        //assertNotNull(response);
        // TODO: test validations


    }
    
    /**
     * Create feed
     *
     * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Create a new feed owned by the \&quot;operating user_account\&quot;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void feedsCreateTest() {
        CatalogsFeedsCreateRequest catalogsFeedsCreateRequest = null;
        //CatalogsFeed response = api.feedsCreate(catalogsFeedsCreateRequest);
        //assertNotNull(response);
        // TODO: test validations


    }
    
    /**
     * Delete feed
     *
     * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Delete a feed owned by the \&quot;operating user_account\&quot;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void feedsDeleteTest() {
        String feedId = null;
        //api.feedsDelete(feedId);
        
        // TODO: test validations


    }
    
    /**
     * Get feed
     *
     * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Get a single feed owned by the \&quot;operating user_account\&quot;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void feedsGetTest() {
        String feedId = null;
        //CatalogsFeed response = api.feedsGet(feedId);
        //assertNotNull(response);
        // TODO: test validations


    }
    
    /**
     * List feeds
     *
     * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Fetch feeds owned by the \&quot;operating user_account\&quot;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void feedsListTest() {
        String bookmark = null;
        Integer pageSize = null;
        //Paginated response = api.feedsList(bookmark, pageSize);
        //assertNotNull(response);
        // TODO: test validations


    }
    
    /**
     * Update feed
     *
     * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Update a feed owned by the \&quot;operating user_account\&quot;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void feedsUpdateTest() {
        String feedId = null;
        CatalogsFeedsUpdateRequest catalogsFeedsUpdateRequest = null;
        //CatalogsFeed response = api.feedsUpdate(feedId, catalogsFeedsUpdateRequest);
        //assertNotNull(response);
        // TODO: test validations


    }
    
    /**
     * Get catalogs items batch
     *
     * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Get a single catalogs items batch created by the \&quot;operating user_account\&quot;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void itemsBatchGetTest() {
        String batchId = null;
        //CatalogsItemsBatch response = api.itemsBatchGet(batchId);
        //assertNotNull(response);
        // TODO: test validations


    }
    
    /**
     * Perform an operation on an item batch
     *
     * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/api/v5/#tag/Understanding-catalog-management&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  This endpoint supports multiple operations on a set of one or more catalog items.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void itemsBatchPostTest() {
        CatalogsItemsBatchRequest catalogsItemsBatchRequest = null;
        //CatalogsItemsBatch response = api.itemsBatchPost(catalogsItemsBatchRequest);
        //assertNotNull(response);
        // TODO: test validations


    }
    
    /**
     * Get catalogs items
     *
     * Get the items of the catalog created by the \&quot;operating user_account\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void itemsGetTest() {
        String country = null;
        List<String> itemIds = null;
        String language = null;
        //CatalogsItems response = api.itemsGet(country, itemIds, language);
        //assertNotNull(response);
        // TODO: test validations


    }
    
}
