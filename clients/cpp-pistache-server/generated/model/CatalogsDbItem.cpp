/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.12.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "CatalogsDbItem.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

CatalogsDbItem::CatalogsDbItem()
{
    m_Created_at = "";
    m_Created_atIsSet = false;
    m_Id = "";
    m_IdIsSet = false;
    m_Updated_at = "";
    m_Updated_atIsSet = false;
    
}

void CatalogsDbItem::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool CatalogsDbItem::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool CatalogsDbItem::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "CatalogsDbItem" : pathPrefix;

                
    return success;
}

bool CatalogsDbItem::operator==(const CatalogsDbItem& rhs) const
{
    return
    
    
    
    ((!createdAtIsSet() && !rhs.createdAtIsSet()) || (createdAtIsSet() && rhs.createdAtIsSet() && getCreatedAt() == rhs.getCreatedAt())) &&
    
    
    ((!idIsSet() && !rhs.idIsSet()) || (idIsSet() && rhs.idIsSet() && getId() == rhs.getId())) &&
    
    
    ((!updatedAtIsSet() && !rhs.updatedAtIsSet()) || (updatedAtIsSet() && rhs.updatedAtIsSet() && getUpdatedAt() == rhs.getUpdatedAt()))
    
    ;
}

bool CatalogsDbItem::operator!=(const CatalogsDbItem& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const CatalogsDbItem& o)
{
    j = nlohmann::json::object();
    if(o.createdAtIsSet())
        j["created_at"] = o.m_Created_at;
    if(o.idIsSet())
        j["id"] = o.m_Id;
    if(o.updatedAtIsSet())
        j["updated_at"] = o.m_Updated_at;
    
}

void from_json(const nlohmann::json& j, CatalogsDbItem& o)
{
    if(j.find("created_at") != j.end())
    {
        j.at("created_at").get_to(o.m_Created_at);
        o.m_Created_atIsSet = true;
    } 
    if(j.find("id") != j.end())
    {
        j.at("id").get_to(o.m_Id);
        o.m_IdIsSet = true;
    } 
    if(j.find("updated_at") != j.end())
    {
        j.at("updated_at").get_to(o.m_Updated_at);
        o.m_Updated_atIsSet = true;
    } 
    
}

std::string CatalogsDbItem::getCreatedAt() const
{
    return m_Created_at;
}
void CatalogsDbItem::setCreatedAt(std::string const& value)
{
    m_Created_at = value;
    m_Created_atIsSet = true;
}
bool CatalogsDbItem::createdAtIsSet() const
{
    return m_Created_atIsSet;
}
void CatalogsDbItem::unsetCreated_at()
{
    m_Created_atIsSet = false;
}
std::string CatalogsDbItem::getId() const
{
    return m_Id;
}
void CatalogsDbItem::setId(std::string const& value)
{
    m_Id = value;
    m_IdIsSet = true;
}
bool CatalogsDbItem::idIsSet() const
{
    return m_IdIsSet;
}
void CatalogsDbItem::unsetId()
{
    m_IdIsSet = false;
}
std::string CatalogsDbItem::getUpdatedAt() const
{
    return m_Updated_at;
}
void CatalogsDbItem::setUpdatedAt(std::string const& value)
{
    m_Updated_at = value;
    m_Updated_atIsSet = true;
}
bool CatalogsDbItem::updatedAtIsSet() const
{
    return m_Updated_atIsSet;
}
void CatalogsDbItem::unsetUpdated_at()
{
    m_Updated_atIsSet = false;
}


} // namespace org::openapitools::server::model

