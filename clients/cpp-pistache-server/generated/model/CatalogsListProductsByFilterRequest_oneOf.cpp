/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.6.0
* Contact: blah@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "CatalogsListProductsByFilterRequest_oneOf.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

CatalogsListProductsByFilterRequest_oneOf::CatalogsListProductsByFilterRequest_oneOf()
{
    m_Feed_id = "";
    
}

void CatalogsListProductsByFilterRequest_oneOf::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool CatalogsListProductsByFilterRequest_oneOf::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool CatalogsListProductsByFilterRequest_oneOf::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "CatalogsListProductsByFilterRequest_oneOf" : pathPrefix;

         
    
    /* Feed_id */ {
        const std::string& value = m_Feed_id;
        const std::string currentValuePath = _pathPrefix + ".feedId";
                
        

    }
        
    return success;
}

bool CatalogsListProductsByFilterRequest_oneOf::operator==(const CatalogsListProductsByFilterRequest_oneOf& rhs) const
{
    return
    
    
    (getFeedId() == rhs.getFeedId())
     &&
    
    (getFilters() == rhs.getFilters())
    
    
    ;
}

bool CatalogsListProductsByFilterRequest_oneOf::operator!=(const CatalogsListProductsByFilterRequest_oneOf& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const CatalogsListProductsByFilterRequest_oneOf& o)
{
    j = nlohmann::json();
    j["feed_id"] = o.m_Feed_id;
    j["filters"] = o.m_Filters;
    
}

void from_json(const nlohmann::json& j, CatalogsListProductsByFilterRequest_oneOf& o)
{
    j.at("feed_id").get_to(o.m_Feed_id);
    j.at("filters").get_to(o.m_Filters);
    
}

std::string CatalogsListProductsByFilterRequest_oneOf::getFeedId() const
{
    return m_Feed_id;
}
void CatalogsListProductsByFilterRequest_oneOf::setFeedId(std::string const& value)
{
    m_Feed_id = value;
}
org::openapitools::server::model::CatalogsProductGroupFilters CatalogsListProductsByFilterRequest_oneOf::getFilters() const
{
    return m_Filters;
}
void CatalogsListProductsByFilterRequest_oneOf::setFilters(org::openapitools::server::model::CatalogsProductGroupFilters const& value)
{
    m_Filters = value;
}


} // namespace org::openapitools::server::model

