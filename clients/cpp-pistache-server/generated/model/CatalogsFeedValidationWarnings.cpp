/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.3.0
* Contact: blah@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "CatalogsFeedValidationWarnings.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

CatalogsFeedValidationWarnings::CatalogsFeedValidationWarnings()
{
    m_Title_length_too_long = 0;
    m_Title_length_too_longIsSet = false;
    m_Description_length_too_long = 0;
    m_Description_length_too_longIsSet = false;
    m_Gender_invalid = 0;
    m_Gender_invalidIsSet = false;
    m_Age_group_invalid = 0;
    m_Age_group_invalidIsSet = false;
    m_Size_type_invalid = 0;
    m_Size_type_invalidIsSet = false;
    m_Link_format_warning = 0;
    m_Link_format_warningIsSet = false;
    m_Duplicate_products = 0;
    m_Duplicate_productsIsSet = false;
    m_Duplicate_links = 0;
    m_Duplicate_linksIsSet = false;
    m_Sales_price_invalid = 0;
    m_Sales_price_invalidIsSet = false;
    m_Product_category_depth_warning = 0;
    m_Product_category_depth_warningIsSet = false;
    m_Adwords_same_as_link = 0;
    m_Adwords_same_as_linkIsSet = false;
    m_Duplicate_headers = 0;
    m_Duplicate_headersIsSet = false;
    m_Fetch_same_signature = 0;
    m_Fetch_same_signatureIsSet = false;
    m_Adwords_format_warning = 0;
    m_Adwords_format_warningIsSet = false;
    m_Additional_image_link_warning = 0;
    m_Additional_image_link_warningIsSet = false;
    m_Image_link_warning = 0;
    m_Image_link_warningIsSet = false;
    m_Shipping_invalid = 0;
    m_Shipping_invalidIsSet = false;
    m_Tax_invalid = 0;
    m_Tax_invalidIsSet = false;
    m_Shipping_weight_invalid = 0;
    m_Shipping_weight_invalidIsSet = false;
    m_Expiration_date_invalid = 0;
    m_Expiration_date_invalidIsSet = false;
    m_Availability_date_invalid = 0;
    m_Availability_date_invalidIsSet = false;
    m_Sale_date_invalid = 0;
    m_Sale_date_invalidIsSet = false;
    m_Weight_unit_invalid = 0;
    m_Weight_unit_invalidIsSet = false;
    m_Is_bundle_invalid = 0;
    m_Is_bundle_invalidIsSet = false;
    m_Updated_time_invalid = 0;
    m_Updated_time_invalidIsSet = false;
    m_Custom_label_length_too_long = 0;
    m_Custom_label_length_too_longIsSet = false;
    m_Product_type_length_too_long = 0;
    m_Product_type_length_too_longIsSet = false;
    m_Too_many_additional_image_links = 0;
    m_Too_many_additional_image_linksIsSet = false;
    m_Multipack_invalid = 0;
    m_Multipack_invalidIsSet = false;
    m_Indexed_product_count_large_delta = 0;
    m_Indexed_product_count_large_deltaIsSet = false;
    m_Item_additional_image_download_failure = 0;
    m_Item_additional_image_download_failureIsSet = false;
    m_Optional_product_category_missing = 0;
    m_Optional_product_category_missingIsSet = false;
    m_Optional_product_category_invalid = 0;
    m_Optional_product_category_invalidIsSet = false;
    m_Optional_condition_missing = 0;
    m_Optional_condition_missingIsSet = false;
    m_Optional_condition_invalid = 0;
    m_Optional_condition_invalidIsSet = false;
    m_Ios_deep_link_invalid = 0;
    m_Ios_deep_link_invalidIsSet = false;
    m_Android_deep_link_invalid = 0;
    m_Android_deep_link_invalidIsSet = false;
    m_Availability_normalized = 0;
    m_Availability_normalizedIsSet = false;
    m_Condition_normalized = 0;
    m_Condition_normalizedIsSet = false;
    m_Gender_normalized = 0;
    m_Gender_normalizedIsSet = false;
    m_Size_type_normalized = 0;
    m_Size_type_normalizedIsSet = false;
    m_Age_group_normalized = 0;
    m_Age_group_normalizedIsSet = false;
    m_Utm_source_auto_corrected = 0;
    m_Utm_source_auto_correctedIsSet = false;
    m_Country_does_not_map_to_currency = 0;
    m_Country_does_not_map_to_currencyIsSet = false;
    m_Min_ad_price_invalid = 0;
    m_Min_ad_price_invalidIsSet = false;
    
}

void CatalogsFeedValidationWarnings::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool CatalogsFeedValidationWarnings::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool CatalogsFeedValidationWarnings::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "CatalogsFeedValidationWarnings" : pathPrefix;

                                                                                                                                                                                        
    return success;
}

bool CatalogsFeedValidationWarnings::operator==(const CatalogsFeedValidationWarnings& rhs) const
{
    return
    
    
    
    ((!titleLengthTooLongIsSet() && !rhs.titleLengthTooLongIsSet()) || (titleLengthTooLongIsSet() && rhs.titleLengthTooLongIsSet() && getTitleLengthTooLong() == rhs.getTitleLengthTooLong())) &&
    
    
    ((!descriptionLengthTooLongIsSet() && !rhs.descriptionLengthTooLongIsSet()) || (descriptionLengthTooLongIsSet() && rhs.descriptionLengthTooLongIsSet() && getDescriptionLengthTooLong() == rhs.getDescriptionLengthTooLong())) &&
    
    
    ((!genderInvalidIsSet() && !rhs.genderInvalidIsSet()) || (genderInvalidIsSet() && rhs.genderInvalidIsSet() && getGenderInvalid() == rhs.getGenderInvalid())) &&
    
    
    ((!ageGroupInvalidIsSet() && !rhs.ageGroupInvalidIsSet()) || (ageGroupInvalidIsSet() && rhs.ageGroupInvalidIsSet() && getAgeGroupInvalid() == rhs.getAgeGroupInvalid())) &&
    
    
    ((!sizeTypeInvalidIsSet() && !rhs.sizeTypeInvalidIsSet()) || (sizeTypeInvalidIsSet() && rhs.sizeTypeInvalidIsSet() && getSizeTypeInvalid() == rhs.getSizeTypeInvalid())) &&
    
    
    ((!linkFormatWarningIsSet() && !rhs.linkFormatWarningIsSet()) || (linkFormatWarningIsSet() && rhs.linkFormatWarningIsSet() && getLinkFormatWarning() == rhs.getLinkFormatWarning())) &&
    
    
    ((!duplicateProductsIsSet() && !rhs.duplicateProductsIsSet()) || (duplicateProductsIsSet() && rhs.duplicateProductsIsSet() && getDuplicateProducts() == rhs.getDuplicateProducts())) &&
    
    
    ((!duplicateLinksIsSet() && !rhs.duplicateLinksIsSet()) || (duplicateLinksIsSet() && rhs.duplicateLinksIsSet() && getDuplicateLinks() == rhs.getDuplicateLinks())) &&
    
    
    ((!salesPriceInvalidIsSet() && !rhs.salesPriceInvalidIsSet()) || (salesPriceInvalidIsSet() && rhs.salesPriceInvalidIsSet() && getSalesPriceInvalid() == rhs.getSalesPriceInvalid())) &&
    
    
    ((!productCategoryDepthWarningIsSet() && !rhs.productCategoryDepthWarningIsSet()) || (productCategoryDepthWarningIsSet() && rhs.productCategoryDepthWarningIsSet() && getProductCategoryDepthWarning() == rhs.getProductCategoryDepthWarning())) &&
    
    
    ((!adwordsSameAsLinkIsSet() && !rhs.adwordsSameAsLinkIsSet()) || (adwordsSameAsLinkIsSet() && rhs.adwordsSameAsLinkIsSet() && getAdwordsSameAsLink() == rhs.getAdwordsSameAsLink())) &&
    
    
    ((!duplicateHeadersIsSet() && !rhs.duplicateHeadersIsSet()) || (duplicateHeadersIsSet() && rhs.duplicateHeadersIsSet() && getDuplicateHeaders() == rhs.getDuplicateHeaders())) &&
    
    
    ((!fetchSameSignatureIsSet() && !rhs.fetchSameSignatureIsSet()) || (fetchSameSignatureIsSet() && rhs.fetchSameSignatureIsSet() && getFetchSameSignature() == rhs.getFetchSameSignature())) &&
    
    
    ((!adwordsFormatWarningIsSet() && !rhs.adwordsFormatWarningIsSet()) || (adwordsFormatWarningIsSet() && rhs.adwordsFormatWarningIsSet() && getAdwordsFormatWarning() == rhs.getAdwordsFormatWarning())) &&
    
    
    ((!additionalImageLinkWarningIsSet() && !rhs.additionalImageLinkWarningIsSet()) || (additionalImageLinkWarningIsSet() && rhs.additionalImageLinkWarningIsSet() && getAdditionalImageLinkWarning() == rhs.getAdditionalImageLinkWarning())) &&
    
    
    ((!imageLinkWarningIsSet() && !rhs.imageLinkWarningIsSet()) || (imageLinkWarningIsSet() && rhs.imageLinkWarningIsSet() && getImageLinkWarning() == rhs.getImageLinkWarning())) &&
    
    
    ((!shippingInvalidIsSet() && !rhs.shippingInvalidIsSet()) || (shippingInvalidIsSet() && rhs.shippingInvalidIsSet() && getShippingInvalid() == rhs.getShippingInvalid())) &&
    
    
    ((!taxInvalidIsSet() && !rhs.taxInvalidIsSet()) || (taxInvalidIsSet() && rhs.taxInvalidIsSet() && getTaxInvalid() == rhs.getTaxInvalid())) &&
    
    
    ((!shippingWeightInvalidIsSet() && !rhs.shippingWeightInvalidIsSet()) || (shippingWeightInvalidIsSet() && rhs.shippingWeightInvalidIsSet() && getShippingWeightInvalid() == rhs.getShippingWeightInvalid())) &&
    
    
    ((!expirationDateInvalidIsSet() && !rhs.expirationDateInvalidIsSet()) || (expirationDateInvalidIsSet() && rhs.expirationDateInvalidIsSet() && getExpirationDateInvalid() == rhs.getExpirationDateInvalid())) &&
    
    
    ((!availabilityDateInvalidIsSet() && !rhs.availabilityDateInvalidIsSet()) || (availabilityDateInvalidIsSet() && rhs.availabilityDateInvalidIsSet() && getAvailabilityDateInvalid() == rhs.getAvailabilityDateInvalid())) &&
    
    
    ((!saleDateInvalidIsSet() && !rhs.saleDateInvalidIsSet()) || (saleDateInvalidIsSet() && rhs.saleDateInvalidIsSet() && getSaleDateInvalid() == rhs.getSaleDateInvalid())) &&
    
    
    ((!weightUnitInvalidIsSet() && !rhs.weightUnitInvalidIsSet()) || (weightUnitInvalidIsSet() && rhs.weightUnitInvalidIsSet() && getWeightUnitInvalid() == rhs.getWeightUnitInvalid())) &&
    
    
    ((!isBundleInvalidIsSet() && !rhs.isBundleInvalidIsSet()) || (isBundleInvalidIsSet() && rhs.isBundleInvalidIsSet() && getIsBundleInvalid() == rhs.getIsBundleInvalid())) &&
    
    
    ((!updatedTimeInvalidIsSet() && !rhs.updatedTimeInvalidIsSet()) || (updatedTimeInvalidIsSet() && rhs.updatedTimeInvalidIsSet() && getUpdatedTimeInvalid() == rhs.getUpdatedTimeInvalid())) &&
    
    
    ((!customLabelLengthTooLongIsSet() && !rhs.customLabelLengthTooLongIsSet()) || (customLabelLengthTooLongIsSet() && rhs.customLabelLengthTooLongIsSet() && getCustomLabelLengthTooLong() == rhs.getCustomLabelLengthTooLong())) &&
    
    
    ((!productTypeLengthTooLongIsSet() && !rhs.productTypeLengthTooLongIsSet()) || (productTypeLengthTooLongIsSet() && rhs.productTypeLengthTooLongIsSet() && getProductTypeLengthTooLong() == rhs.getProductTypeLengthTooLong())) &&
    
    
    ((!tooManyAdditionalImageLinksIsSet() && !rhs.tooManyAdditionalImageLinksIsSet()) || (tooManyAdditionalImageLinksIsSet() && rhs.tooManyAdditionalImageLinksIsSet() && getTooManyAdditionalImageLinks() == rhs.getTooManyAdditionalImageLinks())) &&
    
    
    ((!multipackInvalidIsSet() && !rhs.multipackInvalidIsSet()) || (multipackInvalidIsSet() && rhs.multipackInvalidIsSet() && getMultipackInvalid() == rhs.getMultipackInvalid())) &&
    
    
    ((!indexedProductCountLargeDeltaIsSet() && !rhs.indexedProductCountLargeDeltaIsSet()) || (indexedProductCountLargeDeltaIsSet() && rhs.indexedProductCountLargeDeltaIsSet() && getIndexedProductCountLargeDelta() == rhs.getIndexedProductCountLargeDelta())) &&
    
    
    ((!itemAdditionalImageDownloadFailureIsSet() && !rhs.itemAdditionalImageDownloadFailureIsSet()) || (itemAdditionalImageDownloadFailureIsSet() && rhs.itemAdditionalImageDownloadFailureIsSet() && getItemAdditionalImageDownloadFailure() == rhs.getItemAdditionalImageDownloadFailure())) &&
    
    
    ((!optionalProductCategoryMissingIsSet() && !rhs.optionalProductCategoryMissingIsSet()) || (optionalProductCategoryMissingIsSet() && rhs.optionalProductCategoryMissingIsSet() && getOptionalProductCategoryMissing() == rhs.getOptionalProductCategoryMissing())) &&
    
    
    ((!optionalProductCategoryInvalidIsSet() && !rhs.optionalProductCategoryInvalidIsSet()) || (optionalProductCategoryInvalidIsSet() && rhs.optionalProductCategoryInvalidIsSet() && getOptionalProductCategoryInvalid() == rhs.getOptionalProductCategoryInvalid())) &&
    
    
    ((!optionalConditionMissingIsSet() && !rhs.optionalConditionMissingIsSet()) || (optionalConditionMissingIsSet() && rhs.optionalConditionMissingIsSet() && getOptionalConditionMissing() == rhs.getOptionalConditionMissing())) &&
    
    
    ((!optionalConditionInvalidIsSet() && !rhs.optionalConditionInvalidIsSet()) || (optionalConditionInvalidIsSet() && rhs.optionalConditionInvalidIsSet() && getOptionalConditionInvalid() == rhs.getOptionalConditionInvalid())) &&
    
    
    ((!iosDeepLinkInvalidIsSet() && !rhs.iosDeepLinkInvalidIsSet()) || (iosDeepLinkInvalidIsSet() && rhs.iosDeepLinkInvalidIsSet() && getIosDeepLinkInvalid() == rhs.getIosDeepLinkInvalid())) &&
    
    
    ((!androidDeepLinkInvalidIsSet() && !rhs.androidDeepLinkInvalidIsSet()) || (androidDeepLinkInvalidIsSet() && rhs.androidDeepLinkInvalidIsSet() && getAndroidDeepLinkInvalid() == rhs.getAndroidDeepLinkInvalid())) &&
    
    
    ((!availabilityNormalizedIsSet() && !rhs.availabilityNormalizedIsSet()) || (availabilityNormalizedIsSet() && rhs.availabilityNormalizedIsSet() && getAvailabilityNormalized() == rhs.getAvailabilityNormalized())) &&
    
    
    ((!conditionNormalizedIsSet() && !rhs.conditionNormalizedIsSet()) || (conditionNormalizedIsSet() && rhs.conditionNormalizedIsSet() && getConditionNormalized() == rhs.getConditionNormalized())) &&
    
    
    ((!genderNormalizedIsSet() && !rhs.genderNormalizedIsSet()) || (genderNormalizedIsSet() && rhs.genderNormalizedIsSet() && getGenderNormalized() == rhs.getGenderNormalized())) &&
    
    
    ((!sizeTypeNormalizedIsSet() && !rhs.sizeTypeNormalizedIsSet()) || (sizeTypeNormalizedIsSet() && rhs.sizeTypeNormalizedIsSet() && getSizeTypeNormalized() == rhs.getSizeTypeNormalized())) &&
    
    
    ((!ageGroupNormalizedIsSet() && !rhs.ageGroupNormalizedIsSet()) || (ageGroupNormalizedIsSet() && rhs.ageGroupNormalizedIsSet() && getAgeGroupNormalized() == rhs.getAgeGroupNormalized())) &&
    
    
    ((!utmSourceAutoCorrectedIsSet() && !rhs.utmSourceAutoCorrectedIsSet()) || (utmSourceAutoCorrectedIsSet() && rhs.utmSourceAutoCorrectedIsSet() && getUtmSourceAutoCorrected() == rhs.getUtmSourceAutoCorrected())) &&
    
    
    ((!countryDoesNotMapToCurrencyIsSet() && !rhs.countryDoesNotMapToCurrencyIsSet()) || (countryDoesNotMapToCurrencyIsSet() && rhs.countryDoesNotMapToCurrencyIsSet() && getCountryDoesNotMapToCurrency() == rhs.getCountryDoesNotMapToCurrency())) &&
    
    
    ((!minAdPriceInvalidIsSet() && !rhs.minAdPriceInvalidIsSet()) || (minAdPriceInvalidIsSet() && rhs.minAdPriceInvalidIsSet() && getMinAdPriceInvalid() == rhs.getMinAdPriceInvalid()))
    
    ;
}

bool CatalogsFeedValidationWarnings::operator!=(const CatalogsFeedValidationWarnings& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const CatalogsFeedValidationWarnings& o)
{
    j = nlohmann::json();
    if(o.titleLengthTooLongIsSet())
        j["title_length_too_long"] = o.m_Title_length_too_long;
    if(o.descriptionLengthTooLongIsSet())
        j["description_length_too_long"] = o.m_Description_length_too_long;
    if(o.genderInvalidIsSet())
        j["gender_invalid"] = o.m_Gender_invalid;
    if(o.ageGroupInvalidIsSet())
        j["age_group_invalid"] = o.m_Age_group_invalid;
    if(o.sizeTypeInvalidIsSet())
        j["size_type_invalid"] = o.m_Size_type_invalid;
    if(o.linkFormatWarningIsSet())
        j["link_format_warning"] = o.m_Link_format_warning;
    if(o.duplicateProductsIsSet())
        j["duplicate_products"] = o.m_Duplicate_products;
    if(o.duplicateLinksIsSet())
        j["duplicate_links"] = o.m_Duplicate_links;
    if(o.salesPriceInvalidIsSet())
        j["sales_price_invalid"] = o.m_Sales_price_invalid;
    if(o.productCategoryDepthWarningIsSet())
        j["product_category_depth_warning"] = o.m_Product_category_depth_warning;
    if(o.adwordsSameAsLinkIsSet())
        j["adwords_same_as_link"] = o.m_Adwords_same_as_link;
    if(o.duplicateHeadersIsSet())
        j["duplicate_headers"] = o.m_Duplicate_headers;
    if(o.fetchSameSignatureIsSet())
        j["fetch_same_signature"] = o.m_Fetch_same_signature;
    if(o.adwordsFormatWarningIsSet())
        j["adwords_format_warning"] = o.m_Adwords_format_warning;
    if(o.additionalImageLinkWarningIsSet())
        j["additional_image_link_warning"] = o.m_Additional_image_link_warning;
    if(o.imageLinkWarningIsSet())
        j["image_link_warning"] = o.m_Image_link_warning;
    if(o.shippingInvalidIsSet())
        j["shipping_invalid"] = o.m_Shipping_invalid;
    if(o.taxInvalidIsSet())
        j["tax_invalid"] = o.m_Tax_invalid;
    if(o.shippingWeightInvalidIsSet())
        j["shipping_weight_invalid"] = o.m_Shipping_weight_invalid;
    if(o.expirationDateInvalidIsSet())
        j["expiration_date_invalid"] = o.m_Expiration_date_invalid;
    if(o.availabilityDateInvalidIsSet())
        j["availability_date_invalid"] = o.m_Availability_date_invalid;
    if(o.saleDateInvalidIsSet())
        j["sale_date_invalid"] = o.m_Sale_date_invalid;
    if(o.weightUnitInvalidIsSet())
        j["weight_unit_invalid"] = o.m_Weight_unit_invalid;
    if(o.isBundleInvalidIsSet())
        j["is_bundle_invalid"] = o.m_Is_bundle_invalid;
    if(o.updatedTimeInvalidIsSet())
        j["updated_time_invalid"] = o.m_Updated_time_invalid;
    if(o.customLabelLengthTooLongIsSet())
        j["custom_label_length_too_long"] = o.m_Custom_label_length_too_long;
    if(o.productTypeLengthTooLongIsSet())
        j["product_type_length_too_long"] = o.m_Product_type_length_too_long;
    if(o.tooManyAdditionalImageLinksIsSet())
        j["too_many_additional_image_links"] = o.m_Too_many_additional_image_links;
    if(o.multipackInvalidIsSet())
        j["multipack_invalid"] = o.m_Multipack_invalid;
    if(o.indexedProductCountLargeDeltaIsSet())
        j["indexed_product_count_large_delta"] = o.m_Indexed_product_count_large_delta;
    if(o.itemAdditionalImageDownloadFailureIsSet())
        j["item_additional_image_download_failure"] = o.m_Item_additional_image_download_failure;
    if(o.optionalProductCategoryMissingIsSet())
        j["optional_product_category_missing"] = o.m_Optional_product_category_missing;
    if(o.optionalProductCategoryInvalidIsSet())
        j["optional_product_category_invalid"] = o.m_Optional_product_category_invalid;
    if(o.optionalConditionMissingIsSet())
        j["optional_condition_missing"] = o.m_Optional_condition_missing;
    if(o.optionalConditionInvalidIsSet())
        j["optional_condition_invalid"] = o.m_Optional_condition_invalid;
    if(o.iosDeepLinkInvalidIsSet())
        j["ios_deep_link_invalid"] = o.m_Ios_deep_link_invalid;
    if(o.androidDeepLinkInvalidIsSet())
        j["android_deep_link_invalid"] = o.m_Android_deep_link_invalid;
    if(o.availabilityNormalizedIsSet())
        j["availability_normalized"] = o.m_Availability_normalized;
    if(o.conditionNormalizedIsSet())
        j["condition_normalized"] = o.m_Condition_normalized;
    if(o.genderNormalizedIsSet())
        j["gender_normalized"] = o.m_Gender_normalized;
    if(o.sizeTypeNormalizedIsSet())
        j["size_type_normalized"] = o.m_Size_type_normalized;
    if(o.ageGroupNormalizedIsSet())
        j["age_group_normalized"] = o.m_Age_group_normalized;
    if(o.utmSourceAutoCorrectedIsSet())
        j["utm_source_auto_corrected"] = o.m_Utm_source_auto_corrected;
    if(o.countryDoesNotMapToCurrencyIsSet())
        j["country_does_not_map_to_currency"] = o.m_Country_does_not_map_to_currency;
    if(o.minAdPriceInvalidIsSet())
        j["min_ad_price_invalid"] = o.m_Min_ad_price_invalid;
    
}

void from_json(const nlohmann::json& j, CatalogsFeedValidationWarnings& o)
{
    if(j.find("title_length_too_long") != j.end())
    {
        j.at("title_length_too_long").get_to(o.m_Title_length_too_long);
        o.m_Title_length_too_longIsSet = true;
    } 
    if(j.find("description_length_too_long") != j.end())
    {
        j.at("description_length_too_long").get_to(o.m_Description_length_too_long);
        o.m_Description_length_too_longIsSet = true;
    } 
    if(j.find("gender_invalid") != j.end())
    {
        j.at("gender_invalid").get_to(o.m_Gender_invalid);
        o.m_Gender_invalidIsSet = true;
    } 
    if(j.find("age_group_invalid") != j.end())
    {
        j.at("age_group_invalid").get_to(o.m_Age_group_invalid);
        o.m_Age_group_invalidIsSet = true;
    } 
    if(j.find("size_type_invalid") != j.end())
    {
        j.at("size_type_invalid").get_to(o.m_Size_type_invalid);
        o.m_Size_type_invalidIsSet = true;
    } 
    if(j.find("link_format_warning") != j.end())
    {
        j.at("link_format_warning").get_to(o.m_Link_format_warning);
        o.m_Link_format_warningIsSet = true;
    } 
    if(j.find("duplicate_products") != j.end())
    {
        j.at("duplicate_products").get_to(o.m_Duplicate_products);
        o.m_Duplicate_productsIsSet = true;
    } 
    if(j.find("duplicate_links") != j.end())
    {
        j.at("duplicate_links").get_to(o.m_Duplicate_links);
        o.m_Duplicate_linksIsSet = true;
    } 
    if(j.find("sales_price_invalid") != j.end())
    {
        j.at("sales_price_invalid").get_to(o.m_Sales_price_invalid);
        o.m_Sales_price_invalidIsSet = true;
    } 
    if(j.find("product_category_depth_warning") != j.end())
    {
        j.at("product_category_depth_warning").get_to(o.m_Product_category_depth_warning);
        o.m_Product_category_depth_warningIsSet = true;
    } 
    if(j.find("adwords_same_as_link") != j.end())
    {
        j.at("adwords_same_as_link").get_to(o.m_Adwords_same_as_link);
        o.m_Adwords_same_as_linkIsSet = true;
    } 
    if(j.find("duplicate_headers") != j.end())
    {
        j.at("duplicate_headers").get_to(o.m_Duplicate_headers);
        o.m_Duplicate_headersIsSet = true;
    } 
    if(j.find("fetch_same_signature") != j.end())
    {
        j.at("fetch_same_signature").get_to(o.m_Fetch_same_signature);
        o.m_Fetch_same_signatureIsSet = true;
    } 
    if(j.find("adwords_format_warning") != j.end())
    {
        j.at("adwords_format_warning").get_to(o.m_Adwords_format_warning);
        o.m_Adwords_format_warningIsSet = true;
    } 
    if(j.find("additional_image_link_warning") != j.end())
    {
        j.at("additional_image_link_warning").get_to(o.m_Additional_image_link_warning);
        o.m_Additional_image_link_warningIsSet = true;
    } 
    if(j.find("image_link_warning") != j.end())
    {
        j.at("image_link_warning").get_to(o.m_Image_link_warning);
        o.m_Image_link_warningIsSet = true;
    } 
    if(j.find("shipping_invalid") != j.end())
    {
        j.at("shipping_invalid").get_to(o.m_Shipping_invalid);
        o.m_Shipping_invalidIsSet = true;
    } 
    if(j.find("tax_invalid") != j.end())
    {
        j.at("tax_invalid").get_to(o.m_Tax_invalid);
        o.m_Tax_invalidIsSet = true;
    } 
    if(j.find("shipping_weight_invalid") != j.end())
    {
        j.at("shipping_weight_invalid").get_to(o.m_Shipping_weight_invalid);
        o.m_Shipping_weight_invalidIsSet = true;
    } 
    if(j.find("expiration_date_invalid") != j.end())
    {
        j.at("expiration_date_invalid").get_to(o.m_Expiration_date_invalid);
        o.m_Expiration_date_invalidIsSet = true;
    } 
    if(j.find("availability_date_invalid") != j.end())
    {
        j.at("availability_date_invalid").get_to(o.m_Availability_date_invalid);
        o.m_Availability_date_invalidIsSet = true;
    } 
    if(j.find("sale_date_invalid") != j.end())
    {
        j.at("sale_date_invalid").get_to(o.m_Sale_date_invalid);
        o.m_Sale_date_invalidIsSet = true;
    } 
    if(j.find("weight_unit_invalid") != j.end())
    {
        j.at("weight_unit_invalid").get_to(o.m_Weight_unit_invalid);
        o.m_Weight_unit_invalidIsSet = true;
    } 
    if(j.find("is_bundle_invalid") != j.end())
    {
        j.at("is_bundle_invalid").get_to(o.m_Is_bundle_invalid);
        o.m_Is_bundle_invalidIsSet = true;
    } 
    if(j.find("updated_time_invalid") != j.end())
    {
        j.at("updated_time_invalid").get_to(o.m_Updated_time_invalid);
        o.m_Updated_time_invalidIsSet = true;
    } 
    if(j.find("custom_label_length_too_long") != j.end())
    {
        j.at("custom_label_length_too_long").get_to(o.m_Custom_label_length_too_long);
        o.m_Custom_label_length_too_longIsSet = true;
    } 
    if(j.find("product_type_length_too_long") != j.end())
    {
        j.at("product_type_length_too_long").get_to(o.m_Product_type_length_too_long);
        o.m_Product_type_length_too_longIsSet = true;
    } 
    if(j.find("too_many_additional_image_links") != j.end())
    {
        j.at("too_many_additional_image_links").get_to(o.m_Too_many_additional_image_links);
        o.m_Too_many_additional_image_linksIsSet = true;
    } 
    if(j.find("multipack_invalid") != j.end())
    {
        j.at("multipack_invalid").get_to(o.m_Multipack_invalid);
        o.m_Multipack_invalidIsSet = true;
    } 
    if(j.find("indexed_product_count_large_delta") != j.end())
    {
        j.at("indexed_product_count_large_delta").get_to(o.m_Indexed_product_count_large_delta);
        o.m_Indexed_product_count_large_deltaIsSet = true;
    } 
    if(j.find("item_additional_image_download_failure") != j.end())
    {
        j.at("item_additional_image_download_failure").get_to(o.m_Item_additional_image_download_failure);
        o.m_Item_additional_image_download_failureIsSet = true;
    } 
    if(j.find("optional_product_category_missing") != j.end())
    {
        j.at("optional_product_category_missing").get_to(o.m_Optional_product_category_missing);
        o.m_Optional_product_category_missingIsSet = true;
    } 
    if(j.find("optional_product_category_invalid") != j.end())
    {
        j.at("optional_product_category_invalid").get_to(o.m_Optional_product_category_invalid);
        o.m_Optional_product_category_invalidIsSet = true;
    } 
    if(j.find("optional_condition_missing") != j.end())
    {
        j.at("optional_condition_missing").get_to(o.m_Optional_condition_missing);
        o.m_Optional_condition_missingIsSet = true;
    } 
    if(j.find("optional_condition_invalid") != j.end())
    {
        j.at("optional_condition_invalid").get_to(o.m_Optional_condition_invalid);
        o.m_Optional_condition_invalidIsSet = true;
    } 
    if(j.find("ios_deep_link_invalid") != j.end())
    {
        j.at("ios_deep_link_invalid").get_to(o.m_Ios_deep_link_invalid);
        o.m_Ios_deep_link_invalidIsSet = true;
    } 
    if(j.find("android_deep_link_invalid") != j.end())
    {
        j.at("android_deep_link_invalid").get_to(o.m_Android_deep_link_invalid);
        o.m_Android_deep_link_invalidIsSet = true;
    } 
    if(j.find("availability_normalized") != j.end())
    {
        j.at("availability_normalized").get_to(o.m_Availability_normalized);
        o.m_Availability_normalizedIsSet = true;
    } 
    if(j.find("condition_normalized") != j.end())
    {
        j.at("condition_normalized").get_to(o.m_Condition_normalized);
        o.m_Condition_normalizedIsSet = true;
    } 
    if(j.find("gender_normalized") != j.end())
    {
        j.at("gender_normalized").get_to(o.m_Gender_normalized);
        o.m_Gender_normalizedIsSet = true;
    } 
    if(j.find("size_type_normalized") != j.end())
    {
        j.at("size_type_normalized").get_to(o.m_Size_type_normalized);
        o.m_Size_type_normalizedIsSet = true;
    } 
    if(j.find("age_group_normalized") != j.end())
    {
        j.at("age_group_normalized").get_to(o.m_Age_group_normalized);
        o.m_Age_group_normalizedIsSet = true;
    } 
    if(j.find("utm_source_auto_corrected") != j.end())
    {
        j.at("utm_source_auto_corrected").get_to(o.m_Utm_source_auto_corrected);
        o.m_Utm_source_auto_correctedIsSet = true;
    } 
    if(j.find("country_does_not_map_to_currency") != j.end())
    {
        j.at("country_does_not_map_to_currency").get_to(o.m_Country_does_not_map_to_currency);
        o.m_Country_does_not_map_to_currencyIsSet = true;
    } 
    if(j.find("min_ad_price_invalid") != j.end())
    {
        j.at("min_ad_price_invalid").get_to(o.m_Min_ad_price_invalid);
        o.m_Min_ad_price_invalidIsSet = true;
    } 
    
}

int32_t CatalogsFeedValidationWarnings::getTitleLengthTooLong() const
{
    return m_Title_length_too_long;
}
void CatalogsFeedValidationWarnings::setTitleLengthTooLong(int32_t const value)
{
    m_Title_length_too_long = value;
    m_Title_length_too_longIsSet = true;
}
bool CatalogsFeedValidationWarnings::titleLengthTooLongIsSet() const
{
    return m_Title_length_too_longIsSet;
}
void CatalogsFeedValidationWarnings::unsetTitle_length_too_long()
{
    m_Title_length_too_longIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getDescriptionLengthTooLong() const
{
    return m_Description_length_too_long;
}
void CatalogsFeedValidationWarnings::setDescriptionLengthTooLong(int32_t const value)
{
    m_Description_length_too_long = value;
    m_Description_length_too_longIsSet = true;
}
bool CatalogsFeedValidationWarnings::descriptionLengthTooLongIsSet() const
{
    return m_Description_length_too_longIsSet;
}
void CatalogsFeedValidationWarnings::unsetDescription_length_too_long()
{
    m_Description_length_too_longIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getGenderInvalid() const
{
    return m_Gender_invalid;
}
void CatalogsFeedValidationWarnings::setGenderInvalid(int32_t const value)
{
    m_Gender_invalid = value;
    m_Gender_invalidIsSet = true;
}
bool CatalogsFeedValidationWarnings::genderInvalidIsSet() const
{
    return m_Gender_invalidIsSet;
}
void CatalogsFeedValidationWarnings::unsetGender_invalid()
{
    m_Gender_invalidIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getAgeGroupInvalid() const
{
    return m_Age_group_invalid;
}
void CatalogsFeedValidationWarnings::setAgeGroupInvalid(int32_t const value)
{
    m_Age_group_invalid = value;
    m_Age_group_invalidIsSet = true;
}
bool CatalogsFeedValidationWarnings::ageGroupInvalidIsSet() const
{
    return m_Age_group_invalidIsSet;
}
void CatalogsFeedValidationWarnings::unsetAge_group_invalid()
{
    m_Age_group_invalidIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getSizeTypeInvalid() const
{
    return m_Size_type_invalid;
}
void CatalogsFeedValidationWarnings::setSizeTypeInvalid(int32_t const value)
{
    m_Size_type_invalid = value;
    m_Size_type_invalidIsSet = true;
}
bool CatalogsFeedValidationWarnings::sizeTypeInvalidIsSet() const
{
    return m_Size_type_invalidIsSet;
}
void CatalogsFeedValidationWarnings::unsetSize_type_invalid()
{
    m_Size_type_invalidIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getLinkFormatWarning() const
{
    return m_Link_format_warning;
}
void CatalogsFeedValidationWarnings::setLinkFormatWarning(int32_t const value)
{
    m_Link_format_warning = value;
    m_Link_format_warningIsSet = true;
}
bool CatalogsFeedValidationWarnings::linkFormatWarningIsSet() const
{
    return m_Link_format_warningIsSet;
}
void CatalogsFeedValidationWarnings::unsetLink_format_warning()
{
    m_Link_format_warningIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getDuplicateProducts() const
{
    return m_Duplicate_products;
}
void CatalogsFeedValidationWarnings::setDuplicateProducts(int32_t const value)
{
    m_Duplicate_products = value;
    m_Duplicate_productsIsSet = true;
}
bool CatalogsFeedValidationWarnings::duplicateProductsIsSet() const
{
    return m_Duplicate_productsIsSet;
}
void CatalogsFeedValidationWarnings::unsetDuplicate_products()
{
    m_Duplicate_productsIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getDuplicateLinks() const
{
    return m_Duplicate_links;
}
void CatalogsFeedValidationWarnings::setDuplicateLinks(int32_t const value)
{
    m_Duplicate_links = value;
    m_Duplicate_linksIsSet = true;
}
bool CatalogsFeedValidationWarnings::duplicateLinksIsSet() const
{
    return m_Duplicate_linksIsSet;
}
void CatalogsFeedValidationWarnings::unsetDuplicate_links()
{
    m_Duplicate_linksIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getSalesPriceInvalid() const
{
    return m_Sales_price_invalid;
}
void CatalogsFeedValidationWarnings::setSalesPriceInvalid(int32_t const value)
{
    m_Sales_price_invalid = value;
    m_Sales_price_invalidIsSet = true;
}
bool CatalogsFeedValidationWarnings::salesPriceInvalidIsSet() const
{
    return m_Sales_price_invalidIsSet;
}
void CatalogsFeedValidationWarnings::unsetSales_price_invalid()
{
    m_Sales_price_invalidIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getProductCategoryDepthWarning() const
{
    return m_Product_category_depth_warning;
}
void CatalogsFeedValidationWarnings::setProductCategoryDepthWarning(int32_t const value)
{
    m_Product_category_depth_warning = value;
    m_Product_category_depth_warningIsSet = true;
}
bool CatalogsFeedValidationWarnings::productCategoryDepthWarningIsSet() const
{
    return m_Product_category_depth_warningIsSet;
}
void CatalogsFeedValidationWarnings::unsetProduct_category_depth_warning()
{
    m_Product_category_depth_warningIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getAdwordsSameAsLink() const
{
    return m_Adwords_same_as_link;
}
void CatalogsFeedValidationWarnings::setAdwordsSameAsLink(int32_t const value)
{
    m_Adwords_same_as_link = value;
    m_Adwords_same_as_linkIsSet = true;
}
bool CatalogsFeedValidationWarnings::adwordsSameAsLinkIsSet() const
{
    return m_Adwords_same_as_linkIsSet;
}
void CatalogsFeedValidationWarnings::unsetAdwords_same_as_link()
{
    m_Adwords_same_as_linkIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getDuplicateHeaders() const
{
    return m_Duplicate_headers;
}
void CatalogsFeedValidationWarnings::setDuplicateHeaders(int32_t const value)
{
    m_Duplicate_headers = value;
    m_Duplicate_headersIsSet = true;
}
bool CatalogsFeedValidationWarnings::duplicateHeadersIsSet() const
{
    return m_Duplicate_headersIsSet;
}
void CatalogsFeedValidationWarnings::unsetDuplicate_headers()
{
    m_Duplicate_headersIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getFetchSameSignature() const
{
    return m_Fetch_same_signature;
}
void CatalogsFeedValidationWarnings::setFetchSameSignature(int32_t const value)
{
    m_Fetch_same_signature = value;
    m_Fetch_same_signatureIsSet = true;
}
bool CatalogsFeedValidationWarnings::fetchSameSignatureIsSet() const
{
    return m_Fetch_same_signatureIsSet;
}
void CatalogsFeedValidationWarnings::unsetFetch_same_signature()
{
    m_Fetch_same_signatureIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getAdwordsFormatWarning() const
{
    return m_Adwords_format_warning;
}
void CatalogsFeedValidationWarnings::setAdwordsFormatWarning(int32_t const value)
{
    m_Adwords_format_warning = value;
    m_Adwords_format_warningIsSet = true;
}
bool CatalogsFeedValidationWarnings::adwordsFormatWarningIsSet() const
{
    return m_Adwords_format_warningIsSet;
}
void CatalogsFeedValidationWarnings::unsetAdwords_format_warning()
{
    m_Adwords_format_warningIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getAdditionalImageLinkWarning() const
{
    return m_Additional_image_link_warning;
}
void CatalogsFeedValidationWarnings::setAdditionalImageLinkWarning(int32_t const value)
{
    m_Additional_image_link_warning = value;
    m_Additional_image_link_warningIsSet = true;
}
bool CatalogsFeedValidationWarnings::additionalImageLinkWarningIsSet() const
{
    return m_Additional_image_link_warningIsSet;
}
void CatalogsFeedValidationWarnings::unsetAdditional_image_link_warning()
{
    m_Additional_image_link_warningIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getImageLinkWarning() const
{
    return m_Image_link_warning;
}
void CatalogsFeedValidationWarnings::setImageLinkWarning(int32_t const value)
{
    m_Image_link_warning = value;
    m_Image_link_warningIsSet = true;
}
bool CatalogsFeedValidationWarnings::imageLinkWarningIsSet() const
{
    return m_Image_link_warningIsSet;
}
void CatalogsFeedValidationWarnings::unsetImage_link_warning()
{
    m_Image_link_warningIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getShippingInvalid() const
{
    return m_Shipping_invalid;
}
void CatalogsFeedValidationWarnings::setShippingInvalid(int32_t const value)
{
    m_Shipping_invalid = value;
    m_Shipping_invalidIsSet = true;
}
bool CatalogsFeedValidationWarnings::shippingInvalidIsSet() const
{
    return m_Shipping_invalidIsSet;
}
void CatalogsFeedValidationWarnings::unsetShipping_invalid()
{
    m_Shipping_invalidIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getTaxInvalid() const
{
    return m_Tax_invalid;
}
void CatalogsFeedValidationWarnings::setTaxInvalid(int32_t const value)
{
    m_Tax_invalid = value;
    m_Tax_invalidIsSet = true;
}
bool CatalogsFeedValidationWarnings::taxInvalidIsSet() const
{
    return m_Tax_invalidIsSet;
}
void CatalogsFeedValidationWarnings::unsetTax_invalid()
{
    m_Tax_invalidIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getShippingWeightInvalid() const
{
    return m_Shipping_weight_invalid;
}
void CatalogsFeedValidationWarnings::setShippingWeightInvalid(int32_t const value)
{
    m_Shipping_weight_invalid = value;
    m_Shipping_weight_invalidIsSet = true;
}
bool CatalogsFeedValidationWarnings::shippingWeightInvalidIsSet() const
{
    return m_Shipping_weight_invalidIsSet;
}
void CatalogsFeedValidationWarnings::unsetShipping_weight_invalid()
{
    m_Shipping_weight_invalidIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getExpirationDateInvalid() const
{
    return m_Expiration_date_invalid;
}
void CatalogsFeedValidationWarnings::setExpirationDateInvalid(int32_t const value)
{
    m_Expiration_date_invalid = value;
    m_Expiration_date_invalidIsSet = true;
}
bool CatalogsFeedValidationWarnings::expirationDateInvalidIsSet() const
{
    return m_Expiration_date_invalidIsSet;
}
void CatalogsFeedValidationWarnings::unsetExpiration_date_invalid()
{
    m_Expiration_date_invalidIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getAvailabilityDateInvalid() const
{
    return m_Availability_date_invalid;
}
void CatalogsFeedValidationWarnings::setAvailabilityDateInvalid(int32_t const value)
{
    m_Availability_date_invalid = value;
    m_Availability_date_invalidIsSet = true;
}
bool CatalogsFeedValidationWarnings::availabilityDateInvalidIsSet() const
{
    return m_Availability_date_invalidIsSet;
}
void CatalogsFeedValidationWarnings::unsetAvailability_date_invalid()
{
    m_Availability_date_invalidIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getSaleDateInvalid() const
{
    return m_Sale_date_invalid;
}
void CatalogsFeedValidationWarnings::setSaleDateInvalid(int32_t const value)
{
    m_Sale_date_invalid = value;
    m_Sale_date_invalidIsSet = true;
}
bool CatalogsFeedValidationWarnings::saleDateInvalidIsSet() const
{
    return m_Sale_date_invalidIsSet;
}
void CatalogsFeedValidationWarnings::unsetSale_date_invalid()
{
    m_Sale_date_invalidIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getWeightUnitInvalid() const
{
    return m_Weight_unit_invalid;
}
void CatalogsFeedValidationWarnings::setWeightUnitInvalid(int32_t const value)
{
    m_Weight_unit_invalid = value;
    m_Weight_unit_invalidIsSet = true;
}
bool CatalogsFeedValidationWarnings::weightUnitInvalidIsSet() const
{
    return m_Weight_unit_invalidIsSet;
}
void CatalogsFeedValidationWarnings::unsetWeight_unit_invalid()
{
    m_Weight_unit_invalidIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getIsBundleInvalid() const
{
    return m_Is_bundle_invalid;
}
void CatalogsFeedValidationWarnings::setIsBundleInvalid(int32_t const value)
{
    m_Is_bundle_invalid = value;
    m_Is_bundle_invalidIsSet = true;
}
bool CatalogsFeedValidationWarnings::isBundleInvalidIsSet() const
{
    return m_Is_bundle_invalidIsSet;
}
void CatalogsFeedValidationWarnings::unsetIs_bundle_invalid()
{
    m_Is_bundle_invalidIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getUpdatedTimeInvalid() const
{
    return m_Updated_time_invalid;
}
void CatalogsFeedValidationWarnings::setUpdatedTimeInvalid(int32_t const value)
{
    m_Updated_time_invalid = value;
    m_Updated_time_invalidIsSet = true;
}
bool CatalogsFeedValidationWarnings::updatedTimeInvalidIsSet() const
{
    return m_Updated_time_invalidIsSet;
}
void CatalogsFeedValidationWarnings::unsetUpdated_time_invalid()
{
    m_Updated_time_invalidIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getCustomLabelLengthTooLong() const
{
    return m_Custom_label_length_too_long;
}
void CatalogsFeedValidationWarnings::setCustomLabelLengthTooLong(int32_t const value)
{
    m_Custom_label_length_too_long = value;
    m_Custom_label_length_too_longIsSet = true;
}
bool CatalogsFeedValidationWarnings::customLabelLengthTooLongIsSet() const
{
    return m_Custom_label_length_too_longIsSet;
}
void CatalogsFeedValidationWarnings::unsetCustom_label_length_too_long()
{
    m_Custom_label_length_too_longIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getProductTypeLengthTooLong() const
{
    return m_Product_type_length_too_long;
}
void CatalogsFeedValidationWarnings::setProductTypeLengthTooLong(int32_t const value)
{
    m_Product_type_length_too_long = value;
    m_Product_type_length_too_longIsSet = true;
}
bool CatalogsFeedValidationWarnings::productTypeLengthTooLongIsSet() const
{
    return m_Product_type_length_too_longIsSet;
}
void CatalogsFeedValidationWarnings::unsetProduct_type_length_too_long()
{
    m_Product_type_length_too_longIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getTooManyAdditionalImageLinks() const
{
    return m_Too_many_additional_image_links;
}
void CatalogsFeedValidationWarnings::setTooManyAdditionalImageLinks(int32_t const value)
{
    m_Too_many_additional_image_links = value;
    m_Too_many_additional_image_linksIsSet = true;
}
bool CatalogsFeedValidationWarnings::tooManyAdditionalImageLinksIsSet() const
{
    return m_Too_many_additional_image_linksIsSet;
}
void CatalogsFeedValidationWarnings::unsetToo_many_additional_image_links()
{
    m_Too_many_additional_image_linksIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getMultipackInvalid() const
{
    return m_Multipack_invalid;
}
void CatalogsFeedValidationWarnings::setMultipackInvalid(int32_t const value)
{
    m_Multipack_invalid = value;
    m_Multipack_invalidIsSet = true;
}
bool CatalogsFeedValidationWarnings::multipackInvalidIsSet() const
{
    return m_Multipack_invalidIsSet;
}
void CatalogsFeedValidationWarnings::unsetMultipack_invalid()
{
    m_Multipack_invalidIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getIndexedProductCountLargeDelta() const
{
    return m_Indexed_product_count_large_delta;
}
void CatalogsFeedValidationWarnings::setIndexedProductCountLargeDelta(int32_t const value)
{
    m_Indexed_product_count_large_delta = value;
    m_Indexed_product_count_large_deltaIsSet = true;
}
bool CatalogsFeedValidationWarnings::indexedProductCountLargeDeltaIsSet() const
{
    return m_Indexed_product_count_large_deltaIsSet;
}
void CatalogsFeedValidationWarnings::unsetIndexed_product_count_large_delta()
{
    m_Indexed_product_count_large_deltaIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getItemAdditionalImageDownloadFailure() const
{
    return m_Item_additional_image_download_failure;
}
void CatalogsFeedValidationWarnings::setItemAdditionalImageDownloadFailure(int32_t const value)
{
    m_Item_additional_image_download_failure = value;
    m_Item_additional_image_download_failureIsSet = true;
}
bool CatalogsFeedValidationWarnings::itemAdditionalImageDownloadFailureIsSet() const
{
    return m_Item_additional_image_download_failureIsSet;
}
void CatalogsFeedValidationWarnings::unsetItem_additional_image_download_failure()
{
    m_Item_additional_image_download_failureIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getOptionalProductCategoryMissing() const
{
    return m_Optional_product_category_missing;
}
void CatalogsFeedValidationWarnings::setOptionalProductCategoryMissing(int32_t const value)
{
    m_Optional_product_category_missing = value;
    m_Optional_product_category_missingIsSet = true;
}
bool CatalogsFeedValidationWarnings::optionalProductCategoryMissingIsSet() const
{
    return m_Optional_product_category_missingIsSet;
}
void CatalogsFeedValidationWarnings::unsetOptional_product_category_missing()
{
    m_Optional_product_category_missingIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getOptionalProductCategoryInvalid() const
{
    return m_Optional_product_category_invalid;
}
void CatalogsFeedValidationWarnings::setOptionalProductCategoryInvalid(int32_t const value)
{
    m_Optional_product_category_invalid = value;
    m_Optional_product_category_invalidIsSet = true;
}
bool CatalogsFeedValidationWarnings::optionalProductCategoryInvalidIsSet() const
{
    return m_Optional_product_category_invalidIsSet;
}
void CatalogsFeedValidationWarnings::unsetOptional_product_category_invalid()
{
    m_Optional_product_category_invalidIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getOptionalConditionMissing() const
{
    return m_Optional_condition_missing;
}
void CatalogsFeedValidationWarnings::setOptionalConditionMissing(int32_t const value)
{
    m_Optional_condition_missing = value;
    m_Optional_condition_missingIsSet = true;
}
bool CatalogsFeedValidationWarnings::optionalConditionMissingIsSet() const
{
    return m_Optional_condition_missingIsSet;
}
void CatalogsFeedValidationWarnings::unsetOptional_condition_missing()
{
    m_Optional_condition_missingIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getOptionalConditionInvalid() const
{
    return m_Optional_condition_invalid;
}
void CatalogsFeedValidationWarnings::setOptionalConditionInvalid(int32_t const value)
{
    m_Optional_condition_invalid = value;
    m_Optional_condition_invalidIsSet = true;
}
bool CatalogsFeedValidationWarnings::optionalConditionInvalidIsSet() const
{
    return m_Optional_condition_invalidIsSet;
}
void CatalogsFeedValidationWarnings::unsetOptional_condition_invalid()
{
    m_Optional_condition_invalidIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getIosDeepLinkInvalid() const
{
    return m_Ios_deep_link_invalid;
}
void CatalogsFeedValidationWarnings::setIosDeepLinkInvalid(int32_t const value)
{
    m_Ios_deep_link_invalid = value;
    m_Ios_deep_link_invalidIsSet = true;
}
bool CatalogsFeedValidationWarnings::iosDeepLinkInvalidIsSet() const
{
    return m_Ios_deep_link_invalidIsSet;
}
void CatalogsFeedValidationWarnings::unsetIos_deep_link_invalid()
{
    m_Ios_deep_link_invalidIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getAndroidDeepLinkInvalid() const
{
    return m_Android_deep_link_invalid;
}
void CatalogsFeedValidationWarnings::setAndroidDeepLinkInvalid(int32_t const value)
{
    m_Android_deep_link_invalid = value;
    m_Android_deep_link_invalidIsSet = true;
}
bool CatalogsFeedValidationWarnings::androidDeepLinkInvalidIsSet() const
{
    return m_Android_deep_link_invalidIsSet;
}
void CatalogsFeedValidationWarnings::unsetAndroid_deep_link_invalid()
{
    m_Android_deep_link_invalidIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getAvailabilityNormalized() const
{
    return m_Availability_normalized;
}
void CatalogsFeedValidationWarnings::setAvailabilityNormalized(int32_t const value)
{
    m_Availability_normalized = value;
    m_Availability_normalizedIsSet = true;
}
bool CatalogsFeedValidationWarnings::availabilityNormalizedIsSet() const
{
    return m_Availability_normalizedIsSet;
}
void CatalogsFeedValidationWarnings::unsetAvailability_normalized()
{
    m_Availability_normalizedIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getConditionNormalized() const
{
    return m_Condition_normalized;
}
void CatalogsFeedValidationWarnings::setConditionNormalized(int32_t const value)
{
    m_Condition_normalized = value;
    m_Condition_normalizedIsSet = true;
}
bool CatalogsFeedValidationWarnings::conditionNormalizedIsSet() const
{
    return m_Condition_normalizedIsSet;
}
void CatalogsFeedValidationWarnings::unsetCondition_normalized()
{
    m_Condition_normalizedIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getGenderNormalized() const
{
    return m_Gender_normalized;
}
void CatalogsFeedValidationWarnings::setGenderNormalized(int32_t const value)
{
    m_Gender_normalized = value;
    m_Gender_normalizedIsSet = true;
}
bool CatalogsFeedValidationWarnings::genderNormalizedIsSet() const
{
    return m_Gender_normalizedIsSet;
}
void CatalogsFeedValidationWarnings::unsetGender_normalized()
{
    m_Gender_normalizedIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getSizeTypeNormalized() const
{
    return m_Size_type_normalized;
}
void CatalogsFeedValidationWarnings::setSizeTypeNormalized(int32_t const value)
{
    m_Size_type_normalized = value;
    m_Size_type_normalizedIsSet = true;
}
bool CatalogsFeedValidationWarnings::sizeTypeNormalizedIsSet() const
{
    return m_Size_type_normalizedIsSet;
}
void CatalogsFeedValidationWarnings::unsetSize_type_normalized()
{
    m_Size_type_normalizedIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getAgeGroupNormalized() const
{
    return m_Age_group_normalized;
}
void CatalogsFeedValidationWarnings::setAgeGroupNormalized(int32_t const value)
{
    m_Age_group_normalized = value;
    m_Age_group_normalizedIsSet = true;
}
bool CatalogsFeedValidationWarnings::ageGroupNormalizedIsSet() const
{
    return m_Age_group_normalizedIsSet;
}
void CatalogsFeedValidationWarnings::unsetAge_group_normalized()
{
    m_Age_group_normalizedIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getUtmSourceAutoCorrected() const
{
    return m_Utm_source_auto_corrected;
}
void CatalogsFeedValidationWarnings::setUtmSourceAutoCorrected(int32_t const value)
{
    m_Utm_source_auto_corrected = value;
    m_Utm_source_auto_correctedIsSet = true;
}
bool CatalogsFeedValidationWarnings::utmSourceAutoCorrectedIsSet() const
{
    return m_Utm_source_auto_correctedIsSet;
}
void CatalogsFeedValidationWarnings::unsetUtm_source_auto_corrected()
{
    m_Utm_source_auto_correctedIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getCountryDoesNotMapToCurrency() const
{
    return m_Country_does_not_map_to_currency;
}
void CatalogsFeedValidationWarnings::setCountryDoesNotMapToCurrency(int32_t const value)
{
    m_Country_does_not_map_to_currency = value;
    m_Country_does_not_map_to_currencyIsSet = true;
}
bool CatalogsFeedValidationWarnings::countryDoesNotMapToCurrencyIsSet() const
{
    return m_Country_does_not_map_to_currencyIsSet;
}
void CatalogsFeedValidationWarnings::unsetCountry_does_not_map_to_currency()
{
    m_Country_does_not_map_to_currencyIsSet = false;
}
int32_t CatalogsFeedValidationWarnings::getMinAdPriceInvalid() const
{
    return m_Min_ad_price_invalid;
}
void CatalogsFeedValidationWarnings::setMinAdPriceInvalid(int32_t const value)
{
    m_Min_ad_price_invalid = value;
    m_Min_ad_price_invalidIsSet = true;
}
bool CatalogsFeedValidationWarnings::minAdPriceInvalidIsSet() const
{
    return m_Min_ad_price_invalidIsSet;
}
void CatalogsFeedValidationWarnings::unsetMin_ad_price_invalid()
{
    m_Min_ad_price_invalidIsSet = false;
}


} // namespace org::openapitools::server::model

