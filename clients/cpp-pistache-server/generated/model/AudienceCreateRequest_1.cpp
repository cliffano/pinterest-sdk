/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.6.0
* Contact: blah@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "AudienceCreateRequest_1.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

AudienceCreateRequest_1::AudienceCreateRequest_1()
{
    m_Description = "";
    m_DescriptionIsSet = false;
    m_Audience_type = "";
    
}

void AudienceCreateRequest_1::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool AudienceCreateRequest_1::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool AudienceCreateRequest_1::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "AudienceCreateRequest_1" : pathPrefix;

            
    return success;
}

bool AudienceCreateRequest_1::operator==(const AudienceCreateRequest_1& rhs) const
{
    return
    
    
    
    ((!descriptionIsSet() && !rhs.descriptionIsSet()) || (descriptionIsSet() && rhs.descriptionIsSet() && getDescription() == rhs.getDescription())) &&
    
    (getAudienceType() == rhs.getAudienceType())
    
    
    ;
}

bool AudienceCreateRequest_1::operator!=(const AudienceCreateRequest_1& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const AudienceCreateRequest_1& o)
{
    j = nlohmann::json();
    if(o.descriptionIsSet())
        j["description"] = o.m_Description;
    j["audience_type"] = o.m_Audience_type;
    
}

void from_json(const nlohmann::json& j, AudienceCreateRequest_1& o)
{
    if(j.find("description") != j.end())
    {
        j.at("description").get_to(o.m_Description);
        o.m_DescriptionIsSet = true;
    } 
    j.at("audience_type").get_to(o.m_Audience_type);
    
}

std::string AudienceCreateRequest_1::getDescription() const
{
    return m_Description;
}
void AudienceCreateRequest_1::setDescription(std::string const& value)
{
    m_Description = value;
    m_DescriptionIsSet = true;
}
bool AudienceCreateRequest_1::descriptionIsSet() const
{
    return m_DescriptionIsSet;
}
void AudienceCreateRequest_1::unsetDescription()
{
    m_DescriptionIsSet = false;
}
AudienceType AudienceCreateRequest_1::getAudienceType() const
{
    return m_Audience_type;
}
void AudienceCreateRequest_1::setAudienceType(AudienceType const& value)
{
    m_Audience_type = value;
}


} // namespace org::openapitools::server::model

