/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.12.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * CatalogProductGroup.h
 *
 * non-promoted catalog product group entity
 */

#ifndef CatalogProductGroup_H_
#define CatalogProductGroup_H_


#include "Board.h"
#include "EntityStatus.h"
#include <string>
#include "Object.h"
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// non-promoted catalog product group entity
/// </summary>
class  CatalogProductGroup
{
public:
    CatalogProductGroup();
    virtual ~CatalogProductGroup() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const CatalogProductGroup& rhs) const;
    bool operator!=(const CatalogProductGroup& rhs) const;

    /////////////////////////////////////////////
    /// CatalogProductGroup members

    /// <summary>
    /// ID of the catalog product group.
    /// </summary>
    std::string getId() const;
    void setId(std::string const& value);
    bool idIsSet() const;
    void unsetId();
    /// <summary>
    /// Merchant ID pertaining to the owner of the catalog product group.
    /// </summary>
    std::string getMerchantId() const;
    void setMerchantId(std::string const& value);
    bool merchantIdIsSet() const;
    void unsetMerchant_id();
    /// <summary>
    /// Name of catalog product group
    /// </summary>
    std::string getName() const;
    void setName(std::string const& value);
    bool nameIsSet() const;
    void unsetName();
    /// <summary>
    /// Object holding a list of filters
    /// </summary>
    org::openapitools::server::model::Object getFilters() const;
    void setFilters(org::openapitools::server::model::Object const& value);
    bool filtersIsSet() const;
    void unsetFilters();
    /// <summary>
    /// Object holding a list of filters
    /// </summary>
    org::openapitools::server::model::Object getFilterV2() const;
    void setFilterV2(org::openapitools::server::model::Object const& value);
    bool filterV2IsSet() const;
    void unsetFilter_v2();
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::Board getType() const;
    void setType(org::openapitools::server::model::Board const& value);
    bool typeIsSet() const;
    void unsetType();
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::EntityStatus getStatus() const;
    void setStatus(org::openapitools::server::model::EntityStatus const& value);
    bool statusIsSet() const;
    void unsetStatus();
    /// <summary>
    /// id of the feed profile belonging to this catalog product group
    /// </summary>
    std::string getFeedProfileId() const;
    void setFeedProfileId(std::string const& value);
    bool feedProfileIdIsSet() const;
    void unsetFeed_profile_id();
    /// <summary>
    /// Unix timestamp in seconds of when catalog product group was created.
    /// </summary>
    int32_t getCreatedAt() const;
    void setCreatedAt(int32_t const value);
    bool createdAtIsSet() const;
    void unsetCreated_at();
    /// <summary>
    /// Unix timestamp in seconds of last time catalog product group was updated.
    /// </summary>
    int32_t getLastUpdate() const;
    void setLastUpdate(int32_t const value);
    bool lastUpdateIsSet() const;
    void unsetLast_update();
    /// <summary>
    /// Amount of products in the catalog product group
    /// </summary>
    int32_t getProductCount() const;
    void setProductCount(int32_t const value);
    bool productCountIsSet() const;
    void unsetProduct_count();
    /// <summary>
    /// index of the featured position of the catalog product group
    /// </summary>
    int32_t getFeaturedPosition() const;
    void setFeaturedPosition(int32_t const value);
    bool featuredPositionIsSet() const;
    void unsetFeatured_position();

    friend  void to_json(nlohmann::json& j, const CatalogProductGroup& o);
    friend  void from_json(const nlohmann::json& j, CatalogProductGroup& o);
protected:
    std::string m_Id;
    bool m_IdIsSet;
    std::string m_Merchant_id;
    bool m_Merchant_idIsSet;
    std::string m_Name;
    bool m_NameIsSet;
    org::openapitools::server::model::Object m_Filters;
    bool m_FiltersIsSet;
    org::openapitools::server::model::Object m_Filter_v2;
    bool m_Filter_v2IsSet;
    org::openapitools::server::model::Board m_Type;
    bool m_TypeIsSet;
    org::openapitools::server::model::EntityStatus m_Status;
    bool m_StatusIsSet;
    std::string m_Feed_profile_id;
    bool m_Feed_profile_idIsSet;
    int32_t m_Created_at;
    bool m_Created_atIsSet;
    int32_t m_Last_update;
    bool m_Last_updateIsSet;
    int32_t m_Product_count;
    bool m_Product_countIsSet;
    int32_t m_Featured_position;
    bool m_Featured_positionIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* CatalogProductGroup_H_ */
