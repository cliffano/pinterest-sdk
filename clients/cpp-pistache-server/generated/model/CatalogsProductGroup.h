/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.3.0
* Contact: pinterest-api@pinterest.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * CatalogsProductGroup.h
 *
 * catalog product group entity
 */

#ifndef CatalogsProductGroup_H_
#define CatalogsProductGroup_H_


#include "CatalogsProductGroupType.h"
#include <string>
#include "CatalogsProductGroupFilters.h"
#include "CatalogsProductGroupStatus.h"
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// catalog product group entity
/// </summary>
class  CatalogsProductGroup
{
public:
    CatalogsProductGroup();
    virtual ~CatalogsProductGroup() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const CatalogsProductGroup& rhs) const;
    bool operator!=(const CatalogsProductGroup& rhs) const;

    /////////////////////////////////////////////
    /// CatalogsProductGroup members

    /// <summary>
    /// ID of the catalog product group.
    /// </summary>
    std::string getId() const;
    void setId(std::string const& value);
    /// <summary>
    /// Name of catalog product group
    /// </summary>
    std::string getName() const;
    void setName(std::string const& value);
    bool nameIsSet() const;
    void unsetName();
    /// <summary>
    /// 
    /// </summary>
    std::string getDescription() const;
    void setDescription(std::string const& value);
    bool descriptionIsSet() const;
    void unsetDescription();
    /// <summary>
    /// 
    /// </summary>
    CatalogsProductGroupFilters getFilters() const;
    void setFilters(CatalogsProductGroupFilters const& value);
    /// <summary>
    /// 
    /// </summary>
    CatalogsProductGroupType getType() const;
    void setType(CatalogsProductGroupType const& value);
    bool typeIsSet() const;
    void unsetType();
    /// <summary>
    /// 
    /// </summary>
    CatalogsProductGroupStatus getStatus() const;
    void setStatus(CatalogsProductGroupStatus const& value);
    bool statusIsSet() const;
    void unsetStatus();
    /// <summary>
    /// id of the catalogs feed belonging to this catalog product group
    /// </summary>
    std::string getFeedId() const;
    void setFeedId(std::string const& value);
    bool feedIdIsSet() const;
    void unsetFeed_id();
    /// <summary>
    /// Unix timestamp in seconds of when catalog product group was created.
    /// </summary>
    int32_t getCreatedAt() const;
    void setCreatedAt(int32_t const value);
    bool createdAtIsSet() const;
    void unsetCreated_at();
    /// <summary>
    /// Unix timestamp in seconds of last time catalog product group was updated.
    /// </summary>
    int32_t getUpdatedAt() const;
    void setUpdatedAt(int32_t const value);
    bool updatedAtIsSet() const;
    void unsetUpdated_at();

    friend void to_json(nlohmann::json& j, const CatalogsProductGroup& o);
    friend void from_json(const nlohmann::json& j, CatalogsProductGroup& o);
protected:
    std::string m_Id;

    std::string m_Name;
    bool m_NameIsSet;
    std::string m_Description;
    bool m_DescriptionIsSet;
    CatalogsProductGroupFilters m_Filters;

    CatalogsProductGroupType m_Type;
    bool m_TypeIsSet;
    CatalogsProductGroupStatus m_Status;
    bool m_StatusIsSet;
    std::string m_Feed_id;
    bool m_Feed_idIsSet;
    int32_t m_Created_at;
    bool m_Created_atIsSet;
    int32_t m_Updated_at;
    bool m_Updated_atIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* CatalogsProductGroup_H_ */
