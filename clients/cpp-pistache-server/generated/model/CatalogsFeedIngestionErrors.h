/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.3.0
* Contact: blah@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * CatalogsFeedIngestionErrors.h
 *
 * 
 */

#ifndef CatalogsFeedIngestionErrors_H_
#define CatalogsFeedIngestionErrors_H_


#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  CatalogsFeedIngestionErrors
{
public:
    CatalogsFeedIngestionErrors();
    virtual ~CatalogsFeedIngestionErrors() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const CatalogsFeedIngestionErrors& rhs) const;
    bool operator!=(const CatalogsFeedIngestionErrors& rhs) const;

    /////////////////////////////////////////////
    /// CatalogsFeedIngestionErrors members

    /// <summary>
    /// 
    /// </summary>
    int32_t getImageDownloadError() const;
    void setImageDownloadError(int32_t const value);
    bool imageDownloadErrorIsSet() const;
    void unsetImage_download_error();
    /// <summary>
    /// 
    /// </summary>
    int32_t getImageDownloadConnectionTimeout() const;
    void setImageDownloadConnectionTimeout(int32_t const value);
    bool imageDownloadConnectionTimeoutIsSet() const;
    void unsetImage_download_connection_timeout();
    /// <summary>
    /// 
    /// </summary>
    int32_t getImageFormatUnrecognize() const;
    void setImageFormatUnrecognize(int32_t const value);
    bool imageFormatUnrecognizeIsSet() const;
    void unsetImage_format_unrecognize();
    /// <summary>
    /// 
    /// </summary>
    int32_t getLineLevelInternalError() const;
    void setLineLevelInternalError(int32_t const value);
    bool lineLevelInternalErrorIsSet() const;
    void unsetLine_level_internal_error();
    /// <summary>
    /// 
    /// </summary>
    int32_t getLargeProductCountDecrease() const;
    void setLargeProductCountDecrease(int32_t const value);
    bool largeProductCountDecreaseIsSet() const;
    void unsetLarge_product_count_decrease();

    friend void to_json(nlohmann::json& j, const CatalogsFeedIngestionErrors& o);
    friend void from_json(const nlohmann::json& j, CatalogsFeedIngestionErrors& o);
protected:
    int32_t m_Image_download_error;
    bool m_Image_download_errorIsSet;
    int32_t m_Image_download_connection_timeout;
    bool m_Image_download_connection_timeoutIsSet;
    int32_t m_Image_format_unrecognize;
    bool m_Image_format_unrecognizeIsSet;
    int32_t m_Line_level_internal_error;
    bool m_Line_level_internal_errorIsSet;
    int32_t m_Large_product_count_decrease;
    bool m_Large_product_count_decreaseIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* CatalogsFeedIngestionErrors_H_ */
