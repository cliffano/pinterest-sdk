/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.6.0
* Contact: blah@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ProductGroupPromotionCommon.h
 *
 * 
 */

#ifndef ProductGroupPromotionCommon_H_
#define ProductGroupPromotionCommon_H_


#include "CreativeType.h"
#include "EntityStatus.h"
#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  ProductGroupPromotionCommon
{
public:
    ProductGroupPromotionCommon();
    virtual ~ProductGroupPromotionCommon() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const ProductGroupPromotionCommon& rhs) const;
    bool operator!=(const ProductGroupPromotionCommon& rhs) const;

    /////////////////////////////////////////////
    /// ProductGroupPromotionCommon members

    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::EntityStatus getStatus() const;
    void setStatus(org::openapitools::server::model::EntityStatus const& value);
    bool statusIsSet() const;
    void unsetStatus();
    /// <summary>
    /// Tracking template for proudct group promotions. 4000 limit
    /// </summary>
    std::string getTrackingUrl() const;
    void setTrackingUrl(std::string const& value);
    bool trackingUrlIsSet() const;
    void unsetTracking_url();
    /// <summary>
    /// ID of the catalogs product group that this product group promotion references
    /// </summary>
    std::string getCatalogsProductGroupId() const;
    void setCatalogsProductGroupId(std::string const& value);
    bool catalogsProductGroupIdIsSet() const;
    void unsetCatalogs_product_group_id();
    /// <summary>
    /// Catalogs product group
    /// </summary>
    std::string getCatalogsProductGroupName() const;
    void setCatalogsProductGroupName(std::string const& value);
    bool catalogsProductGroupNameIsSet() const;
    void unsetCatalogs_product_group_name();
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CreativeType getCreativeType() const;
    void setCreativeType(org::openapitools::server::model::CreativeType const& value);
    bool creativeTypeIsSet() const;
    void unsetCreative_type();
    /// <summary>
    /// Hero Pin ID if this PG is promoted as a Collection
    /// </summary>
    std::string getCollectionsHeroPinId() const;
    void setCollectionsHeroPinId(std::string const& value);
    bool collectionsHeroPinIdIsSet() const;
    void unsetCollections_hero_pin_id();
    /// <summary>
    /// Collections Hero Destination Url
    /// </summary>
    std::string getCollectionsHeroDestinationUrl() const;
    void setCollectionsHeroDestinationUrl(std::string const& value);
    bool collectionsHeroDestinationUrlIsSet() const;
    void unsetCollections_hero_destination_url();
    /// <summary>
    /// Slideshow Collections Title
    /// </summary>
    std::string getSlideshowCollectionsTitle() const;
    void setSlideshowCollectionsTitle(std::string const& value);
    bool slideshowCollectionsTitleIsSet() const;
    void unsetSlideshow_collections_title();
    /// <summary>
    /// Slideshow Collections Description
    /// </summary>
    std::string getSlideshowCollectionsDescription() const;
    void setSlideshowCollectionsDescription(std::string const& value);
    bool slideshowCollectionsDescriptionIsSet() const;
    void unsetSlideshow_collections_description();
    /// <summary>
    /// If set to true products promoted in this product group will use the Mobile Deep Link specified in your catalog
    /// </summary>
    bool isIsMdl() const;
    void setIsMdl(bool const value);
    bool isMdlIsSet() const;
    void unsetIs_mdl();

    friend void to_json(nlohmann::json& j, const ProductGroupPromotionCommon& o);
    friend void from_json(const nlohmann::json& j, ProductGroupPromotionCommon& o);
protected:
    org::openapitools::server::model::EntityStatus m_Status;
    bool m_StatusIsSet;
    std::string m_Tracking_url;
    bool m_Tracking_urlIsSet;
    std::string m_Catalogs_product_group_id;
    bool m_Catalogs_product_group_idIsSet;
    std::string m_Catalogs_product_group_name;
    bool m_Catalogs_product_group_nameIsSet;
    org::openapitools::server::model::CreativeType m_Creative_type;
    bool m_Creative_typeIsSet;
    std::string m_Collections_hero_pin_id;
    bool m_Collections_hero_pin_idIsSet;
    std::string m_Collections_hero_destination_url;
    bool m_Collections_hero_destination_urlIsSet;
    std::string m_Slideshow_collections_title;
    bool m_Slideshow_collections_titleIsSet;
    std::string m_Slideshow_collections_description;
    bool m_Slideshow_collections_descriptionIsSet;
    bool m_Is_mdl;
    bool m_Is_mdlIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* ProductGroupPromotionCommon_H_ */
