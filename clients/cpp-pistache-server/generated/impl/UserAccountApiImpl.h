/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.3.0
* Contact: blah@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

/*
* UserAccountApiImpl.h
*
* 
*/

#ifndef USER_ACCOUNT_API_IMPL_H_
#define USER_ACCOUNT_API_IMPL_H_


#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>
#include <memory>
#include <optional>

#include <UserAccountApi.h>


#include "Account.h"
#include "AnalyticsMetricsResponse.h"
#include "Error.h"
#include <string>

namespace org::openapitools::server::api
{

using namespace org::openapitools::server::model;

class UserAccountApiImpl : public org::openapitools::server::api::UserAccountApi {
public:
    explicit UserAccountApiImpl(const std::shared_ptr<Pistache::Rest::Router>& rtr);
    ~UserAccountApiImpl() override = default;

    void user_account_analytics(const std::optional<std::string> &startDate, const std::optional<std::string> &endDate, const std::optional<std::string> &fromClaimedContent, const std::optional<std::string> &pinFormat, const std::optional<std::string> &appTypes, const std::optional<std::vector<std::string>> &metricTypes, const std::optional<std::string> &splitField, const std::optional<std::string> &adAccountId, Pistache::Http::ResponseWriter &response);
    void user_account_get(const std::optional<std::string> &adAccountId, Pistache::Http::ResponseWriter &response);

};

} // namespace org::openapitools::server::api



#endif
