/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.3.0
* Contact: pinterest-api@pinterest.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

/*
* PinsApiImpl.h
*
* 
*/

#ifndef PINS_API_IMPL_H_
#define PINS_API_IMPL_H_


#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>
#include <memory>
#include <optional>

#include <PinsApi.h>


#include "AnalyticsMetricsResponse.h"
#include "Error.h"
#include "Pin.h"
#include <string>

namespace org::openapitools::server::api
{

using namespace org::openapitools::server::model;

class PinsApiImpl : public org::openapitools::server::api::PinsApi {
public:
    explicit PinsApiImpl(const std::shared_ptr<Pistache::Rest::Router>& rtr);
    ~PinsApiImpl() override = default;

    void pins_analytics(const std::string &pinId, const std::optional<std::string> &startDate, const std::optional<std::string> &endDate, const std::optional<std::vector<std::string>> &metricTypes, const std::optional<std::string> &appTypes, const std::optional<std::string> &splitField, const std::optional<std::string> &adAccountId, Pistache::Http::ResponseWriter &response);
    void pins_create(const Pin &pin, Pistache::Http::ResponseWriter &response);
    void pins_delete(const std::string &pinId, Pistache::Http::ResponseWriter &response);
    void pins_get(const std::string &pinId, const std::optional<std::string> &adAccountId, Pistache::Http::ResponseWriter &response);

};

} // namespace org::openapitools::server::api



#endif
