/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class CatalogsApiController : ControllerBase
    { 
        /// <summary>
        /// List catalogs
        /// </summary>
        /// <remarks>Fetch catalogs owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/shopping/catalog/&#39;&gt;Learn more&lt;/a&gt;</remarks>
        /// <param name="bookmark">Cursor used to fetch the next page of items</param>
        /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/getting-started/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="200">Success</response>
        /// <response code="400">Invalid parameters.</response>
        /// <response code="401">Unauthorized access.</response>
        /// <response code="0">Unexpected error.</response>
        [HttpGet]
        [Route("/v5/catalogs")]
        [ValidateModelState]
        [SwaggerOperation("CatalogsList")]
        [SwaggerResponse(statusCode: 200, type: typeof(CatalogsList200Response), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid parameters.")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Unauthorized access.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error.")]
        public virtual IActionResult CatalogsList([FromQuery (Name = "bookmark")]string bookmark, [FromQuery (Name = "page_size")][Range(1, 250)]int? pageSize, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CatalogsList200Response));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"bookmark\" : \"bookmark\",\n  \"items\" : [ {\n    \"updated_at\" : \"2022-03-14T15:16:34Z\",\n    \"name\" : \"name\",\n    \"created_at\" : \"2022-03-14T15:15:22Z\",\n    \"id\" : \"864344156814050986\"\n  }, {\n    \"updated_at\" : \"2022-03-14T15:16:34Z\",\n    \"name\" : \"name\",\n    \"created_at\" : \"2022-03-14T15:15:22Z\",\n    \"id\" : \"864344156814050986\"\n  } ]\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CatalogsList200Response>(exampleJson)
            : default(CatalogsList200Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// List products for a Product Group
        /// </summary>
        /// <remarks>Get a list of product pins for a given Catalogs Product Group Id owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/shopping/catalog/&#39;&gt;Learn more&lt;/a&gt;</remarks>
        /// <param name="productGroupId">Unique identifier of a product group</param>
        /// <param name="bookmark">Cursor used to fetch the next page of items</param>
        /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/getting-started/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="200">Success</response>
        /// <response code="400">Invalid parameters.</response>
        /// <response code="401">Unauthorized access.</response>
        /// <response code="404">Catalogs product group not found.</response>
        /// <response code="0">Unexpected error.</response>
        [HttpGet]
        [Route("/v5/catalogs/product_groups/{product_group_id}/products")]
        [ValidateModelState]
        [SwaggerOperation("CatalogsProductGroupPinsList")]
        [SwaggerResponse(statusCode: 200, type: typeof(CatalogsProductGroupPinsList200Response), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid parameters.")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Unauthorized access.")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Catalogs product group not found.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error.")]
        public virtual IActionResult CatalogsProductGroupPinsList([FromRoute (Name = "product_group_id")][Required][RegularExpression("^\\d+$")]string productGroupId, [FromQuery (Name = "bookmark")]string bookmark, [FromQuery (Name = "page_size")][Range(1, 250)]int? pageSize, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CatalogsProductGroupPinsList200Response));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"bookmark\" : \"bookmark\",\n  \"items\" : [ {\n    \"metadata\" : {\n      \"item_id\" : \"DS0294-L\",\n      \"price\" : 24.99,\n      \"item_group_id\" : \"DS0294\",\n      \"currency\" : \"USD\",\n      \"sale_price\" : 14.99\n    },\n    \"pin\" : {\n      \"note\" : \"note\",\n      \"board_owner\" : {\n        \"username\" : \"username\"\n      },\n      \"media_source\" : \"{}\",\n      \"pin_metrics\" : {\n        \"pin_metrics\" : [ {\n          \"90d\" : {\n            \"pin_click\" : 7,\n            \"impression\" : 2,\n            \"clickthrough\" : 3\n          },\n          \"all_time\" : {\n            \"pin_click\" : 7,\n            \"impression\" : 2,\n            \"clickthrough\" : 3,\n            \"reaction\" : 10,\n            \"comment\" : 2\n          }\n        }, null ]\n      },\n      \"is_owner\" : true,\n      \"link\" : \"https://www.pinterest.com/\",\n      \"created_at\" : \"2020-01-01T20:10:40Z\",\n      \"description\" : \"description\",\n      \"has_been_promoted\" : true,\n      \"media\" : {\n        \"media_type\" : \"media_type\"\n      },\n      \"title\" : \"title\",\n      \"board_section_id\" : \"board_section_id\",\n      \"dominant_color\" : \"#6E7874\",\n      \"alt_text\" : \"alt_text\",\n      \"board_id\" : \"board_id\",\n      \"creative_type\" : \"creative_type\",\n      \"parent_pin_id\" : \"parent_pin_id\",\n      \"id\" : \"813744226420795884\",\n      \"is_standard\" : true\n    }\n  }, {\n    \"metadata\" : {\n      \"item_id\" : \"DS0294-L\",\n      \"price\" : 24.99,\n      \"item_group_id\" : \"DS0294\",\n      \"currency\" : \"USD\",\n      \"sale_price\" : 14.99\n    },\n    \"pin\" : {\n      \"note\" : \"note\",\n      \"board_owner\" : {\n        \"username\" : \"username\"\n      },\n      \"media_source\" : \"{}\",\n      \"pin_metrics\" : {\n        \"pin_metrics\" : [ {\n          \"90d\" : {\n            \"pin_click\" : 7,\n            \"impression\" : 2,\n            \"clickthrough\" : 3\n          },\n          \"all_time\" : {\n            \"pin_click\" : 7,\n            \"impression\" : 2,\n            \"clickthrough\" : 3,\n            \"reaction\" : 10,\n            \"comment\" : 2\n          }\n        }, null ]\n      },\n      \"is_owner\" : true,\n      \"link\" : \"https://www.pinterest.com/\",\n      \"created_at\" : \"2020-01-01T20:10:40Z\",\n      \"description\" : \"description\",\n      \"has_been_promoted\" : true,\n      \"media\" : {\n        \"media_type\" : \"media_type\"\n      },\n      \"title\" : \"title\",\n      \"board_section_id\" : \"board_section_id\",\n      \"dominant_color\" : \"#6E7874\",\n      \"alt_text\" : \"alt_text\",\n      \"board_id\" : \"board_id\",\n      \"creative_type\" : \"creative_type\",\n      \"parent_pin_id\" : \"parent_pin_id\",\n      \"id\" : \"813744226420795884\",\n      \"is_standard\" : true\n    }\n  } ]\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CatalogsProductGroupPinsList200Response>(exampleJson)
            : default(CatalogsProductGroupPinsList200Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create product group
        /// </summary>
        /// <remarks>Create product group to use in Catalogs owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/shopping/catalog/&#39;&gt;Learn more&lt;/a&gt;</remarks>
        /// <param name="catalogsProductGroupsCreateRequest">Request object used to created a catalogs product group.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="201">Success</response>
        /// <response code="400">Invalid body.</response>
        /// <response code="401">Unauthorized access.</response>
        /// <response code="403">Forbidden. Account not approved for catalog product group mutations yet.</response>
        /// <response code="409">Conflict. Can&#39;t create this catalogs product group with this value.</response>
        /// <response code="0">Unexpected error.</response>
        [HttpPost]
        [Route("/v5/catalogs/product_groups")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("CatalogsProductGroupsCreate")]
        [SwaggerResponse(statusCode: 201, type: typeof(CatalogsProductGroupsCreate201Response), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid body.")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Unauthorized access.")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Forbidden. Account not approved for catalog product group mutations yet.")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Conflict. Can&#39;t create this catalogs product group with this value.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error.")]
        public virtual IActionResult CatalogsProductGroupsCreate([FromBody]CatalogsProductGroupsCreateRequest catalogsProductGroupsCreateRequest, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(CatalogsProductGroupsCreate201Response));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"updated_at\" : 1622742155000,\n  \"catalog_type\" : \"RETAIL\",\n  \"name\" : \"Most Popular\",\n  \"description\" : \"description\",\n  \"created_at\" : 1621350033000,\n  \"id\" : \"443727193917\",\n  \"filters\" : {\n    \"any_of\" : [ {\n      \"MIN_PRICE\" : {\n        \"inclusion\" : true,\n        \"negated\" : false,\n        \"values\" : 0.08008281904610115\n      }\n    }, {\n      \"MIN_PRICE\" : {\n        \"inclusion\" : true,\n        \"negated\" : false,\n        \"values\" : 0.08008281904610115\n      }\n    } ]\n  },\n  \"type\" : \"TOP_SELLERS\",\n  \"is_featured\" : true,\n  \"feed_id\" : \"2680059592705\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CatalogsProductGroupsCreate201Response>(exampleJson)
            : default(CatalogsProductGroupsCreate201Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Delete product group
        /// </summary>
        /// <remarks>Delete a product group owned by the \&quot;operation user_account\&quot; from being in use in Catalogs. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/shopping/catalog/&#39;&gt;Learn more&lt;/a&gt;</remarks>
        /// <param name="productGroupId">Unique identifier of a product group</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="204">Catalogs Product Group deleted successfully.</response>
        /// <response code="400">Invalid catalogs product group id parameters.</response>
        /// <response code="401">Unauthorized access.</response>
        /// <response code="403">Forbidden. Account not approved for catalog product group mutations yet.</response>
        /// <response code="404">Catalogs product group not found.</response>
        /// <response code="409">Conflict. Can&#39;t delete this catalogs product group.</response>
        /// <response code="0">Unexpected error.</response>
        [HttpDelete]
        [Route("/v5/catalogs/product_groups/{product_group_id}")]
        [ValidateModelState]
        [SwaggerOperation("CatalogsProductGroupsDelete")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid catalogs product group id parameters.")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Unauthorized access.")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Forbidden. Account not approved for catalog product group mutations yet.")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Catalogs product group not found.")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Conflict. Can&#39;t delete this catalogs product group.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error.")]
        public virtual IActionResult CatalogsProductGroupsDelete([FromRoute (Name = "product_group_id")][Required][RegularExpression("^\\d+$")]string productGroupId, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));

            throw new NotImplementedException();
        }

        /// <summary>
        /// Get product group
        /// </summary>
        /// <remarks>Get a singe product group for a given Catalogs Product Group Id owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/shopping/catalog/&#39;&gt;Learn more&lt;/a&gt;</remarks>
        /// <param name="productGroupId">Unique identifier of a product group</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="200">Success</response>
        /// <response code="400">Invalid catalogs product group id parameters.</response>
        /// <response code="401">Unauthorized access.</response>
        /// <response code="403">Forbidden. Account not approved for catalog product group mutations yet.</response>
        /// <response code="404">Catalogs product group not found.</response>
        /// <response code="409">Conflict. Can&#39;t get a catalogs product group without an existing catalog.</response>
        /// <response code="0">Unexpected error.</response>
        [HttpGet]
        [Route("/v5/catalogs/product_groups/{product_group_id}")]
        [ValidateModelState]
        [SwaggerOperation("CatalogsProductGroupsGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(CatalogsProductGroupsCreate201Response), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid catalogs product group id parameters.")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Unauthorized access.")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Forbidden. Account not approved for catalog product group mutations yet.")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Catalogs product group not found.")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Conflict. Can&#39;t get a catalogs product group without an existing catalog.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error.")]
        public virtual IActionResult CatalogsProductGroupsGet([FromRoute (Name = "product_group_id")][Required][RegularExpression("^\\d+$")]string productGroupId, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CatalogsProductGroupsCreate201Response));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"updated_at\" : 1622742155000,\n  \"catalog_type\" : \"RETAIL\",\n  \"name\" : \"Most Popular\",\n  \"description\" : \"description\",\n  \"created_at\" : 1621350033000,\n  \"id\" : \"443727193917\",\n  \"filters\" : {\n    \"any_of\" : [ {\n      \"MIN_PRICE\" : {\n        \"inclusion\" : true,\n        \"negated\" : false,\n        \"values\" : 0.08008281904610115\n      }\n    }, {\n      \"MIN_PRICE\" : {\n        \"inclusion\" : true,\n        \"negated\" : false,\n        \"values\" : 0.08008281904610115\n      }\n    } ]\n  },\n  \"type\" : \"TOP_SELLERS\",\n  \"is_featured\" : true,\n  \"feed_id\" : \"2680059592705\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CatalogsProductGroupsCreate201Response>(exampleJson)
            : default(CatalogsProductGroupsCreate201Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// List product groups
        /// </summary>
        /// <remarks>Get a list of product groups for a given Catalogs Feed Id owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/shopping/catalog/&#39;&gt;Learn more&lt;/a&gt;</remarks>
        /// <param name="feedId">Filter entities for a given feed_id. If not given, all feeds are considered.</param>
        /// <param name="catalogId">Filter entities for a given catalog_id. If not given, all catalogs are considered.</param>
        /// <param name="bookmark">Cursor used to fetch the next page of items</param>
        /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/getting-started/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="200">Success</response>
        /// <response code="400">Invalid feed parameters.</response>
        /// <response code="401">Unauthorized access.</response>
        /// <response code="403">Forbidden. Account not approved for catalog product group mutations yet.</response>
        /// <response code="404">Data feed not found.</response>
        /// <response code="409">Conflict. Can&#39;t create this catalogs product group with this value.</response>
        /// <response code="0">Unexpected error.</response>
        [HttpGet]
        [Route("/v5/catalogs/product_groups")]
        [ValidateModelState]
        [SwaggerOperation("CatalogsProductGroupsList")]
        [SwaggerResponse(statusCode: 200, type: typeof(CatalogsProductGroupsList200Response), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid feed parameters.")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Unauthorized access.")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Forbidden. Account not approved for catalog product group mutations yet.")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Data feed not found.")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Conflict. Can&#39;t create this catalogs product group with this value.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error.")]
        public virtual IActionResult CatalogsProductGroupsList([FromQuery (Name = "feed_id")][RegularExpression("^\\d+$")]string feedId, [FromQuery (Name = "catalog_id")][RegularExpression("^\\d+$")]string catalogId, [FromQuery (Name = "bookmark")]string bookmark, [FromQuery (Name = "page_size")][Range(1, 250)]int? pageSize, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CatalogsProductGroupsList200Response));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"bookmark\" : \"bookmark\",\n  \"items\" : [ {\n    \"updated_at\" : 1622742155000,\n    \"catalog_type\" : \"RETAIL\",\n    \"name\" : \"Most Popular\",\n    \"description\" : \"description\",\n    \"created_at\" : 1621350033000,\n    \"id\" : \"443727193917\",\n    \"filters\" : {\n      \"any_of\" : [ {\n        \"MIN_PRICE\" : {\n          \"inclusion\" : true,\n          \"negated\" : false,\n          \"values\" : 0.08008281904610115\n        }\n      }, {\n        \"MIN_PRICE\" : {\n          \"inclusion\" : true,\n          \"negated\" : false,\n          \"values\" : 0.08008281904610115\n        }\n      } ]\n    },\n    \"type\" : \"TOP_SELLERS\",\n    \"is_featured\" : true,\n    \"feed_id\" : \"2680059592705\"\n  }, {\n    \"updated_at\" : 1622742155000,\n    \"catalog_type\" : \"RETAIL\",\n    \"name\" : \"Most Popular\",\n    \"description\" : \"description\",\n    \"created_at\" : 1621350033000,\n    \"id\" : \"443727193917\",\n    \"filters\" : {\n      \"any_of\" : [ {\n        \"MIN_PRICE\" : {\n          \"inclusion\" : true,\n          \"negated\" : false,\n          \"values\" : 0.08008281904610115\n        }\n      }, {\n        \"MIN_PRICE\" : {\n          \"inclusion\" : true,\n          \"negated\" : false,\n          \"values\" : 0.08008281904610115\n        }\n      } ]\n    },\n    \"type\" : \"TOP_SELLERS\",\n    \"is_featured\" : true,\n    \"feed_id\" : \"2680059592705\"\n  } ]\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CatalogsProductGroupsList200Response>(exampleJson)
            : default(CatalogsProductGroupsList200Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get product counts for a Product Group
        /// </summary>
        /// <remarks>Get a product counts for a given Catalogs Product Group owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/shopping/catalog/&#39;&gt;Learn more&lt;/a&gt;</remarks>
        /// <param name="productGroupId">Unique identifier of a product group</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="200">Success</response>
        /// <response code="404">Product Group Not Found.</response>
        /// <response code="409">Can&#39;t access this feature without an existing catalog.</response>
        /// <response code="0">Unexpected error.</response>
        [HttpGet]
        [Route("/v5/catalogs/product_groups/{product_group_id}/product_counts")]
        [ValidateModelState]
        [SwaggerOperation("CatalogsProductGroupsProductCountsGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(CatalogsProductGroupProductCounts), description: "Success")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Product Group Not Found.")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Can&#39;t access this feature without an existing catalog.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error.")]
        public virtual IActionResult CatalogsProductGroupsProductCountsGet([FromRoute (Name = "product_group_id")][Required][RegularExpression("^\\d+$")]string productGroupId, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CatalogsProductGroupProductCounts));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"out_of_stock\" : 0.6027456183070403,\n  \"total\" : 0.5962133916683182,\n  \"in_stock\" : 0.08008281904610115,\n  \"preorder\" : 0.14658129805029452\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CatalogsProductGroupProductCounts>(exampleJson)
            : default(CatalogsProductGroupProductCounts);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update product group
        /// </summary>
        /// <remarks>Update product group owned by the \&quot;operation user_account\&quot; to use in Catalogs. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/shopping/catalog/&#39;&gt;Learn more&lt;/a&gt;</remarks>
        /// <param name="productGroupId">Unique identifier of a product group</param>
        /// <param name="catalogsProductGroupsUpdateRequest">Request object used to Update a catalogs product group.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="200">Success</response>
        /// <response code="400">Invalid parameters.</response>
        /// <response code="401">Unauthorized access.</response>
        /// <response code="403">Forbidden. Account not approved for catalog product group mutations yet.</response>
        /// <response code="404">Catalogs product group not found.</response>
        /// <response code="409">Conflict. Can&#39;t update this catalogs product group to this value.</response>
        /// <response code="0">Unexpected error.</response>
        [HttpPatch]
        [Route("/v5/catalogs/product_groups/{product_group_id}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("CatalogsProductGroupsUpdate")]
        [SwaggerResponse(statusCode: 200, type: typeof(CatalogsProductGroupsCreate201Response), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid parameters.")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Unauthorized access.")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Forbidden. Account not approved for catalog product group mutations yet.")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Catalogs product group not found.")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Conflict. Can&#39;t update this catalogs product group to this value.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error.")]
        public virtual IActionResult CatalogsProductGroupsUpdate([FromRoute (Name = "product_group_id")][Required][RegularExpression("^\\d+$")]string productGroupId, [FromBody]CatalogsProductGroupsUpdateRequest catalogsProductGroupsUpdateRequest, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CatalogsProductGroupsCreate201Response));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"updated_at\" : 1622742155000,\n  \"catalog_type\" : \"RETAIL\",\n  \"name\" : \"Most Popular\",\n  \"description\" : \"description\",\n  \"created_at\" : 1621350033000,\n  \"id\" : \"443727193917\",\n  \"filters\" : {\n    \"any_of\" : [ {\n      \"MIN_PRICE\" : {\n        \"inclusion\" : true,\n        \"negated\" : false,\n        \"values\" : 0.08008281904610115\n      }\n    }, {\n      \"MIN_PRICE\" : {\n        \"inclusion\" : true,\n        \"negated\" : false,\n        \"values\" : 0.08008281904610115\n      }\n    } ]\n  },\n  \"type\" : \"TOP_SELLERS\",\n  \"is_featured\" : true,\n  \"feed_id\" : \"2680059592705\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CatalogsProductGroupsCreate201Response>(exampleJson)
            : default(CatalogsProductGroupsCreate201Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// List processing results for a given feed
        /// </summary>
        /// <remarks>Fetch a feed processing results owned by the \&quot;operation user_account\&quot;. Please note that for now the bookmark parameter is not functional and only the first page will be available until it is implemented in some release in the near future. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/shopping/catalog/&#39;&gt;Learn more&lt;/a&gt;</remarks>
        /// <param name="feedId">Unique identifier of a feed</param>
        /// <param name="bookmark">Cursor used to fetch the next page of items</param>
        /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/getting-started/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="200">Success</response>
        /// <response code="400">Invalid parameters.</response>
        /// <response code="401">Unauthorized access.</response>
        /// <response code="404">Feed not found.</response>
        /// <response code="0">Unexpected error.</response>
        [HttpGet]
        [Route("/v5/catalogs/feeds/{feed_id}/processing_results")]
        [ValidateModelState]
        [SwaggerOperation("FeedProcessingResultsList")]
        [SwaggerResponse(statusCode: 200, type: typeof(FeedProcessingResultsList200Response), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid parameters.")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Unauthorized access.")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Feed not found.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error.")]
        public virtual IActionResult FeedProcessingResultsList([FromRoute (Name = "feed_id")][Required][RegularExpression("^\\d+$")]string feedId, [FromQuery (Name = "bookmark")]string bookmark, [FromQuery (Name = "page_size")][Range(1, 250)]int? pageSize, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FeedProcessingResultsList200Response));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"bookmark\" : \"bookmark\",\n  \"items\" : [ {\n    \"updated_at\" : \"2022-03-14T15:16:34Z\",\n    \"product_counts\" : {\n      \"ingested\" : 4,\n      \"original\" : 1\n    },\n    \"ingestion_details\" : {\n      \"warnings\" : {\n        \"ADDITIONAL_IMAGE_FILE_NOT_FOUND\" : 1,\n        \"HOTEL_PRICE_HEADER_IS_PRESENT\" : 7,\n        \"ADDITIONAL_IMAGE_INVALID_FILE\" : 6,\n        \"ADDITIONAL_IMAGE_LEVEL_INTERNAL_ERROR\" : 7,\n        \"ADDITIONAL_IMAGE_FILE_NOT_ACCESSIBLE\" : 1,\n        \"ADDITIONAL_IMAGE_MALFORMED_URL\" : 1\n      },\n      \"errors\" : {\n        \"LINE_LEVEL_INTERNAL_ERROR\" : 0,\n        \"ACCOUNT_FLAGGED\" : 1,\n        \"IMAGE_MALFORMED_URL\" : 2,\n        \"IMAGE_LEVEL_INTERNAL_ERROR\" : 5,\n        \"IMAGE_FILE_NOT_FOUND\" : 7,\n        \"IMAGE_FILE_NOT_ACCESSIBLE\" : 5,\n        \"IMAGE_INVALID_FILE\" : 9,\n        \"LARGE_PRODUCT_COUNT_DECREASE\" : 6\n      },\n      \"info\" : {\n        \"PREORDER\" : 4,\n        \"OUT_OF_STOCK\" : 2,\n        \"IN_STOCK\" : 3\n      }\n    },\n    \"created_at\" : \"2022-03-14T15:15:22Z\",\n    \"id\" : \"id\",\n    \"validation_details\" : {\n      \"warnings\" : {\n        \"AD_LINK_FORMAT_WARNING\" : 4,\n        \"UTM_SOURCE_AUTO_CORRECTED\" : 2,\n        \"ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG\" : 0,\n        \"IMAGE_LINK_WARNING\" : 1,\n        \"INCONSISTENT_CURRENCY_VALUES\" : 0,\n        \"UPDATED_TIME_INVALID\" : 8,\n        \"OPTIONAL_PRODUCT_CATEGORY_MISSING\" : 3,\n        \"MULTIPACK_INVALID\" : 8,\n        \"ANDROID_DEEP_LINK_INVALID\" : 3,\n        \"DESCRIPTION_LENGTH_TOO_LONG\" : 7,\n        \"SHIPPING_HEIGHT_INVALID\" : 4,\n        \"TITLE_LENGTH_TOO_LONG\" : 4,\n        \"SALE_DATE_INVALID\" : 1,\n        \"DUPLICATE_HEADERS\" : 4,\n        \"SALES_PRICE_TOO_LOW\" : 0,\n        \"SHIPPING_WEIGHT_INVALID\" : 4,\n        \"GTIN_INVALID\" : 4,\n        \"PRODUCT_TYPE_LENGTH_TOO_LONG\" : 5,\n        \"COUNTRY_DOES_NOT_MAP_TO_CURRENCY\" : 3,\n        \"SIZE_SYSTEM_INVALID\" : 0,\n        \"SHIPPING_INVALID\" : 8,\n        \"CUSTOM_LABEL_LENGTH_TOO_LONG\" : 0,\n        \"INDEXED_PRODUCT_COUNT_LARGE_DELTA\" : 7,\n        \"SHIPPING_WIDTH_INVALID\" : 7,\n        \"ADWORDS_FORMAT_WARNING\" : 6,\n        \"AD_LINK_SAME_AS_LINK\" : 1,\n        \"OPTIONAL_CONDITION_INVALID\" : 7,\n        \"LINK_FORMAT_WARNING\" : 7,\n        \"SIZE_TYPE_INVALID\" : 9,\n        \"TAX_INVALID\" : 6,\n        \"SALES_PRICE_TOO_HIGH\" : 2,\n        \"EXPIRATION_DATE_INVALID\" : 8,\n        \"GENDER_INVALID\" : 9,\n        \"FETCH_SAME_SIGNATURE\" : 3,\n        \"IOS_DEEP_LINK_INVALID\" : 0,\n        \"ADDITIONAL_IMAGE_LINK_WARNING\" : 2,\n        \"OPTIONAL_CONDITION_MISSING\" : 5,\n        \"MIN_AD_PRICE_INVALID\" : 8,\n        \"AGE_GROUP_INVALID\" : 0,\n        \"TOO_MANY_ADDITIONAL_IMAGE_LINKS\" : 5,\n        \"MPN_INVALID\" : 9,\n        \"AVAILABILITY_DATE_INVALID\" : 9,\n        \"IS_BUNDLE_INVALID\" : 9,\n        \"ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE\" : 3,\n        \"SALES_PRICE_INVALID\" : 5,\n        \"PRODUCT_CATEGORY_DEPTH_WARNING\" : 4,\n        \"WEIGHT_UNIT_INVALID\" : 3,\n        \"OPTIONAL_PRODUCT_CATEGORY_INVALID\" : 9,\n        \"ADWORDS_SAME_AS_LINK\" : 8\n      },\n      \"errors\" : {\n        \"ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE\" : 5,\n        \"FETCH_ERROR\" : 5,\n        \"DESCRIPTION_MISSING\" : 1,\n        \"PINJOIN_CONTENT_UNSAFE\" : 3,\n        \"PARSE_LINE_ERROR\" : 3,\n        \"NO_VERIFIED_DOMAIN\" : 0,\n        \"LINK_LENGTH_TOO_LONG\" : 8,\n        \"REQUIRED_COLUMNS_MISSING\" : 8,\n        \"AVAILABILITY_INVALID\" : 6,\n        \"ITEMID_MISSING\" : 3,\n        \"LINK_FORMAT_INVALID\" : 6,\n        \"DELIMITER_ERROR\" : 6,\n        \"FEED_TOO_SMALL\" : 3,\n        \"LIST_PRICE_INVALID\" : 0,\n        \"IMAGE_LINK_INVALID\" : 6,\n        \"MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED\" : 7,\n        \"IMAGE_LINK_LENGTH_TOO_LONG\" : 6,\n        \"ADULT_INVALID\" : 7,\n        \"PRICE_MISSING\" : 3,\n        \"DUPLICATE_PRODUCTS\" : 9,\n        \"INTERNAL_SERVICE_ERROR\" : 7,\n        \"PRODUCT_PRICE_INVALID\" : 5,\n        \"ADWORDS_FORMAT_INVALID\" : 3,\n        \"INVALID_DOMAIN\" : 0,\n        \"BLOCKLISTED_IMAGE_SIGNATURE\" : 4,\n        \"FEED_LENGTH_TOO_LONG\" : 4,\n        \"ENCODING_ERROR\" : 9,\n        \"IMAGE_LINK_MISSING\" : 6,\n        \"PRODUCT_LINK_MISSING\" : 2,\n        \"TITLE_MISSING\" : 6,\n        \"MALFORMED_XML\" : 7,\n        \"FETCH_INACTIVE_FEED_ERROR\" : 9,\n        \"PRICE_CANNOT_BE_DETERMINED\" : 6\n      }\n    }\n  }, {\n    \"updated_at\" : \"2022-03-14T15:16:34Z\",\n    \"product_counts\" : {\n      \"ingested\" : 4,\n      \"original\" : 1\n    },\n    \"ingestion_details\" : {\n      \"warnings\" : {\n        \"ADDITIONAL_IMAGE_FILE_NOT_FOUND\" : 1,\n        \"HOTEL_PRICE_HEADER_IS_PRESENT\" : 7,\n        \"ADDITIONAL_IMAGE_INVALID_FILE\" : 6,\n        \"ADDITIONAL_IMAGE_LEVEL_INTERNAL_ERROR\" : 7,\n        \"ADDITIONAL_IMAGE_FILE_NOT_ACCESSIBLE\" : 1,\n        \"ADDITIONAL_IMAGE_MALFORMED_URL\" : 1\n      },\n      \"errors\" : {\n        \"LINE_LEVEL_INTERNAL_ERROR\" : 0,\n        \"ACCOUNT_FLAGGED\" : 1,\n        \"IMAGE_MALFORMED_URL\" : 2,\n        \"IMAGE_LEVEL_INTERNAL_ERROR\" : 5,\n        \"IMAGE_FILE_NOT_FOUND\" : 7,\n        \"IMAGE_FILE_NOT_ACCESSIBLE\" : 5,\n        \"IMAGE_INVALID_FILE\" : 9,\n        \"LARGE_PRODUCT_COUNT_DECREASE\" : 6\n      },\n      \"info\" : {\n        \"PREORDER\" : 4,\n        \"OUT_OF_STOCK\" : 2,\n        \"IN_STOCK\" : 3\n      }\n    },\n    \"created_at\" : \"2022-03-14T15:15:22Z\",\n    \"id\" : \"id\",\n    \"validation_details\" : {\n      \"warnings\" : {\n        \"AD_LINK_FORMAT_WARNING\" : 4,\n        \"UTM_SOURCE_AUTO_CORRECTED\" : 2,\n        \"ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG\" : 0,\n        \"IMAGE_LINK_WARNING\" : 1,\n        \"INCONSISTENT_CURRENCY_VALUES\" : 0,\n        \"UPDATED_TIME_INVALID\" : 8,\n        \"OPTIONAL_PRODUCT_CATEGORY_MISSING\" : 3,\n        \"MULTIPACK_INVALID\" : 8,\n        \"ANDROID_DEEP_LINK_INVALID\" : 3,\n        \"DESCRIPTION_LENGTH_TOO_LONG\" : 7,\n        \"SHIPPING_HEIGHT_INVALID\" : 4,\n        \"TITLE_LENGTH_TOO_LONG\" : 4,\n        \"SALE_DATE_INVALID\" : 1,\n        \"DUPLICATE_HEADERS\" : 4,\n        \"SALES_PRICE_TOO_LOW\" : 0,\n        \"SHIPPING_WEIGHT_INVALID\" : 4,\n        \"GTIN_INVALID\" : 4,\n        \"PRODUCT_TYPE_LENGTH_TOO_LONG\" : 5,\n        \"COUNTRY_DOES_NOT_MAP_TO_CURRENCY\" : 3,\n        \"SIZE_SYSTEM_INVALID\" : 0,\n        \"SHIPPING_INVALID\" : 8,\n        \"CUSTOM_LABEL_LENGTH_TOO_LONG\" : 0,\n        \"INDEXED_PRODUCT_COUNT_LARGE_DELTA\" : 7,\n        \"SHIPPING_WIDTH_INVALID\" : 7,\n        \"ADWORDS_FORMAT_WARNING\" : 6,\n        \"AD_LINK_SAME_AS_LINK\" : 1,\n        \"OPTIONAL_CONDITION_INVALID\" : 7,\n        \"LINK_FORMAT_WARNING\" : 7,\n        \"SIZE_TYPE_INVALID\" : 9,\n        \"TAX_INVALID\" : 6,\n        \"SALES_PRICE_TOO_HIGH\" : 2,\n        \"EXPIRATION_DATE_INVALID\" : 8,\n        \"GENDER_INVALID\" : 9,\n        \"FETCH_SAME_SIGNATURE\" : 3,\n        \"IOS_DEEP_LINK_INVALID\" : 0,\n        \"ADDITIONAL_IMAGE_LINK_WARNING\" : 2,\n        \"OPTIONAL_CONDITION_MISSING\" : 5,\n        \"MIN_AD_PRICE_INVALID\" : 8,\n        \"AGE_GROUP_INVALID\" : 0,\n        \"TOO_MANY_ADDITIONAL_IMAGE_LINKS\" : 5,\n        \"MPN_INVALID\" : 9,\n        \"AVAILABILITY_DATE_INVALID\" : 9,\n        \"IS_BUNDLE_INVALID\" : 9,\n        \"ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE\" : 3,\n        \"SALES_PRICE_INVALID\" : 5,\n        \"PRODUCT_CATEGORY_DEPTH_WARNING\" : 4,\n        \"WEIGHT_UNIT_INVALID\" : 3,\n        \"OPTIONAL_PRODUCT_CATEGORY_INVALID\" : 9,\n        \"ADWORDS_SAME_AS_LINK\" : 8\n      },\n      \"errors\" : {\n        \"ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE\" : 5,\n        \"FETCH_ERROR\" : 5,\n        \"DESCRIPTION_MISSING\" : 1,\n        \"PINJOIN_CONTENT_UNSAFE\" : 3,\n        \"PARSE_LINE_ERROR\" : 3,\n        \"NO_VERIFIED_DOMAIN\" : 0,\n        \"LINK_LENGTH_TOO_LONG\" : 8,\n        \"REQUIRED_COLUMNS_MISSING\" : 8,\n        \"AVAILABILITY_INVALID\" : 6,\n        \"ITEMID_MISSING\" : 3,\n        \"LINK_FORMAT_INVALID\" : 6,\n        \"DELIMITER_ERROR\" : 6,\n        \"FEED_TOO_SMALL\" : 3,\n        \"LIST_PRICE_INVALID\" : 0,\n        \"IMAGE_LINK_INVALID\" : 6,\n        \"MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED\" : 7,\n        \"IMAGE_LINK_LENGTH_TOO_LONG\" : 6,\n        \"ADULT_INVALID\" : 7,\n        \"PRICE_MISSING\" : 3,\n        \"DUPLICATE_PRODUCTS\" : 9,\n        \"INTERNAL_SERVICE_ERROR\" : 7,\n        \"PRODUCT_PRICE_INVALID\" : 5,\n        \"ADWORDS_FORMAT_INVALID\" : 3,\n        \"INVALID_DOMAIN\" : 0,\n        \"BLOCKLISTED_IMAGE_SIGNATURE\" : 4,\n        \"FEED_LENGTH_TOO_LONG\" : 4,\n        \"ENCODING_ERROR\" : 9,\n        \"IMAGE_LINK_MISSING\" : 6,\n        \"PRODUCT_LINK_MISSING\" : 2,\n        \"TITLE_MISSING\" : 6,\n        \"MALFORMED_XML\" : 7,\n        \"FETCH_INACTIVE_FEED_ERROR\" : 9,\n        \"PRICE_CANNOT_BE_DETERMINED\" : 6\n      }\n    }\n  } ]\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FeedProcessingResultsList200Response>(exampleJson)
            : default(FeedProcessingResultsList200Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create feed
        /// </summary>
        /// <remarks>Create a new feed owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Please, be aware that \&quot;default_country\&quot; and \&quot;default_locale\&quot; are not required in the spec for forward compatibility but for now the API will not accept requests without those fields.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to &lt;a href&#x3D;&#39;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs&#39;&gt;Before you get started with Catalogs&lt;/a&gt;. For Hotel parterns, refer to &lt;a href&#x3D;&#39;/docs/shopping/catalog/&#39;&gt;Pinterest API for shopping&lt;/a&gt;.</remarks>
        /// <param name="feedsCreateRequest">Request object used to created a feed.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="201">Success</response>
        /// <response code="400">Invalid feed parameters.</response>
        /// <response code="401">Unauthorized access.</response>
        /// <response code="403">Business account required.</response>
        /// <response code="409">User website required.</response>
        /// <response code="422">Unique feed name is required.</response>
        /// <response code="501">Not implemented (absent \&quot;default_country\&quot; or \&quot;default_locale\&quot;).</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/v5/catalogs/feeds")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("FeedsCreate")]
        [SwaggerResponse(statusCode: 201, type: typeof(CatalogsFeed), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid feed parameters.")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Unauthorized access.")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Business account required.")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "User website required.")]
        [SwaggerResponse(statusCode: 422, type: typeof(Error), description: "Unique feed name is required.")]
        [SwaggerResponse(statusCode: 501, type: typeof(Error), description: "Not implemented (absent \&quot;default_country\&quot; or \&quot;default_locale\&quot;).")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult FeedsCreate([FromBody]FeedsCreateRequest feedsCreateRequest, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(CatalogsFeed));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));
            //TODO: Uncomment the next line to return response 422 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(422, default(Error));
            //TODO: Uncomment the next line to return response 501 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(501, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"credentials\" : {\n    \"password\" : \"password\",\n    \"username\" : \"username\"\n  },\n  \"created_at\" : \"2022-03-14T15:15:22Z\",\n  \"updated_at\" : \"2022-03-14T15:16:34Z\",\n  \"name\" : \"name\",\n  \"preferred_processing_schedule\" : {\n    \"timezone\" : \"Africa/Abidjan\",\n    \"time\" : \"02:59\"\n  },\n  \"default_locale\" : \"en-US\",\n  \"location\" : \"location\",\n  \"id\" : \"id\",\n  \"default_currency\" : \"USD\",\n  \"default_country\" : \"US\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CatalogsFeed>(exampleJson)
            : default(CatalogsFeed);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Delete feed
        /// </summary>
        /// <remarks>Delete a feed owned by the \&quot;operating user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to &lt;a href&#x3D;&#39;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs&#39;&gt;Before you get started with Catalogs&lt;/a&gt;. For Hotel parterns, refer to &lt;a href&#x3D;&#39;/docs/shopping/catalog/&#39;&gt;Pinterest API for shopping&lt;/a&gt;.</remarks>
        /// <param name="feedId">Unique identifier of a feed</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="204">Feed deleted successfully.</response>
        /// <response code="400">Invalid feed parameters.</response>
        /// <response code="403">Forbidden. Account not approved for feed mutations yet.</response>
        /// <response code="404">Data feed not found.</response>
        /// <response code="409">Conflict. Can&#39;t delete a feed with active promotions.</response>
        /// <response code="0">Unexpected error</response>
        [HttpDelete]
        [Route("/v5/catalogs/feeds/{feed_id}")]
        [ValidateModelState]
        [SwaggerOperation("FeedsDelete")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid feed parameters.")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Forbidden. Account not approved for feed mutations yet.")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Data feed not found.")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Conflict. Can&#39;t delete a feed with active promotions.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult FeedsDelete([FromRoute (Name = "feed_id")][Required][RegularExpression("^\\d+$")]string feedId, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));

            throw new NotImplementedException();
        }

        /// <summary>
        /// Get feed
        /// </summary>
        /// <remarks>Get a single feed owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to &lt;a href&#x3D;&#39;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs&#39;&gt;Before you get started with Catalogs&lt;/a&gt;. For Hotel parterns, refer to &lt;a href&#x3D;&#39;/docs/shopping/catalog/&#39;&gt;Pinterest API for shopping&lt;/a&gt;.</remarks>
        /// <param name="feedId">Unique identifier of a feed</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="200">Success</response>
        /// <response code="400">Invalid feed parameters.</response>
        /// <response code="401">Unauthorized access.</response>
        /// <response code="404">Data feed not found.</response>
        /// <response code="0">Unexpected error.</response>
        [HttpGet]
        [Route("/v5/catalogs/feeds/{feed_id}")]
        [ValidateModelState]
        [SwaggerOperation("FeedsGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(CatalogsFeed), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid feed parameters.")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Unauthorized access.")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Data feed not found.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error.")]
        public virtual IActionResult FeedsGet([FromRoute (Name = "feed_id")][Required][RegularExpression("^\\d+$")]string feedId, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CatalogsFeed));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"credentials\" : {\n    \"password\" : \"password\",\n    \"username\" : \"username\"\n  },\n  \"created_at\" : \"2022-03-14T15:15:22Z\",\n  \"updated_at\" : \"2022-03-14T15:16:34Z\",\n  \"name\" : \"name\",\n  \"preferred_processing_schedule\" : {\n    \"timezone\" : \"Africa/Abidjan\",\n    \"time\" : \"02:59\"\n  },\n  \"default_locale\" : \"en-US\",\n  \"location\" : \"location\",\n  \"id\" : \"id\",\n  \"default_currency\" : \"USD\",\n  \"default_country\" : \"US\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CatalogsFeed>(exampleJson)
            : default(CatalogsFeed);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// List feeds
        /// </summary>
        /// <remarks>Fetch feeds owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to &lt;a href&#x3D;&#39;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs&#39;&gt;Before you get started with Catalogs&lt;/a&gt;. For Hotel parterns, refer to &lt;a href&#x3D;&#39;/docs/shopping/catalog/&#39;&gt;Pinterest API for shopping&lt;/a&gt;.</remarks>
        /// <param name="bookmark">Cursor used to fetch the next page of items</param>
        /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/getting-started/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information.</param>
        /// <param name="catalogId">Filter entities for a given catalog_id. If not given, all catalogs are considered.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="200">Success</response>
        /// <response code="400">Invalid parameters.</response>
        /// <response code="401">Unauthorized access.</response>
        /// <response code="0">Unexpected error.</response>
        [HttpGet]
        [Route("/v5/catalogs/feeds")]
        [ValidateModelState]
        [SwaggerOperation("FeedsList")]
        [SwaggerResponse(statusCode: 200, type: typeof(FeedsList200Response), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid parameters.")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Unauthorized access.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error.")]
        public virtual IActionResult FeedsList([FromQuery (Name = "bookmark")]string bookmark, [FromQuery (Name = "page_size")][Range(1, 250)]int? pageSize, [FromQuery (Name = "catalog_id")][RegularExpression("^\\d+$")]string catalogId, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FeedsList200Response));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"bookmark\" : \"bookmark\",\n  \"items\" : [ {\n    \"credentials\" : {\n      \"password\" : \"password\",\n      \"username\" : \"username\"\n    },\n    \"created_at\" : \"2022-03-14T15:15:22Z\",\n    \"updated_at\" : \"2022-03-14T15:16:34Z\",\n    \"name\" : \"name\",\n    \"preferred_processing_schedule\" : {\n      \"timezone\" : \"Africa/Abidjan\",\n      \"time\" : \"02:59\"\n    },\n    \"default_locale\" : \"en-US\",\n    \"location\" : \"location\",\n    \"id\" : \"id\",\n    \"default_currency\" : \"USD\",\n    \"default_country\" : \"US\"\n  }, {\n    \"credentials\" : {\n      \"password\" : \"password\",\n      \"username\" : \"username\"\n    },\n    \"created_at\" : \"2022-03-14T15:15:22Z\",\n    \"updated_at\" : \"2022-03-14T15:16:34Z\",\n    \"name\" : \"name\",\n    \"preferred_processing_schedule\" : {\n      \"timezone\" : \"Africa/Abidjan\",\n      \"time\" : \"02:59\"\n    },\n    \"default_locale\" : \"en-US\",\n    \"location\" : \"location\",\n    \"id\" : \"id\",\n    \"default_currency\" : \"USD\",\n    \"default_country\" : \"US\"\n  } ]\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FeedsList200Response>(exampleJson)
            : default(FeedsList200Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update feed
        /// </summary>
        /// <remarks>Update a feed owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to &lt;a href&#x3D;&#39;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs&#39;&gt;Before you get started with Catalogs&lt;/a&gt;. For Hotel parterns, refer to &lt;a href&#x3D;&#39;/docs/shopping/catalog/&#39;&gt;Pinterest API for shopping&lt;/a&gt;.</remarks>
        /// <param name="feedId">Unique identifier of a feed</param>
        /// <param name="feedsUpdateRequest">Request object used to update a feed.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="200">Success</response>
        /// <response code="400">Invalid feed parameters.</response>
        /// <response code="403">Forbidden. Account not approved for feed mutations yet.</response>
        /// <response code="404">Data feed not found.</response>
        /// <response code="0">Unexpected error</response>
        [HttpPatch]
        [Route("/v5/catalogs/feeds/{feed_id}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("FeedsUpdate")]
        [SwaggerResponse(statusCode: 200, type: typeof(CatalogsFeed), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid feed parameters.")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Forbidden. Account not approved for feed mutations yet.")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Data feed not found.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult FeedsUpdate([FromRoute (Name = "feed_id")][Required][RegularExpression("^\\d+$")]string feedId, [FromBody]FeedsUpdateRequest feedsUpdateRequest, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CatalogsFeed));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"credentials\" : {\n    \"password\" : \"password\",\n    \"username\" : \"username\"\n  },\n  \"created_at\" : \"2022-03-14T15:15:22Z\",\n  \"updated_at\" : \"2022-03-14T15:16:34Z\",\n  \"name\" : \"name\",\n  \"preferred_processing_schedule\" : {\n    \"timezone\" : \"Africa/Abidjan\",\n    \"time\" : \"02:59\"\n  },\n  \"default_locale\" : \"en-US\",\n  \"location\" : \"location\",\n  \"id\" : \"id\",\n  \"default_currency\" : \"USD\",\n  \"default_country\" : \"US\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CatalogsFeed>(exampleJson)
            : default(CatalogsFeed);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get catalogs item batch status
        /// </summary>
        /// <remarks>Get a single catalogs items batch owned by the \&quot;operating user_account\&quot;. &lt;a href&#x3D;\&quot;/docs/shopping/catalog/#Update%20items%20in%20batch\&quot; target&#x3D;\&quot;_blank\&quot;&gt;See detailed documentation here.&lt;/a&gt; - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.</remarks>
        /// <param name="batchId">Id of a catalogs items batch to fetch</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="200">Response containing the requested catalogs items batch</response>
        /// <response code="401">Not authenticated to access catalogs items batch</response>
        /// <response code="403">Not authorized to access catalogs items batch</response>
        /// <response code="404">Catalogs items batch not found</response>
        /// <response code="405">Method Not Allowed.</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/catalogs/items/batch/{batch_id}")]
        [ValidateModelState]
        [SwaggerOperation("ItemsBatchGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(CatalogsItemsBatch), description: "Response containing the requested catalogs items batch")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Not authenticated to access catalogs items batch")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Not authorized to access catalogs items batch")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Catalogs items batch not found")]
        [SwaggerResponse(statusCode: 405, type: typeof(Error), description: "Method Not Allowed.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult ItemsBatchGet([FromRoute (Name = "batch_id")][Required]string batchId, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CatalogsItemsBatch));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{ }";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CatalogsItemsBatch>(exampleJson)
            : default(CatalogsItemsBatch);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Operate on item batch
        /// </summary>
        /// <remarks>This endpoint supports multiple operations on a set of one or more catalog items owned by the \&quot;operation user_account\&quot;. &lt;a href&#x3D;\&quot;/docs/shopping/catalog/#Update%20items%20in%20batch\&quot; target&#x3D;\&quot;_blank\&quot;&gt;See detailed documentation here.&lt;/a&gt; - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.</remarks>
        /// <param name="itemsBatchPostRequest">Request object used to create catalogs items in a batch</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="200">Response containing the requested catalogs items batch</response>
        /// <response code="400">Invalid request parameters.</response>
        /// <response code="401">Not authenticated to post catalogs items</response>
        /// <response code="403">Not authorized to post catalogs items</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/v5/catalogs/items/batch")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("ItemsBatchPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(CatalogsItemsBatch), description: "Response containing the requested catalogs items batch")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid request parameters.")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Not authenticated to post catalogs items")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Not authorized to post catalogs items")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult ItemsBatchPost([FromBody]ItemsBatchPostRequest itemsBatchPostRequest, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CatalogsItemsBatch));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{ }";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CatalogsItemsBatch>(exampleJson)
            : default(CatalogsItemsBatch);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get catalogs items
        /// </summary>
        /// <remarks>Get the items of the catalog owned by the \&quot;operation user_account\&quot;. &lt;a href&#x3D;\&quot;/docs/shopping/catalog/#Update%20items%20in%20batch\&quot; target&#x3D;\&quot;_blank\&quot;&gt;See detailed documentation here.&lt;/a&gt; - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.</remarks>
        /// <param name="country">Country for the Catalogs Items</param>
        /// <param name="language">Language for the Catalogs Items</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="itemIds">This parameter is deprecated. Use filters instead. (deprecated)</param>
        /// <param name="filters">Identifies items to be retrieved. This is a required parameter.</param>
        /// <response code="200">Response containing the requested catalogs items</response>
        /// <response code="400">Invalid request parameters.</response>
        /// <response code="401">Not authorized to access catalogs items</response>
        /// <response code="403">Not authorized to access catalogs items</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/catalogs/items")]
        [ValidateModelState]
        [SwaggerOperation("ItemsGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(CatalogsItems), description: "Response containing the requested catalogs items")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid request parameters.")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Not authorized to access catalogs items")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Not authorized to access catalogs items")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult ItemsGet([FromQuery (Name = "country")][Required()]string country, [FromQuery (Name = "language")][Required()]string language, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId, [FromQuery (Name = "item_ids")]List<string> itemIds, [FromQuery (Name = "filters")]CatalogsItemsFilters filters)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CatalogsItems));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"items\" : [ { }, { } ]\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CatalogsItems>(exampleJson)
            : default(CatalogsItems);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// List item issues for a given processing result
        /// </summary>
        /// <remarks>List item validation issues for a given feed processing result owned by the \&quot;operation user_account\&quot;. Up to 20 random samples of affected items are returned for each error and warning code. Please note that for now query parameters &#39;item_numbers&#39; and &#39;item_validation_issue&#39; cannot be used simultaneously until it is implemented in some release in the future. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/shopping/catalog/&#39;&gt;Learn more&lt;/a&gt;</remarks>
        /// <param name="processingResultId">Unique identifier of a feed processing result. It can be acquired from the \&quot;id\&quot; field of the \&quot;items\&quot; array within the response of the [List processing results for a given feed](https://developers.pinterest.com/docs/api/v5/#operation/feed_processing_results/list).</param>
        /// <param name="bookmark">Cursor used to fetch the next page of items</param>
        /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/getting-started/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information.</param>
        /// <param name="itemNumbers">Item number based on order of appearance in the Catalogs Feed. For example, &#39;0&#39; refers to first item found in a feed that was downloaded from a &#39;location&#39; specified during feed creation.</param>
        /// <param name="itemValidationIssue">Filter item validation issues that have a given type of item validation issue.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="200">Success</response>
        /// <response code="401">Unauthorized access.</response>
        /// <response code="404">Processing Result not found.</response>
        /// <response code="501">Not implemented.</response>
        /// <response code="0">Unexpected error.</response>
        [HttpGet]
        [Route("/v5/catalogs/processing_results/{processing_result_id}/item_issues")]
        [ValidateModelState]
        [SwaggerOperation("ItemsIssuesList")]
        [SwaggerResponse(statusCode: 200, type: typeof(ItemsIssuesList200Response), description: "Success")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Unauthorized access.")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Processing Result not found.")]
        [SwaggerResponse(statusCode: 501, type: typeof(Error), description: "Not implemented.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error.")]
        public virtual IActionResult ItemsIssuesList([FromRoute (Name = "processing_result_id")][Required][RegularExpression("^\\d+$")]string processingResultId, [FromQuery (Name = "bookmark")]string bookmark, [FromQuery (Name = "page_size")][Range(1, 250)]int? pageSize, [FromQuery (Name = "item_numbers")]List<int> itemNumbers, [FromQuery (Name = "item_validation_issue")]CatalogsItemValidationIssue itemValidationIssue, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ItemsIssuesList200Response));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 501 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(501, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"bookmark\" : \"bookmark\",\n  \"items\" : [ {\n    \"item_id\" : \"DS0294-L\",\n    \"warnings\" : {\n      \"AD_LINK_FORMAT_WARNING\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"LINK_FORMAT_WARNING\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"UTM_SOURCE_AUTO_CORRECTED\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"SIZE_TYPE_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"TAX_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"IMAGE_LINK_WARNING\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"SALES_PRICE_TOO_HIGH\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"EXPIRATION_DATE_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"GENDER_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"IOS_DEEP_LINK_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"ADDITIONAL_IMAGE_LINK_WARNING\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"OPTIONAL_CONDITION_MISSING\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"OPTIONAL_PRODUCT_CATEGORY_MISSING\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"MIN_AD_PRICE_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"MULTIPACK_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"ANDROID_DEEP_LINK_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"DESCRIPTION_LENGTH_TOO_LONG\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"SHIPPING_HEIGHT_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"TITLE_LENGTH_TOO_LONG\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"AGE_GROUP_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"SALE_DATE_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"TOO_MANY_ADDITIONAL_IMAGE_LINKS\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"MPN_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"SALES_PRICE_TOO_LOW\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"AVAILABILITY_DATE_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"SHIPPING_WEIGHT_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"IS_BUNDLE_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"GTIN_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"PRODUCT_TYPE_LENGTH_TOO_LONG\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"COUNTRY_DOES_NOT_MAP_TO_CURRENCY\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"SALES_PRICE_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"SIZE_SYSTEM_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"CUSTOM_LABEL_LENGTH_TOO_LONG\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"PRODUCT_CATEGORY_DEPTH_WARNING\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"SHIPPING_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"SHIPPING_WIDTH_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"ADWORDS_FORMAT_WARNING\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"OPTIONAL_PRODUCT_CATEGORY_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"WEIGHT_UNIT_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"AD_LINK_SAME_AS_LINK\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"OPTIONAL_CONDITION_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"ADWORDS_SAME_AS_LINK\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      }\n    },\n    \"item_number\" : 0,\n    \"errors\" : {\n      \"IMAGE_LINK_LENGTH_TOO_LONG\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"ADULT_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"PRICE_MISSING\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"DESCRIPTION_MISSING\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"DUPLICATE_PRODUCTS\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"PINJOIN_CONTENT_UNSAFE\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"ADWORDS_FORMAT_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"PRODUCT_PRICE_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"BLOCKLISTED_IMAGE_SIGNATURE\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"INVALID_DOMAIN\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"LINK_LENGTH_TOO_LONG\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"PARSE_LINE_ERROR\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"AVAILABILITY_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"IMAGE_LINK_MISSING\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"PRODUCT_LINK_MISSING\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"ITEMID_MISSING\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"TITLE_MISSING\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"LINK_FORMAT_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"LIST_PRICE_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"IMAGE_LINK_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"PRICE_CANNOT_BE_DETERMINED\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      }\n    }\n  }, {\n    \"item_id\" : \"DS0294-L\",\n    \"warnings\" : {\n      \"AD_LINK_FORMAT_WARNING\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"LINK_FORMAT_WARNING\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"UTM_SOURCE_AUTO_CORRECTED\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"SIZE_TYPE_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"TAX_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"IMAGE_LINK_WARNING\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"SALES_PRICE_TOO_HIGH\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"EXPIRATION_DATE_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"GENDER_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"IOS_DEEP_LINK_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"ADDITIONAL_IMAGE_LINK_WARNING\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"OPTIONAL_CONDITION_MISSING\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"OPTIONAL_PRODUCT_CATEGORY_MISSING\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"MIN_AD_PRICE_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"MULTIPACK_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"ANDROID_DEEP_LINK_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"DESCRIPTION_LENGTH_TOO_LONG\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"SHIPPING_HEIGHT_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"TITLE_LENGTH_TOO_LONG\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"AGE_GROUP_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"SALE_DATE_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"TOO_MANY_ADDITIONAL_IMAGE_LINKS\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"MPN_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"SALES_PRICE_TOO_LOW\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"AVAILABILITY_DATE_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"SHIPPING_WEIGHT_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"IS_BUNDLE_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"GTIN_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"PRODUCT_TYPE_LENGTH_TOO_LONG\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"COUNTRY_DOES_NOT_MAP_TO_CURRENCY\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"SALES_PRICE_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"SIZE_SYSTEM_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"CUSTOM_LABEL_LENGTH_TOO_LONG\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"PRODUCT_CATEGORY_DEPTH_WARNING\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"SHIPPING_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"SHIPPING_WIDTH_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"ADWORDS_FORMAT_WARNING\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"OPTIONAL_PRODUCT_CATEGORY_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"WEIGHT_UNIT_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"AD_LINK_SAME_AS_LINK\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"OPTIONAL_CONDITION_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"ADWORDS_SAME_AS_LINK\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      }\n    },\n    \"item_number\" : 0,\n    \"errors\" : {\n      \"IMAGE_LINK_LENGTH_TOO_LONG\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"ADULT_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"PRICE_MISSING\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"DESCRIPTION_MISSING\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"DUPLICATE_PRODUCTS\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"PINJOIN_CONTENT_UNSAFE\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"ADWORDS_FORMAT_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"PRODUCT_PRICE_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"BLOCKLISTED_IMAGE_SIGNATURE\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"INVALID_DOMAIN\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"LINK_LENGTH_TOO_LONG\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"PARSE_LINE_ERROR\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"AVAILABILITY_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"IMAGE_LINK_MISSING\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"PRODUCT_LINK_MISSING\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"ITEMID_MISSING\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"TITLE_MISSING\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"LINK_FORMAT_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"LIST_PRICE_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"IMAGE_LINK_INVALID\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"PRICE_CANNOT_BE_DETERMINED\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      },\n      \"MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED\" : {\n        \"attribute_name\" : \"TITLE\",\n        \"provided_value\" : \"provided_value\"\n      }\n    }\n  } ]\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ItemsIssuesList200Response>(exampleJson)
            : default(ItemsIssuesList200Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// List filtered products
        /// </summary>
        /// <remarks>List products Pins owned by the \&quot;operation user_account\&quot; that meet the criteria specified in the Catalogs Product Group Filter given in the request. - This endpoint has been implemented in POST to allow for complex filters. This specific POST endpoint is designed to be idempotent. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/shopping/catalog/&#39;&gt;Learn more&lt;/a&gt;</remarks>
        /// <param name="catalogsListProductsByFilterRequest">Object holding a group of filters for a catalog product group</param>
        /// <param name="bookmark">Cursor used to fetch the next page of items</param>
        /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/getting-started/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="200">Success</response>
        /// <response code="401">Unauthorized access.</response>
        /// <response code="409">Conflict. Can&#39;t get products.</response>
        /// <response code="0">Unexpected error.</response>
        [HttpPost]
        [Route("/v5/catalogs/products/get_by_product_group_filters")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("ProductsByProductGroupFilterList")]
        [SwaggerResponse(statusCode: 200, type: typeof(CatalogsProductGroupPinsList200Response), description: "Success")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Unauthorized access.")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Conflict. Can&#39;t get products.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error.")]
        public virtual IActionResult ProductsByProductGroupFilterList([FromBody]CatalogsListProductsByFilterRequest catalogsListProductsByFilterRequest, [FromQuery (Name = "bookmark")]string bookmark, [FromQuery (Name = "page_size")][Range(1, 250)]int? pageSize, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CatalogsProductGroupPinsList200Response));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"bookmark\" : \"bookmark\",\n  \"items\" : [ {\n    \"metadata\" : {\n      \"item_id\" : \"DS0294-L\",\n      \"price\" : 24.99,\n      \"item_group_id\" : \"DS0294\",\n      \"currency\" : \"USD\",\n      \"sale_price\" : 14.99\n    },\n    \"pin\" : {\n      \"note\" : \"note\",\n      \"board_owner\" : {\n        \"username\" : \"username\"\n      },\n      \"media_source\" : \"{}\",\n      \"pin_metrics\" : {\n        \"pin_metrics\" : [ {\n          \"90d\" : {\n            \"pin_click\" : 7,\n            \"impression\" : 2,\n            \"clickthrough\" : 3\n          },\n          \"all_time\" : {\n            \"pin_click\" : 7,\n            \"impression\" : 2,\n            \"clickthrough\" : 3,\n            \"reaction\" : 10,\n            \"comment\" : 2\n          }\n        }, null ]\n      },\n      \"is_owner\" : true,\n      \"link\" : \"https://www.pinterest.com/\",\n      \"created_at\" : \"2020-01-01T20:10:40Z\",\n      \"description\" : \"description\",\n      \"has_been_promoted\" : true,\n      \"media\" : {\n        \"media_type\" : \"media_type\"\n      },\n      \"title\" : \"title\",\n      \"board_section_id\" : \"board_section_id\",\n      \"dominant_color\" : \"#6E7874\",\n      \"alt_text\" : \"alt_text\",\n      \"board_id\" : \"board_id\",\n      \"creative_type\" : \"creative_type\",\n      \"parent_pin_id\" : \"parent_pin_id\",\n      \"id\" : \"813744226420795884\",\n      \"is_standard\" : true\n    }\n  }, {\n    \"metadata\" : {\n      \"item_id\" : \"DS0294-L\",\n      \"price\" : 24.99,\n      \"item_group_id\" : \"DS0294\",\n      \"currency\" : \"USD\",\n      \"sale_price\" : 14.99\n    },\n    \"pin\" : {\n      \"note\" : \"note\",\n      \"board_owner\" : {\n        \"username\" : \"username\"\n      },\n      \"media_source\" : \"{}\",\n      \"pin_metrics\" : {\n        \"pin_metrics\" : [ {\n          \"90d\" : {\n            \"pin_click\" : 7,\n            \"impression\" : 2,\n            \"clickthrough\" : 3\n          },\n          \"all_time\" : {\n            \"pin_click\" : 7,\n            \"impression\" : 2,\n            \"clickthrough\" : 3,\n            \"reaction\" : 10,\n            \"comment\" : 2\n          }\n        }, null ]\n      },\n      \"is_owner\" : true,\n      \"link\" : \"https://www.pinterest.com/\",\n      \"created_at\" : \"2020-01-01T20:10:40Z\",\n      \"description\" : \"description\",\n      \"has_been_promoted\" : true,\n      \"media\" : {\n        \"media_type\" : \"media_type\"\n      },\n      \"title\" : \"title\",\n      \"board_section_id\" : \"board_section_id\",\n      \"dominant_color\" : \"#6E7874\",\n      \"alt_text\" : \"alt_text\",\n      \"board_id\" : \"board_id\",\n      \"creative_type\" : \"creative_type\",\n      \"parent_pin_id\" : \"parent_pin_id\",\n      \"id\" : \"813744226420795884\",\n      \"is_standard\" : true\n    }\n  } ]\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CatalogsProductGroupPinsList200Response>(exampleJson)
            : default(CatalogsProductGroupPinsList200Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
