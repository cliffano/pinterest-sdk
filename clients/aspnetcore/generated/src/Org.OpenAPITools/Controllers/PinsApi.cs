/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: blah@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class PinsApiController : ControllerBase
    { 
        /// <summary>
        /// Get Pin analytics
        /// </summary>
        /// <remarks>Get analytics for a Pin owned by the \&quot;operation user_account\&quot; - or on a group board that has been shared with this account. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&quot;https://developers.pinterest.com/docs/api/v5/#operation/ad_accounts/list\&quot;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account:  - For Pins on public or protected boards: Admin, Analyst. - For Pins on secret boards: Admin.</remarks>
        /// <param name="pinId">Unique identifier of a Pin.</param>
        /// <param name="startDate">Metric report start date (UTC). Format: YYYY-MM-DD</param>
        /// <param name="endDate">Metric report end date (UTC). Format: YYYY-MM-DD</param>
        /// <param name="metricTypes">Pin metric types to get data for, default is all.</param>
        /// <param name="appTypes">Apps or devices to get data for, default is all.</param>
        /// <param name="splitField">How to split the data into groups. Not including this param means data won&#39;t be split.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="200">response</response>
        /// <response code="403">Not authorized to access board or Pin.</response>
        /// <response code="404">Pin not found.</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/pins/{pin_id}/analytics")]
        [ValidateModelState]
        [SwaggerOperation("PinsAnalytics")]
        [SwaggerResponse(statusCode: 200, type: typeof(Dictionary<string, AnalyticsMetricsResponse>), description: "response")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Not authorized to access board or Pin.")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Pin not found.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult PinsAnalytics([FromRoute (Name = "pin_id")][Required]string pinId, [FromQuery (Name = "start_date")][Required()]DateTime startDate, [FromQuery (Name = "end_date")][Required()]DateTime endDate, [FromQuery (Name = "metric_types")][Required()]List<string> metricTypes, [FromQuery (Name = "app_types")]string appTypes, [FromQuery (Name = "split_field")]string splitField, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Dictionary<string, AnalyticsMetricsResponse>));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Dictionary<string, AnalyticsMetricsResponse>>(exampleJson)
            : default(Dictionary<string, AnalyticsMetricsResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create Pin
        /// </summary>
        /// <remarks>Create a Pin on a board or board section owned by the \&quot;operation user_account\&quot;.  Note: If the current \&quot;operation user_account\&quot; (defined by the access token) has access to another user&#39;s Ad Accounts via Pinterest Business Access, you can modify your request to make use of the current operation_user_account&#39;s permissions to those Ad Accounts by including the ad_account_id in the path parameters for the request (e.g. .../?ad_account_id&#x3D;12345&amp;...).  - This function is intended solely for publishing new content created by the user. If you are interested in saving content created by others to your Pinterest boards, sometimes called &#39;curated content&#39;, please use our &lt;a href&#x3D;&#39;/docs/add-ons/save-button&#39;&gt;Save button&lt;/a&gt; instead. For more tips on creating fresh content for Pinterest, review our &lt;a href&#x3D;&#39;/docs/solutions/content-apps&#39;&gt;Content App Solutions Guide&lt;/a&gt;.  &lt;strong&gt;&lt;a href&#x3D;&#39;/docs/solutions/content-apps/#creatingvideopins&#39;&gt;Learn more&lt;/a&gt;&lt;/strong&gt; about video Pin creation.</remarks>
        /// <param name="pin">Create a new Pin.</param>
        /// <response code="201">Successful pin creation.</response>
        /// <response code="400">Invalid Pin parameters response</response>
        /// <response code="403">The Pin&#39;s image is too small, too large or is broken</response>
        /// <response code="404">Board or section not found</response>
        /// <response code="429">This request exceeded a rate limit. This can happen if the client exceeds one of the published rate limits or if multiple write operations are applied to an object within a short time window.</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/v5/pins")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PinsCreate")]
        [SwaggerResponse(statusCode: 201, type: typeof(Pin), description: "Successful pin creation.")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid Pin parameters response")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "The Pin&#39;s image is too small, too large or is broken")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Board or section not found")]
        [SwaggerResponse(statusCode: 429, type: typeof(Error), description: "This request exceeded a rate limit. This can happen if the client exceeds one of the published rate limits or if multiple write operations are applied to an object within a short time window.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult PinsCreate([FromBody]Pin pin)
        {

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(Pin));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 429 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(429, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"board_owner\" : \"{}\",\n  \"media_source\" : \"{}\",\n  \"alt_text\" : \"alt_text\",\n  \"board_id\" : \"board_id\",\n  \"link\" : \"https://www.pinterest.com/\",\n  \"created_at\" : \"2020-01-01T20:10:40Z\",\n  \"description\" : \"description\",\n  \"id\" : \"813744226420795884\",\n  \"media\" : \"{}\",\n  \"title\" : \"title\",\n  \"board_section_id\" : \"board_section_id\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Pin>(exampleJson)
            : default(Pin);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Delete Pin
        /// </summary>
        /// <remarks>Delete a Pins owned by the \&quot;operation user_account\&quot; - or on a group board that has been shared with this account. - By default, the \&quot;operation user_account\&quot; is the token user_account.</remarks>
        /// <param name="pinId">Unique identifier of a Pin.</param>
        /// <response code="204">Successfully deleted Pin</response>
        /// <response code="403">Not authorized to access board or Pin.</response>
        /// <response code="404">Pin not found.</response>
        /// <response code="0">Unexpected error</response>
        [HttpDelete]
        [Route("/v5/pins/{pin_id}")]
        [ValidateModelState]
        [SwaggerOperation("PinsDelete")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Not authorized to access board or Pin.")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Pin not found.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult PinsDelete([FromRoute (Name = "pin_id")][Required]string pinId)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));

            throw new NotImplementedException();
        }

        /// <summary>
        /// Get Pin
        /// </summary>
        /// <remarks>Get a Pin owned by the \&quot;operation user_account\&quot; - or on a group board that has been shared with this account. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account:  - For Pins on public or protected boards: Owner, Admin, Analyst, Campaign Manager. - For Pins on secret boards: Owner, Admin.</remarks>
        /// <param name="pinId">Unique identifier of a Pin.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="200">response</response>
        /// <response code="403">Not authorized to access board or Pin.</response>
        /// <response code="404">Pin not found.</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/pins/{pin_id}")]
        [ValidateModelState]
        [SwaggerOperation("PinsGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(Pin), description: "response")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Not authorized to access board or Pin.")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Pin not found.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult PinsGet([FromRoute (Name = "pin_id")][Required]string pinId, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Pin));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"board_owner\" : \"{}\",\n  \"media_source\" : \"{}\",\n  \"alt_text\" : \"alt_text\",\n  \"board_id\" : \"board_id\",\n  \"link\" : \"https://www.pinterest.com/\",\n  \"created_at\" : \"2020-01-01T20:10:40Z\",\n  \"description\" : \"description\",\n  \"id\" : \"813744226420795884\",\n  \"media\" : \"{}\",\n  \"title\" : \"title\",\n  \"board_section_id\" : \"board_section_id\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Pin>(exampleJson)
            : default(Pin);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
