/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: blah@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class CatalogsFeedValidationErrors : IEquatable<CatalogsFeedValidationErrors>
    {
        /// <summary>
        /// Gets or Sets FetchError
        /// </summary>
        [DataMember(Name="fetch_error", EmitDefaultValue=false)]
        public int FetchError { get; set; }

        /// <summary>
        /// Gets or Sets FetchInactiveFeedError
        /// </summary>
        [DataMember(Name="fetch_inactive_feed_error", EmitDefaultValue=false)]
        public int FetchInactiveFeedError { get; set; }

        /// <summary>
        /// Gets or Sets EncodingError
        /// </summary>
        [DataMember(Name="encoding_error", EmitDefaultValue=false)]
        public int EncodingError { get; set; }

        /// <summary>
        /// Gets or Sets DelimiterError
        /// </summary>
        [DataMember(Name="delimiter_error", EmitDefaultValue=false)]
        public int DelimiterError { get; set; }

        /// <summary>
        /// Gets or Sets RequiredColumnsMissing
        /// </summary>
        [DataMember(Name="required_columns_missing", EmitDefaultValue=false)]
        public int RequiredColumnsMissing { get; set; }

        /// <summary>
        /// Gets or Sets ImageLinkInvalid
        /// </summary>
        [DataMember(Name="image_link_invalid", EmitDefaultValue=false)]
        public int ImageLinkInvalid { get; set; }

        /// <summary>
        /// Gets or Sets ItemidMissing
        /// </summary>
        [DataMember(Name="itemid_missing", EmitDefaultValue=false)]
        public int ItemidMissing { get; set; }

        /// <summary>
        /// Gets or Sets TitleMissing
        /// </summary>
        [DataMember(Name="title_missing", EmitDefaultValue=false)]
        public int TitleMissing { get; set; }

        /// <summary>
        /// Gets or Sets DescriptionMissing
        /// </summary>
        [DataMember(Name="description_missing", EmitDefaultValue=false)]
        public int DescriptionMissing { get; set; }

        /// <summary>
        /// Gets or Sets ProductCategoryInvalid
        /// </summary>
        [DataMember(Name="product_category_invalid", EmitDefaultValue=false)]
        public int ProductCategoryInvalid { get; set; }

        /// <summary>
        /// Gets or Sets ProductLinkMissing
        /// </summary>
        [DataMember(Name="product_link_missing", EmitDefaultValue=false)]
        public int ProductLinkMissing { get; set; }

        /// <summary>
        /// Gets or Sets ImageLinkMissing
        /// </summary>
        [DataMember(Name="image_link_missing", EmitDefaultValue=false)]
        public int ImageLinkMissing { get; set; }

        /// <summary>
        /// Gets or Sets AvailabilityInvalid
        /// </summary>
        [DataMember(Name="availability_invalid", EmitDefaultValue=false)]
        public int AvailabilityInvalid { get; set; }

        /// <summary>
        /// Gets or Sets ProductPriceInvalid
        /// </summary>
        [DataMember(Name="product_price_invalid", EmitDefaultValue=false)]
        public int ProductPriceInvalid { get; set; }

        /// <summary>
        /// Gets or Sets LinkFormatInvalid
        /// </summary>
        [DataMember(Name="link_format_invalid", EmitDefaultValue=false)]
        public int LinkFormatInvalid { get; set; }

        /// <summary>
        /// Gets or Sets ParseLineError
        /// </summary>
        [DataMember(Name="parse_line_error", EmitDefaultValue=false)]
        public int ParseLineError { get; set; }

        /// <summary>
        /// Gets or Sets AdwordsFormatInvalid
        /// </summary>
        [DataMember(Name="adwords_format_invalid", EmitDefaultValue=false)]
        public int AdwordsFormatInvalid { get; set; }

        /// <summary>
        /// Gets or Sets ProductCategoryMissing
        /// </summary>
        [DataMember(Name="product_category_missing", EmitDefaultValue=false)]
        public int ProductCategoryMissing { get; set; }

        /// <summary>
        /// Gets or Sets InternalServiceError
        /// </summary>
        [DataMember(Name="internal_service_error", EmitDefaultValue=false)]
        public int InternalServiceError { get; set; }

        /// <summary>
        /// Gets or Sets NoVerifiedDomain
        /// </summary>
        [DataMember(Name="no_verified_domain", EmitDefaultValue=false)]
        public int NoVerifiedDomain { get; set; }

        /// <summary>
        /// Gets or Sets AdultInvalid
        /// </summary>
        [DataMember(Name="adult_invalid", EmitDefaultValue=false)]
        public int AdultInvalid { get; set; }

        /// <summary>
        /// Gets or Sets InvalidDomain
        /// </summary>
        [DataMember(Name="invalid_domain", EmitDefaultValue=false)]
        public int InvalidDomain { get; set; }

        /// <summary>
        /// Gets or Sets FeedLengthTooLong
        /// </summary>
        [DataMember(Name="feed_length_too_long", EmitDefaultValue=false)]
        public int FeedLengthTooLong { get; set; }

        /// <summary>
        /// Gets or Sets LinkLengthTooLong
        /// </summary>
        [DataMember(Name="link_length_too_long", EmitDefaultValue=false)]
        public int LinkLengthTooLong { get; set; }

        /// <summary>
        /// Gets or Sets MalformedXml
        /// </summary>
        [DataMember(Name="malformed_xml", EmitDefaultValue=false)]
        public int MalformedXml { get; set; }

        /// <summary>
        /// Gets or Sets RedirectInvalid
        /// </summary>
        [DataMember(Name="redirect_invalid", EmitDefaultValue=false)]
        public int RedirectInvalid { get; set; }

        /// <summary>
        /// Gets or Sets PriceMissing
        /// </summary>
        [DataMember(Name="price_missing", EmitDefaultValue=false)]
        public int PriceMissing { get; set; }

        /// <summary>
        /// Gets or Sets FeedTooSmall
        /// </summary>
        [DataMember(Name="feed_too_small", EmitDefaultValue=false)]
        public int FeedTooSmall { get; set; }

        /// <summary>
        /// Gets or Sets ConditionInvalid
        /// </summary>
        [DataMember(Name="condition_invalid", EmitDefaultValue=false)]
        public int ConditionInvalid { get; set; }

        /// <summary>
        /// Gets or Sets ShopifyNoProducts
        /// </summary>
        [DataMember(Name="shopify_no_products", EmitDefaultValue=false)]
        public int ShopifyNoProducts { get; set; }

        /// <summary>
        /// Gets or Sets MaxItemsPerItemGroupExceeded
        /// </summary>
        [DataMember(Name="max_items_per_item_group_exceeded", EmitDefaultValue=false)]
        public int MaxItemsPerItemGroupExceeded { get; set; }

        /// <summary>
        /// Gets or Sets ItemMainImageDownloadFailure
        /// </summary>
        [DataMember(Name="item_main_image_download_failure", EmitDefaultValue=false)]
        public int ItemMainImageDownloadFailure { get; set; }

        /// <summary>
        /// Gets or Sets PinjoinContentUnsafe
        /// </summary>
        [DataMember(Name="pinjoin_content_unsafe", EmitDefaultValue=false)]
        public int PinjoinContentUnsafe { get; set; }

        /// <summary>
        /// Gets or Sets BlocklistedImageSignature
        /// </summary>
        [DataMember(Name="blocklisted_image_signature", EmitDefaultValue=false)]
        public int BlocklistedImageSignature { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CatalogsFeedValidationErrors {\n");
            sb.Append("  FetchError: ").Append(FetchError).Append("\n");
            sb.Append("  FetchInactiveFeedError: ").Append(FetchInactiveFeedError).Append("\n");
            sb.Append("  EncodingError: ").Append(EncodingError).Append("\n");
            sb.Append("  DelimiterError: ").Append(DelimiterError).Append("\n");
            sb.Append("  RequiredColumnsMissing: ").Append(RequiredColumnsMissing).Append("\n");
            sb.Append("  ImageLinkInvalid: ").Append(ImageLinkInvalid).Append("\n");
            sb.Append("  ItemidMissing: ").Append(ItemidMissing).Append("\n");
            sb.Append("  TitleMissing: ").Append(TitleMissing).Append("\n");
            sb.Append("  DescriptionMissing: ").Append(DescriptionMissing).Append("\n");
            sb.Append("  ProductCategoryInvalid: ").Append(ProductCategoryInvalid).Append("\n");
            sb.Append("  ProductLinkMissing: ").Append(ProductLinkMissing).Append("\n");
            sb.Append("  ImageLinkMissing: ").Append(ImageLinkMissing).Append("\n");
            sb.Append("  AvailabilityInvalid: ").Append(AvailabilityInvalid).Append("\n");
            sb.Append("  ProductPriceInvalid: ").Append(ProductPriceInvalid).Append("\n");
            sb.Append("  LinkFormatInvalid: ").Append(LinkFormatInvalid).Append("\n");
            sb.Append("  ParseLineError: ").Append(ParseLineError).Append("\n");
            sb.Append("  AdwordsFormatInvalid: ").Append(AdwordsFormatInvalid).Append("\n");
            sb.Append("  ProductCategoryMissing: ").Append(ProductCategoryMissing).Append("\n");
            sb.Append("  InternalServiceError: ").Append(InternalServiceError).Append("\n");
            sb.Append("  NoVerifiedDomain: ").Append(NoVerifiedDomain).Append("\n");
            sb.Append("  AdultInvalid: ").Append(AdultInvalid).Append("\n");
            sb.Append("  InvalidDomain: ").Append(InvalidDomain).Append("\n");
            sb.Append("  FeedLengthTooLong: ").Append(FeedLengthTooLong).Append("\n");
            sb.Append("  LinkLengthTooLong: ").Append(LinkLengthTooLong).Append("\n");
            sb.Append("  MalformedXml: ").Append(MalformedXml).Append("\n");
            sb.Append("  RedirectInvalid: ").Append(RedirectInvalid).Append("\n");
            sb.Append("  PriceMissing: ").Append(PriceMissing).Append("\n");
            sb.Append("  FeedTooSmall: ").Append(FeedTooSmall).Append("\n");
            sb.Append("  ConditionInvalid: ").Append(ConditionInvalid).Append("\n");
            sb.Append("  ShopifyNoProducts: ").Append(ShopifyNoProducts).Append("\n");
            sb.Append("  MaxItemsPerItemGroupExceeded: ").Append(MaxItemsPerItemGroupExceeded).Append("\n");
            sb.Append("  ItemMainImageDownloadFailure: ").Append(ItemMainImageDownloadFailure).Append("\n");
            sb.Append("  PinjoinContentUnsafe: ").Append(PinjoinContentUnsafe).Append("\n");
            sb.Append("  BlocklistedImageSignature: ").Append(BlocklistedImageSignature).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((CatalogsFeedValidationErrors)obj);
        }

        /// <summary>
        /// Returns true if CatalogsFeedValidationErrors instances are equal
        /// </summary>
        /// <param name="other">Instance of CatalogsFeedValidationErrors to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CatalogsFeedValidationErrors other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    FetchError == other.FetchError ||
                    
                    FetchError.Equals(other.FetchError)
                ) && 
                (
                    FetchInactiveFeedError == other.FetchInactiveFeedError ||
                    
                    FetchInactiveFeedError.Equals(other.FetchInactiveFeedError)
                ) && 
                (
                    EncodingError == other.EncodingError ||
                    
                    EncodingError.Equals(other.EncodingError)
                ) && 
                (
                    DelimiterError == other.DelimiterError ||
                    
                    DelimiterError.Equals(other.DelimiterError)
                ) && 
                (
                    RequiredColumnsMissing == other.RequiredColumnsMissing ||
                    
                    RequiredColumnsMissing.Equals(other.RequiredColumnsMissing)
                ) && 
                (
                    ImageLinkInvalid == other.ImageLinkInvalid ||
                    
                    ImageLinkInvalid.Equals(other.ImageLinkInvalid)
                ) && 
                (
                    ItemidMissing == other.ItemidMissing ||
                    
                    ItemidMissing.Equals(other.ItemidMissing)
                ) && 
                (
                    TitleMissing == other.TitleMissing ||
                    
                    TitleMissing.Equals(other.TitleMissing)
                ) && 
                (
                    DescriptionMissing == other.DescriptionMissing ||
                    
                    DescriptionMissing.Equals(other.DescriptionMissing)
                ) && 
                (
                    ProductCategoryInvalid == other.ProductCategoryInvalid ||
                    
                    ProductCategoryInvalid.Equals(other.ProductCategoryInvalid)
                ) && 
                (
                    ProductLinkMissing == other.ProductLinkMissing ||
                    
                    ProductLinkMissing.Equals(other.ProductLinkMissing)
                ) && 
                (
                    ImageLinkMissing == other.ImageLinkMissing ||
                    
                    ImageLinkMissing.Equals(other.ImageLinkMissing)
                ) && 
                (
                    AvailabilityInvalid == other.AvailabilityInvalid ||
                    
                    AvailabilityInvalid.Equals(other.AvailabilityInvalid)
                ) && 
                (
                    ProductPriceInvalid == other.ProductPriceInvalid ||
                    
                    ProductPriceInvalid.Equals(other.ProductPriceInvalid)
                ) && 
                (
                    LinkFormatInvalid == other.LinkFormatInvalid ||
                    
                    LinkFormatInvalid.Equals(other.LinkFormatInvalid)
                ) && 
                (
                    ParseLineError == other.ParseLineError ||
                    
                    ParseLineError.Equals(other.ParseLineError)
                ) && 
                (
                    AdwordsFormatInvalid == other.AdwordsFormatInvalid ||
                    
                    AdwordsFormatInvalid.Equals(other.AdwordsFormatInvalid)
                ) && 
                (
                    ProductCategoryMissing == other.ProductCategoryMissing ||
                    
                    ProductCategoryMissing.Equals(other.ProductCategoryMissing)
                ) && 
                (
                    InternalServiceError == other.InternalServiceError ||
                    
                    InternalServiceError.Equals(other.InternalServiceError)
                ) && 
                (
                    NoVerifiedDomain == other.NoVerifiedDomain ||
                    
                    NoVerifiedDomain.Equals(other.NoVerifiedDomain)
                ) && 
                (
                    AdultInvalid == other.AdultInvalid ||
                    
                    AdultInvalid.Equals(other.AdultInvalid)
                ) && 
                (
                    InvalidDomain == other.InvalidDomain ||
                    
                    InvalidDomain.Equals(other.InvalidDomain)
                ) && 
                (
                    FeedLengthTooLong == other.FeedLengthTooLong ||
                    
                    FeedLengthTooLong.Equals(other.FeedLengthTooLong)
                ) && 
                (
                    LinkLengthTooLong == other.LinkLengthTooLong ||
                    
                    LinkLengthTooLong.Equals(other.LinkLengthTooLong)
                ) && 
                (
                    MalformedXml == other.MalformedXml ||
                    
                    MalformedXml.Equals(other.MalformedXml)
                ) && 
                (
                    RedirectInvalid == other.RedirectInvalid ||
                    
                    RedirectInvalid.Equals(other.RedirectInvalid)
                ) && 
                (
                    PriceMissing == other.PriceMissing ||
                    
                    PriceMissing.Equals(other.PriceMissing)
                ) && 
                (
                    FeedTooSmall == other.FeedTooSmall ||
                    
                    FeedTooSmall.Equals(other.FeedTooSmall)
                ) && 
                (
                    ConditionInvalid == other.ConditionInvalid ||
                    
                    ConditionInvalid.Equals(other.ConditionInvalid)
                ) && 
                (
                    ShopifyNoProducts == other.ShopifyNoProducts ||
                    
                    ShopifyNoProducts.Equals(other.ShopifyNoProducts)
                ) && 
                (
                    MaxItemsPerItemGroupExceeded == other.MaxItemsPerItemGroupExceeded ||
                    
                    MaxItemsPerItemGroupExceeded.Equals(other.MaxItemsPerItemGroupExceeded)
                ) && 
                (
                    ItemMainImageDownloadFailure == other.ItemMainImageDownloadFailure ||
                    
                    ItemMainImageDownloadFailure.Equals(other.ItemMainImageDownloadFailure)
                ) && 
                (
                    PinjoinContentUnsafe == other.PinjoinContentUnsafe ||
                    
                    PinjoinContentUnsafe.Equals(other.PinjoinContentUnsafe)
                ) && 
                (
                    BlocklistedImageSignature == other.BlocklistedImageSignature ||
                    
                    BlocklistedImageSignature.Equals(other.BlocklistedImageSignature)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    
                    hashCode = hashCode * 59 + FetchError.GetHashCode();
                    
                    hashCode = hashCode * 59 + FetchInactiveFeedError.GetHashCode();
                    
                    hashCode = hashCode * 59 + EncodingError.GetHashCode();
                    
                    hashCode = hashCode * 59 + DelimiterError.GetHashCode();
                    
                    hashCode = hashCode * 59 + RequiredColumnsMissing.GetHashCode();
                    
                    hashCode = hashCode * 59 + ImageLinkInvalid.GetHashCode();
                    
                    hashCode = hashCode * 59 + ItemidMissing.GetHashCode();
                    
                    hashCode = hashCode * 59 + TitleMissing.GetHashCode();
                    
                    hashCode = hashCode * 59 + DescriptionMissing.GetHashCode();
                    
                    hashCode = hashCode * 59 + ProductCategoryInvalid.GetHashCode();
                    
                    hashCode = hashCode * 59 + ProductLinkMissing.GetHashCode();
                    
                    hashCode = hashCode * 59 + ImageLinkMissing.GetHashCode();
                    
                    hashCode = hashCode * 59 + AvailabilityInvalid.GetHashCode();
                    
                    hashCode = hashCode * 59 + ProductPriceInvalid.GetHashCode();
                    
                    hashCode = hashCode * 59 + LinkFormatInvalid.GetHashCode();
                    
                    hashCode = hashCode * 59 + ParseLineError.GetHashCode();
                    
                    hashCode = hashCode * 59 + AdwordsFormatInvalid.GetHashCode();
                    
                    hashCode = hashCode * 59 + ProductCategoryMissing.GetHashCode();
                    
                    hashCode = hashCode * 59 + InternalServiceError.GetHashCode();
                    
                    hashCode = hashCode * 59 + NoVerifiedDomain.GetHashCode();
                    
                    hashCode = hashCode * 59 + AdultInvalid.GetHashCode();
                    
                    hashCode = hashCode * 59 + InvalidDomain.GetHashCode();
                    
                    hashCode = hashCode * 59 + FeedLengthTooLong.GetHashCode();
                    
                    hashCode = hashCode * 59 + LinkLengthTooLong.GetHashCode();
                    
                    hashCode = hashCode * 59 + MalformedXml.GetHashCode();
                    
                    hashCode = hashCode * 59 + RedirectInvalid.GetHashCode();
                    
                    hashCode = hashCode * 59 + PriceMissing.GetHashCode();
                    
                    hashCode = hashCode * 59 + FeedTooSmall.GetHashCode();
                    
                    hashCode = hashCode * 59 + ConditionInvalid.GetHashCode();
                    
                    hashCode = hashCode * 59 + ShopifyNoProducts.GetHashCode();
                    
                    hashCode = hashCode * 59 + MaxItemsPerItemGroupExceeded.GetHashCode();
                    
                    hashCode = hashCode * 59 + ItemMainImageDownloadFailure.GetHashCode();
                    
                    hashCode = hashCode * 59 + PinjoinContentUnsafe.GetHashCode();
                    
                    hashCode = hashCode * 59 + BlocklistedImageSignature.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(CatalogsFeedValidationErrors left, CatalogsFeedValidationErrors right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(CatalogsFeedValidationErrors left, CatalogsFeedValidationErrors right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
