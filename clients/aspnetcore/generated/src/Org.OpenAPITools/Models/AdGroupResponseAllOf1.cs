/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: pinterest-api@pinterest.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class AdGroupResponseAllOf1 : IEquatable<AdGroupResponseAllOf1>
    {
        /// <summary>
        /// Campaign ID of the ad group.
        /// </summary>
        /// <value>Campaign ID of the ad group.</value>
        [RegularExpression("^\\d+$")]
        [DataMember(Name="campaign_id", EmitDefaultValue=false)]
        public string CampaignId { get; set; }

        /// <summary>
        /// Gets or Sets BillableEvent
        /// </summary>
        [DataMember(Name="billable_event", EmitDefaultValue=false)]
        public ActionType BillableEvent { get; set; }

        /// <summary>
        /// Ad group ID.
        /// </summary>
        /// <value>Ad group ID.</value>
        [RegularExpression("^\\d+$")]
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Always \&quot;adgroup\&quot;.
        /// </summary>
        /// <value>Always \&quot;adgroup\&quot;.</value>
        [DataMember(Name="type", EmitDefaultValue=false)]
        public string Type { get; set; }

        /// <summary>
        /// Advertiser ID.
        /// </summary>
        /// <value>Advertiser ID.</value>
        [RegularExpression("^\\d+$")]
        [DataMember(Name="ad_account_id", EmitDefaultValue=false)]
        public string AdAccountId { get; set; }

        /// <summary>
        /// Ad group creation time. Unix timestamp in seconds.
        /// </summary>
        /// <value>Ad group creation time. Unix timestamp in seconds.</value>
        [DataMember(Name="created_time", EmitDefaultValue=false)]
        public int CreatedTime { get; set; }

        /// <summary>
        /// Ad group last update time. Unix timestamp in seconds.
        /// </summary>
        /// <value>Ad group last update time. Unix timestamp in seconds.</value>
        [DataMember(Name="updated_time", EmitDefaultValue=false)]
        public int UpdatedTime { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AdGroupResponseAllOf1 {\n");
            sb.Append("  CampaignId: ").Append(CampaignId).Append("\n");
            sb.Append("  BillableEvent: ").Append(BillableEvent).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  AdAccountId: ").Append(AdAccountId).Append("\n");
            sb.Append("  CreatedTime: ").Append(CreatedTime).Append("\n");
            sb.Append("  UpdatedTime: ").Append(UpdatedTime).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((AdGroupResponseAllOf1)obj);
        }

        /// <summary>
        /// Returns true if AdGroupResponseAllOf1 instances are equal
        /// </summary>
        /// <param name="other">Instance of AdGroupResponseAllOf1 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AdGroupResponseAllOf1 other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    CampaignId == other.CampaignId ||
                    CampaignId != null &&
                    CampaignId.Equals(other.CampaignId)
                ) && 
                (
                    BillableEvent == other.BillableEvent ||
                    
                    BillableEvent.Equals(other.BillableEvent)
                ) && 
                (
                    Id == other.Id ||
                    Id != null &&
                    Id.Equals(other.Id)
                ) && 
                (
                    Type == other.Type ||
                    Type != null &&
                    Type.Equals(other.Type)
                ) && 
                (
                    AdAccountId == other.AdAccountId ||
                    AdAccountId != null &&
                    AdAccountId.Equals(other.AdAccountId)
                ) && 
                (
                    CreatedTime == other.CreatedTime ||
                    
                    CreatedTime.Equals(other.CreatedTime)
                ) && 
                (
                    UpdatedTime == other.UpdatedTime ||
                    
                    UpdatedTime.Equals(other.UpdatedTime)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (CampaignId != null)
                    hashCode = hashCode * 59 + CampaignId.GetHashCode();
                    
                    hashCode = hashCode * 59 + BillableEvent.GetHashCode();
                    if (Id != null)
                    hashCode = hashCode * 59 + Id.GetHashCode();
                    if (Type != null)
                    hashCode = hashCode * 59 + Type.GetHashCode();
                    if (AdAccountId != null)
                    hashCode = hashCode * 59 + AdAccountId.GetHashCode();
                    
                    hashCode = hashCode * 59 + CreatedTime.GetHashCode();
                    
                    hashCode = hashCode * 59 + UpdatedTime.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(AdGroupResponseAllOf1 left, AdGroupResponseAllOf1 right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(AdGroupResponseAllOf1 left, AdGroupResponseAllOf1 right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
