/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: pinterest-api@pinterest.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class CatalogsFeedValidationWarnings : IEquatable<CatalogsFeedValidationWarnings>
    {
        /// <summary>
        /// Gets or Sets TitleLengthTooLong
        /// </summary>
        [DataMember(Name="title_length_too_long", EmitDefaultValue=false)]
        public int TitleLengthTooLong { get; set; }

        /// <summary>
        /// Gets or Sets DescriptionLengthTooLong
        /// </summary>
        [DataMember(Name="description_length_too_long", EmitDefaultValue=false)]
        public int DescriptionLengthTooLong { get; set; }

        /// <summary>
        /// Gets or Sets GenderInvalid
        /// </summary>
        [DataMember(Name="gender_invalid", EmitDefaultValue=false)]
        public int GenderInvalid { get; set; }

        /// <summary>
        /// Gets or Sets AgeGroupInvalid
        /// </summary>
        [DataMember(Name="age_group_invalid", EmitDefaultValue=false)]
        public int AgeGroupInvalid { get; set; }

        /// <summary>
        /// Gets or Sets SizeTypeInvalid
        /// </summary>
        [DataMember(Name="size_type_invalid", EmitDefaultValue=false)]
        public int SizeTypeInvalid { get; set; }

        /// <summary>
        /// Gets or Sets LinkFormatWarning
        /// </summary>
        [DataMember(Name="link_format_warning", EmitDefaultValue=false)]
        public int LinkFormatWarning { get; set; }

        /// <summary>
        /// Gets or Sets DuplicateProducts
        /// </summary>
        [DataMember(Name="duplicate_products", EmitDefaultValue=false)]
        public int DuplicateProducts { get; set; }

        /// <summary>
        /// Gets or Sets DuplicateLinks
        /// </summary>
        [DataMember(Name="duplicate_links", EmitDefaultValue=false)]
        public int DuplicateLinks { get; set; }

        /// <summary>
        /// Gets or Sets SalesPriceInvalid
        /// </summary>
        [DataMember(Name="sales_price_invalid", EmitDefaultValue=false)]
        public int SalesPriceInvalid { get; set; }

        /// <summary>
        /// Gets or Sets ProductCategoryDepthWarning
        /// </summary>
        [DataMember(Name="product_category_depth_warning", EmitDefaultValue=false)]
        public int ProductCategoryDepthWarning { get; set; }

        /// <summary>
        /// Gets or Sets AdwordsSameAsLink
        /// </summary>
        [DataMember(Name="adwords_same_as_link", EmitDefaultValue=false)]
        public int AdwordsSameAsLink { get; set; }

        /// <summary>
        /// Gets or Sets DuplicateHeaders
        /// </summary>
        [DataMember(Name="duplicate_headers", EmitDefaultValue=false)]
        public int DuplicateHeaders { get; set; }

        /// <summary>
        /// Gets or Sets FetchSameSignature
        /// </summary>
        [DataMember(Name="fetch_same_signature", EmitDefaultValue=false)]
        public int FetchSameSignature { get; set; }

        /// <summary>
        /// Gets or Sets AdwordsFormatWarning
        /// </summary>
        [DataMember(Name="adwords_format_warning", EmitDefaultValue=false)]
        public int AdwordsFormatWarning { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalImageLinkWarning
        /// </summary>
        [DataMember(Name="additional_image_link_warning", EmitDefaultValue=false)]
        public int AdditionalImageLinkWarning { get; set; }

        /// <summary>
        /// Gets or Sets ImageLinkWarning
        /// </summary>
        [DataMember(Name="image_link_warning", EmitDefaultValue=false)]
        public int ImageLinkWarning { get; set; }

        /// <summary>
        /// Gets or Sets ShippingInvalid
        /// </summary>
        [DataMember(Name="shipping_invalid", EmitDefaultValue=false)]
        public int ShippingInvalid { get; set; }

        /// <summary>
        /// Gets or Sets TaxInvalid
        /// </summary>
        [DataMember(Name="tax_invalid", EmitDefaultValue=false)]
        public int TaxInvalid { get; set; }

        /// <summary>
        /// Gets or Sets ShippingWeightInvalid
        /// </summary>
        [DataMember(Name="shipping_weight_invalid", EmitDefaultValue=false)]
        public int ShippingWeightInvalid { get; set; }

        /// <summary>
        /// Gets or Sets ExpirationDateInvalid
        /// </summary>
        [DataMember(Name="expiration_date_invalid", EmitDefaultValue=false)]
        public int ExpirationDateInvalid { get; set; }

        /// <summary>
        /// Gets or Sets AvailabilityDateInvalid
        /// </summary>
        [DataMember(Name="availability_date_invalid", EmitDefaultValue=false)]
        public int AvailabilityDateInvalid { get; set; }

        /// <summary>
        /// Gets or Sets SaleDateInvalid
        /// </summary>
        [DataMember(Name="sale_date_invalid", EmitDefaultValue=false)]
        public int SaleDateInvalid { get; set; }

        /// <summary>
        /// Gets or Sets WeightUnitInvalid
        /// </summary>
        [DataMember(Name="weight_unit_invalid", EmitDefaultValue=false)]
        public int WeightUnitInvalid { get; set; }

        /// <summary>
        /// Gets or Sets IsBundleInvalid
        /// </summary>
        [DataMember(Name="is_bundle_invalid", EmitDefaultValue=false)]
        public int IsBundleInvalid { get; set; }

        /// <summary>
        /// Gets or Sets UpdatedTimeInvalid
        /// </summary>
        [DataMember(Name="updated_time_invalid", EmitDefaultValue=false)]
        public int UpdatedTimeInvalid { get; set; }

        /// <summary>
        /// Gets or Sets CustomLabelLengthTooLong
        /// </summary>
        [DataMember(Name="custom_label_length_too_long", EmitDefaultValue=false)]
        public int CustomLabelLengthTooLong { get; set; }

        /// <summary>
        /// Gets or Sets ProductTypeLengthTooLong
        /// </summary>
        [DataMember(Name="product_type_length_too_long", EmitDefaultValue=false)]
        public int ProductTypeLengthTooLong { get; set; }

        /// <summary>
        /// Gets or Sets TooManyAdditionalImageLinks
        /// </summary>
        [DataMember(Name="too_many_additional_image_links", EmitDefaultValue=false)]
        public int TooManyAdditionalImageLinks { get; set; }

        /// <summary>
        /// Gets or Sets MultipackInvalid
        /// </summary>
        [DataMember(Name="multipack_invalid", EmitDefaultValue=false)]
        public int MultipackInvalid { get; set; }

        /// <summary>
        /// Gets or Sets IndexedProductCountLargeDelta
        /// </summary>
        [DataMember(Name="indexed_product_count_large_delta", EmitDefaultValue=false)]
        public int IndexedProductCountLargeDelta { get; set; }

        /// <summary>
        /// Gets or Sets ItemAdditionalImageDownloadFailure
        /// </summary>
        [DataMember(Name="item_additional_image_download_failure", EmitDefaultValue=false)]
        public int ItemAdditionalImageDownloadFailure { get; set; }

        /// <summary>
        /// Gets or Sets OptionalProductCategoryMissing
        /// </summary>
        [DataMember(Name="optional_product_category_missing", EmitDefaultValue=false)]
        public int OptionalProductCategoryMissing { get; set; }

        /// <summary>
        /// Gets or Sets OptionalProductCategoryInvalid
        /// </summary>
        [DataMember(Name="optional_product_category_invalid", EmitDefaultValue=false)]
        public int OptionalProductCategoryInvalid { get; set; }

        /// <summary>
        /// Gets or Sets OptionalConditionMissing
        /// </summary>
        [DataMember(Name="optional_condition_missing", EmitDefaultValue=false)]
        public int OptionalConditionMissing { get; set; }

        /// <summary>
        /// Gets or Sets OptionalConditionInvalid
        /// </summary>
        [DataMember(Name="optional_condition_invalid", EmitDefaultValue=false)]
        public int OptionalConditionInvalid { get; set; }

        /// <summary>
        /// Gets or Sets IosDeepLinkInvalid
        /// </summary>
        [DataMember(Name="ios_deep_link_invalid", EmitDefaultValue=false)]
        public int IosDeepLinkInvalid { get; set; }

        /// <summary>
        /// Gets or Sets AndroidDeepLinkInvalid
        /// </summary>
        [DataMember(Name="android_deep_link_invalid", EmitDefaultValue=false)]
        public int AndroidDeepLinkInvalid { get; set; }

        /// <summary>
        /// Gets or Sets AvailabilityNormalized
        /// </summary>
        [DataMember(Name="availability_normalized", EmitDefaultValue=false)]
        public int AvailabilityNormalized { get; set; }

        /// <summary>
        /// Gets or Sets ConditionNormalized
        /// </summary>
        [DataMember(Name="condition_normalized", EmitDefaultValue=false)]
        public int ConditionNormalized { get; set; }

        /// <summary>
        /// Gets or Sets GenderNormalized
        /// </summary>
        [DataMember(Name="gender_normalized", EmitDefaultValue=false)]
        public int GenderNormalized { get; set; }

        /// <summary>
        /// Gets or Sets SizeTypeNormalized
        /// </summary>
        [DataMember(Name="size_type_normalized", EmitDefaultValue=false)]
        public int SizeTypeNormalized { get; set; }

        /// <summary>
        /// Gets or Sets AgeGroupNormalized
        /// </summary>
        [DataMember(Name="age_group_normalized", EmitDefaultValue=false)]
        public int AgeGroupNormalized { get; set; }

        /// <summary>
        /// Gets or Sets UtmSourceAutoCorrected
        /// </summary>
        [DataMember(Name="utm_source_auto_corrected", EmitDefaultValue=false)]
        public int UtmSourceAutoCorrected { get; set; }

        /// <summary>
        /// Gets or Sets CountryDoesNotMapToCurrency
        /// </summary>
        [DataMember(Name="country_does_not_map_to_currency", EmitDefaultValue=false)]
        public int CountryDoesNotMapToCurrency { get; set; }

        /// <summary>
        /// Gets or Sets MinAdPriceInvalid
        /// </summary>
        [DataMember(Name="min_ad_price_invalid", EmitDefaultValue=false)]
        public int MinAdPriceInvalid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CatalogsFeedValidationWarnings {\n");
            sb.Append("  TitleLengthTooLong: ").Append(TitleLengthTooLong).Append("\n");
            sb.Append("  DescriptionLengthTooLong: ").Append(DescriptionLengthTooLong).Append("\n");
            sb.Append("  GenderInvalid: ").Append(GenderInvalid).Append("\n");
            sb.Append("  AgeGroupInvalid: ").Append(AgeGroupInvalid).Append("\n");
            sb.Append("  SizeTypeInvalid: ").Append(SizeTypeInvalid).Append("\n");
            sb.Append("  LinkFormatWarning: ").Append(LinkFormatWarning).Append("\n");
            sb.Append("  DuplicateProducts: ").Append(DuplicateProducts).Append("\n");
            sb.Append("  DuplicateLinks: ").Append(DuplicateLinks).Append("\n");
            sb.Append("  SalesPriceInvalid: ").Append(SalesPriceInvalid).Append("\n");
            sb.Append("  ProductCategoryDepthWarning: ").Append(ProductCategoryDepthWarning).Append("\n");
            sb.Append("  AdwordsSameAsLink: ").Append(AdwordsSameAsLink).Append("\n");
            sb.Append("  DuplicateHeaders: ").Append(DuplicateHeaders).Append("\n");
            sb.Append("  FetchSameSignature: ").Append(FetchSameSignature).Append("\n");
            sb.Append("  AdwordsFormatWarning: ").Append(AdwordsFormatWarning).Append("\n");
            sb.Append("  AdditionalImageLinkWarning: ").Append(AdditionalImageLinkWarning).Append("\n");
            sb.Append("  ImageLinkWarning: ").Append(ImageLinkWarning).Append("\n");
            sb.Append("  ShippingInvalid: ").Append(ShippingInvalid).Append("\n");
            sb.Append("  TaxInvalid: ").Append(TaxInvalid).Append("\n");
            sb.Append("  ShippingWeightInvalid: ").Append(ShippingWeightInvalid).Append("\n");
            sb.Append("  ExpirationDateInvalid: ").Append(ExpirationDateInvalid).Append("\n");
            sb.Append("  AvailabilityDateInvalid: ").Append(AvailabilityDateInvalid).Append("\n");
            sb.Append("  SaleDateInvalid: ").Append(SaleDateInvalid).Append("\n");
            sb.Append("  WeightUnitInvalid: ").Append(WeightUnitInvalid).Append("\n");
            sb.Append("  IsBundleInvalid: ").Append(IsBundleInvalid).Append("\n");
            sb.Append("  UpdatedTimeInvalid: ").Append(UpdatedTimeInvalid).Append("\n");
            sb.Append("  CustomLabelLengthTooLong: ").Append(CustomLabelLengthTooLong).Append("\n");
            sb.Append("  ProductTypeLengthTooLong: ").Append(ProductTypeLengthTooLong).Append("\n");
            sb.Append("  TooManyAdditionalImageLinks: ").Append(TooManyAdditionalImageLinks).Append("\n");
            sb.Append("  MultipackInvalid: ").Append(MultipackInvalid).Append("\n");
            sb.Append("  IndexedProductCountLargeDelta: ").Append(IndexedProductCountLargeDelta).Append("\n");
            sb.Append("  ItemAdditionalImageDownloadFailure: ").Append(ItemAdditionalImageDownloadFailure).Append("\n");
            sb.Append("  OptionalProductCategoryMissing: ").Append(OptionalProductCategoryMissing).Append("\n");
            sb.Append("  OptionalProductCategoryInvalid: ").Append(OptionalProductCategoryInvalid).Append("\n");
            sb.Append("  OptionalConditionMissing: ").Append(OptionalConditionMissing).Append("\n");
            sb.Append("  OptionalConditionInvalid: ").Append(OptionalConditionInvalid).Append("\n");
            sb.Append("  IosDeepLinkInvalid: ").Append(IosDeepLinkInvalid).Append("\n");
            sb.Append("  AndroidDeepLinkInvalid: ").Append(AndroidDeepLinkInvalid).Append("\n");
            sb.Append("  AvailabilityNormalized: ").Append(AvailabilityNormalized).Append("\n");
            sb.Append("  ConditionNormalized: ").Append(ConditionNormalized).Append("\n");
            sb.Append("  GenderNormalized: ").Append(GenderNormalized).Append("\n");
            sb.Append("  SizeTypeNormalized: ").Append(SizeTypeNormalized).Append("\n");
            sb.Append("  AgeGroupNormalized: ").Append(AgeGroupNormalized).Append("\n");
            sb.Append("  UtmSourceAutoCorrected: ").Append(UtmSourceAutoCorrected).Append("\n");
            sb.Append("  CountryDoesNotMapToCurrency: ").Append(CountryDoesNotMapToCurrency).Append("\n");
            sb.Append("  MinAdPriceInvalid: ").Append(MinAdPriceInvalid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((CatalogsFeedValidationWarnings)obj);
        }

        /// <summary>
        /// Returns true if CatalogsFeedValidationWarnings instances are equal
        /// </summary>
        /// <param name="other">Instance of CatalogsFeedValidationWarnings to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CatalogsFeedValidationWarnings other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    TitleLengthTooLong == other.TitleLengthTooLong ||
                    
                    TitleLengthTooLong.Equals(other.TitleLengthTooLong)
                ) && 
                (
                    DescriptionLengthTooLong == other.DescriptionLengthTooLong ||
                    
                    DescriptionLengthTooLong.Equals(other.DescriptionLengthTooLong)
                ) && 
                (
                    GenderInvalid == other.GenderInvalid ||
                    
                    GenderInvalid.Equals(other.GenderInvalid)
                ) && 
                (
                    AgeGroupInvalid == other.AgeGroupInvalid ||
                    
                    AgeGroupInvalid.Equals(other.AgeGroupInvalid)
                ) && 
                (
                    SizeTypeInvalid == other.SizeTypeInvalid ||
                    
                    SizeTypeInvalid.Equals(other.SizeTypeInvalid)
                ) && 
                (
                    LinkFormatWarning == other.LinkFormatWarning ||
                    
                    LinkFormatWarning.Equals(other.LinkFormatWarning)
                ) && 
                (
                    DuplicateProducts == other.DuplicateProducts ||
                    
                    DuplicateProducts.Equals(other.DuplicateProducts)
                ) && 
                (
                    DuplicateLinks == other.DuplicateLinks ||
                    
                    DuplicateLinks.Equals(other.DuplicateLinks)
                ) && 
                (
                    SalesPriceInvalid == other.SalesPriceInvalid ||
                    
                    SalesPriceInvalid.Equals(other.SalesPriceInvalid)
                ) && 
                (
                    ProductCategoryDepthWarning == other.ProductCategoryDepthWarning ||
                    
                    ProductCategoryDepthWarning.Equals(other.ProductCategoryDepthWarning)
                ) && 
                (
                    AdwordsSameAsLink == other.AdwordsSameAsLink ||
                    
                    AdwordsSameAsLink.Equals(other.AdwordsSameAsLink)
                ) && 
                (
                    DuplicateHeaders == other.DuplicateHeaders ||
                    
                    DuplicateHeaders.Equals(other.DuplicateHeaders)
                ) && 
                (
                    FetchSameSignature == other.FetchSameSignature ||
                    
                    FetchSameSignature.Equals(other.FetchSameSignature)
                ) && 
                (
                    AdwordsFormatWarning == other.AdwordsFormatWarning ||
                    
                    AdwordsFormatWarning.Equals(other.AdwordsFormatWarning)
                ) && 
                (
                    AdditionalImageLinkWarning == other.AdditionalImageLinkWarning ||
                    
                    AdditionalImageLinkWarning.Equals(other.AdditionalImageLinkWarning)
                ) && 
                (
                    ImageLinkWarning == other.ImageLinkWarning ||
                    
                    ImageLinkWarning.Equals(other.ImageLinkWarning)
                ) && 
                (
                    ShippingInvalid == other.ShippingInvalid ||
                    
                    ShippingInvalid.Equals(other.ShippingInvalid)
                ) && 
                (
                    TaxInvalid == other.TaxInvalid ||
                    
                    TaxInvalid.Equals(other.TaxInvalid)
                ) && 
                (
                    ShippingWeightInvalid == other.ShippingWeightInvalid ||
                    
                    ShippingWeightInvalid.Equals(other.ShippingWeightInvalid)
                ) && 
                (
                    ExpirationDateInvalid == other.ExpirationDateInvalid ||
                    
                    ExpirationDateInvalid.Equals(other.ExpirationDateInvalid)
                ) && 
                (
                    AvailabilityDateInvalid == other.AvailabilityDateInvalid ||
                    
                    AvailabilityDateInvalid.Equals(other.AvailabilityDateInvalid)
                ) && 
                (
                    SaleDateInvalid == other.SaleDateInvalid ||
                    
                    SaleDateInvalid.Equals(other.SaleDateInvalid)
                ) && 
                (
                    WeightUnitInvalid == other.WeightUnitInvalid ||
                    
                    WeightUnitInvalid.Equals(other.WeightUnitInvalid)
                ) && 
                (
                    IsBundleInvalid == other.IsBundleInvalid ||
                    
                    IsBundleInvalid.Equals(other.IsBundleInvalid)
                ) && 
                (
                    UpdatedTimeInvalid == other.UpdatedTimeInvalid ||
                    
                    UpdatedTimeInvalid.Equals(other.UpdatedTimeInvalid)
                ) && 
                (
                    CustomLabelLengthTooLong == other.CustomLabelLengthTooLong ||
                    
                    CustomLabelLengthTooLong.Equals(other.CustomLabelLengthTooLong)
                ) && 
                (
                    ProductTypeLengthTooLong == other.ProductTypeLengthTooLong ||
                    
                    ProductTypeLengthTooLong.Equals(other.ProductTypeLengthTooLong)
                ) && 
                (
                    TooManyAdditionalImageLinks == other.TooManyAdditionalImageLinks ||
                    
                    TooManyAdditionalImageLinks.Equals(other.TooManyAdditionalImageLinks)
                ) && 
                (
                    MultipackInvalid == other.MultipackInvalid ||
                    
                    MultipackInvalid.Equals(other.MultipackInvalid)
                ) && 
                (
                    IndexedProductCountLargeDelta == other.IndexedProductCountLargeDelta ||
                    
                    IndexedProductCountLargeDelta.Equals(other.IndexedProductCountLargeDelta)
                ) && 
                (
                    ItemAdditionalImageDownloadFailure == other.ItemAdditionalImageDownloadFailure ||
                    
                    ItemAdditionalImageDownloadFailure.Equals(other.ItemAdditionalImageDownloadFailure)
                ) && 
                (
                    OptionalProductCategoryMissing == other.OptionalProductCategoryMissing ||
                    
                    OptionalProductCategoryMissing.Equals(other.OptionalProductCategoryMissing)
                ) && 
                (
                    OptionalProductCategoryInvalid == other.OptionalProductCategoryInvalid ||
                    
                    OptionalProductCategoryInvalid.Equals(other.OptionalProductCategoryInvalid)
                ) && 
                (
                    OptionalConditionMissing == other.OptionalConditionMissing ||
                    
                    OptionalConditionMissing.Equals(other.OptionalConditionMissing)
                ) && 
                (
                    OptionalConditionInvalid == other.OptionalConditionInvalid ||
                    
                    OptionalConditionInvalid.Equals(other.OptionalConditionInvalid)
                ) && 
                (
                    IosDeepLinkInvalid == other.IosDeepLinkInvalid ||
                    
                    IosDeepLinkInvalid.Equals(other.IosDeepLinkInvalid)
                ) && 
                (
                    AndroidDeepLinkInvalid == other.AndroidDeepLinkInvalid ||
                    
                    AndroidDeepLinkInvalid.Equals(other.AndroidDeepLinkInvalid)
                ) && 
                (
                    AvailabilityNormalized == other.AvailabilityNormalized ||
                    
                    AvailabilityNormalized.Equals(other.AvailabilityNormalized)
                ) && 
                (
                    ConditionNormalized == other.ConditionNormalized ||
                    
                    ConditionNormalized.Equals(other.ConditionNormalized)
                ) && 
                (
                    GenderNormalized == other.GenderNormalized ||
                    
                    GenderNormalized.Equals(other.GenderNormalized)
                ) && 
                (
                    SizeTypeNormalized == other.SizeTypeNormalized ||
                    
                    SizeTypeNormalized.Equals(other.SizeTypeNormalized)
                ) && 
                (
                    AgeGroupNormalized == other.AgeGroupNormalized ||
                    
                    AgeGroupNormalized.Equals(other.AgeGroupNormalized)
                ) && 
                (
                    UtmSourceAutoCorrected == other.UtmSourceAutoCorrected ||
                    
                    UtmSourceAutoCorrected.Equals(other.UtmSourceAutoCorrected)
                ) && 
                (
                    CountryDoesNotMapToCurrency == other.CountryDoesNotMapToCurrency ||
                    
                    CountryDoesNotMapToCurrency.Equals(other.CountryDoesNotMapToCurrency)
                ) && 
                (
                    MinAdPriceInvalid == other.MinAdPriceInvalid ||
                    
                    MinAdPriceInvalid.Equals(other.MinAdPriceInvalid)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    
                    hashCode = hashCode * 59 + TitleLengthTooLong.GetHashCode();
                    
                    hashCode = hashCode * 59 + DescriptionLengthTooLong.GetHashCode();
                    
                    hashCode = hashCode * 59 + GenderInvalid.GetHashCode();
                    
                    hashCode = hashCode * 59 + AgeGroupInvalid.GetHashCode();
                    
                    hashCode = hashCode * 59 + SizeTypeInvalid.GetHashCode();
                    
                    hashCode = hashCode * 59 + LinkFormatWarning.GetHashCode();
                    
                    hashCode = hashCode * 59 + DuplicateProducts.GetHashCode();
                    
                    hashCode = hashCode * 59 + DuplicateLinks.GetHashCode();
                    
                    hashCode = hashCode * 59 + SalesPriceInvalid.GetHashCode();
                    
                    hashCode = hashCode * 59 + ProductCategoryDepthWarning.GetHashCode();
                    
                    hashCode = hashCode * 59 + AdwordsSameAsLink.GetHashCode();
                    
                    hashCode = hashCode * 59 + DuplicateHeaders.GetHashCode();
                    
                    hashCode = hashCode * 59 + FetchSameSignature.GetHashCode();
                    
                    hashCode = hashCode * 59 + AdwordsFormatWarning.GetHashCode();
                    
                    hashCode = hashCode * 59 + AdditionalImageLinkWarning.GetHashCode();
                    
                    hashCode = hashCode * 59 + ImageLinkWarning.GetHashCode();
                    
                    hashCode = hashCode * 59 + ShippingInvalid.GetHashCode();
                    
                    hashCode = hashCode * 59 + TaxInvalid.GetHashCode();
                    
                    hashCode = hashCode * 59 + ShippingWeightInvalid.GetHashCode();
                    
                    hashCode = hashCode * 59 + ExpirationDateInvalid.GetHashCode();
                    
                    hashCode = hashCode * 59 + AvailabilityDateInvalid.GetHashCode();
                    
                    hashCode = hashCode * 59 + SaleDateInvalid.GetHashCode();
                    
                    hashCode = hashCode * 59 + WeightUnitInvalid.GetHashCode();
                    
                    hashCode = hashCode * 59 + IsBundleInvalid.GetHashCode();
                    
                    hashCode = hashCode * 59 + UpdatedTimeInvalid.GetHashCode();
                    
                    hashCode = hashCode * 59 + CustomLabelLengthTooLong.GetHashCode();
                    
                    hashCode = hashCode * 59 + ProductTypeLengthTooLong.GetHashCode();
                    
                    hashCode = hashCode * 59 + TooManyAdditionalImageLinks.GetHashCode();
                    
                    hashCode = hashCode * 59 + MultipackInvalid.GetHashCode();
                    
                    hashCode = hashCode * 59 + IndexedProductCountLargeDelta.GetHashCode();
                    
                    hashCode = hashCode * 59 + ItemAdditionalImageDownloadFailure.GetHashCode();
                    
                    hashCode = hashCode * 59 + OptionalProductCategoryMissing.GetHashCode();
                    
                    hashCode = hashCode * 59 + OptionalProductCategoryInvalid.GetHashCode();
                    
                    hashCode = hashCode * 59 + OptionalConditionMissing.GetHashCode();
                    
                    hashCode = hashCode * 59 + OptionalConditionInvalid.GetHashCode();
                    
                    hashCode = hashCode * 59 + IosDeepLinkInvalid.GetHashCode();
                    
                    hashCode = hashCode * 59 + AndroidDeepLinkInvalid.GetHashCode();
                    
                    hashCode = hashCode * 59 + AvailabilityNormalized.GetHashCode();
                    
                    hashCode = hashCode * 59 + ConditionNormalized.GetHashCode();
                    
                    hashCode = hashCode * 59 + GenderNormalized.GetHashCode();
                    
                    hashCode = hashCode * 59 + SizeTypeNormalized.GetHashCode();
                    
                    hashCode = hashCode * 59 + AgeGroupNormalized.GetHashCode();
                    
                    hashCode = hashCode * 59 + UtmSourceAutoCorrected.GetHashCode();
                    
                    hashCode = hashCode * 59 + CountryDoesNotMapToCurrency.GetHashCode();
                    
                    hashCode = hashCode * 59 + MinAdPriceInvalid.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(CatalogsFeedValidationWarnings left, CatalogsFeedValidationWarnings right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(CatalogsFeedValidationWarnings left, CatalogsFeedValidationWarnings right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
