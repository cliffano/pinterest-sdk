/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CatalogsProductGroupFilters from './CatalogsProductGroupFilters';

/**
 * The CatalogsProductGroupUpdateRequest model module.
 * @module model/CatalogsProductGroupUpdateRequest
 * @version 5.3.0
 */
class CatalogsProductGroupUpdateRequest {
    /**
     * @member {String} feed_id
     * @type {String}
     */
    feed_id;
    /**
     * @member {String} name
     * @type {String}
     */
    name;
    /**
     * @member {String} description
     * @type {String}
     */
    description;
    /**
     * @member {CatalogsProductGroupFilters} filters
     * @type {CatalogsProductGroupFilters}
     */
    filters;

    

    /**
     * Constructs a new <code>CatalogsProductGroupUpdateRequest</code>.
     * Request object for updating a product group.
     * @alias module:model/CatalogsProductGroupUpdateRequest
     * @param feedId {String} Catalog Feed id pertaining to the catalog product group.
     * @param name {String} 
     * @param filters {CatalogsProductGroupFilters} 
     */
    constructor(feedId, name, filters) { 
        
        CatalogsProductGroupUpdateRequest.initialize(this, feedId, name, filters);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, feedId, name, filters) { 
        obj['feed_id'] = feedId;
        obj['name'] = name;
        obj['filters'] = filters;
    }

    /**
     * Constructs a <code>CatalogsProductGroupUpdateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogsProductGroupUpdateRequest} obj Optional instance to populate.
     * @return {module:model/CatalogsProductGroupUpdateRequest} The populated <code>CatalogsProductGroupUpdateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CatalogsProductGroupUpdateRequest();

            if (data.hasOwnProperty('feed_id')) {
                obj['feed_id'] = ApiClient.convertToType(data['feed_id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('filters')) {
                obj['filters'] = CatalogsProductGroupFilters.constructFromObject(data['filters']);
            }
        }
        return obj;
    }
}



export default CatalogsProductGroupUpdateRequest;

