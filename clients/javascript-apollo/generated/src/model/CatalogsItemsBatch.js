/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BatchOperationStatus from './BatchOperationStatus';
import ItemProcessingRecord from './ItemProcessingRecord';

/**
 * The CatalogsItemsBatch model module.
 * @module model/CatalogsItemsBatch
 * @version 5.3.0
 */
class CatalogsItemsBatch {
    /**
     * @member {Array.<CodegenProperty{openApiType='ItemProcessingRecord', baseName='items', complexType='ItemProcessingRecord', getter='getItems', setter='setItems', description='null', dataType='ItemProcessingRecord', datatypeWithEnum='ItemProcessingRecord', dataFormat='null', name='items', min='null', max='null', defaultValue='null', defaultValueWithParam=' = ItemProcessingRecord.constructFromObject(data['items']);', baseType='ItemProcessingRecord', containerType='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='null', jsonSchema='{
  "$ref" : "#/components/schemas/ItemProcessingRecord"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=false, isModel=true, isContainer=false, isString=false, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isFreeFormObject=false, isArray=false, isMap=false, isEnum=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='Items', nameInSnakeCase='ITEMS', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false}>} items
     * @type {Array.<CodegenProperty{openApiType='ItemProcessingRecord', baseName='items', complexType='ItemProcessingRecord', getter='getItems', setter='setItems', description='null', dataType='ItemProcessingRecord', datatypeWithEnum='ItemProcessingRecord', dataFormat='null', name='items', min='null', max='null', defaultValue='null', defaultValueWithParam=' = ItemProcessingRecord.constructFromObject(data['items']);', baseType='ItemProcessingRecord', containerType='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='null', jsonSchema='{
  "$ref" : "#/components/schemas/ItemProcessingRecord"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=false, isModel=true, isContainer=false, isString=false, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isFreeFormObject=false, isArray=false, isMap=false, isEnum=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='Items', nameInSnakeCase='ITEMS', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false}>}
     */
    items;
    /**
     * @member {String} batch_id
     * @type {String}
     */
    batch_id;
    /**
     * @member {Date} created_time
     * @type {Date}
     */
    created_time;
    /**
     * @member {Date} completed_time
     * @type {Date}
     */
    completed_time;
    /**
     * @member {BatchOperationStatus} status
     * @type {BatchOperationStatus}
     */
    status;

    

    /**
     * Constructs a new <code>CatalogsItemsBatch</code>.
     * Object describing the catalogs items batch
     * @alias module:model/CatalogsItemsBatch
     */
    constructor() { 
        
        CatalogsItemsBatch.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CatalogsItemsBatch</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogsItemsBatch} obj Optional instance to populate.
     * @return {module:model/CatalogsItemsBatch} The populated <code>CatalogsItemsBatch</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CatalogsItemsBatch();

            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [ItemProcessingRecord]);
            }
            if (data.hasOwnProperty('batch_id')) {
                obj['batch_id'] = ApiClient.convertToType(data['batch_id'], 'String');
            }
            if (data.hasOwnProperty('created_time')) {
                obj['created_time'] = ApiClient.convertToType(data['created_time'], 'Date');
            }
            if (data.hasOwnProperty('completed_time')) {
                obj['completed_time'] = ApiClient.convertToType(data['completed_time'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = BatchOperationStatus.constructFromObject(data['status']);
            }
        }
        return obj;
    }
}



export default CatalogsItemsBatch;

