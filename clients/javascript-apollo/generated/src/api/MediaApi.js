/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */



import ApiClient from "../ApiClient";
import Error from '../model/Error';
import MediaUpload from '../model/MediaUpload';
import MediaUploadDetails from '../model/MediaUploadDetails';
import MediaUploadRequest from '../model/MediaUploadRequest';
import Paginated from '../model/Paginated';

/**
* Media service.
* @module api/MediaApi
* @version 5.3.0
*/
export default class MediaApi extends ApiClient {

    /**
    * Constructs a new MediaApi. 
    * @alias module:api/MediaApi
    * @class
    */
    constructor() {
      super();
      this.baseURL = null;
    }


    /**
     * Register media upload
     * Register your intent to upload media  The response includes all of the information needed to upload the media to Pinterest.  To upload the media, make an HTTP POST request (using <tt>curl</tt>, for example) to <tt>upload_url</tt> using the <tt>Content-Type</tt> header value. Send the media file's contents as the request's <tt>file</tt> parameter and also include all of the parameters from <tt>upload_parameters</tt>.  <strong><a href='/docs/solutions/content-apps/#creatingvideopins'>Learn more</a></strong> about video Pin creation.
     * @param {MediaUploadRequest} mediaUploadRequest Create a media upload request
     * @return {Promise<MediaUpload>}
     */
    async mediaCreate(mediaUploadRequest) {
      let postBody = mediaUploadRequest;
      // verify the required parameter 'mediaUploadRequest' is set
      if (mediaUploadRequest === undefined || mediaUploadRequest === null) {
        throw new Error("Missing the required parameter 'mediaUploadRequest' when calling mediaCreate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'User-Agent': 'OpenAPI-Generator/5.3.0/Javascript',
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = MediaUpload;

      return this.callApi(
        '/media', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Get media upload details
     * Get details for a registered media upload, including its current status.  <strong><a href='/docs/solutions/content-apps/#creatingvideopins'>Learn more</a></strong> about video Pin creation.
     * @param {String} mediaId Media identifier
     * @return {Promise<MediaUploadDetails>}
     */
    async mediaGet(mediaId) {
      let postBody = null;
      // verify the required parameter 'mediaId' is set
      if (mediaId === undefined || mediaId === null) {
        throw new Error("Missing the required parameter 'mediaId' when calling mediaGet");
      }

      let pathParams = {
        'media_id': mediaId
      };
      let queryParams = {
      };
      let headerParams = {
        'User-Agent': 'OpenAPI-Generator/5.3.0/Javascript',
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MediaUploadDetails;

      return this.callApi(
        '/media/{media_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * List media uploads
     * List media uploads filtered by given parameters.  <strong><a href='/docs/solutions/content-apps/#creatingvideopins'>Learn more</a></strong> about video Pin creation.
     * @param {Object} opts Optional parameters
     * @param {String} opts.bookmark Cursor used to fetch the next page of items
     * @param {Number} opts.pageSize Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/api/v5/#tag/Pagination'>Pagination</a> for more information. (default to 25)
     * @return {Promise<Paginated>}
     */
    async mediaList(opts) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'bookmark': opts['bookmark'],
        'page_size': opts['pageSize']
      };
      let headerParams = {
        'User-Agent': 'OpenAPI-Generator/5.3.0/Javascript',
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Paginated;

      return this.callApi(
        '/media', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }


}
