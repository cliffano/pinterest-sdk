# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET     /api                        controllers.ApiDocController.api


#Functions for AdAccounts API
GET     /v5/ad_accounts/:adAccountId/analytics                     controllers.AdAccountsApiController.adAccountAnalytics(request: Request, adAccountId: String)
GET     /v5/ad_accounts                     controllers.AdAccountsApiController.adAccountsList(request: Request)
GET     /v5/ad_accounts/:adAccountId/ad_groups/analytics                     controllers.AdAccountsApiController.adGroupsAnalytics(request: Request, adAccountId: String)
GET     /v5/ad_accounts/:adAccountId/ad_groups                     controllers.AdAccountsApiController.adGroupsList(request: Request, adAccountId: String)
GET     /v5/ad_accounts/:adAccountId/ads/analytics                     controllers.AdAccountsApiController.adsAnalytics(request: Request, adAccountId: String)
GET     /v5/ad_accounts/:adAccountId/ads                     controllers.AdAccountsApiController.adsList(request: Request, adAccountId: String)
POST     /v5/ad_accounts/:adAccountId/reports                     controllers.AdAccountsApiController.analyticsCreateReport(request: Request, adAccountId: String)
GET     /v5/ad_accounts/:adAccountId/reports                     controllers.AdAccountsApiController.analyticsGetReport(request: Request, adAccountId: String)
GET     /v5/ad_accounts/:adAccountId/campaigns/analytics                     controllers.AdAccountsApiController.campaignsAnalytics(request: Request, adAccountId: String)
GET     /v5/ad_accounts/:adAccountId/campaigns                     controllers.AdAccountsApiController.campaignsList(request: Request, adAccountId: String)
GET     /v5/ad_accounts/:adAccountId/product_groups/analytics                     controllers.AdAccountsApiController.productGroupsAnalytics(request: Request, adAccountId: String)

#Functions for Boards API
POST     /v5/boards/:boardId/sections                     controllers.BoardsApiController.boardSectionsCreate(request: Request, boardId: String)
DELETE     /v5/boards/:boardId/sections/:sectionId                     controllers.BoardsApiController.boardSectionsDelete(request: Request, boardId: String, sectionId: String)
GET     /v5/boards/:boardId/sections                     controllers.BoardsApiController.boardSectionsList(request: Request, boardId: String)
GET     /v5/boards/:boardId/sections/:sectionId/pins                     controllers.BoardsApiController.boardSectionsListPins(request: Request, boardId: String, sectionId: String)
PATCH     /v5/boards/:boardId/sections/:sectionId                     controllers.BoardsApiController.boardSectionsUpdate(request: Request, boardId: String, sectionId: String)
POST     /v5/boards                     controllers.BoardsApiController.boardsCreate(request: Request)
DELETE     /v5/boards/:boardId                     controllers.BoardsApiController.boardsDelete(request: Request, boardId: String)
GET     /v5/boards/:boardId                     controllers.BoardsApiController.boardsGet(request: Request, boardId: String)
GET     /v5/boards                     controllers.BoardsApiController.boardsList(request: Request)
GET     /v5/boards/:boardId/pins                     controllers.BoardsApiController.boardsListPins(request: Request, boardId: String)
PATCH     /v5/boards/:boardId                     controllers.BoardsApiController.boardsUpdate(request: Request, boardId: String)

#Functions for Catalogs API
POST     /v5/catalogs/product_groups                     controllers.CatalogsApiController.catalogsProductGroupsCreate(request: Request)
DELETE     /v5/catalogs/product_groups/:productGroupId                     controllers.CatalogsApiController.catalogsProductGroupsDelete(request: Request, productGroupId: String)
GET     /v5/catalogs/product_groups                     controllers.CatalogsApiController.catalogsProductGroupsList(request: Request)
PATCH     /v5/catalogs/product_groups/:productGroupId                     controllers.CatalogsApiController.catalogsProductGroupsUpdate(request: Request, productGroupId: String)
GET     /v5/catalogs/feeds/:feedId/processing_results                     controllers.CatalogsApiController.feedProcessingResultsList(request: Request, feedId: String)
POST     /v5/catalogs/feeds                     controllers.CatalogsApiController.feedsCreate(request: Request)
DELETE     /v5/catalogs/feeds/:feedId                     controllers.CatalogsApiController.feedsDelete(request: Request, feedId: String)
GET     /v5/catalogs/feeds/:feedId                     controllers.CatalogsApiController.feedsGet(request: Request, feedId: String)
GET     /v5/catalogs/feeds                     controllers.CatalogsApiController.feedsList(request: Request)
PATCH     /v5/catalogs/feeds/:feedId                     controllers.CatalogsApiController.feedsUpdate(request: Request, feedId: String)
GET     /v5/catalogs/items/batch/:batchId                     controllers.CatalogsApiController.itemsBatchGet(request: Request, batchId: String)
POST     /v5/catalogs/items/batch                     controllers.CatalogsApiController.itemsBatchPost(request: Request)
GET     /v5/catalogs/items                     controllers.CatalogsApiController.itemsGet(request: Request)

#Functions for Media API
POST     /v5/media                     controllers.MediaApiController.mediaCreate(request: Request)
GET     /v5/media/:mediaId                     controllers.MediaApiController.mediaGet(request: Request, mediaId: String)
GET     /v5/media                     controllers.MediaApiController.mediaList(request: Request)

#Functions for Oauth API
POST     /v5/oauth/token                     controllers.OauthApiController.oauthToken(request: Request)

#Functions for Pins API
GET     /v5/pins/:pinId/analytics                     controllers.PinsApiController.pinsAnalytics(request: Request, pinId: String)
POST     /v5/pins                     controllers.PinsApiController.pinsCreate(request: Request)
DELETE     /v5/pins/:pinId                     controllers.PinsApiController.pinsDelete(request: Request, pinId: String)
GET     /v5/pins/:pinId                     controllers.PinsApiController.pinsGet(request: Request, pinId: String)

#Functions for UserAccount API
GET     /v5/user_account/analytics                     controllers.UserAccountApiController.userAccountAnalytics(request: Request)
GET     /v5/user_account                     controllers.UserAccountApiController.userAccountGet(request: Request)

# Map static resources from the /public folder to the /assets URL path
GET /assets/*file           controllers.Assets.at(file)
GET /versionedAssets/*file  controllers.Assets.versioned(file)