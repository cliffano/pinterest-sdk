/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: blah@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// CatalogsFeedValidationErrors
    /// </summary>
    [DataContract]
    public partial class CatalogsFeedValidationErrors :  IEquatable<CatalogsFeedValidationErrors>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsFeedValidationErrors" /> class.
        /// </summary>
        /// <param name="fetchError">fetchError.</param>
        /// <param name="fetchInactiveFeedError">fetchInactiveFeedError.</param>
        /// <param name="encodingError">encodingError.</param>
        /// <param name="delimiterError">delimiterError.</param>
        /// <param name="requiredColumnsMissing">requiredColumnsMissing.</param>
        /// <param name="imageLinkInvalid">imageLinkInvalid.</param>
        /// <param name="itemidMissing">itemidMissing.</param>
        /// <param name="titleMissing">titleMissing.</param>
        /// <param name="descriptionMissing">descriptionMissing.</param>
        /// <param name="productCategoryInvalid">productCategoryInvalid.</param>
        /// <param name="productLinkMissing">productLinkMissing.</param>
        /// <param name="imageLinkMissing">imageLinkMissing.</param>
        /// <param name="availabilityInvalid">availabilityInvalid.</param>
        /// <param name="productPriceInvalid">productPriceInvalid.</param>
        /// <param name="linkFormatInvalid">linkFormatInvalid.</param>
        /// <param name="parseLineError">parseLineError.</param>
        /// <param name="adwordsFormatInvalid">adwordsFormatInvalid.</param>
        /// <param name="productCategoryMissing">productCategoryMissing.</param>
        /// <param name="internalServiceError">internalServiceError.</param>
        /// <param name="noVerifiedDomain">noVerifiedDomain.</param>
        /// <param name="adultInvalid">adultInvalid.</param>
        /// <param name="invalidDomain">invalidDomain.</param>
        /// <param name="feedLengthTooLong">feedLengthTooLong.</param>
        /// <param name="linkLengthTooLong">linkLengthTooLong.</param>
        /// <param name="malformedXml">malformedXml.</param>
        /// <param name="redirectInvalid">redirectInvalid.</param>
        /// <param name="priceMissing">priceMissing.</param>
        /// <param name="feedTooSmall">feedTooSmall.</param>
        /// <param name="conditionInvalid">conditionInvalid.</param>
        /// <param name="shopifyNoProducts">shopifyNoProducts.</param>
        /// <param name="maxItemsPerItemGroupExceeded">maxItemsPerItemGroupExceeded.</param>
        /// <param name="itemMainImageDownloadFailure">itemMainImageDownloadFailure.</param>
        /// <param name="pinjoinContentUnsafe">pinjoinContentUnsafe.</param>
        /// <param name="blocklistedImageSignature">blocklistedImageSignature.</param>
        public CatalogsFeedValidationErrors(int fetchError = default(int), int fetchInactiveFeedError = default(int), int encodingError = default(int), int delimiterError = default(int), int requiredColumnsMissing = default(int), int imageLinkInvalid = default(int), int itemidMissing = default(int), int titleMissing = default(int), int descriptionMissing = default(int), int productCategoryInvalid = default(int), int productLinkMissing = default(int), int imageLinkMissing = default(int), int availabilityInvalid = default(int), int productPriceInvalid = default(int), int linkFormatInvalid = default(int), int parseLineError = default(int), int adwordsFormatInvalid = default(int), int productCategoryMissing = default(int), int internalServiceError = default(int), int noVerifiedDomain = default(int), int adultInvalid = default(int), int invalidDomain = default(int), int feedLengthTooLong = default(int), int linkLengthTooLong = default(int), int malformedXml = default(int), int redirectInvalid = default(int), int priceMissing = default(int), int feedTooSmall = default(int), int conditionInvalid = default(int), int shopifyNoProducts = default(int), int maxItemsPerItemGroupExceeded = default(int), int itemMainImageDownloadFailure = default(int), int pinjoinContentUnsafe = default(int), int blocklistedImageSignature = default(int))
        {
            this.FetchError = fetchError;
            this.FetchInactiveFeedError = fetchInactiveFeedError;
            this.EncodingError = encodingError;
            this.DelimiterError = delimiterError;
            this.RequiredColumnsMissing = requiredColumnsMissing;
            this.ImageLinkInvalid = imageLinkInvalid;
            this.ItemidMissing = itemidMissing;
            this.TitleMissing = titleMissing;
            this.DescriptionMissing = descriptionMissing;
            this.ProductCategoryInvalid = productCategoryInvalid;
            this.ProductLinkMissing = productLinkMissing;
            this.ImageLinkMissing = imageLinkMissing;
            this.AvailabilityInvalid = availabilityInvalid;
            this.ProductPriceInvalid = productPriceInvalid;
            this.LinkFormatInvalid = linkFormatInvalid;
            this.ParseLineError = parseLineError;
            this.AdwordsFormatInvalid = adwordsFormatInvalid;
            this.ProductCategoryMissing = productCategoryMissing;
            this.InternalServiceError = internalServiceError;
            this.NoVerifiedDomain = noVerifiedDomain;
            this.AdultInvalid = adultInvalid;
            this.InvalidDomain = invalidDomain;
            this.FeedLengthTooLong = feedLengthTooLong;
            this.LinkLengthTooLong = linkLengthTooLong;
            this.MalformedXml = malformedXml;
            this.RedirectInvalid = redirectInvalid;
            this.PriceMissing = priceMissing;
            this.FeedTooSmall = feedTooSmall;
            this.ConditionInvalid = conditionInvalid;
            this.ShopifyNoProducts = shopifyNoProducts;
            this.MaxItemsPerItemGroupExceeded = maxItemsPerItemGroupExceeded;
            this.ItemMainImageDownloadFailure = itemMainImageDownloadFailure;
            this.PinjoinContentUnsafe = pinjoinContentUnsafe;
            this.BlocklistedImageSignature = blocklistedImageSignature;
        }

        /// <summary>
        /// Gets or Sets FetchError
        /// </summary>
        [DataMember(Name="fetch_error", EmitDefaultValue=false)]
        public int FetchError { get; set; }

        /// <summary>
        /// Gets or Sets FetchInactiveFeedError
        /// </summary>
        [DataMember(Name="fetch_inactive_feed_error", EmitDefaultValue=false)]
        public int FetchInactiveFeedError { get; set; }

        /// <summary>
        /// Gets or Sets EncodingError
        /// </summary>
        [DataMember(Name="encoding_error", EmitDefaultValue=false)]
        public int EncodingError { get; set; }

        /// <summary>
        /// Gets or Sets DelimiterError
        /// </summary>
        [DataMember(Name="delimiter_error", EmitDefaultValue=false)]
        public int DelimiterError { get; set; }

        /// <summary>
        /// Gets or Sets RequiredColumnsMissing
        /// </summary>
        [DataMember(Name="required_columns_missing", EmitDefaultValue=false)]
        public int RequiredColumnsMissing { get; set; }

        /// <summary>
        /// Gets or Sets ImageLinkInvalid
        /// </summary>
        [DataMember(Name="image_link_invalid", EmitDefaultValue=false)]
        public int ImageLinkInvalid { get; set; }

        /// <summary>
        /// Gets or Sets ItemidMissing
        /// </summary>
        [DataMember(Name="itemid_missing", EmitDefaultValue=false)]
        public int ItemidMissing { get; set; }

        /// <summary>
        /// Gets or Sets TitleMissing
        /// </summary>
        [DataMember(Name="title_missing", EmitDefaultValue=false)]
        public int TitleMissing { get; set; }

        /// <summary>
        /// Gets or Sets DescriptionMissing
        /// </summary>
        [DataMember(Name="description_missing", EmitDefaultValue=false)]
        public int DescriptionMissing { get; set; }

        /// <summary>
        /// Gets or Sets ProductCategoryInvalid
        /// </summary>
        [DataMember(Name="product_category_invalid", EmitDefaultValue=false)]
        public int ProductCategoryInvalid { get; set; }

        /// <summary>
        /// Gets or Sets ProductLinkMissing
        /// </summary>
        [DataMember(Name="product_link_missing", EmitDefaultValue=false)]
        public int ProductLinkMissing { get; set; }

        /// <summary>
        /// Gets or Sets ImageLinkMissing
        /// </summary>
        [DataMember(Name="image_link_missing", EmitDefaultValue=false)]
        public int ImageLinkMissing { get; set; }

        /// <summary>
        /// Gets or Sets AvailabilityInvalid
        /// </summary>
        [DataMember(Name="availability_invalid", EmitDefaultValue=false)]
        public int AvailabilityInvalid { get; set; }

        /// <summary>
        /// Gets or Sets ProductPriceInvalid
        /// </summary>
        [DataMember(Name="product_price_invalid", EmitDefaultValue=false)]
        public int ProductPriceInvalid { get; set; }

        /// <summary>
        /// Gets or Sets LinkFormatInvalid
        /// </summary>
        [DataMember(Name="link_format_invalid", EmitDefaultValue=false)]
        public int LinkFormatInvalid { get; set; }

        /// <summary>
        /// Gets or Sets ParseLineError
        /// </summary>
        [DataMember(Name="parse_line_error", EmitDefaultValue=false)]
        public int ParseLineError { get; set; }

        /// <summary>
        /// Gets or Sets AdwordsFormatInvalid
        /// </summary>
        [DataMember(Name="adwords_format_invalid", EmitDefaultValue=false)]
        public int AdwordsFormatInvalid { get; set; }

        /// <summary>
        /// Gets or Sets ProductCategoryMissing
        /// </summary>
        [DataMember(Name="product_category_missing", EmitDefaultValue=false)]
        public int ProductCategoryMissing { get; set; }

        /// <summary>
        /// Gets or Sets InternalServiceError
        /// </summary>
        [DataMember(Name="internal_service_error", EmitDefaultValue=false)]
        public int InternalServiceError { get; set; }

        /// <summary>
        /// Gets or Sets NoVerifiedDomain
        /// </summary>
        [DataMember(Name="no_verified_domain", EmitDefaultValue=false)]
        public int NoVerifiedDomain { get; set; }

        /// <summary>
        /// Gets or Sets AdultInvalid
        /// </summary>
        [DataMember(Name="adult_invalid", EmitDefaultValue=false)]
        public int AdultInvalid { get; set; }

        /// <summary>
        /// Gets or Sets InvalidDomain
        /// </summary>
        [DataMember(Name="invalid_domain", EmitDefaultValue=false)]
        public int InvalidDomain { get; set; }

        /// <summary>
        /// Gets or Sets FeedLengthTooLong
        /// </summary>
        [DataMember(Name="feed_length_too_long", EmitDefaultValue=false)]
        public int FeedLengthTooLong { get; set; }

        /// <summary>
        /// Gets or Sets LinkLengthTooLong
        /// </summary>
        [DataMember(Name="link_length_too_long", EmitDefaultValue=false)]
        public int LinkLengthTooLong { get; set; }

        /// <summary>
        /// Gets or Sets MalformedXml
        /// </summary>
        [DataMember(Name="malformed_xml", EmitDefaultValue=false)]
        public int MalformedXml { get; set; }

        /// <summary>
        /// Gets or Sets RedirectInvalid
        /// </summary>
        [DataMember(Name="redirect_invalid", EmitDefaultValue=false)]
        public int RedirectInvalid { get; set; }

        /// <summary>
        /// Gets or Sets PriceMissing
        /// </summary>
        [DataMember(Name="price_missing", EmitDefaultValue=false)]
        public int PriceMissing { get; set; }

        /// <summary>
        /// Gets or Sets FeedTooSmall
        /// </summary>
        [DataMember(Name="feed_too_small", EmitDefaultValue=false)]
        public int FeedTooSmall { get; set; }

        /// <summary>
        /// Gets or Sets ConditionInvalid
        /// </summary>
        [DataMember(Name="condition_invalid", EmitDefaultValue=false)]
        public int ConditionInvalid { get; set; }

        /// <summary>
        /// Gets or Sets ShopifyNoProducts
        /// </summary>
        [DataMember(Name="shopify_no_products", EmitDefaultValue=false)]
        public int ShopifyNoProducts { get; set; }

        /// <summary>
        /// Gets or Sets MaxItemsPerItemGroupExceeded
        /// </summary>
        [DataMember(Name="max_items_per_item_group_exceeded", EmitDefaultValue=false)]
        public int MaxItemsPerItemGroupExceeded { get; set; }

        /// <summary>
        /// Gets or Sets ItemMainImageDownloadFailure
        /// </summary>
        [DataMember(Name="item_main_image_download_failure", EmitDefaultValue=false)]
        public int ItemMainImageDownloadFailure { get; set; }

        /// <summary>
        /// Gets or Sets PinjoinContentUnsafe
        /// </summary>
        [DataMember(Name="pinjoin_content_unsafe", EmitDefaultValue=false)]
        public int PinjoinContentUnsafe { get; set; }

        /// <summary>
        /// Gets or Sets BlocklistedImageSignature
        /// </summary>
        [DataMember(Name="blocklisted_image_signature", EmitDefaultValue=false)]
        public int BlocklistedImageSignature { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CatalogsFeedValidationErrors {\n");
            sb.Append("  FetchError: ").Append(FetchError).Append("\n");
            sb.Append("  FetchInactiveFeedError: ").Append(FetchInactiveFeedError).Append("\n");
            sb.Append("  EncodingError: ").Append(EncodingError).Append("\n");
            sb.Append("  DelimiterError: ").Append(DelimiterError).Append("\n");
            sb.Append("  RequiredColumnsMissing: ").Append(RequiredColumnsMissing).Append("\n");
            sb.Append("  ImageLinkInvalid: ").Append(ImageLinkInvalid).Append("\n");
            sb.Append("  ItemidMissing: ").Append(ItemidMissing).Append("\n");
            sb.Append("  TitleMissing: ").Append(TitleMissing).Append("\n");
            sb.Append("  DescriptionMissing: ").Append(DescriptionMissing).Append("\n");
            sb.Append("  ProductCategoryInvalid: ").Append(ProductCategoryInvalid).Append("\n");
            sb.Append("  ProductLinkMissing: ").Append(ProductLinkMissing).Append("\n");
            sb.Append("  ImageLinkMissing: ").Append(ImageLinkMissing).Append("\n");
            sb.Append("  AvailabilityInvalid: ").Append(AvailabilityInvalid).Append("\n");
            sb.Append("  ProductPriceInvalid: ").Append(ProductPriceInvalid).Append("\n");
            sb.Append("  LinkFormatInvalid: ").Append(LinkFormatInvalid).Append("\n");
            sb.Append("  ParseLineError: ").Append(ParseLineError).Append("\n");
            sb.Append("  AdwordsFormatInvalid: ").Append(AdwordsFormatInvalid).Append("\n");
            sb.Append("  ProductCategoryMissing: ").Append(ProductCategoryMissing).Append("\n");
            sb.Append("  InternalServiceError: ").Append(InternalServiceError).Append("\n");
            sb.Append("  NoVerifiedDomain: ").Append(NoVerifiedDomain).Append("\n");
            sb.Append("  AdultInvalid: ").Append(AdultInvalid).Append("\n");
            sb.Append("  InvalidDomain: ").Append(InvalidDomain).Append("\n");
            sb.Append("  FeedLengthTooLong: ").Append(FeedLengthTooLong).Append("\n");
            sb.Append("  LinkLengthTooLong: ").Append(LinkLengthTooLong).Append("\n");
            sb.Append("  MalformedXml: ").Append(MalformedXml).Append("\n");
            sb.Append("  RedirectInvalid: ").Append(RedirectInvalid).Append("\n");
            sb.Append("  PriceMissing: ").Append(PriceMissing).Append("\n");
            sb.Append("  FeedTooSmall: ").Append(FeedTooSmall).Append("\n");
            sb.Append("  ConditionInvalid: ").Append(ConditionInvalid).Append("\n");
            sb.Append("  ShopifyNoProducts: ").Append(ShopifyNoProducts).Append("\n");
            sb.Append("  MaxItemsPerItemGroupExceeded: ").Append(MaxItemsPerItemGroupExceeded).Append("\n");
            sb.Append("  ItemMainImageDownloadFailure: ").Append(ItemMainImageDownloadFailure).Append("\n");
            sb.Append("  PinjoinContentUnsafe: ").Append(PinjoinContentUnsafe).Append("\n");
            sb.Append("  BlocklistedImageSignature: ").Append(BlocklistedImageSignature).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CatalogsFeedValidationErrors);
        }

        /// <summary>
        /// Returns true if CatalogsFeedValidationErrors instances are equal
        /// </summary>
        /// <param name="input">Instance of CatalogsFeedValidationErrors to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CatalogsFeedValidationErrors input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.FetchError == input.FetchError ||
                    (this.FetchError != null &&
                    this.FetchError.Equals(input.FetchError))
                ) && 
                (
                    this.FetchInactiveFeedError == input.FetchInactiveFeedError ||
                    (this.FetchInactiveFeedError != null &&
                    this.FetchInactiveFeedError.Equals(input.FetchInactiveFeedError))
                ) && 
                (
                    this.EncodingError == input.EncodingError ||
                    (this.EncodingError != null &&
                    this.EncodingError.Equals(input.EncodingError))
                ) && 
                (
                    this.DelimiterError == input.DelimiterError ||
                    (this.DelimiterError != null &&
                    this.DelimiterError.Equals(input.DelimiterError))
                ) && 
                (
                    this.RequiredColumnsMissing == input.RequiredColumnsMissing ||
                    (this.RequiredColumnsMissing != null &&
                    this.RequiredColumnsMissing.Equals(input.RequiredColumnsMissing))
                ) && 
                (
                    this.ImageLinkInvalid == input.ImageLinkInvalid ||
                    (this.ImageLinkInvalid != null &&
                    this.ImageLinkInvalid.Equals(input.ImageLinkInvalid))
                ) && 
                (
                    this.ItemidMissing == input.ItemidMissing ||
                    (this.ItemidMissing != null &&
                    this.ItemidMissing.Equals(input.ItemidMissing))
                ) && 
                (
                    this.TitleMissing == input.TitleMissing ||
                    (this.TitleMissing != null &&
                    this.TitleMissing.Equals(input.TitleMissing))
                ) && 
                (
                    this.DescriptionMissing == input.DescriptionMissing ||
                    (this.DescriptionMissing != null &&
                    this.DescriptionMissing.Equals(input.DescriptionMissing))
                ) && 
                (
                    this.ProductCategoryInvalid == input.ProductCategoryInvalid ||
                    (this.ProductCategoryInvalid != null &&
                    this.ProductCategoryInvalid.Equals(input.ProductCategoryInvalid))
                ) && 
                (
                    this.ProductLinkMissing == input.ProductLinkMissing ||
                    (this.ProductLinkMissing != null &&
                    this.ProductLinkMissing.Equals(input.ProductLinkMissing))
                ) && 
                (
                    this.ImageLinkMissing == input.ImageLinkMissing ||
                    (this.ImageLinkMissing != null &&
                    this.ImageLinkMissing.Equals(input.ImageLinkMissing))
                ) && 
                (
                    this.AvailabilityInvalid == input.AvailabilityInvalid ||
                    (this.AvailabilityInvalid != null &&
                    this.AvailabilityInvalid.Equals(input.AvailabilityInvalid))
                ) && 
                (
                    this.ProductPriceInvalid == input.ProductPriceInvalid ||
                    (this.ProductPriceInvalid != null &&
                    this.ProductPriceInvalid.Equals(input.ProductPriceInvalid))
                ) && 
                (
                    this.LinkFormatInvalid == input.LinkFormatInvalid ||
                    (this.LinkFormatInvalid != null &&
                    this.LinkFormatInvalid.Equals(input.LinkFormatInvalid))
                ) && 
                (
                    this.ParseLineError == input.ParseLineError ||
                    (this.ParseLineError != null &&
                    this.ParseLineError.Equals(input.ParseLineError))
                ) && 
                (
                    this.AdwordsFormatInvalid == input.AdwordsFormatInvalid ||
                    (this.AdwordsFormatInvalid != null &&
                    this.AdwordsFormatInvalid.Equals(input.AdwordsFormatInvalid))
                ) && 
                (
                    this.ProductCategoryMissing == input.ProductCategoryMissing ||
                    (this.ProductCategoryMissing != null &&
                    this.ProductCategoryMissing.Equals(input.ProductCategoryMissing))
                ) && 
                (
                    this.InternalServiceError == input.InternalServiceError ||
                    (this.InternalServiceError != null &&
                    this.InternalServiceError.Equals(input.InternalServiceError))
                ) && 
                (
                    this.NoVerifiedDomain == input.NoVerifiedDomain ||
                    (this.NoVerifiedDomain != null &&
                    this.NoVerifiedDomain.Equals(input.NoVerifiedDomain))
                ) && 
                (
                    this.AdultInvalid == input.AdultInvalid ||
                    (this.AdultInvalid != null &&
                    this.AdultInvalid.Equals(input.AdultInvalid))
                ) && 
                (
                    this.InvalidDomain == input.InvalidDomain ||
                    (this.InvalidDomain != null &&
                    this.InvalidDomain.Equals(input.InvalidDomain))
                ) && 
                (
                    this.FeedLengthTooLong == input.FeedLengthTooLong ||
                    (this.FeedLengthTooLong != null &&
                    this.FeedLengthTooLong.Equals(input.FeedLengthTooLong))
                ) && 
                (
                    this.LinkLengthTooLong == input.LinkLengthTooLong ||
                    (this.LinkLengthTooLong != null &&
                    this.LinkLengthTooLong.Equals(input.LinkLengthTooLong))
                ) && 
                (
                    this.MalformedXml == input.MalformedXml ||
                    (this.MalformedXml != null &&
                    this.MalformedXml.Equals(input.MalformedXml))
                ) && 
                (
                    this.RedirectInvalid == input.RedirectInvalid ||
                    (this.RedirectInvalid != null &&
                    this.RedirectInvalid.Equals(input.RedirectInvalid))
                ) && 
                (
                    this.PriceMissing == input.PriceMissing ||
                    (this.PriceMissing != null &&
                    this.PriceMissing.Equals(input.PriceMissing))
                ) && 
                (
                    this.FeedTooSmall == input.FeedTooSmall ||
                    (this.FeedTooSmall != null &&
                    this.FeedTooSmall.Equals(input.FeedTooSmall))
                ) && 
                (
                    this.ConditionInvalid == input.ConditionInvalid ||
                    (this.ConditionInvalid != null &&
                    this.ConditionInvalid.Equals(input.ConditionInvalid))
                ) && 
                (
                    this.ShopifyNoProducts == input.ShopifyNoProducts ||
                    (this.ShopifyNoProducts != null &&
                    this.ShopifyNoProducts.Equals(input.ShopifyNoProducts))
                ) && 
                (
                    this.MaxItemsPerItemGroupExceeded == input.MaxItemsPerItemGroupExceeded ||
                    (this.MaxItemsPerItemGroupExceeded != null &&
                    this.MaxItemsPerItemGroupExceeded.Equals(input.MaxItemsPerItemGroupExceeded))
                ) && 
                (
                    this.ItemMainImageDownloadFailure == input.ItemMainImageDownloadFailure ||
                    (this.ItemMainImageDownloadFailure != null &&
                    this.ItemMainImageDownloadFailure.Equals(input.ItemMainImageDownloadFailure))
                ) && 
                (
                    this.PinjoinContentUnsafe == input.PinjoinContentUnsafe ||
                    (this.PinjoinContentUnsafe != null &&
                    this.PinjoinContentUnsafe.Equals(input.PinjoinContentUnsafe))
                ) && 
                (
                    this.BlocklistedImageSignature == input.BlocklistedImageSignature ||
                    (this.BlocklistedImageSignature != null &&
                    this.BlocklistedImageSignature.Equals(input.BlocklistedImageSignature))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.FetchError != null)
                    hashCode = hashCode * 59 + this.FetchError.GetHashCode();
                if (this.FetchInactiveFeedError != null)
                    hashCode = hashCode * 59 + this.FetchInactiveFeedError.GetHashCode();
                if (this.EncodingError != null)
                    hashCode = hashCode * 59 + this.EncodingError.GetHashCode();
                if (this.DelimiterError != null)
                    hashCode = hashCode * 59 + this.DelimiterError.GetHashCode();
                if (this.RequiredColumnsMissing != null)
                    hashCode = hashCode * 59 + this.RequiredColumnsMissing.GetHashCode();
                if (this.ImageLinkInvalid != null)
                    hashCode = hashCode * 59 + this.ImageLinkInvalid.GetHashCode();
                if (this.ItemidMissing != null)
                    hashCode = hashCode * 59 + this.ItemidMissing.GetHashCode();
                if (this.TitleMissing != null)
                    hashCode = hashCode * 59 + this.TitleMissing.GetHashCode();
                if (this.DescriptionMissing != null)
                    hashCode = hashCode * 59 + this.DescriptionMissing.GetHashCode();
                if (this.ProductCategoryInvalid != null)
                    hashCode = hashCode * 59 + this.ProductCategoryInvalid.GetHashCode();
                if (this.ProductLinkMissing != null)
                    hashCode = hashCode * 59 + this.ProductLinkMissing.GetHashCode();
                if (this.ImageLinkMissing != null)
                    hashCode = hashCode * 59 + this.ImageLinkMissing.GetHashCode();
                if (this.AvailabilityInvalid != null)
                    hashCode = hashCode * 59 + this.AvailabilityInvalid.GetHashCode();
                if (this.ProductPriceInvalid != null)
                    hashCode = hashCode * 59 + this.ProductPriceInvalid.GetHashCode();
                if (this.LinkFormatInvalid != null)
                    hashCode = hashCode * 59 + this.LinkFormatInvalid.GetHashCode();
                if (this.ParseLineError != null)
                    hashCode = hashCode * 59 + this.ParseLineError.GetHashCode();
                if (this.AdwordsFormatInvalid != null)
                    hashCode = hashCode * 59 + this.AdwordsFormatInvalid.GetHashCode();
                if (this.ProductCategoryMissing != null)
                    hashCode = hashCode * 59 + this.ProductCategoryMissing.GetHashCode();
                if (this.InternalServiceError != null)
                    hashCode = hashCode * 59 + this.InternalServiceError.GetHashCode();
                if (this.NoVerifiedDomain != null)
                    hashCode = hashCode * 59 + this.NoVerifiedDomain.GetHashCode();
                if (this.AdultInvalid != null)
                    hashCode = hashCode * 59 + this.AdultInvalid.GetHashCode();
                if (this.InvalidDomain != null)
                    hashCode = hashCode * 59 + this.InvalidDomain.GetHashCode();
                if (this.FeedLengthTooLong != null)
                    hashCode = hashCode * 59 + this.FeedLengthTooLong.GetHashCode();
                if (this.LinkLengthTooLong != null)
                    hashCode = hashCode * 59 + this.LinkLengthTooLong.GetHashCode();
                if (this.MalformedXml != null)
                    hashCode = hashCode * 59 + this.MalformedXml.GetHashCode();
                if (this.RedirectInvalid != null)
                    hashCode = hashCode * 59 + this.RedirectInvalid.GetHashCode();
                if (this.PriceMissing != null)
                    hashCode = hashCode * 59 + this.PriceMissing.GetHashCode();
                if (this.FeedTooSmall != null)
                    hashCode = hashCode * 59 + this.FeedTooSmall.GetHashCode();
                if (this.ConditionInvalid != null)
                    hashCode = hashCode * 59 + this.ConditionInvalid.GetHashCode();
                if (this.ShopifyNoProducts != null)
                    hashCode = hashCode * 59 + this.ShopifyNoProducts.GetHashCode();
                if (this.MaxItemsPerItemGroupExceeded != null)
                    hashCode = hashCode * 59 + this.MaxItemsPerItemGroupExceeded.GetHashCode();
                if (this.ItemMainImageDownloadFailure != null)
                    hashCode = hashCode * 59 + this.ItemMainImageDownloadFailure.GetHashCode();
                if (this.PinjoinContentUnsafe != null)
                    hashCode = hashCode * 59 + this.PinjoinContentUnsafe.GetHashCode();
                if (this.BlocklistedImageSignature != null)
                    hashCode = hashCode * 59 + this.BlocklistedImageSignature.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
