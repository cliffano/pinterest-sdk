/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.12.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// non-promoted catalog product group entity
    /// </summary>
    [DataContract(Name = "CatalogProductGroup")]
    public partial class CatalogProductGroup : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public EntityStatus? Status { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogProductGroup" /> class.
        /// </summary>
        /// <param name="id">ID of the catalog product group..</param>
        /// <param name="merchantId">Merchant ID pertaining to the owner of the catalog product group..</param>
        /// <param name="name">Name of catalog product group.</param>
        /// <param name="filters">Object holding a list of filters.</param>
        /// <param name="filterV2">Object holding a list of filters.</param>
        /// <param name="type">type.</param>
        /// <param name="status">status.</param>
        /// <param name="feedProfileId">id of the feed profile belonging to this catalog product group.</param>
        /// <param name="createdAt">Unix timestamp in seconds of when catalog product group was created..</param>
        /// <param name="lastUpdate">Unix timestamp in seconds of last time catalog product group was updated..</param>
        /// <param name="productCount">Amount of products in the catalog product group.</param>
        /// <param name="featuredPosition">index of the featured position of the catalog product group.</param>
        public CatalogProductGroup(string id = default(string), string merchantId = default(string), string name = default(string), Object filters = default(Object), Object filterV2 = default(Object), Board type = default(Board), EntityStatus? status = default(EntityStatus?), string feedProfileId = default(string), int createdAt = default(int), int lastUpdate = default(int), int productCount = default(int), int featuredPosition = default(int))
        {
            this.Id = id;
            this.MerchantId = merchantId;
            this.Name = name;
            this.Filters = filters;
            this.FilterV2 = filterV2;
            this.Type = type;
            this.Status = status;
            this.FeedProfileId = feedProfileId;
            this.CreatedAt = createdAt;
            this.LastUpdate = lastUpdate;
            this.ProductCount = productCount;
            this.FeaturedPosition = featuredPosition;
        }

        /// <summary>
        /// ID of the catalog product group.
        /// </summary>
        /// <value>ID of the catalog product group.</value>
        /// <example>2680059592705</example>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Merchant ID pertaining to the owner of the catalog product group.
        /// </summary>
        /// <value>Merchant ID pertaining to the owner of the catalog product group.</value>
        /// <example>2680059592705</example>
        [DataMember(Name = "merchant_id", EmitDefaultValue = false)]
        public string MerchantId { get; set; }

        /// <summary>
        /// Name of catalog product group
        /// </summary>
        /// <value>Name of catalog product group</value>
        /// <example>Most Popular</example>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Object holding a list of filters
        /// </summary>
        /// <value>Object holding a list of filters</value>
        /// <example>{&quot;1&quot;:[&quot;123chars_title&quot;]}</example>
        [DataMember(Name = "filters", EmitDefaultValue = false)]
        public Object Filters { get; set; }

        /// <summary>
        /// Object holding a list of filters
        /// </summary>
        /// <value>Object holding a list of filters</value>
        /// <example>{&quot;1&quot;:[&quot;123chars_title&quot;]}</example>
        [DataMember(Name = "filter_v2", EmitDefaultValue = false)]
        public Object FilterV2 { get; set; }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name = "type", EmitDefaultValue = false)]
        public Board Type { get; set; }

        /// <summary>
        /// id of the feed profile belonging to this catalog product group
        /// </summary>
        /// <value>id of the feed profile belonging to this catalog product group</value>
        [DataMember(Name = "feed_profile_id", EmitDefaultValue = false)]
        public string FeedProfileId { get; set; }

        /// <summary>
        /// Unix timestamp in seconds of when catalog product group was created.
        /// </summary>
        /// <value>Unix timestamp in seconds of when catalog product group was created.</value>
        /// <example>1621350033000</example>
        [DataMember(Name = "created_at", EmitDefaultValue = false)]
        public int CreatedAt { get; set; }

        /// <summary>
        /// Unix timestamp in seconds of last time catalog product group was updated.
        /// </summary>
        /// <value>Unix timestamp in seconds of last time catalog product group was updated.</value>
        /// <example>1622742155000</example>
        [DataMember(Name = "last_update", EmitDefaultValue = false)]
        public int LastUpdate { get; set; }

        /// <summary>
        /// Amount of products in the catalog product group
        /// </summary>
        /// <value>Amount of products in the catalog product group</value>
        /// <example>6</example>
        [DataMember(Name = "product_count", EmitDefaultValue = false)]
        public int ProductCount { get; set; }

        /// <summary>
        /// index of the featured position of the catalog product group
        /// </summary>
        /// <value>index of the featured position of the catalog product group</value>
        /// <example>2</example>
        [DataMember(Name = "featured_position", EmitDefaultValue = false)]
        public int FeaturedPosition { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CatalogProductGroup {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  MerchantId: ").Append(MerchantId).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Filters: ").Append(Filters).Append("\n");
            sb.Append("  FilterV2: ").Append(FilterV2).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  FeedProfileId: ").Append(FeedProfileId).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  LastUpdate: ").Append(LastUpdate).Append("\n");
            sb.Append("  ProductCount: ").Append(ProductCount).Append("\n");
            sb.Append("  FeaturedPosition: ").Append(FeaturedPosition).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            if (this.MerchantId != null) {
                // MerchantId (string) pattern
                Regex regexMerchantId = new Regex(@"^\d+$", RegexOptions.CultureInvariant);
                if (!regexMerchantId.Match(this.MerchantId).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for MerchantId, must match a pattern of " + regexMerchantId, new [] { "MerchantId" });
                }
            }

            if (this.FeedProfileId != null) {
                // FeedProfileId (string) pattern
                Regex regexFeedProfileId = new Regex(@"^\d+$", RegexOptions.CultureInvariant);
                if (!regexFeedProfileId.Match(this.FeedProfileId).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FeedProfileId, must match a pattern of " + regexFeedProfileId, new [] { "FeedProfileId" });
                }
            }

            yield break;
        }
    }

}
