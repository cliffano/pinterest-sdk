/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: pinterest-api@pinterest.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// CatalogsProductGroupFilterKeys
    /// </summary>
    [DataContract]
    public partial class CatalogsProductGroupFilterKeys :  IEquatable<CatalogsProductGroupFilterKeys>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupFilterKeys" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CatalogsProductGroupFilterKeys() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupFilterKeys" /> class.
        /// </summary>
        /// <param name="mINPRICE">mINPRICE (required).</param>
        /// <param name="mAXPRICE">mAXPRICE (required).</param>
        /// <param name="cURRENCY">cURRENCY (required).</param>
        /// <param name="iTEMID">iTEMID (required).</param>
        /// <param name="aVAILABILITY">aVAILABILITY (required).</param>
        /// <param name="bRAND">bRAND (required).</param>
        /// <param name="cONDITION">cONDITION (required).</param>
        /// <param name="cUSTOMLABEL0">cUSTOMLABEL0 (required).</param>
        /// <param name="cUSTOMLABEL1">cUSTOMLABEL1 (required).</param>
        /// <param name="cUSTOMLABEL2">cUSTOMLABEL2 (required).</param>
        /// <param name="cUSTOMLABEL3">cUSTOMLABEL3 (required).</param>
        /// <param name="cUSTOMLABEL4">cUSTOMLABEL4 (required).</param>
        /// <param name="iTEMGROUPID">iTEMGROUPID (required).</param>
        /// <param name="gENDER">gENDER (required).</param>
        /// <param name="pRODUCTTYPE4">pRODUCTTYPE4 (required).</param>
        /// <param name="pRODUCTTYPE3">pRODUCTTYPE3 (required).</param>
        /// <param name="pRODUCTTYPE2">pRODUCTTYPE2 (required).</param>
        /// <param name="pRODUCTTYPE1">pRODUCTTYPE1 (required).</param>
        /// <param name="pRODUCTTYPE0">pRODUCTTYPE0 (required).</param>
        /// <param name="gOOGLEPRODUCTCATEGORY6">gOOGLEPRODUCTCATEGORY6 (required).</param>
        /// <param name="gOOGLEPRODUCTCATEGORY5">gOOGLEPRODUCTCATEGORY5 (required).</param>
        /// <param name="gOOGLEPRODUCTCATEGORY4">gOOGLEPRODUCTCATEGORY4 (required).</param>
        /// <param name="gOOGLEPRODUCTCATEGORY3">gOOGLEPRODUCTCATEGORY3 (required).</param>
        /// <param name="gOOGLEPRODUCTCATEGORY2">gOOGLEPRODUCTCATEGORY2 (required).</param>
        /// <param name="gOOGLEPRODUCTCATEGORY1">gOOGLEPRODUCTCATEGORY1 (required).</param>
        /// <param name="gOOGLEPRODUCTCATEGORY0">gOOGLEPRODUCTCATEGORY0 (required).</param>
        public CatalogsProductGroupFilterKeys(CatalogsProductGroupPricingCriteria mINPRICE = default(CatalogsProductGroupPricingCriteria), CatalogsProductGroupPricingCriteria mAXPRICE = default(CatalogsProductGroupPricingCriteria), CatalogsProductGroupCurrencyCriteria cURRENCY = default(CatalogsProductGroupCurrencyCriteria), CatalogsProductGroupCurrencyCriteria iTEMID = default(CatalogsProductGroupCurrencyCriteria), CatalogsProductGroupMultipleStringCriteria aVAILABILITY = default(CatalogsProductGroupMultipleStringCriteria), CatalogsProductGroupMultipleStringCriteria bRAND = default(CatalogsProductGroupMultipleStringCriteria), CatalogsProductGroupMultipleStringCriteria cONDITION = default(CatalogsProductGroupMultipleStringCriteria), CatalogsProductGroupMultipleStringCriteria cUSTOMLABEL0 = default(CatalogsProductGroupMultipleStringCriteria), CatalogsProductGroupMultipleStringCriteria cUSTOMLABEL1 = default(CatalogsProductGroupMultipleStringCriteria), CatalogsProductGroupMultipleStringCriteria cUSTOMLABEL2 = default(CatalogsProductGroupMultipleStringCriteria), CatalogsProductGroupMultipleStringCriteria cUSTOMLABEL3 = default(CatalogsProductGroupMultipleStringCriteria), CatalogsProductGroupMultipleStringCriteria cUSTOMLABEL4 = default(CatalogsProductGroupMultipleStringCriteria), CatalogsProductGroupMultipleStringCriteria iTEMGROUPID = default(CatalogsProductGroupMultipleStringCriteria), CatalogsProductGroupMultipleStringCriteria gENDER = default(CatalogsProductGroupMultipleStringCriteria), CatalogsProductGroupMultipleStringListCriteria pRODUCTTYPE4 = default(CatalogsProductGroupMultipleStringListCriteria), CatalogsProductGroupMultipleStringListCriteria pRODUCTTYPE3 = default(CatalogsProductGroupMultipleStringListCriteria), CatalogsProductGroupMultipleStringListCriteria pRODUCTTYPE2 = default(CatalogsProductGroupMultipleStringListCriteria), CatalogsProductGroupMultipleStringListCriteria pRODUCTTYPE1 = default(CatalogsProductGroupMultipleStringListCriteria), CatalogsProductGroupMultipleStringListCriteria pRODUCTTYPE0 = default(CatalogsProductGroupMultipleStringListCriteria), CatalogsProductGroupMultipleStringListCriteria gOOGLEPRODUCTCATEGORY6 = default(CatalogsProductGroupMultipleStringListCriteria), CatalogsProductGroupMultipleStringListCriteria gOOGLEPRODUCTCATEGORY5 = default(CatalogsProductGroupMultipleStringListCriteria), CatalogsProductGroupMultipleStringListCriteria gOOGLEPRODUCTCATEGORY4 = default(CatalogsProductGroupMultipleStringListCriteria), CatalogsProductGroupMultipleStringListCriteria gOOGLEPRODUCTCATEGORY3 = default(CatalogsProductGroupMultipleStringListCriteria), CatalogsProductGroupMultipleStringListCriteria gOOGLEPRODUCTCATEGORY2 = default(CatalogsProductGroupMultipleStringListCriteria), CatalogsProductGroupMultipleStringListCriteria gOOGLEPRODUCTCATEGORY1 = default(CatalogsProductGroupMultipleStringListCriteria), CatalogsProductGroupMultipleStringListCriteria gOOGLEPRODUCTCATEGORY0 = default(CatalogsProductGroupMultipleStringListCriteria))
        {
            // to ensure "mINPRICE" is required (not null)
            if (mINPRICE == null)
            {
                throw new InvalidDataException("mINPRICE is a required property for CatalogsProductGroupFilterKeys and cannot be null");
            }
            else
            {
                this.MIN_PRICE = mINPRICE;
            }

            // to ensure "mAXPRICE" is required (not null)
            if (mAXPRICE == null)
            {
                throw new InvalidDataException("mAXPRICE is a required property for CatalogsProductGroupFilterKeys and cannot be null");
            }
            else
            {
                this.MAX_PRICE = mAXPRICE;
            }

            // to ensure "cURRENCY" is required (not null)
            if (cURRENCY == null)
            {
                throw new InvalidDataException("cURRENCY is a required property for CatalogsProductGroupFilterKeys and cannot be null");
            }
            else
            {
                this.CURRENCY = cURRENCY;
            }

            // to ensure "iTEMID" is required (not null)
            if (iTEMID == null)
            {
                throw new InvalidDataException("iTEMID is a required property for CatalogsProductGroupFilterKeys and cannot be null");
            }
            else
            {
                this.ITEM_ID = iTEMID;
            }

            // to ensure "aVAILABILITY" is required (not null)
            if (aVAILABILITY == null)
            {
                throw new InvalidDataException("aVAILABILITY is a required property for CatalogsProductGroupFilterKeys and cannot be null");
            }
            else
            {
                this.AVAILABILITY = aVAILABILITY;
            }

            // to ensure "bRAND" is required (not null)
            if (bRAND == null)
            {
                throw new InvalidDataException("bRAND is a required property for CatalogsProductGroupFilterKeys and cannot be null");
            }
            else
            {
                this.BRAND = bRAND;
            }

            // to ensure "cONDITION" is required (not null)
            if (cONDITION == null)
            {
                throw new InvalidDataException("cONDITION is a required property for CatalogsProductGroupFilterKeys and cannot be null");
            }
            else
            {
                this.CONDITION = cONDITION;
            }

            // to ensure "cUSTOMLABEL0" is required (not null)
            if (cUSTOMLABEL0 == null)
            {
                throw new InvalidDataException("cUSTOMLABEL0 is a required property for CatalogsProductGroupFilterKeys and cannot be null");
            }
            else
            {
                this.CUSTOMLABEL0 = cUSTOMLABEL0;
            }

            // to ensure "cUSTOMLABEL1" is required (not null)
            if (cUSTOMLABEL1 == null)
            {
                throw new InvalidDataException("cUSTOMLABEL1 is a required property for CatalogsProductGroupFilterKeys and cannot be null");
            }
            else
            {
                this.CUSTOMLABEL1 = cUSTOMLABEL1;
            }

            // to ensure "cUSTOMLABEL2" is required (not null)
            if (cUSTOMLABEL2 == null)
            {
                throw new InvalidDataException("cUSTOMLABEL2 is a required property for CatalogsProductGroupFilterKeys and cannot be null");
            }
            else
            {
                this.CUSTOMLABEL2 = cUSTOMLABEL2;
            }

            // to ensure "cUSTOMLABEL3" is required (not null)
            if (cUSTOMLABEL3 == null)
            {
                throw new InvalidDataException("cUSTOMLABEL3 is a required property for CatalogsProductGroupFilterKeys and cannot be null");
            }
            else
            {
                this.CUSTOMLABEL3 = cUSTOMLABEL3;
            }

            // to ensure "cUSTOMLABEL4" is required (not null)
            if (cUSTOMLABEL4 == null)
            {
                throw new InvalidDataException("cUSTOMLABEL4 is a required property for CatalogsProductGroupFilterKeys and cannot be null");
            }
            else
            {
                this.CUSTOMLABEL4 = cUSTOMLABEL4;
            }

            // to ensure "iTEMGROUPID" is required (not null)
            if (iTEMGROUPID == null)
            {
                throw new InvalidDataException("iTEMGROUPID is a required property for CatalogsProductGroupFilterKeys and cannot be null");
            }
            else
            {
                this.ITEM_GROUP_ID = iTEMGROUPID;
            }

            // to ensure "gENDER" is required (not null)
            if (gENDER == null)
            {
                throw new InvalidDataException("gENDER is a required property for CatalogsProductGroupFilterKeys and cannot be null");
            }
            else
            {
                this.GENDER = gENDER;
            }

            // to ensure "pRODUCTTYPE4" is required (not null)
            if (pRODUCTTYPE4 == null)
            {
                throw new InvalidDataException("pRODUCTTYPE4 is a required property for CatalogsProductGroupFilterKeys and cannot be null");
            }
            else
            {
                this.PRODUCTTYPE4 = pRODUCTTYPE4;
            }

            // to ensure "pRODUCTTYPE3" is required (not null)
            if (pRODUCTTYPE3 == null)
            {
                throw new InvalidDataException("pRODUCTTYPE3 is a required property for CatalogsProductGroupFilterKeys and cannot be null");
            }
            else
            {
                this.PRODUCTTYPE3 = pRODUCTTYPE3;
            }

            // to ensure "pRODUCTTYPE2" is required (not null)
            if (pRODUCTTYPE2 == null)
            {
                throw new InvalidDataException("pRODUCTTYPE2 is a required property for CatalogsProductGroupFilterKeys and cannot be null");
            }
            else
            {
                this.PRODUCTTYPE2 = pRODUCTTYPE2;
            }

            // to ensure "pRODUCTTYPE1" is required (not null)
            if (pRODUCTTYPE1 == null)
            {
                throw new InvalidDataException("pRODUCTTYPE1 is a required property for CatalogsProductGroupFilterKeys and cannot be null");
            }
            else
            {
                this.PRODUCTTYPE1 = pRODUCTTYPE1;
            }

            // to ensure "pRODUCTTYPE0" is required (not null)
            if (pRODUCTTYPE0 == null)
            {
                throw new InvalidDataException("pRODUCTTYPE0 is a required property for CatalogsProductGroupFilterKeys and cannot be null");
            }
            else
            {
                this.PRODUCTTYPE0 = pRODUCTTYPE0;
            }

            // to ensure "gOOGLEPRODUCTCATEGORY6" is required (not null)
            if (gOOGLEPRODUCTCATEGORY6 == null)
            {
                throw new InvalidDataException("gOOGLEPRODUCTCATEGORY6 is a required property for CatalogsProductGroupFilterKeys and cannot be null");
            }
            else
            {
                this.GOOGLEPRODUCTCATEGORY6 = gOOGLEPRODUCTCATEGORY6;
            }

            // to ensure "gOOGLEPRODUCTCATEGORY5" is required (not null)
            if (gOOGLEPRODUCTCATEGORY5 == null)
            {
                throw new InvalidDataException("gOOGLEPRODUCTCATEGORY5 is a required property for CatalogsProductGroupFilterKeys and cannot be null");
            }
            else
            {
                this.GOOGLEPRODUCTCATEGORY5 = gOOGLEPRODUCTCATEGORY5;
            }

            // to ensure "gOOGLEPRODUCTCATEGORY4" is required (not null)
            if (gOOGLEPRODUCTCATEGORY4 == null)
            {
                throw new InvalidDataException("gOOGLEPRODUCTCATEGORY4 is a required property for CatalogsProductGroupFilterKeys and cannot be null");
            }
            else
            {
                this.GOOGLEPRODUCTCATEGORY4 = gOOGLEPRODUCTCATEGORY4;
            }

            // to ensure "gOOGLEPRODUCTCATEGORY3" is required (not null)
            if (gOOGLEPRODUCTCATEGORY3 == null)
            {
                throw new InvalidDataException("gOOGLEPRODUCTCATEGORY3 is a required property for CatalogsProductGroupFilterKeys and cannot be null");
            }
            else
            {
                this.GOOGLEPRODUCTCATEGORY3 = gOOGLEPRODUCTCATEGORY3;
            }

            // to ensure "gOOGLEPRODUCTCATEGORY2" is required (not null)
            if (gOOGLEPRODUCTCATEGORY2 == null)
            {
                throw new InvalidDataException("gOOGLEPRODUCTCATEGORY2 is a required property for CatalogsProductGroupFilterKeys and cannot be null");
            }
            else
            {
                this.GOOGLEPRODUCTCATEGORY2 = gOOGLEPRODUCTCATEGORY2;
            }

            // to ensure "gOOGLEPRODUCTCATEGORY1" is required (not null)
            if (gOOGLEPRODUCTCATEGORY1 == null)
            {
                throw new InvalidDataException("gOOGLEPRODUCTCATEGORY1 is a required property for CatalogsProductGroupFilterKeys and cannot be null");
            }
            else
            {
                this.GOOGLEPRODUCTCATEGORY1 = gOOGLEPRODUCTCATEGORY1;
            }

            // to ensure "gOOGLEPRODUCTCATEGORY0" is required (not null)
            if (gOOGLEPRODUCTCATEGORY0 == null)
            {
                throw new InvalidDataException("gOOGLEPRODUCTCATEGORY0 is a required property for CatalogsProductGroupFilterKeys and cannot be null");
            }
            else
            {
                this.GOOGLEPRODUCTCATEGORY0 = gOOGLEPRODUCTCATEGORY0;
            }

        }

        /// <summary>
        /// Gets or Sets MIN_PRICE
        /// </summary>
        [DataMember(Name="MIN_PRICE", EmitDefaultValue=true)]
        public CatalogsProductGroupPricingCriteria MIN_PRICE { get; set; }

        /// <summary>
        /// Gets or Sets MAX_PRICE
        /// </summary>
        [DataMember(Name="MAX_PRICE", EmitDefaultValue=true)]
        public CatalogsProductGroupPricingCriteria MAX_PRICE { get; set; }

        /// <summary>
        /// Gets or Sets CURRENCY
        /// </summary>
        [DataMember(Name="CURRENCY", EmitDefaultValue=true)]
        public CatalogsProductGroupCurrencyCriteria CURRENCY { get; set; }

        /// <summary>
        /// Gets or Sets ITEM_ID
        /// </summary>
        [DataMember(Name="ITEM_ID", EmitDefaultValue=true)]
        public CatalogsProductGroupCurrencyCriteria ITEM_ID { get; set; }

        /// <summary>
        /// Gets or Sets AVAILABILITY
        /// </summary>
        [DataMember(Name="AVAILABILITY", EmitDefaultValue=true)]
        public CatalogsProductGroupMultipleStringCriteria AVAILABILITY { get; set; }

        /// <summary>
        /// Gets or Sets BRAND
        /// </summary>
        [DataMember(Name="BRAND", EmitDefaultValue=true)]
        public CatalogsProductGroupMultipleStringCriteria BRAND { get; set; }

        /// <summary>
        /// Gets or Sets CONDITION
        /// </summary>
        [DataMember(Name="CONDITION", EmitDefaultValue=true)]
        public CatalogsProductGroupMultipleStringCriteria CONDITION { get; set; }

        /// <summary>
        /// Gets or Sets CUSTOMLABEL0
        /// </summary>
        [DataMember(Name="CUSTOM_LABEL_0", EmitDefaultValue=true)]
        public CatalogsProductGroupMultipleStringCriteria CUSTOMLABEL0 { get; set; }

        /// <summary>
        /// Gets or Sets CUSTOMLABEL1
        /// </summary>
        [DataMember(Name="CUSTOM_LABEL_1", EmitDefaultValue=true)]
        public CatalogsProductGroupMultipleStringCriteria CUSTOMLABEL1 { get; set; }

        /// <summary>
        /// Gets or Sets CUSTOMLABEL2
        /// </summary>
        [DataMember(Name="CUSTOM_LABEL_2", EmitDefaultValue=true)]
        public CatalogsProductGroupMultipleStringCriteria CUSTOMLABEL2 { get; set; }

        /// <summary>
        /// Gets or Sets CUSTOMLABEL3
        /// </summary>
        [DataMember(Name="CUSTOM_LABEL_3", EmitDefaultValue=true)]
        public CatalogsProductGroupMultipleStringCriteria CUSTOMLABEL3 { get; set; }

        /// <summary>
        /// Gets or Sets CUSTOMLABEL4
        /// </summary>
        [DataMember(Name="CUSTOM_LABEL_4", EmitDefaultValue=true)]
        public CatalogsProductGroupMultipleStringCriteria CUSTOMLABEL4 { get; set; }

        /// <summary>
        /// Gets or Sets ITEM_GROUP_ID
        /// </summary>
        [DataMember(Name="ITEM_GROUP_ID", EmitDefaultValue=true)]
        public CatalogsProductGroupMultipleStringCriteria ITEM_GROUP_ID { get; set; }

        /// <summary>
        /// Gets or Sets GENDER
        /// </summary>
        [DataMember(Name="GENDER", EmitDefaultValue=true)]
        public CatalogsProductGroupMultipleStringCriteria GENDER { get; set; }

        /// <summary>
        /// Gets or Sets PRODUCTTYPE4
        /// </summary>
        [DataMember(Name="PRODUCT_TYPE_4", EmitDefaultValue=true)]
        public CatalogsProductGroupMultipleStringListCriteria PRODUCTTYPE4 { get; set; }

        /// <summary>
        /// Gets or Sets PRODUCTTYPE3
        /// </summary>
        [DataMember(Name="PRODUCT_TYPE_3", EmitDefaultValue=true)]
        public CatalogsProductGroupMultipleStringListCriteria PRODUCTTYPE3 { get; set; }

        /// <summary>
        /// Gets or Sets PRODUCTTYPE2
        /// </summary>
        [DataMember(Name="PRODUCT_TYPE_2", EmitDefaultValue=true)]
        public CatalogsProductGroupMultipleStringListCriteria PRODUCTTYPE2 { get; set; }

        /// <summary>
        /// Gets or Sets PRODUCTTYPE1
        /// </summary>
        [DataMember(Name="PRODUCT_TYPE_1", EmitDefaultValue=true)]
        public CatalogsProductGroupMultipleStringListCriteria PRODUCTTYPE1 { get; set; }

        /// <summary>
        /// Gets or Sets PRODUCTTYPE0
        /// </summary>
        [DataMember(Name="PRODUCT_TYPE_0", EmitDefaultValue=true)]
        public CatalogsProductGroupMultipleStringListCriteria PRODUCTTYPE0 { get; set; }

        /// <summary>
        /// Gets or Sets GOOGLEPRODUCTCATEGORY6
        /// </summary>
        [DataMember(Name="GOOGLE_PRODUCT_CATEGORY_6", EmitDefaultValue=true)]
        public CatalogsProductGroupMultipleStringListCriteria GOOGLEPRODUCTCATEGORY6 { get; set; }

        /// <summary>
        /// Gets or Sets GOOGLEPRODUCTCATEGORY5
        /// </summary>
        [DataMember(Name="GOOGLE_PRODUCT_CATEGORY_5", EmitDefaultValue=true)]
        public CatalogsProductGroupMultipleStringListCriteria GOOGLEPRODUCTCATEGORY5 { get; set; }

        /// <summary>
        /// Gets or Sets GOOGLEPRODUCTCATEGORY4
        /// </summary>
        [DataMember(Name="GOOGLE_PRODUCT_CATEGORY_4", EmitDefaultValue=true)]
        public CatalogsProductGroupMultipleStringListCriteria GOOGLEPRODUCTCATEGORY4 { get; set; }

        /// <summary>
        /// Gets or Sets GOOGLEPRODUCTCATEGORY3
        /// </summary>
        [DataMember(Name="GOOGLE_PRODUCT_CATEGORY_3", EmitDefaultValue=true)]
        public CatalogsProductGroupMultipleStringListCriteria GOOGLEPRODUCTCATEGORY3 { get; set; }

        /// <summary>
        /// Gets or Sets GOOGLEPRODUCTCATEGORY2
        /// </summary>
        [DataMember(Name="GOOGLE_PRODUCT_CATEGORY_2", EmitDefaultValue=true)]
        public CatalogsProductGroupMultipleStringListCriteria GOOGLEPRODUCTCATEGORY2 { get; set; }

        /// <summary>
        /// Gets or Sets GOOGLEPRODUCTCATEGORY1
        /// </summary>
        [DataMember(Name="GOOGLE_PRODUCT_CATEGORY_1", EmitDefaultValue=true)]
        public CatalogsProductGroupMultipleStringListCriteria GOOGLEPRODUCTCATEGORY1 { get; set; }

        /// <summary>
        /// Gets or Sets GOOGLEPRODUCTCATEGORY0
        /// </summary>
        [DataMember(Name="GOOGLE_PRODUCT_CATEGORY_0", EmitDefaultValue=true)]
        public CatalogsProductGroupMultipleStringListCriteria GOOGLEPRODUCTCATEGORY0 { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CatalogsProductGroupFilterKeys {\n");
            sb.Append("  MIN_PRICE: ").Append(MIN_PRICE).Append("\n");
            sb.Append("  MAX_PRICE: ").Append(MAX_PRICE).Append("\n");
            sb.Append("  CURRENCY: ").Append(CURRENCY).Append("\n");
            sb.Append("  ITEM_ID: ").Append(ITEM_ID).Append("\n");
            sb.Append("  AVAILABILITY: ").Append(AVAILABILITY).Append("\n");
            sb.Append("  BRAND: ").Append(BRAND).Append("\n");
            sb.Append("  CONDITION: ").Append(CONDITION).Append("\n");
            sb.Append("  CUSTOMLABEL0: ").Append(CUSTOMLABEL0).Append("\n");
            sb.Append("  CUSTOMLABEL1: ").Append(CUSTOMLABEL1).Append("\n");
            sb.Append("  CUSTOMLABEL2: ").Append(CUSTOMLABEL2).Append("\n");
            sb.Append("  CUSTOMLABEL3: ").Append(CUSTOMLABEL3).Append("\n");
            sb.Append("  CUSTOMLABEL4: ").Append(CUSTOMLABEL4).Append("\n");
            sb.Append("  ITEM_GROUP_ID: ").Append(ITEM_GROUP_ID).Append("\n");
            sb.Append("  GENDER: ").Append(GENDER).Append("\n");
            sb.Append("  PRODUCTTYPE4: ").Append(PRODUCTTYPE4).Append("\n");
            sb.Append("  PRODUCTTYPE3: ").Append(PRODUCTTYPE3).Append("\n");
            sb.Append("  PRODUCTTYPE2: ").Append(PRODUCTTYPE2).Append("\n");
            sb.Append("  PRODUCTTYPE1: ").Append(PRODUCTTYPE1).Append("\n");
            sb.Append("  PRODUCTTYPE0: ").Append(PRODUCTTYPE0).Append("\n");
            sb.Append("  GOOGLEPRODUCTCATEGORY6: ").Append(GOOGLEPRODUCTCATEGORY6).Append("\n");
            sb.Append("  GOOGLEPRODUCTCATEGORY5: ").Append(GOOGLEPRODUCTCATEGORY5).Append("\n");
            sb.Append("  GOOGLEPRODUCTCATEGORY4: ").Append(GOOGLEPRODUCTCATEGORY4).Append("\n");
            sb.Append("  GOOGLEPRODUCTCATEGORY3: ").Append(GOOGLEPRODUCTCATEGORY3).Append("\n");
            sb.Append("  GOOGLEPRODUCTCATEGORY2: ").Append(GOOGLEPRODUCTCATEGORY2).Append("\n");
            sb.Append("  GOOGLEPRODUCTCATEGORY1: ").Append(GOOGLEPRODUCTCATEGORY1).Append("\n");
            sb.Append("  GOOGLEPRODUCTCATEGORY0: ").Append(GOOGLEPRODUCTCATEGORY0).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CatalogsProductGroupFilterKeys);
        }

        /// <summary>
        /// Returns true if CatalogsProductGroupFilterKeys instances are equal
        /// </summary>
        /// <param name="input">Instance of CatalogsProductGroupFilterKeys to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CatalogsProductGroupFilterKeys input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.MIN_PRICE == input.MIN_PRICE ||
                    (this.MIN_PRICE != null &&
                    this.MIN_PRICE.Equals(input.MIN_PRICE))
                ) && 
                (
                    this.MAX_PRICE == input.MAX_PRICE ||
                    (this.MAX_PRICE != null &&
                    this.MAX_PRICE.Equals(input.MAX_PRICE))
                ) && 
                (
                    this.CURRENCY == input.CURRENCY ||
                    (this.CURRENCY != null &&
                    this.CURRENCY.Equals(input.CURRENCY))
                ) && 
                (
                    this.ITEM_ID == input.ITEM_ID ||
                    (this.ITEM_ID != null &&
                    this.ITEM_ID.Equals(input.ITEM_ID))
                ) && 
                (
                    this.AVAILABILITY == input.AVAILABILITY ||
                    (this.AVAILABILITY != null &&
                    this.AVAILABILITY.Equals(input.AVAILABILITY))
                ) && 
                (
                    this.BRAND == input.BRAND ||
                    (this.BRAND != null &&
                    this.BRAND.Equals(input.BRAND))
                ) && 
                (
                    this.CONDITION == input.CONDITION ||
                    (this.CONDITION != null &&
                    this.CONDITION.Equals(input.CONDITION))
                ) && 
                (
                    this.CUSTOMLABEL0 == input.CUSTOMLABEL0 ||
                    (this.CUSTOMLABEL0 != null &&
                    this.CUSTOMLABEL0.Equals(input.CUSTOMLABEL0))
                ) && 
                (
                    this.CUSTOMLABEL1 == input.CUSTOMLABEL1 ||
                    (this.CUSTOMLABEL1 != null &&
                    this.CUSTOMLABEL1.Equals(input.CUSTOMLABEL1))
                ) && 
                (
                    this.CUSTOMLABEL2 == input.CUSTOMLABEL2 ||
                    (this.CUSTOMLABEL2 != null &&
                    this.CUSTOMLABEL2.Equals(input.CUSTOMLABEL2))
                ) && 
                (
                    this.CUSTOMLABEL3 == input.CUSTOMLABEL3 ||
                    (this.CUSTOMLABEL3 != null &&
                    this.CUSTOMLABEL3.Equals(input.CUSTOMLABEL3))
                ) && 
                (
                    this.CUSTOMLABEL4 == input.CUSTOMLABEL4 ||
                    (this.CUSTOMLABEL4 != null &&
                    this.CUSTOMLABEL4.Equals(input.CUSTOMLABEL4))
                ) && 
                (
                    this.ITEM_GROUP_ID == input.ITEM_GROUP_ID ||
                    (this.ITEM_GROUP_ID != null &&
                    this.ITEM_GROUP_ID.Equals(input.ITEM_GROUP_ID))
                ) && 
                (
                    this.GENDER == input.GENDER ||
                    (this.GENDER != null &&
                    this.GENDER.Equals(input.GENDER))
                ) && 
                (
                    this.PRODUCTTYPE4 == input.PRODUCTTYPE4 ||
                    (this.PRODUCTTYPE4 != null &&
                    this.PRODUCTTYPE4.Equals(input.PRODUCTTYPE4))
                ) && 
                (
                    this.PRODUCTTYPE3 == input.PRODUCTTYPE3 ||
                    (this.PRODUCTTYPE3 != null &&
                    this.PRODUCTTYPE3.Equals(input.PRODUCTTYPE3))
                ) && 
                (
                    this.PRODUCTTYPE2 == input.PRODUCTTYPE2 ||
                    (this.PRODUCTTYPE2 != null &&
                    this.PRODUCTTYPE2.Equals(input.PRODUCTTYPE2))
                ) && 
                (
                    this.PRODUCTTYPE1 == input.PRODUCTTYPE1 ||
                    (this.PRODUCTTYPE1 != null &&
                    this.PRODUCTTYPE1.Equals(input.PRODUCTTYPE1))
                ) && 
                (
                    this.PRODUCTTYPE0 == input.PRODUCTTYPE0 ||
                    (this.PRODUCTTYPE0 != null &&
                    this.PRODUCTTYPE0.Equals(input.PRODUCTTYPE0))
                ) && 
                (
                    this.GOOGLEPRODUCTCATEGORY6 == input.GOOGLEPRODUCTCATEGORY6 ||
                    (this.GOOGLEPRODUCTCATEGORY6 != null &&
                    this.GOOGLEPRODUCTCATEGORY6.Equals(input.GOOGLEPRODUCTCATEGORY6))
                ) && 
                (
                    this.GOOGLEPRODUCTCATEGORY5 == input.GOOGLEPRODUCTCATEGORY5 ||
                    (this.GOOGLEPRODUCTCATEGORY5 != null &&
                    this.GOOGLEPRODUCTCATEGORY5.Equals(input.GOOGLEPRODUCTCATEGORY5))
                ) && 
                (
                    this.GOOGLEPRODUCTCATEGORY4 == input.GOOGLEPRODUCTCATEGORY4 ||
                    (this.GOOGLEPRODUCTCATEGORY4 != null &&
                    this.GOOGLEPRODUCTCATEGORY4.Equals(input.GOOGLEPRODUCTCATEGORY4))
                ) && 
                (
                    this.GOOGLEPRODUCTCATEGORY3 == input.GOOGLEPRODUCTCATEGORY3 ||
                    (this.GOOGLEPRODUCTCATEGORY3 != null &&
                    this.GOOGLEPRODUCTCATEGORY3.Equals(input.GOOGLEPRODUCTCATEGORY3))
                ) && 
                (
                    this.GOOGLEPRODUCTCATEGORY2 == input.GOOGLEPRODUCTCATEGORY2 ||
                    (this.GOOGLEPRODUCTCATEGORY2 != null &&
                    this.GOOGLEPRODUCTCATEGORY2.Equals(input.GOOGLEPRODUCTCATEGORY2))
                ) && 
                (
                    this.GOOGLEPRODUCTCATEGORY1 == input.GOOGLEPRODUCTCATEGORY1 ||
                    (this.GOOGLEPRODUCTCATEGORY1 != null &&
                    this.GOOGLEPRODUCTCATEGORY1.Equals(input.GOOGLEPRODUCTCATEGORY1))
                ) && 
                (
                    this.GOOGLEPRODUCTCATEGORY0 == input.GOOGLEPRODUCTCATEGORY0 ||
                    (this.GOOGLEPRODUCTCATEGORY0 != null &&
                    this.GOOGLEPRODUCTCATEGORY0.Equals(input.GOOGLEPRODUCTCATEGORY0))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.MIN_PRICE != null)
                    hashCode = hashCode * 59 + this.MIN_PRICE.GetHashCode();
                if (this.MAX_PRICE != null)
                    hashCode = hashCode * 59 + this.MAX_PRICE.GetHashCode();
                if (this.CURRENCY != null)
                    hashCode = hashCode * 59 + this.CURRENCY.GetHashCode();
                if (this.ITEM_ID != null)
                    hashCode = hashCode * 59 + this.ITEM_ID.GetHashCode();
                if (this.AVAILABILITY != null)
                    hashCode = hashCode * 59 + this.AVAILABILITY.GetHashCode();
                if (this.BRAND != null)
                    hashCode = hashCode * 59 + this.BRAND.GetHashCode();
                if (this.CONDITION != null)
                    hashCode = hashCode * 59 + this.CONDITION.GetHashCode();
                if (this.CUSTOMLABEL0 != null)
                    hashCode = hashCode * 59 + this.CUSTOMLABEL0.GetHashCode();
                if (this.CUSTOMLABEL1 != null)
                    hashCode = hashCode * 59 + this.CUSTOMLABEL1.GetHashCode();
                if (this.CUSTOMLABEL2 != null)
                    hashCode = hashCode * 59 + this.CUSTOMLABEL2.GetHashCode();
                if (this.CUSTOMLABEL3 != null)
                    hashCode = hashCode * 59 + this.CUSTOMLABEL3.GetHashCode();
                if (this.CUSTOMLABEL4 != null)
                    hashCode = hashCode * 59 + this.CUSTOMLABEL4.GetHashCode();
                if (this.ITEM_GROUP_ID != null)
                    hashCode = hashCode * 59 + this.ITEM_GROUP_ID.GetHashCode();
                if (this.GENDER != null)
                    hashCode = hashCode * 59 + this.GENDER.GetHashCode();
                if (this.PRODUCTTYPE4 != null)
                    hashCode = hashCode * 59 + this.PRODUCTTYPE4.GetHashCode();
                if (this.PRODUCTTYPE3 != null)
                    hashCode = hashCode * 59 + this.PRODUCTTYPE3.GetHashCode();
                if (this.PRODUCTTYPE2 != null)
                    hashCode = hashCode * 59 + this.PRODUCTTYPE2.GetHashCode();
                if (this.PRODUCTTYPE1 != null)
                    hashCode = hashCode * 59 + this.PRODUCTTYPE1.GetHashCode();
                if (this.PRODUCTTYPE0 != null)
                    hashCode = hashCode * 59 + this.PRODUCTTYPE0.GetHashCode();
                if (this.GOOGLEPRODUCTCATEGORY6 != null)
                    hashCode = hashCode * 59 + this.GOOGLEPRODUCTCATEGORY6.GetHashCode();
                if (this.GOOGLEPRODUCTCATEGORY5 != null)
                    hashCode = hashCode * 59 + this.GOOGLEPRODUCTCATEGORY5.GetHashCode();
                if (this.GOOGLEPRODUCTCATEGORY4 != null)
                    hashCode = hashCode * 59 + this.GOOGLEPRODUCTCATEGORY4.GetHashCode();
                if (this.GOOGLEPRODUCTCATEGORY3 != null)
                    hashCode = hashCode * 59 + this.GOOGLEPRODUCTCATEGORY3.GetHashCode();
                if (this.GOOGLEPRODUCTCATEGORY2 != null)
                    hashCode = hashCode * 59 + this.GOOGLEPRODUCTCATEGORY2.GetHashCode();
                if (this.GOOGLEPRODUCTCATEGORY1 != null)
                    hashCode = hashCode * 59 + this.GOOGLEPRODUCTCATEGORY1.GetHashCode();
                if (this.GOOGLEPRODUCTCATEGORY0 != null)
                    hashCode = hashCode * 59 + this.GOOGLEPRODUCTCATEGORY0.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
